
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_example/deviation/plot_basics.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_example_deviation_plot_basics.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_example_deviation_plot_basics.py:


FMUPointToFieldFunction basics
==============================

.. GENERATED FROM PYTHON SOURCE LINES 7-9

:class:`~otfmi.FMUPointToFieldFunction` enables to use OpenTURNS' high
level algorithms by wrapping the FMU into an :py:class:`openturns.Function` object.

.. GENERATED FROM PYTHON SOURCE LINES 11-13

First, retrieve the path to the FMU *deviation.fmu*.
Recall the deviation model is static, i.e. its output does not evolve over time.

.. GENERATED FROM PYTHON SOURCE LINES 13-17

.. code-block:: Python

    import openturns as ot
    import otfmi.example.utility
    path_fmu = otfmi.example.utility.get_path_fmu("deviation")








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Wrap the FMU into an OpenTURNS function:

.. GENERATED FROM PYTHON SOURCE LINES 19-24

.. code-block:: Python

    function = otfmi.FMUPointToFieldFunction(
        path_fmu, inputs_fmu=["E", "F", "L", "I"], outputs_fmu=["y"]
    )
    print(type(function))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    <class 'openturns.func.PointToFieldFunction'>




.. GENERATED FROM PYTHON SOURCE LINES 25-26

Simulate the FMU on a point:

.. GENERATED FROM PYTHON SOURCE LINES 26-30

.. code-block:: Python

    inputPoint = ot.Point([3.0e7, 30000, 200, 400])
    outputPoint = function(inputPoint)[-1]
    print(f"y = {outputPoint}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    y = [6.66667]




.. GENERATED FROM PYTHON SOURCE LINES 31-32

Simulate the FMU on a sample:

.. GENERATED FROM PYTHON SOURCE LINES 32-39

.. code-block:: Python

    inputSample = ot.Sample(
        [[3.0e7, 30000, 200, 400], [3.0e7, 30000, 250, 400], [3.0e7, 30000, 300, 400]]
    )
    inputSample.setDescription(["E", "F", "L", "I"])
    outputSample = function(inputSample)
    outputSample = [y[-1] for y in outputSample]
    print(outputSample)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [class=Point name=Unnamed dimension=1 values=[6.66667], class=Point name=Unnamed dimension=1 values=[13.0208], class=Point name=Unnamed dimension=1 values=[22.5]]





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.130 seconds)


.. _sphx_glr_download_auto_example_deviation_plot_basics.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_basics.ipynb <plot_basics.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_basics.py <plot_basics.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_basics.zip <plot_basics.zip>`
