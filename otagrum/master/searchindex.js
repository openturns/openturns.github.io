Search.setIndex({"alltitles": {"API": [[19, null]], "Computation times": [[3, null], [6, null]], "Conda": [[5, "conda"]], "ContinuousBayesianNetwork": [[7, null]], "ContinuousBayesianNetworkFactory": [[8, null]], "ContinuousMIIC": [[9, null]], "ContinuousPC": [[10, null]], "ContinuousTTest": [[11, null]], "CorrectedMutualInformation": [[12, null]], "Examples": [[0, null]], "How to install it ?": [[5, "how-to-install-it"]], "Indices and tables": [[5, "indices-and-tables"]], "Introduction": [[5, "introduction"]], "JunctionTreeBernsteinCopula": [[13, null]], "JunctionTreeBernsteinCopulaFactory": [[14, null]], "Manually (Linux)": [[5, "manually-linux"]], "NamedDAG": [[15, null]], "NamedJunctionTree": [[16, null]], "OTAgrum documentation": [[5, null]], "Plant growth": [[1, null]], "TabuList": [[17, null]], "Torque model": [[4, null]], "User documentation": [[5, "user-documentation"]], "Using otagrum": [[2, null]], "Utils": [[18, null]], "What is otagrum ?": [[5, "what-is-otagrum"]]}, "docnames": ["auto_examples/index", "auto_examples/plot_plant_growth", "auto_examples/plot_using_otagrum", "auto_examples/sg_execution_times", "auto_examples/torque_model", "index", "sg_execution_times", "user_manual/_generated/otagrum.ContinuousBayesianNetwork", "user_manual/_generated/otagrum.ContinuousBayesianNetworkFactory", "user_manual/_generated/otagrum.ContinuousMIIC", "user_manual/_generated/otagrum.ContinuousPC", "user_manual/_generated/otagrum.ContinuousTTest", "user_manual/_generated/otagrum.CorrectedMutualInformation", "user_manual/_generated/otagrum.JunctionTreeBernsteinCopula", "user_manual/_generated/otagrum.JunctionTreeBernsteinCopulaFactory", "user_manual/_generated/otagrum.NamedDAG", "user_manual/_generated/otagrum.NamedJunctionTree", "user_manual/_generated/otagrum.TabuList", "user_manual/_generated/otagrum.Utils", "user_manual/user_manual"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["auto_examples/index.rst", "auto_examples/plot_plant_growth.rst", "auto_examples/plot_using_otagrum.rst", "auto_examples/sg_execution_times.rst", "auto_examples/torque_model.rst", "index.rst", "sg_execution_times.rst", "user_manual/_generated/otagrum.ContinuousBayesianNetwork.rst", "user_manual/_generated/otagrum.ContinuousBayesianNetworkFactory.rst", "user_manual/_generated/otagrum.ContinuousMIIC.rst", "user_manual/_generated/otagrum.ContinuousPC.rst", "user_manual/_generated/otagrum.ContinuousTTest.rst", "user_manual/_generated/otagrum.CorrectedMutualInformation.rst", "user_manual/_generated/otagrum.JunctionTreeBernsteinCopula.rst", "user_manual/_generated/otagrum.JunctionTreeBernsteinCopulaFactory.rst", "user_manual/_generated/otagrum.NamedDAG.rst", "user_manual/_generated/otagrum.NamedJunctionTree.rst", "user_manual/_generated/otagrum.TabuList.rst", "user_manual/_generated/otagrum.Utils.rst", "user_manual/user_manual.rst"], "indexentries": {"__init__() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.__init__", false]], "__init__() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.__init__", false]], "__init__() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.__init__", false]], "__init__() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.__init__", false]], "__init__() (otagrum.continuousttest method)": [[11, "otagrum.ContinuousTTest.__init__", false]], "__init__() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.__init__", false]], "__init__() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.__init__", false]], "__init__() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.__init__", false]], "__init__() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.__init__", false]], "__init__() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.__init__", false]], "__init__() (otagrum.tabulist method)": [[17, "otagrum.TabuList.__init__", false]], "__init__() (otagrum.utils method)": [[18, "otagrum.Utils.__init__", false]], "abs() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.abs", false]], "abs() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.abs", false]], "acos() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.acos", false]], "acos() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.acos", false]], "acosh() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.acosh", false]], "acosh() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.acosh", false]], "addforbiddenarc() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.addForbiddenArc", false]], "addmandatoryarc() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.addMandatoryArc", false]], "asin() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.asin", false]], "asin() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.asin", false]], "asinh() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.asinh", false]], "asinh() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.asinh", false]], "atan() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.atan", false]], "atan() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.atan", false]], "atanh() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.atanh", false]], "atanh() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.atanh", false]], "build() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.build", false]], "build() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.build", false]], "buildascontinuousbayesiannetwork() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.buildAsContinuousBayesianNetwork", false]], "buildasjunctiontreebernsteincopula() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.buildAsJunctionTreeBernsteinCopula", false]], "buildestimator() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.buildEstimator", false]], "buildestimator() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.buildEstimator", false]], "cbrt() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.cbrt", false]], "cbrt() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.cbrt", false]], "clearcache() (otagrum.continuousttest method)": [[11, "otagrum.ContinuousTTest.clearCache", false]], "clearcachelevel() (otagrum.continuousttest method)": [[11, "otagrum.ContinuousTTest.clearCacheLevel", false]], "clearcaches() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.clearCaches", false]], "compute2ptcorrectedinformation() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.compute2PtCorrectedInformation", false]], "compute3ptcorrectedinformation() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.compute3PtCorrectedInformation", false]], "computebilateralconfidenceinterval() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeBilateralConfidenceInterval", false]], "computebilateralconfidenceinterval() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeBilateralConfidenceInterval", false]], "computebilateralconfidenceintervalwithmarginalprobability() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeBilateralConfidenceIntervalWithMarginalProbability", false]], "computebilateralconfidenceintervalwithmarginalprobability() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeBilateralConfidenceIntervalWithMarginalProbability", false]], "computecdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeCDF", false]], "computecdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeCDF", false]], "computecdfgradient() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeCDFGradient", false]], "computecdfgradient() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeCDFGradient", false]], "computecharacteristicfunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeCharacteristicFunction", false]], "computecharacteristicfunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeCharacteristicFunction", false]], "computecomplementarycdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeComplementaryCDF", false]], "computecomplementarycdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeComplementaryCDF", false]], "computeconditionalcdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeConditionalCDF", false]], "computeconditionalcdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeConditionalCDF", false]], "computeconditionalddf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeConditionalDDF", false]], "computeconditionalddf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeConditionalDDF", false]], "computeconditionalpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeConditionalPDF", false]], "computeconditionalpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeConditionalPDF", false]], "computeconditionalquantile() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeConditionalQuantile", false]], "computeconditionalquantile() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeConditionalQuantile", false]], "computeddf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeDDF", false]], "computeddf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeDDF", false]], "computeentropy() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeEntropy", false]], "computeentropy() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeEntropy", false]], "computegeneratingfunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeGeneratingFunction", false]], "computegeneratingfunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeGeneratingFunction", false]], "computeinversesurvivalfunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeInverseSurvivalFunction", false]], "computeinversesurvivalfunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeInverseSurvivalFunction", false]], "computelogcharacteristicfunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeLogCharacteristicFunction", false]], "computelogcharacteristicfunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeLogCharacteristicFunction", false]], "computeloggeneratingfunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeLogGeneratingFunction", false]], "computeloggeneratingfunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeLogGeneratingFunction", false]], "computelogpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeLogPDF", false]], "computelogpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeLogPDF", false]], "computelogpdfgradient() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeLogPDFGradient", false]], "computelogpdfgradient() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeLogPDFGradient", false]], "computelowerextremaldependencematrix() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeLowerExtremalDependenceMatrix", false]], "computelowerextremaldependencematrix() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeLowerExtremalDependenceMatrix", false]], "computelowertaildependencematrix() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeLowerTailDependenceMatrix", false]], "computelowertaildependencematrix() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeLowerTailDependenceMatrix", false]], "computeminimumvolumeinterval() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeMinimumVolumeInterval", false]], "computeminimumvolumeinterval() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeMinimumVolumeInterval", false]], "computeminimumvolumeintervalwithmarginalprobability() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeMinimumVolumeIntervalWithMarginalProbability", false]], "computeminimumvolumeintervalwithmarginalprobability() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeMinimumVolumeIntervalWithMarginalProbability", false]], "computeminimumvolumelevelset() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeMinimumVolumeLevelSet", false]], "computeminimumvolumelevelset() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeMinimumVolumeLevelSet", false]], "computeminimumvolumelevelsetwiththreshold() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeMinimumVolumeLevelSetWithThreshold", false]], "computeminimumvolumelevelsetwiththreshold() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeMinimumVolumeLevelSetWithThreshold", false]], "computepdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computePDF", false]], "computepdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computePDF", false]], "computepdfgradient() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computePDFGradient", false]], "computepdfgradient() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computePDFGradient", false]], "computeprobability() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeProbability", false]], "computeprobability() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeProbability", false]], "computequantile() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeQuantile", false]], "computequantile() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeQuantile", false]], "computeradialdistributioncdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeRadialDistributionCDF", false]], "computeradialdistributioncdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeRadialDistributionCDF", false]], "computescalarquantile() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeScalarQuantile", false]], "computescalarquantile() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeScalarQuantile", false]], "computesequentialconditionalcdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeSequentialConditionalCDF", false]], "computesequentialconditionalcdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeSequentialConditionalCDF", false]], "computesequentialconditionalddf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeSequentialConditionalDDF", false]], "computesequentialconditionalddf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeSequentialConditionalDDF", false]], "computesequentialconditionalpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeSequentialConditionalPDF", false]], "computesequentialconditionalpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeSequentialConditionalPDF", false]], "computesequentialconditionalquantile() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeSequentialConditionalQuantile", false]], "computesequentialconditionalquantile() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeSequentialConditionalQuantile", false]], "computesurvivalfunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeSurvivalFunction", false]], "computesurvivalfunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeSurvivalFunction", false]], "computeunilateralconfidenceinterval() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeUnilateralConfidenceInterval", false]], "computeunilateralconfidenceinterval() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeUnilateralConfidenceInterval", false]], "computeunilateralconfidenceintervalwithmarginalprobability() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeUnilateralConfidenceIntervalWithMarginalProbability", false]], "computeunilateralconfidenceintervalwithmarginalprobability() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeUnilateralConfidenceIntervalWithMarginalProbability", false]], "computeupperextremaldependencematrix() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeUpperExtremalDependenceMatrix", false]], "computeupperextremaldependencematrix() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeUpperExtremalDependenceMatrix", false]], "computeuppertaildependencematrix() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.computeUpperTailDependenceMatrix", false]], "computeuppertaildependencematrix() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.computeUpperTailDependenceMatrix", false]], "continuousbayesiannetwork (class in otagrum)": [[7, "otagrum.ContinuousBayesianNetwork", false]], "continuousbayesiannetworkfactory (class in otagrum)": [[8, "otagrum.ContinuousBayesianNetworkFactory", false]], "continuousmiic (class in otagrum)": [[9, "otagrum.ContinuousMIIC", false]], "continuouspc (class in otagrum)": [[10, "otagrum.ContinuousPC", false]], "continuousttest (class in otagrum)": [[11, "otagrum.ContinuousTTest", false]], "correctedmutualinformation (class in otagrum)": [[12, "otagrum.CorrectedMutualInformation", false]], "cos() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.cos", false]], "cos() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.cos", false]], "cosh() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.cosh", false]], "cosh() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.cosh", false]], "discretize() (otagrum.utils static method)": [[18, "otagrum.Utils.Discretize", false]], "drawcdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawCDF", false]], "drawcdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawCDF", false]], "drawlogpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawLogPDF", false]], "drawlogpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawLogPDF", false]], "drawlowerextremaldependencefunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawLowerExtremalDependenceFunction", false]], "drawlowerextremaldependencefunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawLowerExtremalDependenceFunction", false]], "drawlowertaildependencefunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawLowerTailDependenceFunction", false]], "drawlowertaildependencefunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawLowerTailDependenceFunction", false]], "drawmarginal1dcdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawMarginal1DCDF", false]], "drawmarginal1dcdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawMarginal1DCDF", false]], "drawmarginal1dlogpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawMarginal1DLogPDF", false]], "drawmarginal1dlogpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawMarginal1DLogPDF", false]], "drawmarginal1dpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawMarginal1DPDF", false]], "drawmarginal1dpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawMarginal1DPDF", false]], "drawmarginal1dsurvivalfunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawMarginal1DSurvivalFunction", false]], "drawmarginal1dsurvivalfunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawMarginal1DSurvivalFunction", false]], "drawmarginal2dcdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawMarginal2DCDF", false]], "drawmarginal2dcdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawMarginal2DCDF", false]], "drawmarginal2dlogpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawMarginal2DLogPDF", false]], "drawmarginal2dlogpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawMarginal2DLogPDF", false]], "drawmarginal2dpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawMarginal2DPDF", false]], "drawmarginal2dpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawMarginal2DPDF", false]], "drawmarginal2dsurvivalfunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawMarginal2DSurvivalFunction", false]], "drawmarginal2dsurvivalfunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawMarginal2DSurvivalFunction", false]], "drawpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawPDF", false]], "drawpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawPDF", false]], "drawquantile() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawQuantile", false]], "drawquantile() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawQuantile", false]], "drawsurvivalfunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawSurvivalFunction", false]], "drawsurvivalfunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawSurvivalFunction", false]], "drawupperextremaldependencefunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawUpperExtremalDependenceFunction", false]], "drawupperextremaldependencefunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawUpperExtremalDependenceFunction", false]], "drawuppertaildependencefunction() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.drawUpperTailDependenceFunction", false]], "drawuppertaildependencefunction() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.drawUpperTailDependenceFunction", false]], "exp() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.exp", false]], "exp() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.exp", false]], "frommarginal() (otagrum.utils static method)": [[18, "otagrum.Utils.FromMarginal", false]], "frompotential() (otagrum.utils static method)": [[18, "otagrum.Utils.FromPotential", false]], "getalpha() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.getAlpha", false]], "getalpha() (otagrum.continuousttest method)": [[11, "otagrum.ContinuousTTest.getAlpha", false]], "getalpha() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.getAlpha", false]], "getbestscore() (otagrum.tabulist method)": [[17, "otagrum.TabuList.getBestScore", false]], "getbinnumber() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getBinNumber", false]], "getbootstrapsize() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.getBootstrapSize", false]], "getbootstrapsize() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.getBootstrapSize", false]], "getcdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getCDF", false]], "getcdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getCDF", false]], "getcdfepsilon() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getCDFEpsilon", false]], "getcdfepsilon() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getCDFEpsilon", false]], "getcentralmoment() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getCentralMoment", false]], "getcentralmoment() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getCentralMoment", false]], "getchildren() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.getChildren", false]], "getcholesky() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getCholesky", false]], "getcholesky() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getCholesky", false]], "getclassname() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getClassName", false]], "getclassname() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.getClassName", false]], "getclassname() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getClassName", false]], "getclassname() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.getClassName", false]], "getclassname() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.getClassName", false]], "getclique() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.getClique", false]], "getcliquescollection() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.getCliquesCollection", false]], "getcopula() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getCopula", false]], "getcopula() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getCopula", false]], "getcopulaatnode() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getCopulaAtNode", false]], "getcopulas() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getCopulas", false]], "getcopulasample() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getCopulaSample", false]], "getcorrelation() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getCorrelation", false]], "getcorrelation() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getCorrelation", false]], "getcovariance() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getCovariance", false]], "getcovariance() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getCovariance", false]], "getdag() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getDAG", false]], "getdag() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.getDAG", false]], "getdatadescription() (otagrum.continuousttest method)": [[11, "otagrum.ContinuousTTest.getDataDescription", false]], "getdatadescription() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.getDataDescription", false]], "getdescription() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getDescription", false]], "getdescription() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getDescription", false]], "getdescription() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.getDescription", false]], "getdescription() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.getDescription", false]], "getdimension() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getDimension", false]], "getdimension() (otagrum.continuousttest method)": [[11, "otagrum.ContinuousTTest.getDimension", false]], "getdimension() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.getDimension", false]], "getdimension() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getDimension", false]], "getdispersionindicator() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getDispersionIndicator", false]], "getdispersionindicator() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getDispersionIndicator", false]], "getintegrationnodesnumber() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getIntegrationNodesNumber", false]], "getintegrationnodesnumber() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getIntegrationNodesNumber", false]], "getinversecholesky() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getInverseCholesky", false]], "getinversecholesky() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getInverseCholesky", false]], "getinverseisoprobabilistictransformation() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getInverseIsoProbabilisticTransformation", false]], "getinverseisoprobabilistictransformation() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getInverseIsoProbabilisticTransformation", false]], "getisoprobabilistictransformation() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getIsoProbabilisticTransformation", false]], "getisoprobabilistictransformation() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getIsoProbabilisticTransformation", false]], "getk() (otagrum.continuousttest static method)": [[11, "otagrum.ContinuousTTest.GetK", false]], "getkendalltau() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getKendallTau", false]], "getkendalltau() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getKendallTau", false]], "getknownparameterindices() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.getKnownParameterIndices", false]], "getknownparameterindices() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.getKnownParameterIndices", false]], "getknownparametervalues() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.getKnownParameterValues", false]], "getknownparametervalues() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.getKnownParameterValues", false]], "getkurtosis() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getKurtosis", false]], "getkurtosis() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getKurtosis", false]], "getlatentvariables() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.getLatentVariables", false]], "getlogpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getLogPDF", false]], "getlogpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getLogPDF", false]], "getmarginal() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getMarginal", false]], "getmarginal() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getMarginal", false]], "getmarginal() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.getMarginal", false]], "getmarginals() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getMarginals", false]], "getmaxparents() (otagrum.tabulist method)": [[17, "otagrum.TabuList.getMaxParents", false]], "getmean() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getMean", false]], "getmean() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getMean", false]], "getmoment() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getMoment", false]], "getmoment() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getMoment", false]], "getname() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getName", false]], "getname() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.getName", false]], "getname() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getName", false]], "getname() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.getName", false]], "getname() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.getName", false]], "getneighbours() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.getNeighbours", false]], "getnodes() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.getNodes", false]], "getordermaxfirst() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.getOrderMaxFirst", false]], "getparameter() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getParameter", false]], "getparameter() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getParameter", false]], "getparameterdescription() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getParameterDescription", false]], "getparameterdescription() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getParameterDescription", false]], "getparameterdimension() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getParameterDimension", false]], "getparameterdimension() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getParameterDimension", false]], "getparameterscollection() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getParametersCollection", false]], "getparameterscollection() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getParametersCollection", false]], "getparents() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getParents", false]], "getparents() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.getParents", false]], "getpdf() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getPDF", false]], "getpdf() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getPDF", false]], "getpdfepsilon() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getPDFEpsilon", false]], "getpdfepsilon() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getPDFEpsilon", false]], "getpearsoncorrelation() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getPearsonCorrelation", false]], "getpearsoncorrelation() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getPearsonCorrelation", false]], "getpositionindicator() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getPositionIndicator", false]], "getpositionindicator() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getPositionIndicator", false]], "getprobabilities() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getProbabilities", false]], "getprobabilities() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getProbabilities", false]], "getpvalue() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.getPValue", false]], "getrange() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getRange", false]], "getrange() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getRange", false]], "getrealization() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getRealization", false]], "getrealization() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getRealization", false]], "getrestarts() (otagrum.tabulist method)": [[17, "otagrum.TabuList.getRestarts", false]], "getroughness() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getRoughness", false]], "getroughness() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getRoughness", false]], "getsample() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getSample", false]], "getsample() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getSample", false]], "getsamplebyinversion() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getSampleByInversion", false]], "getsamplebyinversion() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getSampleByInversion", false]], "getsamplebyqmc() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getSampleByQMC", false]], "getsamplebyqmc() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getSampleByQMC", false]], "getseparator() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.getSeparator", false]], "getseparatorscollection() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.getSeparatorsCollection", false]], "getsepset() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.getSepset", false]], "getsepsetnames() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.getSepsetNames", false]], "getshapematrix() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getShapeMatrix", false]], "getshapematrix() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getShapeMatrix", false]], "getshiftedmoment() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getShiftedMoment", false]], "getshiftedmoment() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getShiftedMoment", false]], "getsingularities() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getSingularities", false]], "getsingularities() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getSingularities", false]], "getsize() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.getSize", false]], "getsize() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.getSize", false]], "getsize() (otagrum.namedjunctiontree method)": [[16, "otagrum.NamedJunctionTree.getSize", false]], "getskewness() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getSkewness", false]], "getskewness() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getSkewness", false]], "getspearmancorrelation() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getSpearmanCorrelation", false]], "getspearmancorrelation() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getSpearmanCorrelation", false]], "getstandarddeviation() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getStandardDeviation", false]], "getstandarddeviation() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getStandardDeviation", false]], "getstandarddistribution() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getStandardDistribution", false]], "getstandarddistribution() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getStandardDistribution", false]], "getstandardrepresentative() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getStandardRepresentative", false]], "getstandardrepresentative() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getStandardRepresentative", false]], "getsupport() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getSupport", false]], "getsupport() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getSupport", false]], "getsupportepsilon() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.getSupportEpsilon", false]], "getsupportepsilon() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.getSupportEpsilon", false]], "gettopologicalorder() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.getTopologicalOrder", false]], "gettrace() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.getTrace", false]], "getttest() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.getTTest", false]], "getttest() (otagrum.continuousttest method)": [[11, "otagrum.ContinuousTTest.getTTest", false]], "getttestwithoutcorrections() (otagrum.continuousttest method)": [[11, "otagrum.ContinuousTTest.getTTestWithoutCorrections", false]], "getverbosity() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.getVerbosity", false]], "getverbosity() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.getVerbosity", false]], "getverbosity() (otagrum.tabulist method)": [[17, "otagrum.TabuList.getVerbosity", false]], "hasellipticalcopula() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.hasEllipticalCopula", false]], "hasellipticalcopula() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.hasEllipticalCopula", false]], "hasindependentcopula() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.hasIndependentCopula", false]], "hasindependentcopula() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.hasIndependentCopula", false]], "hasname() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.hasName", false]], "hasname() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.hasName", false]], "hasname() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.hasName", false]], "hasname() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.hasName", false]], "hasname() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.hasName", false]], "idfromname() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.idFromName", false]], "inverse() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.inverse", false]], "inverse() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.inverse", false]], "iscontinuous() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.isContinuous", false]], "iscontinuous() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.isContinuous", false]], "iscopula() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.isCopula", false]], "iscopula() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.isCopula", false]], "isdiscrete() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.isDiscrete", false]], "isdiscrete() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.isDiscrete", false]], "iselliptical() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.isElliptical", false]], "iselliptical() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.isElliptical", false]], "isindep() (otagrum.continuousttest method)": [[11, "otagrum.ContinuousTTest.isIndep", false]], "isindepfromtest() (otagrum.continuousttest static method)": [[11, "otagrum.ContinuousTTest.isIndepFromTest", false]], "isintegral() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.isIntegral", false]], "isintegral() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.isIntegral", false]], "isremoved() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.isRemoved", false]], "junctiontreebernsteincopula (class in otagrum)": [[13, "otagrum.JunctionTreeBernsteinCopula", false]], "junctiontreebernsteincopulafactory (class in otagrum)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory", false]], "learndag() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.learnDAG", false]], "learndag() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.learnDAG", false]], "learndag() (otagrum.tabulist method)": [[17, "otagrum.TabuList.learnDAG", false]], "learnjunctiontree() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.learnJunctionTree", false]], "learnpdag() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.learnPDAG", false]], "learnpdag() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.learnPDAG", false]], "learnskeleton() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.learnSkeleton", false]], "learnskeleton() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.learnSkeleton", false]], "ln() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.ln", false]], "ln() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.ln", false]], "log() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.log", false]], "log() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.log", false]], "nameddag (class in otagrum)": [[15, "otagrum.NamedDAG", false]], "namedjunctiontree (class in otagrum)": [[16, "otagrum.NamedJunctionTree", false]], "pdagtodot() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.PDAGtoDot", false]], "setalpha() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.setAlpha", false]], "setalpha() (otagrum.continuousttest method)": [[11, "otagrum.ContinuousTTest.setAlpha", false]], "setalpha() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.setAlpha", false]], "setbootstrapsize() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.setBootstrapSize", false]], "setbootstrapsize() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.setBootstrapSize", false]], "setcliquesorder() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.setCliquesOrder", false]], "setcmode() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.setCMode", false]], "setcmode() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.setCMode", false]], "setcmode() (otagrum.tabulist method)": [[17, "otagrum.TabuList.setCMode", false]], "setcopulasample() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.setCopulaSample", false]], "setdagandmarginalsandcopulas() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.setDAGAndMarginalsAndCopulas", false]], "setdescription() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.setDescription", false]], "setdescription() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.setDescription", false]], "setintegrationnodesnumber() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.setIntegrationNodesNumber", false]], "setintegrationnodesnumber() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.setIntegrationNodesNumber", false]], "setkmode() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.setKMode", false]], "setkmode() (otagrum.correctedmutualinformation method)": [[12, "otagrum.CorrectedMutualInformation.setKMode", false]], "setknownparameter() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.setKnownParameter", false]], "setknownparameter() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.setKnownParameter", false]], "setname() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.setName", false]], "setname() (otagrum.continuousbayesiannetworkfactory method)": [[8, "otagrum.ContinuousBayesianNetworkFactory.setName", false]], "setname() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.setName", false]], "setname() (otagrum.junctiontreebernsteincopulafactory method)": [[14, "otagrum.JunctionTreeBernsteinCopulaFactory.setName", false]], "setname() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.setName", false]], "setparameter() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.setParameter", false]], "setparameter() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.setParameter", false]], "setparameterscollection() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.setParametersCollection", false]], "setparameterscollection() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.setParametersCollection", false]], "setsupportepsilon() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.setSupportEpsilon", false]], "setsupportepsilon() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.setSupportEpsilon", false]], "setverbosity() (otagrum.continuousmiic method)": [[9, "otagrum.ContinuousMIIC.setVerbosity", false]], "setverbosity() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.setVerbosity", false]], "setverbosity() (otagrum.tabulist method)": [[17, "otagrum.TabuList.setVerbosity", false]], "sin() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.sin", false]], "sin() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.sin", false]], "sinh() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.sinh", false]], "sinh() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.sinh", false]], "skeletontodot() (otagrum.continuouspc method)": [[10, "otagrum.ContinuousPC.skeletonToDot", false]], "sqr() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.sqr", false]], "sqr() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.sqr", false]], "sqrt() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.sqrt", false]], "sqrt() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.sqrt", false]], "tabulist (class in otagrum)": [[17, "otagrum.TabuList", false]], "tan() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.tan", false]], "tan() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.tan", false]], "tanh() (otagrum.continuousbayesiannetwork method)": [[7, "otagrum.ContinuousBayesianNetwork.tanh", false]], "tanh() (otagrum.junctiontreebernsteincopula method)": [[13, "otagrum.JunctionTreeBernsteinCopula.tanh", false]], "todot() (otagrum.nameddag method)": [[15, "otagrum.NamedDAG.toDot", false]], "utils (class in otagrum)": [[18, "otagrum.Utils", false]]}, "objects": {"otagrum": [[7, 0, 1, "", "ContinuousBayesianNetwork"], [8, 0, 1, "", "ContinuousBayesianNetworkFactory"], [9, 0, 1, "", "ContinuousMIIC"], [10, 0, 1, "", "ContinuousPC"], [11, 0, 1, "", "ContinuousTTest"], [12, 0, 1, "", "CorrectedMutualInformation"], [13, 0, 1, "", "JunctionTreeBernsteinCopula"], [14, 0, 1, "", "JunctionTreeBernsteinCopulaFactory"], [15, 0, 1, "", "NamedDAG"], [16, 0, 1, "", "NamedJunctionTree"], [17, 0, 1, "", "TabuList"], [18, 0, 1, "", "Utils"]], "otagrum.ContinuousBayesianNetwork": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "abs"], [7, 1, 1, "", "acos"], [7, 1, 1, "", "acosh"], [7, 1, 1, "", "asin"], [7, 1, 1, "", "asinh"], [7, 1, 1, "", "atan"], [7, 1, 1, "", "atanh"], [7, 1, 1, "", "cbrt"], [7, 1, 1, "", "computeBilateralConfidenceInterval"], [7, 1, 1, "", "computeBilateralConfidenceIntervalWithMarginalProbability"], [7, 1, 1, "", "computeCDF"], [7, 1, 1, "", "computeCDFGradient"], [7, 1, 1, "", "computeCharacteristicFunction"], [7, 1, 1, "", "computeComplementaryCDF"], [7, 1, 1, "", "computeConditionalCDF"], [7, 1, 1, "", "computeConditionalDDF"], [7, 1, 1, "", "computeConditionalPDF"], [7, 1, 1, "", "computeConditionalQuantile"], [7, 1, 1, "", "computeDDF"], [7, 1, 1, "", "computeEntropy"], [7, 1, 1, "", "computeGeneratingFunction"], [7, 1, 1, "", "computeInverseSurvivalFunction"], [7, 1, 1, "", "computeLogCharacteristicFunction"], [7, 1, 1, "", "computeLogGeneratingFunction"], [7, 1, 1, "", "computeLogPDF"], [7, 1, 1, "", "computeLogPDFGradient"], [7, 1, 1, "", "computeLowerExtremalDependenceMatrix"], [7, 1, 1, "", "computeLowerTailDependenceMatrix"], [7, 1, 1, "", "computeMinimumVolumeInterval"], [7, 1, 1, "", "computeMinimumVolumeIntervalWithMarginalProbability"], [7, 1, 1, "", "computeMinimumVolumeLevelSet"], [7, 1, 1, "", "computeMinimumVolumeLevelSetWithThreshold"], [7, 1, 1, "", "computePDF"], [7, 1, 1, "", "computePDFGradient"], [7, 1, 1, "", "computeProbability"], [7, 1, 1, "", "computeQuantile"], [7, 1, 1, "", "computeRadialDistributionCDF"], [7, 1, 1, "", "computeScalarQuantile"], [7, 1, 1, "", "computeSequentialConditionalCDF"], [7, 1, 1, "", "computeSequentialConditionalDDF"], [7, 1, 1, "", "computeSequentialConditionalPDF"], [7, 1, 1, "", "computeSequentialConditionalQuantile"], [7, 1, 1, "", "computeSurvivalFunction"], [7, 1, 1, "", "computeUnilateralConfidenceInterval"], [7, 1, 1, "", "computeUnilateralConfidenceIntervalWithMarginalProbability"], [7, 1, 1, "", "computeUpperExtremalDependenceMatrix"], [7, 1, 1, "", "computeUpperTailDependenceMatrix"], [7, 1, 1, "", "cos"], [7, 1, 1, "", "cosh"], [7, 1, 1, "", "drawCDF"], [7, 1, 1, "", "drawLogPDF"], [7, 1, 1, "", "drawLowerExtremalDependenceFunction"], [7, 1, 1, "", "drawLowerTailDependenceFunction"], [7, 1, 1, "", "drawMarginal1DCDF"], [7, 1, 1, "", "drawMarginal1DLogPDF"], [7, 1, 1, "", "drawMarginal1DPDF"], [7, 1, 1, "", "drawMarginal1DSurvivalFunction"], [7, 1, 1, "", "drawMarginal2DCDF"], [7, 1, 1, "", "drawMarginal2DLogPDF"], [7, 1, 1, "", "drawMarginal2DPDF"], [7, 1, 1, "", "drawMarginal2DSurvivalFunction"], [7, 1, 1, "", "drawPDF"], [7, 1, 1, "", "drawQuantile"], [7, 1, 1, "", "drawSurvivalFunction"], [7, 1, 1, "", "drawUpperExtremalDependenceFunction"], [7, 1, 1, "", "drawUpperTailDependenceFunction"], [7, 1, 1, "", "exp"], [7, 1, 1, "", "getCDF"], [7, 1, 1, "", "getCDFEpsilon"], [7, 1, 1, "", "getCentralMoment"], [7, 1, 1, "", "getCholesky"], [7, 1, 1, "", "getClassName"], [7, 1, 1, "", "getCopula"], [7, 1, 1, "", "getCopulaAtNode"], [7, 1, 1, "", "getCopulas"], [7, 1, 1, "", "getCorrelation"], [7, 1, 1, "", "getCovariance"], [7, 1, 1, "", "getDAG"], [7, 1, 1, "", "getDescription"], [7, 1, 1, "", "getDimension"], [7, 1, 1, "", "getDispersionIndicator"], [7, 1, 1, "", "getIntegrationNodesNumber"], [7, 1, 1, "", "getInverseCholesky"], [7, 1, 1, "", "getInverseIsoProbabilisticTransformation"], [7, 1, 1, "", "getIsoProbabilisticTransformation"], [7, 1, 1, "", "getKendallTau"], [7, 1, 1, "", "getKurtosis"], [7, 1, 1, "", "getLogPDF"], [7, 1, 1, "", "getMarginal"], [7, 1, 1, "", "getMarginals"], [7, 1, 1, "", "getMean"], [7, 1, 1, "", "getMoment"], [7, 1, 1, "", "getName"], [7, 1, 1, "", "getPDF"], [7, 1, 1, "", "getPDFEpsilon"], [7, 1, 1, "", "getParameter"], [7, 1, 1, "", "getParameterDescription"], [7, 1, 1, "", "getParameterDimension"], [7, 1, 1, "", "getParametersCollection"], [7, 1, 1, "", "getParents"], [7, 1, 1, "", "getPearsonCorrelation"], [7, 1, 1, "", "getPositionIndicator"], [7, 1, 1, "", "getProbabilities"], [7, 1, 1, "", "getRange"], [7, 1, 1, "", "getRealization"], [7, 1, 1, "", "getRoughness"], [7, 1, 1, "", "getSample"], [7, 1, 1, "", "getSampleByInversion"], [7, 1, 1, "", "getSampleByQMC"], [7, 1, 1, "", "getShapeMatrix"], [7, 1, 1, "", "getShiftedMoment"], [7, 1, 1, "", "getSingularities"], [7, 1, 1, "", "getSkewness"], [7, 1, 1, "", "getSpearmanCorrelation"], [7, 1, 1, "", "getStandardDeviation"], [7, 1, 1, "", "getStandardDistribution"], [7, 1, 1, "", "getStandardRepresentative"], [7, 1, 1, "", "getSupport"], [7, 1, 1, "", "getSupportEpsilon"], [7, 1, 1, "", "hasEllipticalCopula"], [7, 1, 1, "", "hasIndependentCopula"], [7, 1, 1, "", "hasName"], [7, 1, 1, "", "inverse"], [7, 1, 1, "", "isContinuous"], [7, 1, 1, "", "isCopula"], [7, 1, 1, "", "isDiscrete"], [7, 1, 1, "", "isElliptical"], [7, 1, 1, "", "isIntegral"], [7, 1, 1, "", "ln"], [7, 1, 1, "", "log"], [7, 1, 1, "", "setDAGAndMarginalsAndCopulas"], [7, 1, 1, "", "setDescription"], [7, 1, 1, "", "setIntegrationNodesNumber"], [7, 1, 1, "", "setName"], [7, 1, 1, "", "setParameter"], [7, 1, 1, "", "setParametersCollection"], [7, 1, 1, "", "setSupportEpsilon"], [7, 1, 1, "", "sin"], [7, 1, 1, "", "sinh"], [7, 1, 1, "", "sqr"], [7, 1, 1, "", "sqrt"], [7, 1, 1, "", "tan"], [7, 1, 1, "", "tanh"]], "otagrum.ContinuousBayesianNetworkFactory": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "build"], [8, 1, 1, "", "buildAsContinuousBayesianNetwork"], [8, 1, 1, "", "buildEstimator"], [8, 1, 1, "", "getBootstrapSize"], [8, 1, 1, "", "getClassName"], [8, 1, 1, "", "getKnownParameterIndices"], [8, 1, 1, "", "getKnownParameterValues"], [8, 1, 1, "", "getName"], [8, 1, 1, "", "hasName"], [8, 1, 1, "", "setBootstrapSize"], [8, 1, 1, "", "setKnownParameter"], [8, 1, 1, "", "setName"]], "otagrum.ContinuousMIIC": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "addForbiddenArc"], [9, 1, 1, "", "addMandatoryArc"], [9, 1, 1, "", "getAlpha"], [9, 1, 1, "", "getLatentVariables"], [9, 1, 1, "", "getVerbosity"], [9, 1, 1, "", "learnDAG"], [9, 1, 1, "", "learnPDAG"], [9, 1, 1, "", "learnSkeleton"], [9, 1, 1, "", "setAlpha"], [9, 1, 1, "", "setCMode"], [9, 1, 1, "", "setKMode"], [9, 1, 1, "", "setVerbosity"]], "otagrum.ContinuousPC": [[10, 1, 1, "", "PDAGtoDot"], [10, 1, 1, "", "__init__"], [10, 1, 1, "", "getPValue"], [10, 1, 1, "", "getSepset"], [10, 1, 1, "", "getSepsetNames"], [10, 1, 1, "", "getTTest"], [10, 1, 1, "", "getTrace"], [10, 1, 1, "", "getVerbosity"], [10, 1, 1, "", "idFromName"], [10, 1, 1, "", "isRemoved"], [10, 1, 1, "", "learnDAG"], [10, 1, 1, "", "learnJunctionTree"], [10, 1, 1, "", "learnPDAG"], [10, 1, 1, "", "learnSkeleton"], [10, 1, 1, "", "setVerbosity"], [10, 1, 1, "", "skeletonToDot"]], "otagrum.ContinuousTTest": [[11, 1, 1, "", "GetK"], [11, 1, 1, "", "__init__"], [11, 1, 1, "", "clearCache"], [11, 1, 1, "", "clearCacheLevel"], [11, 1, 1, "", "getAlpha"], [11, 1, 1, "", "getDataDescription"], [11, 1, 1, "", "getDimension"], [11, 1, 1, "", "getTTest"], [11, 1, 1, "", "getTTestWithoutCorrections"], [11, 1, 1, "", "isIndep"], [11, 1, 1, "", "isIndepFromTest"], [11, 1, 1, "", "setAlpha"]], "otagrum.CorrectedMutualInformation": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "clearCaches"], [12, 1, 1, "", "compute2PtCorrectedInformation"], [12, 1, 1, "", "compute3PtCorrectedInformation"], [12, 1, 1, "", "getAlpha"], [12, 1, 1, "", "getDataDescription"], [12, 1, 1, "", "getDimension"], [12, 1, 1, "", "getSize"], [12, 1, 1, "", "setAlpha"], [12, 1, 1, "", "setCMode"], [12, 1, 1, "", "setKMode"]], "otagrum.JunctionTreeBernsteinCopula": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "abs"], [13, 1, 1, "", "acos"], [13, 1, 1, "", "acosh"], [13, 1, 1, "", "asin"], [13, 1, 1, "", "asinh"], [13, 1, 1, "", "atan"], [13, 1, 1, "", "atanh"], [13, 1, 1, "", "cbrt"], [13, 1, 1, "", "computeBilateralConfidenceInterval"], [13, 1, 1, "", "computeBilateralConfidenceIntervalWithMarginalProbability"], [13, 1, 1, "", "computeCDF"], [13, 1, 1, "", "computeCDFGradient"], [13, 1, 1, "", "computeCharacteristicFunction"], [13, 1, 1, "", "computeComplementaryCDF"], [13, 1, 1, "", "computeConditionalCDF"], [13, 1, 1, "", "computeConditionalDDF"], [13, 1, 1, "", "computeConditionalPDF"], [13, 1, 1, "", "computeConditionalQuantile"], [13, 1, 1, "", "computeDDF"], [13, 1, 1, "", "computeEntropy"], [13, 1, 1, "", "computeGeneratingFunction"], [13, 1, 1, "", "computeInverseSurvivalFunction"], [13, 1, 1, "", "computeLogCharacteristicFunction"], [13, 1, 1, "", "computeLogGeneratingFunction"], [13, 1, 1, "", "computeLogPDF"], [13, 1, 1, "", "computeLogPDFGradient"], [13, 1, 1, "", "computeLowerExtremalDependenceMatrix"], [13, 1, 1, "", "computeLowerTailDependenceMatrix"], [13, 1, 1, "", "computeMinimumVolumeInterval"], [13, 1, 1, "", "computeMinimumVolumeIntervalWithMarginalProbability"], [13, 1, 1, "", "computeMinimumVolumeLevelSet"], [13, 1, 1, "", "computeMinimumVolumeLevelSetWithThreshold"], [13, 1, 1, "", "computePDF"], [13, 1, 1, "", "computePDFGradient"], [13, 1, 1, "", "computeProbability"], [13, 1, 1, "", "computeQuantile"], [13, 1, 1, "", "computeRadialDistributionCDF"], [13, 1, 1, "", "computeScalarQuantile"], [13, 1, 1, "", "computeSequentialConditionalCDF"], [13, 1, 1, "", "computeSequentialConditionalDDF"], [13, 1, 1, "", "computeSequentialConditionalPDF"], [13, 1, 1, "", "computeSequentialConditionalQuantile"], [13, 1, 1, "", "computeSurvivalFunction"], [13, 1, 1, "", "computeUnilateralConfidenceInterval"], [13, 1, 1, "", "computeUnilateralConfidenceIntervalWithMarginalProbability"], [13, 1, 1, "", "computeUpperExtremalDependenceMatrix"], [13, 1, 1, "", "computeUpperTailDependenceMatrix"], [13, 1, 1, "", "cos"], [13, 1, 1, "", "cosh"], [13, 1, 1, "", "drawCDF"], [13, 1, 1, "", "drawLogPDF"], [13, 1, 1, "", "drawLowerExtremalDependenceFunction"], [13, 1, 1, "", "drawLowerTailDependenceFunction"], [13, 1, 1, "", "drawMarginal1DCDF"], [13, 1, 1, "", "drawMarginal1DLogPDF"], [13, 1, 1, "", "drawMarginal1DPDF"], [13, 1, 1, "", "drawMarginal1DSurvivalFunction"], [13, 1, 1, "", "drawMarginal2DCDF"], [13, 1, 1, "", "drawMarginal2DLogPDF"], [13, 1, 1, "", "drawMarginal2DPDF"], [13, 1, 1, "", "drawMarginal2DSurvivalFunction"], [13, 1, 1, "", "drawPDF"], [13, 1, 1, "", "drawQuantile"], [13, 1, 1, "", "drawSurvivalFunction"], [13, 1, 1, "", "drawUpperExtremalDependenceFunction"], [13, 1, 1, "", "drawUpperTailDependenceFunction"], [13, 1, 1, "", "exp"], [13, 1, 1, "", "getBinNumber"], [13, 1, 1, "", "getCDF"], [13, 1, 1, "", "getCDFEpsilon"], [13, 1, 1, "", "getCentralMoment"], [13, 1, 1, "", "getCholesky"], [13, 1, 1, "", "getClassName"], [13, 1, 1, "", "getCopula"], [13, 1, 1, "", "getCopulaSample"], [13, 1, 1, "", "getCorrelation"], [13, 1, 1, "", "getCovariance"], [13, 1, 1, "", "getDescription"], [13, 1, 1, "", "getDimension"], [13, 1, 1, "", "getDispersionIndicator"], [13, 1, 1, "", "getIntegrationNodesNumber"], [13, 1, 1, "", "getInverseCholesky"], [13, 1, 1, "", "getInverseIsoProbabilisticTransformation"], [13, 1, 1, "", "getIsoProbabilisticTransformation"], [13, 1, 1, "", "getKendallTau"], [13, 1, 1, "", "getKurtosis"], [13, 1, 1, "", "getLogPDF"], [13, 1, 1, "", "getMarginal"], [13, 1, 1, "", "getMean"], [13, 1, 1, "", "getMoment"], [13, 1, 1, "", "getName"], [13, 1, 1, "", "getPDF"], [13, 1, 1, "", "getPDFEpsilon"], [13, 1, 1, "", "getParameter"], [13, 1, 1, "", "getParameterDescription"], [13, 1, 1, "", "getParameterDimension"], [13, 1, 1, "", "getParametersCollection"], [13, 1, 1, "", "getPearsonCorrelation"], [13, 1, 1, "", "getPositionIndicator"], [13, 1, 1, "", "getProbabilities"], [13, 1, 1, "", "getRange"], [13, 1, 1, "", "getRealization"], [13, 1, 1, "", "getRoughness"], [13, 1, 1, "", "getSample"], [13, 1, 1, "", "getSampleByInversion"], [13, 1, 1, "", "getSampleByQMC"], [13, 1, 1, "", "getShapeMatrix"], [13, 1, 1, "", "getShiftedMoment"], [13, 1, 1, "", "getSingularities"], [13, 1, 1, "", "getSkewness"], [13, 1, 1, "", "getSpearmanCorrelation"], [13, 1, 1, "", "getStandardDeviation"], [13, 1, 1, "", "getStandardDistribution"], [13, 1, 1, "", "getStandardRepresentative"], [13, 1, 1, "", "getSupport"], [13, 1, 1, "", "getSupportEpsilon"], [13, 1, 1, "", "hasEllipticalCopula"], [13, 1, 1, "", "hasIndependentCopula"], [13, 1, 1, "", "hasName"], [13, 1, 1, "", "inverse"], [13, 1, 1, "", "isContinuous"], [13, 1, 1, "", "isCopula"], [13, 1, 1, "", "isDiscrete"], [13, 1, 1, "", "isElliptical"], [13, 1, 1, "", "isIntegral"], [13, 1, 1, "", "ln"], [13, 1, 1, "", "log"], [13, 1, 1, "", "setCliquesOrder"], [13, 1, 1, "", "setCopulaSample"], [13, 1, 1, "", "setDescription"], [13, 1, 1, "", "setIntegrationNodesNumber"], [13, 1, 1, "", "setName"], [13, 1, 1, "", "setParameter"], [13, 1, 1, "", "setParametersCollection"], [13, 1, 1, "", "setSupportEpsilon"], [13, 1, 1, "", "sin"], [13, 1, 1, "", "sinh"], [13, 1, 1, "", "sqr"], [13, 1, 1, "", "sqrt"], [13, 1, 1, "", "tan"], [13, 1, 1, "", "tanh"]], "otagrum.JunctionTreeBernsteinCopulaFactory": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "build"], [14, 1, 1, "", "buildAsJunctionTreeBernsteinCopula"], [14, 1, 1, "", "buildEstimator"], [14, 1, 1, "", "getBootstrapSize"], [14, 1, 1, "", "getClassName"], [14, 1, 1, "", "getKnownParameterIndices"], [14, 1, 1, "", "getKnownParameterValues"], [14, 1, 1, "", "getName"], [14, 1, 1, "", "hasName"], [14, 1, 1, "", "setBootstrapSize"], [14, 1, 1, "", "setKnownParameter"], [14, 1, 1, "", "setName"]], "otagrum.NamedDAG": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "getChildren"], [15, 1, 1, "", "getClassName"], [15, 1, 1, "", "getDAG"], [15, 1, 1, "", "getDescription"], [15, 1, 1, "", "getName"], [15, 1, 1, "", "getParents"], [15, 1, 1, "", "getSize"], [15, 1, 1, "", "getTopologicalOrder"], [15, 1, 1, "", "hasName"], [15, 1, 1, "", "setName"], [15, 1, 1, "", "toDot"]], "otagrum.NamedJunctionTree": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "getClique"], [16, 1, 1, "", "getCliquesCollection"], [16, 1, 1, "", "getDescription"], [16, 1, 1, "", "getMarginal"], [16, 1, 1, "", "getNeighbours"], [16, 1, 1, "", "getNodes"], [16, 1, 1, "", "getOrderMaxFirst"], [16, 1, 1, "", "getSeparator"], [16, 1, 1, "", "getSeparatorsCollection"], [16, 1, 1, "", "getSize"]], "otagrum.TabuList": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "getBestScore"], [17, 1, 1, "", "getMaxParents"], [17, 1, 1, "", "getRestarts"], [17, 1, 1, "", "getVerbosity"], [17, 1, 1, "", "learnDAG"], [17, 1, 1, "", "setCMode"], [17, 1, 1, "", "setVerbosity"]], "otagrum.Utils": [[18, 1, 1, "", "Discretize"], [18, 1, 1, "", "FromMarginal"], [18, 1, 1, "", "FromPotential"], [18, 1, 1, "", "__init__"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "objtypes": {"0": "py:class", "1": "py:method"}, "terms": {"": [1, 4, 5, 7, 8, 10, 13, 14, 15], "0": [1, 2, 3, 4, 6, 7, 8, 11, 13, 14, 16, 18], "00": [3, 6], "000": [3, 6], "01": 2, "0x562b43681dd0": 1, "0x562b43748b20": 1, "0x562b45163900": 1, "0x562b4552ad60": 2, "0x562b45a0cd60": 2, "0x562b45a9b740": 2, "0x562b45ac2240": 2, "0x562b45d85bc0": 2, "0x7f219dcbce90": 1, "0x7f219dcc9810": 1, "0x7f219dd09590": 1, "0x7f219df8ae40": 1, "1": [1, 2, 4, 7, 8, 11, 13, 14, 16, 18], "10": [1, 2, 7, 8, 13, 14, 18], "100": [2, 4, 7, 13], "1000": [2, 7, 13], "11428571428571421": 1, "13": 1, "14": 1, "15": 1, "150": 1, "15241697100666607": 2, "15cm": 1, "16": 4, "1717": 1, "18": 18, "1d": [7, 13], "2": [1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18], "20": [1, 4, 18], "25": [1, 4, 18], "3": [1, 2, 3, 6, 7, 8, 13, 14, 16, 18], "30": [1, 18], "301": [2, 3, 6], "31620906143480526": 2, "32": 4, "32857134257593246": 1, "4": [1, 4, 7, 13, 16, 18], "40": 1, "40cm": 1, "496o": 1, "5": [1, 2, 4, 7, 8, 13, 14, 16], "50": 1, "511": [7, 13], "547": [1, 3, 6], "55": 1, "56": 1, "6": [1, 2, 7, 13, 16], "6571426851518647": 1, "7": [13, 16], "75": [1, 18], "8": [1, 4, 7, 18], "848": [3, 6], "9": [7, 13], "90": 1, "90cm": 1, "9486": [7, 13], "9488": [7, 13], "A": [2, 4, 5, 7, 8, 10, 11, 13, 16, 18], "And": 2, "As": [2, 7, 13], "By": 2, "For": [4, 5, 7, 13], "If": [1, 7, 8, 9, 10, 11, 13, 14, 17], "In": [4, 5, 7, 8, 10, 13, 14], "It": [4, 5, 7, 9, 10, 13], "NOT": 4, "The": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "Then": [2, 7, 13], "There": 1, "These": 9, "To": [2, 7, 13], "With": [7, 13], "_": [7, 13], "_0": [7, 13], "__class__": [7, 8, 13, 14, 15], "__init__": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "__name__": [7, 8, 13, 14, 15], "_l": [7, 13], "_p": [7, 13], "a_1": [7, 13], "a_d": [7, 13], "a_i": [7, 13], "ab": [4, 7, 13], "abil": 5, "abl": 1, "about": [1, 9, 10, 17], "absolut": [7, 13], "access": 1, "accessor": [7, 8, 9, 10, 13, 14, 15, 16], "accord": [7, 8, 13, 14, 18], "accur": 4, "achiev": [7, 13], "aco": [7, 13], "acondit": 4, "acosh": [7, 13], "act": 5, "acycl": [2, 5, 15], "ad": 9, "add": [1, 2, 4, 9, 10, 17, 18], "addarc": [1, 2, 4], "addforbiddenarc": 9, "addjointtarget": [1, 4], "addlabel": [1, 18], "addmandatoryarc": 9, "addnod": 2, "addtick": 1, "aful": 4, "agrum": [1, 5, 18], "agrumeri": 5, "air": 1, "algorithm": [2, 5, 7, 8, 9, 10, 13, 17], "align": [7, 13], "all": [0, 1, 5, 6, 7, 13], "allow": [4, 9, 10, 13], "alpha": [7, 8, 9, 10, 11, 12, 13, 14], "alreadi": [7, 13], "also": [1, 7, 8, 13], "among": [7, 13], "an": [1, 7, 9, 10, 11, 13, 15, 16, 17, 18], "angl": 4, "angle_tick": 4, "angleknowingtorqu": 4, "anglemax": 4, "ani": [1, 7, 13], "anoth": [2, 7, 8, 13, 14], "answer": [7, 13], "anteced": 1, "api": 5, "append": [2, 7], "ar": [1, 2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "arc": [1, 2, 9, 10], "arccosin": [7, 13], "arcsin": [7, 13], "arctang": [7, 13], "arg": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "argmin_": [7, 13], "argument": [7, 13], "arrai": [4, 7, 13], "asdiscretizedvar": 4, "asin": [7, 13], "asinh": [7, 13], "associ": [2, 5, 7, 10, 13, 15, 16], "assum": [4, 7, 8, 13, 14], "asymptot": [7, 8, 13, 14], "atan": [7, 13], "atanh": [7, 13], "atmospher": 1, "attribut": 1, "auto_exampl": 3, "auto_examples_jupyt": 0, "auto_examples_python": 0, "avail": [7, 8, 13, 14, 15, 16], "averag": 1, "avoid": [9, 10, 17], "ax": [2, 7, 13], "axi": [2, 7, 13], "b": [2, 5, 7, 8, 13, 14], "b_1": [7, 13], "b_d": [7, 13], "b_i": [7, 13], "back": [7, 13], "balconi": 1, "bar": [4, 7, 13], "base": [7, 9, 13], "basi": [7, 13], "bathroom": 1, "bay": 1, "bayesian": [5, 7, 8, 9, 10, 15, 16], "bayesnet": [1, 4, 7, 13, 15, 16], "bcondit": 4, "been": [2, 10], "beforehand": [8, 14], "begin": [2, 7, 13, 16], "behaviour": 2, "being": [8, 10], "belief": 5, "benefit": [7, 13], "bernoulli": 4, "bernstein": [2, 9, 11, 12, 13, 14, 17], "bernsteincopula": 2, "bernsteincopulafactori": 8, "beta": [7, 8, 13, 14], "betafactori": [8, 14], "between": [2, 5, 9, 10, 12], "bfull": 4, "bic": 17, "big": [7, 13, 18], "bigcap": [7, 13], "bigcap_": [7, 13], "biject": [7, 13], "bilater": [7, 13], "bin": [11, 13, 14], "binnumb": 13, "biologi": 1, "bivari": [7, 13], "blockindependentcopula": 4, "bn": [1, 4, 5, 7, 13, 15, 16], "bool": [7, 8, 9, 10, 13, 14, 15, 17], "bootstrap": [8, 14], "bootstraps": [8, 14], "both": [1, 7, 13], "bound": [4, 7, 13], "brent": [7, 13], "bright": [1, 18], "build": [1, 2, 5, 8, 13, 14], "buildascontinuousbayesiannetwork": 8, "buildasjunctiontreebernsteincopula": 14, "buildestim": [7, 8, 13, 14], "built": [5, 7, 8, 13, 14], "bytesio": 2, "c": [2, 5, 7, 13], "c_": [7, 13], "c_i": [7, 13], "cach": [11, 12], "call": [5, 7, 13], "can": [1, 2, 5, 7, 8, 13, 17], "cap": [7, 13], "cartesian": [7, 13], "case": [5, 7, 8, 13, 14], "categor": 1, "caus": 4, "cbn": [2, 5, 7, 17], "cbrt": [7, 13], "cd": 5, "cdf": [7, 13], "cdfepsilon": [7, 13], "ce_x": [7, 13], "cell": [11, 13], "cellar": 1, "center": [7, 13], "central": [7, 13], "certain": [7, 13], "chang": [2, 9, 10, 11, 12, 17], "characterist": [7, 13], "check": 5, "chi": [7, 13], "chi_l": [7, 13], "chib": [7, 13], "chil": [7, 13], "chilb": [7, 13], "children": 15, "choleski": [7, 13], "circl": [9, 10, 17], "cl": [7, 13], "class": [1, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "class_nam": [7, 8, 13, 14, 15], "claytoncopula": [7, 13], "clear": [11, 12], "clearcach": [11, 12], "clearcachelevel": 11, "cliqu": [10, 13, 16], "cliquegraph": 16, "cliquescollect": 13, "cliquesord": 13, "clone": 5, "close": [7, 13], "cluster": [11, 13], "cm": 1, "cmake": 5, "cmode": [9, 12, 17], "cmodetyp": [9, 12, 17], "cmodetypes_bernstein": 2, "cmodetypes_gaussian": 2, "co": [7, 13], "co_n": [7, 13], "code": [0, 1, 2, 4], "coeffici": [7, 13], "collect": [2, 7, 13], "com": 5, "command": 5, "common": [7, 10, 13], "compar": 2, "complementari": [7, 13], "complet": [9, 10], "completetick": 4, "complex": [7, 13], "compon": [7, 13], "componentwis": [7, 13], "composeddistribut": 4, "comput": [2, 4, 7, 9, 11, 12, 13, 17, 18], "compute2ptcorrectedinform": 12, "compute3ptcorrectedinform": 12, "compute_mean_l": 2, "computebilateralconfidenceinterv": [7, 13], "computebilateralconfidenceintervalwithmarginalprob": [7, 13], "computecdf": [1, 7, 13], "computecdfgradi": [7, 13], "computecharacteristicfunct": [7, 13], "computecomplementarycdf": [7, 13], "computeconditionalcdf": [7, 13], "computeconditionalddf": [7, 13], "computeconditionalpdf": [7, 13], "computeconditionalquantil": [7, 13], "computeddf": [7, 13], "computeentropi": [7, 13], "computegeneratingfunct": [7, 13], "computeinversesurvivalfunct": [7, 13], "computelogcharacteristicfunct": [7, 13], "computeloggeneratingfunct": [7, 13], "computelogpdf": [2, 7, 13], "computelogpdfgradi": [7, 13], "computelowerextremaldependencematrix": [7, 13], "computelowertaildependencematrix": [7, 13], "computeminimumvolumeinterv": [7, 13], "computeminimumvolumeintervalwithmarginalprob": [7, 13], "computeminimumvolumelevelset": [7, 13], "computeminimumvolumelevelsetwiththreshold": [7, 13], "computepdf": [4, 7, 13], "computepdfgradi": [7, 13], "computeprob": [4, 7, 13], "computequantil": [7, 13], "computeradialdistributioncdf": [7, 13], "computescalarquantil": [7, 13], "computesequentialconditionalcdf": [7, 13], "computesequentialconditionalddf": [7, 13], "computesequentialconditionalpdf": [7, 13], "computesequentialconditionalquantil": [7, 13], "computesurvivalfunct": [7, 13], "computeunilateralconfidenceinterv": [7, 13], "computeunilateralconfidenceintervalwithmarginalprob": [7, 13], "computeupperextremaldependencematrix": [7, 13], "computeuppertaildependencematrix": [7, 13], "condit": [1, 2, 4, 5, 7, 8, 9, 10, 11, 13, 14], "condition": [5, 10, 12], "conditionaldens": 4, "conditionalprob": 4, "conditionedmax": 4, "conditionedmin": 4, "conditioningdimens": 4, "conditioningdistribut": 4, "confid": [7, 11, 13], "config": 4, "confint": [7, 13], "confinterv": [7, 13], "connect": 5, "consid": [7, 8, 13, 14], "consist": [7, 9, 10, 13], "constrain": 10, "constraint": [2, 9, 10], "construct": 2, "constructor": [7, 13, 15, 16], "consum": [7, 13], "contain": [10, 11, 12], "continu": [1, 2, 7, 13, 18], "continuousbayesiannetwork": [2, 5, 8], "continuousbayesiannetworkfactori": 5, "continuousmi": [2, 5], "continuouspc": [2, 5, 8], "continuousttest": [2, 5], "contrain": 9, "convert": 18, "copi": [7, 13], "copula": [2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 17], "copulasampl": 13, "copulasfactori": 8, "core": [1, 2], "corner": [7, 13], "correct": [2, 4, 9, 11, 12], "correctedmutualinform": [2, 5, 9, 17], "correl": [7, 13], "correlationmatrix": [2, 4, 7, 13], "correspond": 13, "cosh": [7, 13], "cosin": [7, 13], "count": 13, "coupl": [7, 13], "cov": [7, 13], "covari": [7, 8, 13, 14], "covariancematrix": [7, 13], "cpdf": [7, 13], "cpt": [1, 4], "creat": [1, 2, 5, 7, 9, 10, 13, 17], "create_png": 2, "cross": 12, "cset": [7, 13], "cubic": [7, 13], "cumul": [7, 13], "cup": [7, 13], "curv": [7, 13], "d": [2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18], "dag": [2, 5, 7, 9, 10, 12, 15, 17], "dark": 1, "data": [1, 2, 8, 9, 10, 11, 12, 13, 14, 17], "ddf": [7, 13], "declar": 1, "decomposit": 17, "dedic": [7, 13], "def": [1, 2, 4], "default": [2, 7, 8, 13, 14], "defaultalpha": 8, "defaultbootstraps": [7, 13], "defaultmarginalintegrationpointsnumb": 4, "defaultmaximumconditioningsets": 8, "defaultpointnumb": [7, 13], "defin": [5, 7, 13, 18], "definit": [7, 13], "delta": [4, 7, 13], "den": 4, "denot": [7, 13], "densiti": [4, 7, 13], "dep": [7, 13], "depend": [4, 5, 7, 13], "deriv": [7, 13], "describ": 13, "descript": [7, 10, 11, 12, 13, 16], "desir": 16, "detail": [5, 7, 9, 10, 13, 17], "determin": [7, 8, 13, 14], "deviat": [7, 13], "dfdtheta": [7, 13], "dfrac": [7, 13], "di": [7, 13], "dictionari": [7, 13], "die": 1, "diffeomorph": [7, 13], "differ": [1, 7, 8, 13, 14], "differenti": [7, 13], "digit": [7, 13], "dim": [1, 7, 18], "dim_lcc": 2, "dimens": [7, 8, 11, 12, 13], "dimension": [7, 13], "direct": [2, 5, 15], "directori": 5, "discontinu": [7, 13], "discrep": [7, 13], "discret": [1, 4, 5, 7, 8, 13, 18], "discretizebernoullifromconditionalprob": 4, "discretizedvari": [1, 4, 18], "discretizefromconditionaldens": 4, "discretizefromjoint": 4, "dispers": [7, 13], "displai": [1, 2, 10, 12, 15], "dist": [7, 8, 13, 14, 18], "distrib": 4, "distribut": [1, 4, 5, 7, 8, 13, 14, 18], "distributionfactori": [7, 8, 13], "distributionfactoryresult": [8, 14], "distributionimplement": [7, 13], "distributionparamet": [8, 14], "divid": [11, 13], "do": 2, "domain": [7, 13, 18], "domains": 1, "done": [2, 7, 13], "dot": [7, 10, 12, 13, 15], "dotstr": 2, "doubl": [7, 13, 17], "download": [0, 1, 2, 4], "draw": [7, 13], "drawcdf": [7, 13], "drawlogpdf": [7, 13], "drawlowerextremaldependencefunct": [7, 13], "drawlowertaildependencefunct": [7, 13], "drawmarginal1dcdf": [7, 13], "drawmarginal1dlogpdf": [7, 13], "drawmarginal1dpdf": [7, 13], "drawmarginal1dsurvivalfunct": [7, 13], "drawmarginal2dcdf": [7, 13], "drawmarginal2dlogpdf": [7, 13], "drawmarginal2dpdf": [7, 13], "drawmarginal2dsurvivalfunct": [7, 13], "drawpdf": [1, 4, 7, 13], "drawquantil": [7, 13], "drawsurvivalfunct": [7, 13], "drawupperextremaldependencefunct": [7, 13], "drawuppertaildependencefunct": [7, 13], "dry": [1, 18], "due": [2, 7, 13], "e": [7, 13], "each": [2, 5, 7, 8, 9, 10, 11, 13], "edg": [2, 5, 9, 10, 16, 17], "effici": [5, 7, 13], "either": [7, 13, 18], "elif": 2, "ellipt": [7, 13], "els": 4, "empir": [11, 13], "empiricalbernsteincopula": 2, "empti": [7, 8, 12, 13, 14, 15], "encod": 7, "end": [1, 2, 4, 7, 13, 16], "enter": 1, "entir": 17, "entropi": [7, 12, 13], "epsilon": [7, 13], "eqnarrai": [7, 13], "equal": [7, 8, 13], "equat": [7, 13], "equival": 10, "especi": [7, 13], "estim": [2, 4, 5, 8, 13, 14], "ev": 4, "evalu": [1, 7, 13], "even": [7, 13], "everyth": 4, "evid": 1, "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 16, 18], "except": [1, 2, 7, 13], "execut": [3, 6], "exist": [5, 7, 13], "exp": [4, 7, 13], "exp_ll": 2, "expandedtick": 4, "expect": [1, 7, 13], "explain": 4, "exponenti": [7, 13], "extract": [5, 7, 11, 13], "extrem": [7, 13], "f": [2, 7, 13], "f_": [7, 13], "f_1": [7, 13], "f_2": [7, 13], "f_i": [7, 13], "f_vibrationknowingtorqueandjoint": 4, "f_x": [7, 13], "f_y": [7, 13], "factor": [7, 13], "factori": [8, 14], "fail": [1, 2], "fall": [7, 13], "fals": [2, 4, 7, 13], "famili": [7, 13], "fast": 4, "fastprototyp": [7, 13, 16], "featur": [7, 13], "fig": 2, "file": [3, 6], "fillwith": 4, "final": [1, 2, 5, 10, 17], "find": [7, 13], "fine": 8, "finit": 2, "first": [2, 5, 7, 8, 13, 14], "firstmargin": [7, 13], "fisher": [8, 14], "fit": [7, 8, 13, 14], "fittedr": [7, 13], "fix": [2, 7, 11, 13], "flag": [7, 9, 10, 13, 17], "flat": [7, 13], "float": [7, 8, 9, 10, 11, 12, 13, 14, 17], "float_info": 4, "focus": 1, "follow": [1, 2, 5, 7, 8, 13, 14], "foral": [7, 13], "forg": 5, "form": [7, 13], "format": [10, 12, 15], "found": 10, "fourth": [7, 8, 13, 14], "frac": [7, 13], "frankcopula": [7, 13], "from": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 17], "frommargin": [1, 18], "frompotenti": [1, 4, 18], "frontier": [7, 13], "full": [1, 2, 4], "fulldimens": 4, "fulldistribut": 4, "func_sampl": 4, "function": [2, 4, 5, 7, 13, 18], "functionimplement": [7, 13], "furthermor": 1, "g": [7, 13], "g_x": [7, 13], "galleri": 6, "gauss": [7, 13], "gaussian": [2, 7, 9, 12, 13, 17], "gausslegendr": 4, "gener": [4, 7, 13], "geq": [7, 13], "get": [1, 4, 7, 13], "getalpha": [9, 11, 12], "getbestscor": 17, "getbinnumb": 13, "getbootstraps": [8, 14], "getcdf": [7, 13], "getcdfepsilon": [7, 13], "getcentralmo": [7, 13], "getchildren": 15, "getcholeski": [7, 13], "getclassnam": [7, 8, 13, 14, 15], "getcliqu": 16, "getcliquescollect": 16, "getcmod": 12, "getcopula": [2, 7, 13], "getcopulaatnod": 7, "getcopulasampl": 13, "getcorrel": [7, 13], "getcovari": [7, 13], "getdag": [7, 15], "getdatadescript": [11, 12], "getdescript": [1, 7, 13, 15, 16], "getdimens": [2, 4, 7, 11, 12, 13], "getdispersionind": [7, 13], "getintegrationnodesnumb": [7, 13], "getinversecholeski": [7, 13], "getinverseisoprobabilistictransform": [7, 13], "getisoprobabilistictransform": [7, 13], "getk": [2, 11], "getkendalltau": [7, 13], "getkmod": 12, "getknownparameterindic": [8, 14], "getknownparametervalu": [8, 14], "getkurtosi": [7, 13], "getlatentvari": 9, "getlogpdf": [7, 13], "getlowerbound": 4, "getmargin": [1, 2, 4, 7, 13, 16], "getmaxpar": 17, "getmean": [7, 13], "getmoment": [7, 13], "getnam": [7, 8, 13, 14, 15], "getneighbour": 16, "getnod": 16, "getordermaxfirst": 16, "getpar": [2, 7, 15], "getparamet": [7, 13], "getparameterdescript": [7, 13], "getparameterdimens": [7, 13], "getparameterdistribut": [7, 13], "getparameterscollect": [7, 13], "getpdf": [7, 13], "getpdfepsilon": [7, 13], "getpearsoncorrel": [7, 13], "getpositionind": [7, 13], "getprob": [7, 13], "getpvalu": 10, "getrang": [4, 7, 13], "getreal": [7, 13], "getrestart": 17, "getrough": [7, 13], "getsampl": [2, 7, 8, 13, 14], "getsamplebyinvers": [7, 13], "getsamplebyqmc": [7, 13], "getsepar": 16, "getseparatorscollect": 16, "getsepset": 10, "getsepsetnam": 10, "getshapematrix": [7, 13], "getshiftedmo": [7, 13], "getsingular": [7, 13], "getsiz": [2, 7, 12, 15, 16], "getskew": [7, 13], "getspearmancorrel": [7, 13], "getstandarddevi": [7, 13], "getstandarddistribut": [7, 13], "getstandardrepres": [7, 13], "getsupport": [7, 13], "getsupportepsilon": [7, 13], "gettopologicalord": 15, "gettrac": 10, "getttest": [10, 11], "getttestwithoutcorrect": 11, "getupperbound": 4, "getverbos": [9, 10, 17], "git": 5, "github": 5, "gitlab": 5, "give": [1, 5, 7, 10, 13], "given": [4, 7, 11, 13], "gnb": [1, 2], "go": [1, 2, 4], "gradient": [7, 13], "graph": [2, 5, 7, 9, 10, 12, 13, 15, 17], "graph2": [7, 13], "graph3": [7, 13], "graph_from_dot_data": 2, "graphic": [4, 5, 7, 8, 13], "greater": 1, "grid": 4, "grow": 1, "growth": [0, 3, 6, 18], "gum": [1, 2, 4, 7, 9, 10, 13, 16, 18], "h": [1, 12], "h_dist": 1, "h_dist_dim": 1, "h_dist_wet": 1, "h_m_dist": 1, "ha": [1, 2, 4, 7, 8, 10, 13], "happi": 1, "hasellipticalcopula": [7, 13], "hasindependentcopula": [7, 13], "hasnam": [7, 8, 13, 14, 15], "have": [1, 2, 7, 8, 10, 13, 14, 15, 17], "head": 9, "height": [1, 18], "height_dist": 18, "heightwhenbrightanddri": 1, "heightwhenbrightandwet": 1, "heightwhendimanddri": 1, "heightwhendimandwet": 1, "henc": [2, 7, 13], "here": 1, "hessian": [7, 13], "high": [7, 13], "histogram": 18, "histogram_discretized_visualis": 4, "histogramfactori": 8, "home": 1, "html": 1, "http": 5, "hybrid": 9, "hypercub": [11, 13], "hypothesi": [10, 11], "i": [0, 1, 2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18], "id": [9, 10, 11, 12, 15, 16], "ident": [7, 13], "idfromnam": 10, "ie": [1, 4, 7, 8, 13, 16], "ij": [7, 13], "imagin": 1, "img": 2, "implement": [7, 13], "impli": [9, 10, 17], "import": [1, 2, 4, 7, 8, 13, 14, 16, 18], "importerror": [1, 2], "imread": 2, "imshow": 2, "indep": [10, 11], "independ": [5, 7, 8, 10, 11, 13], "independeci": 10, "independentcopula": [2, 4], "index": [5, 7, 8, 13, 14], "indexheight": 1, "indexlight": 1, "indexmoistur": 1, "indic": [2, 7, 8, 10, 13, 14, 15, 16], "inf": [7, 13], "inf_distribut": [8, 14], "infer": 5, "influenc": 1, "info": 12, "inform": [1, 2, 8, 9, 12, 14], "infti": [7, 13], "initi": [8, 14, 17], "initial_dag": 17, "input": [5, 7, 8, 13, 14], "insid": [1, 7, 13], "instanc": 1, "int": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "int_": [7, 13], "integ": [7, 13], "integr": [4, 7, 13], "integrand": 4, "integrationnodesnumb": [7, 13], "interest": [5, 7, 13], "interfac": 16, "interior": [7, 13], "interquartil": [7, 13], "intersect": [7, 10, 13], "interv": [4, 7, 13], "invari": [7, 13], "invers": [7, 8, 13, 14], "involv": 13, "io": 2, "ipynb": [1, 2, 4], "ipython": [1, 2], "iscontinu": [7, 13], "iscopula": [7, 13], "iscopulasampl": 13, "isdiscret": [7, 13], "isellipt": [7, 13], "isempiricalcopulasampl": 13, "isindep": 11, "isindepfromtest": 11, "isintegr": [7, 13], "iso": [7, 13], "iso_lin": [7, 13], "isoprobabilist": [7, 13], "isremov": 10, "iteratedquadratur": 4, "its": [1, 4, 7, 8, 9, 11, 13, 14], "j": [2, 4, 7, 13], "jag": 1, "joint": [1, 4, 7], "joint_tick": 4, "jointdistribut": [7, 13], "jointmin": 4, "jointposterior": [1, 4], "jointr": 4, "jointspread": 4, "jt": [13, 16], "jtagr": [13, 16], "junction": [10, 13, 14, 16], "junctiontre": [13, 16], "junctiontreebernsteincopula": [5, 14], "junctiontreebernsteincopulafactori": 5, "jupyt": [0, 1, 2, 4], "k": [2, 4, 7, 11, 13], "kappa": [7, 13], "kei": [2, 8], "kendal": [7, 13], "kernel": [4, 8, 14], "kernelsmooth": [8, 14], "kind": [1, 2], "kmode": [9, 12], "kmodetyp": 12, "kmodetypes_na": 2, "kmodetypes_nocorr": 2, "kn": 4, "know": [1, 4], "knowledg": 9, "known": [7, 8, 13, 14], "kurtosi": [7, 13], "kwarg": 18, "l": [4, 7, 13], "l_dist_wet": 1, "label": 1, "labelizedvari": [1, 4, 18], "lambda": [7, 13], "lambda_i": [7, 13], "largest": 16, "last": [7, 13], "latent": 9, "lazypropag": [1, 4, 13, 16], "lcbn": 2, "lcc_list": 2, "ldot": [7, 13], "lead": 2, "leak": 4, "leakag": 4, "leakageknowingangleandjoint": 4, "learn": [2, 5, 8, 9, 10, 17], "learndag": [2, 9, 10, 17], "learner": [2, 9, 10, 17], "learnjunctiontre": 10, "learnpdag": [2, 9, 10], "learnskeleton": [2, 9, 10], "learnt": 8, "least": [1, 7, 13], "lebesgu": [7, 13], "left": [7, 13, 18], "len": [2, 4], "length": 4, "leq": [7, 13, 18], "less": 4, "let": [1, 7, 13], "level": [7, 11, 13], "levelset": [7, 13], "lg": [7, 13], "li": [7, 13], "lib": [1, 2, 4], "librari": 5, "light": [1, 18], "like": [1, 7, 13], "likelihood": [8, 14], "lim_": [7, 13], "limits_": [7, 13], "line": [7, 13], "linear": [7, 13], "link": [1, 5, 10], "linv": [7, 13], "list": [2, 4, 7, 11, 12, 13, 15, 16, 17], "live": 1, "ll": 2, "ln": [7, 13], "local": [2, 5, 7, 8, 13], "log": [7, 13], "logarithm": [7, 13], "loglikelihood": 2, "lognorm": 4, "logpdf": [7, 11, 13], "logscal": [7, 13], "logscalei": [7, 13], "logscalex": [7, 13], "look": [2, 10], "lot": [9, 10, 17], "low": [7, 13], "lower": [4, 7, 13], "lowercorn": [7, 13], "m": [1, 4, 7, 13], "m_list": 2, "made": [7, 13], "mainli": 1, "make": 2, "makeinfer": [1, 4], "manipul": 5, "map": [2, 7, 13], "mapsto": [7, 13], "margin": [2, 4, 5, 7, 8, 13, 16], "marginalindex": [7, 13], "marginalprob": [7, 13], "marginalsfactori": 8, "marri": 1, "mat": [7, 13], "mathbb": [7, 13], "mathemat": [7, 13], "matplotlib": [1, 2, 4], "matrix": [7, 8, 13, 14], "max": [1, 4, 7, 13], "max_par": 17, "maxconditioningsets": 10, "maximum": [8, 10, 14, 17], "maximumconditioningsets": [8, 14], "maximumdiscretesupport": 8, "maxpar": 8, "mb": [3, 6], "mean": [2, 7, 8, 13], "measur": [7, 13], "mechan": 4, "median": [7, 13], "mem": [1, 3, 6], "member": [7, 13], "mesh": [7, 13], "meteorolog": 1, "method": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "metric": [7, 13], "mid": [7, 13], "might": [1, 7, 13], "miic": [2, 9], "min": [1, 4, 7, 13], "miniforg": 5, "minimum": [4, 7, 13], "minimumvolumelevelsetsamplings": [7, 13], "minut": [1, 2], "mixedgraph": [2, 9, 10], "mixedhistogramuserdefin": 18, "mkdir": 5, "mm": 4, "mod": 1, "mode": [9, 12], "model": [0, 1, 2, 3, 5, 6, 8, 9, 12, 13, 14, 17], "modul": 5, "modulu": [7, 13], "moist": 1, "moistur": [1, 18], "moment": [7, 8, 13, 14], "moral": 10, "more": [1, 5, 7, 13], "moreov": [2, 17], "most": [7, 13], "mu": [1, 7, 13], "mu_i": [7, 13], "multivari": [7, 13, 18], "must": [7, 13], "mutual": [2, 9, 12], "my": 1, "n": [2, 7, 10, 13, 18], "n_paramet": [7, 13], "n_tick": 4, "nabla": [7, 13], "naiv": [2, 9, 12], "name": [1, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "nameddag": [2, 5, 7, 8, 9, 10, 17], "namedjunctiontre": [5, 10, 13], "nataf": [7, 13], "nativ": [7, 8, 13, 14], "natur": [7, 13], "nbbin": 14, "ndag": [2, 7, 8], "necessari": 5, "need": [2, 4, 5], "neg": 9, "neighbor": 10, "neighbour": 16, "neq": [7, 13], "net": 1, "network": [5, 7, 8, 9, 10, 15, 16], "new": [1, 5, 8, 9, 10, 11, 14, 17], "next": [1, 5], "njt": [10, 16], "nocorr": [2, 9, 12], "nod": [15, 16], "nod1": 16, "nod2": 16, "node": [1, 2, 4, 5, 7, 9, 10, 11, 12, 15, 16, 17], "node1": 16, "node2": 16, "nodeid": 7, "nodesnumb": 4, "non": [2, 4, 7, 13], "none": [1, 4], "nonparametr": 13, "nonzero": [7, 13], "norm": [7, 13], "normal": [1, 2, 4, 7, 8, 13, 14, 18], "normalcopula": 4, "normalcopulafactori": 8, "normalfactori": [7, 8, 13], "normalizeascpt": 4, "note": [7, 8, 9, 10, 12, 13, 14, 17], "notebook": [0, 1, 2, 4], "now": [1, 2, 4], "np": 4, "npoint": [7, 13], "num": 4, "number": [7, 8, 11, 13, 14, 15, 16, 17], "numer": [7, 13], "numpi": 4, "object": [1, 2, 7, 8, 13, 14, 15], "obtain": [7, 9, 13], "off": 2, "offer": 5, "one": [1, 4, 7, 9, 13, 16, 18], "ones": 4, "onli": [7, 8, 13, 14], "openturn": [1, 2, 4, 5, 7, 8, 10, 13, 14, 15, 16, 18], "option": [7, 8, 10, 13, 14], "order": [1, 7, 10, 13, 15, 16], "orient": [2, 9, 10, 17], "orthonorm": [7, 13], "ot": [1, 2, 4, 7, 8, 13, 14, 18], "otagrum": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "other": [5, 7, 8, 13, 14, 16], "otherwis": [7, 13], "out": [1, 8, 14], "outsid": [1, 2, 7, 13], "over": [7, 13, 17], "p": [1, 4, 7, 8, 10, 11, 13, 18], "p_": [7, 13], "p_1": [7, 13], "p_i": [7, 13, 18], "p_j": [7, 13], "p_leakageknowingangleandjoint": 4, "p_valu": 10, "p_x": [7, 13], "packag": 1, "page": 5, "param": [8, 14], "paramdist": [7, 13], "paramet": [2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "parameter": [5, 7], "parametr": [2, 7, 8, 13, 14], "parent": [5, 7, 8, 15, 17], "part": [7, 13], "partial": [2, 7, 13], "particular": [1, 5], "pass": 1, "pc": [2, 10], "pdag": [2, 9, 10, 12, 17], "pdagtodot": 10, "pdf": [7, 13], "pdfepsilon": [7, 13], "pearson": [7, 13], "perform": [4, 5], "phi": [7, 13], "phi_2": [7, 13], "phi_x": [7, 13], "place": 1, "plain": 1, "plant": [0, 3, 6, 18], "plot": [7, 13], "plot_plant_growth": [1, 3, 6], "plot_using_otagrum": [2, 3, 6], "plt": [1, 2, 4], "pm": 1, "point": [4, 7, 8, 9, 12, 13, 14], "pointnbrind": [7, 13], "pointnumb": [7, 13], "pointwithdescript": [7, 13], "polynomi": [7, 13], "posit": [7, 8, 13, 14], "possibli": 12, "posterior": 1, "pot": [1, 18], "potenti": [4, 18], "precis": [7, 13], "predict": 1, "present": [1, 7, 13], "preserv": [7, 13], "print": [1, 2, 9, 10, 17], "prior": 9, "prob": [7, 13, 18], "probabilist": [4, 5, 7, 13], "probabilitiestru": 4, "probabl": [1, 4, 5, 7, 13, 18], "problem": [1, 7, 13], "procedur": [9, 10, 17], "process": 8, "prod_": [7, 13], "product": [7, 13], "prohibit": 1, "propag": [2, 9, 10], "properti": [7, 13], "provid": [2, 5, 8], "pseudo": [7, 13], "psi": [7, 13], "purpos": 1, "put": 1, "py": [1, 2, 3, 4, 6, 7], "pyagrum": [1, 2, 4, 5, 7, 9, 10, 12, 13, 15, 16, 18], "pydot": 2, "pylab": [1, 2, 4], "python": [0, 1, 2, 4], "python3": 1, "pythonfunct": 4, "q": [7, 13], "qmax": [7, 13], "qmin": [7, 13], "qquad": [7, 13], "quad": [7, 13], "qualiti": [1, 18], "quantif": 1, "quantifi": 1, "quantil": [7, 13], "quantiti": 1, "r": [2, 7, 8, 13, 14], "r2": [7, 13], "r_": [7, 13], "radiu": [7, 13], "random": [2, 5, 7, 13, 17], "randomgener": [2, 7, 8, 13, 14], "rang": [1, 2, 4, 7, 13], "rank": [7, 13], "rate": 1, "raw": [2, 11], "rcl": [7, 13], "rd": 4, "reach": 1, "realis": [7, 13], "realiz": [7, 13], "reason": 1, "recov": 2, "rectangular": [7, 13], "recurs": [7, 13], "reduc": [7, 13], "refer": [1, 7, 13], "region": [7, 13], "regular": [8, 14], "relat": 12, "releas": 5, "reli": [2, 9], "reload": [7, 13], "remain": [2, 9, 10, 17], "remembr": 1, "remov": [9, 10], "reorgan": 4, "repo": 5, "repositori": 5, "repres": [5, 7, 13, 15], "represent": [7, 10, 12, 13], "request": [7, 13], "requir": 1, "resdist": [8, 14], "reshap": 4, "resort": [7, 13], "resourcemap": [4, 7, 8, 13], "respect": [7, 13], "restart": 17, "result": [4, 8, 11, 14, 18], "return": [2, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "rho": [4, 7, 13], "rho_": [7, 13], "right": [7, 13, 18], "rightarrow": [7, 13], "risk": 1, "rnge": 4, "root": [7, 13], "rosenblatt": [7, 13], "rotat": [7, 13], "rough": [7, 13], "round": [7, 13], "rset": [7, 13], "run": [1, 2, 5, 7, 13], "s_": [7, 13], "s_i": [7, 13], "said": [7, 13], "same": [7, 13], "sampl": [2, 7, 8, 11, 13, 14], "satisfi": [7, 13], "scalar": [7, 13], "scale": [7, 13], "scope": 7, "score": [9, 17], "script": [1, 2], "search": [5, 9, 10], "second": [1, 2, 7, 13], "secondmargin": [7, 13], "section": [0, 1], "see": [7, 8, 13, 14], "seed": 2, "seek": 2, "select": [7, 13], "sep_set": 10, "separ": [10, 13, 16], "separatorscollect": 13, "sepset": 10, "sepset_nam": 10, "sequenc": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "sequenti": [7, 13], "set": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14], "setalpha": [2, 9, 11, 12], "setasunsignedinteg": [4, 7, 13], "setbootstraps": [8, 14], "setcliquesord": 13, "setcmod": [2, 9, 12, 17], "setcopulasampl": 13, "setdagandmarginalsandcopula": 7, "setdescript": [1, 7, 13], "setevid": [1, 4], "setintegrationnodesnumb": [7, 13], "setkmod": [2, 9, 12], "setknownparamet": [8, 14], "setlegend": [7, 13], "setnam": [7, 8, 13, 14, 15], "setparamet": [7, 13], "setparameterscollect": [7, 13], "setse": [2, 8, 14], "setsupportepsilon": [7, 13], "setverbos": [9, 10, 17], "sever": [1, 4], "shape": [4, 7, 13], "share": 10, "shift": [7, 13], "should": 8, "show": [1, 2, 4, 7, 13], "showdot": 2, "showinfer": 4, "showinform": 4, "showpotenti": 1, "sigma": [1, 7, 13], "sigma_": [7, 13], "sigma_i": [7, 13], "sigma_j": [7, 13], "signific": [7, 13], "sim": [7, 13], "simeq": [7, 13], "simpli": [7, 13], "simul": [7, 13], "sin": [7, 13], "sine": [7, 13], "singular": [7, 13], "sinh": [7, 13], "site": 1, "situat": 1, "size": [2, 4, 7, 8, 11, 12, 13, 14, 15, 16, 17], "skeleton": [2, 9, 10, 12], "skeletontodot": 10, "skew": [7, 13], "slow": 4, "smallest": [7, 13], "smooth": 4, "so": [1, 2, 7, 13], "sobol": [7, 13], "solv": [7, 13], "some": [1, 7, 13], "sourc": [0, 1, 2, 4], "sp": 4, "space": 13, "spearman": [7, 13], "specif": [7, 13], "specifi": [1, 7, 8, 11, 13, 14], "spheric": [7, 13], "sqr": [7, 13], "sqrt": [7, 13], "squar": [7, 13], "standard": [7, 13], "standard_distribut": [7, 13], "standarddistributionpolynomialfactori": [7, 13], "start": [7, 9, 10, 13, 17], "static": [11, 18], "statist": [1, 10, 11], "std_repr_dist": [7, 13], "step": [1, 9, 10, 17], "str": [7, 8, 9, 10, 12, 13, 14, 15, 18], "strictli": [7, 13], "structur": [2, 7, 8, 9, 10, 13, 17], "studi": [1, 4], "sub": 13, "subset": [8, 10, 14], "subtract": 2, "suffer": 1, "sum": [7, 13], "summari": 10, "sup": [7, 13], "supp": [7, 13], "support": [7, 13], "surviv": [7, 13], "survivalfunct": [7, 13], "svg": 2, "sy": 4, "symetri": [7, 13], "t": [2, 4, 7, 8, 10, 11, 13, 14], "t_": 18, "t_i": 18, "tabl": [1, 18], "tabu": 17, "tabu_list_s": 17, "tabulist": 5, "tail": [7, 9, 13], "take": [5, 10], "taken": [7, 13], "tan": [7, 13], "tangent": [7, 13], "tanh": [7, 13], "target": [7, 13, 16], "tau": [7, 13], "tell": [7, 13], "term": [7, 13], "test": [2, 7, 8, 10, 11, 13, 14, 15], "th": [7, 13], "than": 1, "thank": 1, "thei": 1, "theoret": 9, "theta": [7, 13], "theta_1": [7, 13], "theta_d": [7, 13], "thi": [0, 1, 2, 4, 5, 7, 8, 9, 10, 13, 14, 17], "third": [7, 8, 13, 14], "those": 2, "three": [9, 10, 12], "threshold": [7, 8, 10, 11, 13, 14], "through": 2, "throughout": 2, "thu": [7, 13], "tick": [1, 4, 18], "time": [1, 2, 7, 13], "tinv": [7, 13], "todot": [2, 15], "toler": [7, 13], "too": 1, "tool": 1, "topolog": 15, "torqu": [0, 3, 6], "torque_model": [3, 4, 6], "torque_tick": 4, "torqueangl": 4, "torqueanglecopula": 4, "torquer": 4, "torquespread": 4, "total": [1, 2, 3, 6], "tr": [7, 13], "trace": 10, "train": [1, 2], "transform": [7, 8, 13, 14], "travers": 13, "tree": [10, 13, 14, 16], "triangul": 10, "triangular": 1, "triangularmatrix": [7, 13], "triplet": [9, 10], "tropic": 1, "true": [2, 4, 7, 8, 9, 10, 13, 14, 15, 17], "true_ll": 2, "truncatednorm": 4, "try": [1, 2], "ttest": [10, 11], "tune": 8, "tupl": [4, 11], "two": [2, 10], "u": [1, 7, 12, 13], "u_i": [7, 13], "unbound": [7, 13], "under": [7, 13], "underli": [7, 8, 11, 12, 13, 15], "undigraph": [2, 9, 10, 12], "undirect": [2, 9, 10, 17], "uniform": [1, 2, 4, 7, 13], "uniformfactori": 2, "unilater": [7, 13], "uniqu": [7, 13], "unit": [7, 11, 13], "univari": [7, 8, 13, 18], "unknown": 4, "unless": [9, 10, 17], "unus": 7, "upper": [4, 7, 13], "uppercorn": [7, 13], "us": [0, 1, 3, 5, 6, 7, 8, 9, 11, 12, 13, 17, 18], "usag": [8, 14], "usebetafactori": 8, "userdefin": [1, 18], "userwarn": 1, "useslowintegr": 4, "usr": 1, "usual": 1, "util": [1, 4, 5], "v": [2, 4, 9, 10, 17, 18], "valid": [7, 13], "valu": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17], "var": [7, 9, 13], "variabl": [1, 4, 5, 7, 9, 10, 11, 12, 13, 15, 16, 18], "varianc": [7, 13], "variat": 1, "vect": [7, 13], "vector": [7, 8, 13, 14], "verbos": [9, 10, 17], "veri": 1, "verifi": [7, 13], "via": 5, "vibrat": 4, "vibration_tick": 4, "vibrationknowingtorqueandjoint": 4, "view": [1, 4, 7, 13], "viewer": [1, 4, 7, 13], "volum": [7, 13], "wa": 10, "wai": [8, 14], "want": [8, 14], "warn": [1, 4], "we": [1, 2, 4, 7, 8, 10, 13, 14], "well": [1, 7, 13], "were": 1, "wet": [1, 18], "what": 1, "when": [1, 7, 8, 9, 12, 13, 14], "where": [1, 4, 5, 7, 13, 18], "whether": [7, 10, 13], "which": [1, 2, 5, 7, 9, 10, 11, 13], "while": [7, 13], "whithin": 1, "whose": 15, "without": 11, "workincopulaspac": 8, "wrap": [7, 13], "write": [2, 7, 13], "x": [1, 4, 7, 9, 10, 11, 12, 13, 18], "x_": [4, 7, 13], "x_0": [7, 13], "x_1": [4, 7, 13], "x_d": [4, 7, 13], "x_i": [7, 13], "x_j": [7, 13], "x_max": [7, 13], "x_min": [7, 13], "x_p": [7, 13], "xcond": [7, 13], "xd": [7, 13], "xj": [7, 13], "xmax": [7, 13], "xmin": [7, 13], "xp": [7, 13], "y": [7, 9, 10, 11, 12, 13], "y_": [7, 13], "y_i": [7, 13], "yet": [1, 7, 13], "you": 5, "z": [7, 9, 10, 11, 12, 13], "zero": [7, 13], "zip": [0, 1, 2, 4]}, "titles": ["Examples", "Plant growth", "Using otagrum", "Computation times", "Torque model", "OTAgrum documentation", "Computation times", "ContinuousBayesianNetwork", "ContinuousBayesianNetworkFactory", "ContinuousMIIC", "ContinuousPC", "ContinuousTTest", "CorrectedMutualInformation", "JunctionTreeBernsteinCopula", "JunctionTreeBernsteinCopulaFactory", "NamedDAG", "NamedJunctionTree", "TabuList", "Utils", "API"], "titleterms": {"api": 19, "comput": [3, 6], "conda": 5, "continuousbayesiannetwork": 7, "continuousbayesiannetworkfactori": 8, "continuousmi": 9, "continuouspc": 10, "continuousttest": 11, "correctedmutualinform": 12, "document": 5, "exampl": 0, "growth": 1, "how": 5, "i": 5, "indic": 5, "instal": 5, "introduct": 5, "junctiontreebernsteincopula": 13, "junctiontreebernsteincopulafactori": 14, "linux": 5, "manual": 5, "model": 4, "nameddag": 15, "namedjunctiontre": 16, "otagrum": [2, 5], "plant": 1, "tabl": 5, "tabulist": 17, "time": [3, 6], "torqu": 4, "us": 2, "user": 5, "util": 18, "what": 5}})