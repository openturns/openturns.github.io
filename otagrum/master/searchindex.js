Search.setIndex({"alltitles": {"API": [[18, "api"]], "Computation times": [[3, "computation-times"], [5, "computation-times"]], "Conda": [[4, "conda"]], "ContinuousBayesianNetwork": [[6, "continuousbayesiannetwork"]], "ContinuousBayesianNetworkFactory": [[7, "continuousbayesiannetworkfactory"]], "ContinuousMIIC": [[8, "continuousmiic"]], "ContinuousPC": [[9, "continuouspc"]], "ContinuousTTest": [[10, "continuousttest"]], "CorrectedMutualInformation": [[11, "correctedmutualinformation"]], "Examples": [[0, "examples"]], "How to install it ?": [[4, "how-to-install-it"]], "Indices and tables": [[4, "indices-and-tables"]], "Introduction": [[4, "introduction"]], "JunctionTreeBernsteinCopula": [[12, "junctiontreebernsteincopula"]], "JunctionTreeBernsteinCopulaFactory": [[13, "junctiontreebernsteincopulafactory"]], "Manually (Linux)": [[4, "manually-linux"]], "NamedDAG": [[14, "nameddag"]], "NamedJunctionTree": [[15, "namedjunctiontree"]], "OTAgrum documentation": [[4, "otagrum-documentation"]], "Plant growth": [[1, "plant-growth"]], "TabuList": [[16, "tabulist"]], "User documentation": [[4, "user-documentation"]], "Using otagrum": [[2, "using-otagrum"]], "Utils": [[17, "utils"]], "What is otagrum ?": [[4, "what-is-otagrum"]]}, "docnames": ["auto_examples/index", "auto_examples/plot_plant_growth", "auto_examples/plot_using_otagrum", "auto_examples/sg_execution_times", "index", "sg_execution_times", "user_manual/_generated/otagrum.ContinuousBayesianNetwork", "user_manual/_generated/otagrum.ContinuousBayesianNetworkFactory", "user_manual/_generated/otagrum.ContinuousMIIC", "user_manual/_generated/otagrum.ContinuousPC", "user_manual/_generated/otagrum.ContinuousTTest", "user_manual/_generated/otagrum.CorrectedMutualInformation", "user_manual/_generated/otagrum.JunctionTreeBernsteinCopula", "user_manual/_generated/otagrum.JunctionTreeBernsteinCopulaFactory", "user_manual/_generated/otagrum.NamedDAG", "user_manual/_generated/otagrum.NamedJunctionTree", "user_manual/_generated/otagrum.TabuList", "user_manual/_generated/otagrum.Utils", "user_manual/user_manual"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2}, "filenames": ["auto_examples/index.rst", "auto_examples/plot_plant_growth.rst", "auto_examples/plot_using_otagrum.rst", "auto_examples/sg_execution_times.rst", "index.rst", "sg_execution_times.rst", "user_manual/_generated/otagrum.ContinuousBayesianNetwork.rst", "user_manual/_generated/otagrum.ContinuousBayesianNetworkFactory.rst", "user_manual/_generated/otagrum.ContinuousMIIC.rst", "user_manual/_generated/otagrum.ContinuousPC.rst", "user_manual/_generated/otagrum.ContinuousTTest.rst", "user_manual/_generated/otagrum.CorrectedMutualInformation.rst", "user_manual/_generated/otagrum.JunctionTreeBernsteinCopula.rst", "user_manual/_generated/otagrum.JunctionTreeBernsteinCopulaFactory.rst", "user_manual/_generated/otagrum.NamedDAG.rst", "user_manual/_generated/otagrum.NamedJunctionTree.rst", "user_manual/_generated/otagrum.TabuList.rst", "user_manual/_generated/otagrum.Utils.rst", "user_manual/user_manual.rst"], "indexentries": {"__init__() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.__init__", false]], "__init__() (otagrum.continuousbayesiannetworkfactory method)": [[7, "otagrum.ContinuousBayesianNetworkFactory.__init__", false]], "__init__() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.__init__", false]], "__init__() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.__init__", false]], "__init__() (otagrum.continuousttest method)": [[10, "otagrum.ContinuousTTest.__init__", false]], "__init__() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.__init__", false]], "__init__() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.__init__", false]], "__init__() (otagrum.junctiontreebernsteincopulafactory method)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory.__init__", false]], "__init__() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.__init__", false]], "__init__() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.__init__", false]], "__init__() (otagrum.tabulist method)": [[16, "otagrum.TabuList.__init__", false]], "__init__() (otagrum.utils method)": [[17, "otagrum.Utils.__init__", false]], "abs() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.abs", false]], "abs() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.abs", false]], "acos() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.acos", false]], "acos() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.acos", false]], "acosh() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.acosh", false]], "acosh() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.acosh", false]], "addforbiddenarc() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.addForbiddenArc", false]], "addmandatoryarc() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.addMandatoryArc", false]], "asin() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.asin", false]], "asin() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.asin", false]], "asinh() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.asinh", false]], "asinh() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.asinh", false]], "atan() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.atan", false]], "atan() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.atan", false]], "atanh() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.atanh", false]], "atanh() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.atanh", false]], "build() (otagrum.continuousbayesiannetworkfactory method)": [[7, "otagrum.ContinuousBayesianNetworkFactory.build", false]], "build() (otagrum.junctiontreebernsteincopulafactory method)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory.build", false]], "buildascontinuousbayesiannetwork() (otagrum.continuousbayesiannetworkfactory method)": [[7, "otagrum.ContinuousBayesianNetworkFactory.buildAsContinuousBayesianNetwork", false]], "buildasjunctiontreebernsteincopula() (otagrum.junctiontreebernsteincopulafactory method)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory.buildAsJunctionTreeBernsteinCopula", false]], "buildestimator() (otagrum.continuousbayesiannetworkfactory method)": [[7, "otagrum.ContinuousBayesianNetworkFactory.buildEstimator", false]], "buildestimator() (otagrum.junctiontreebernsteincopulafactory method)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory.buildEstimator", false]], "cbrt() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.cbrt", false]], "cbrt() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.cbrt", false]], "clearcache() (otagrum.continuousttest method)": [[10, "otagrum.ContinuousTTest.clearCache", false]], "clearcachelevel() (otagrum.continuousttest method)": [[10, "otagrum.ContinuousTTest.clearCacheLevel", false]], "clearcaches() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.clearCaches", false]], "compute2ptcorrectedinformation() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.compute2PtCorrectedInformation", false]], "compute3ptcorrectedinformation() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.compute3PtCorrectedInformation", false]], "computebilateralconfidenceinterval() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeBilateralConfidenceInterval", false]], "computebilateralconfidenceinterval() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeBilateralConfidenceInterval", false]], "computebilateralconfidenceintervalwithmarginalprobability() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeBilateralConfidenceIntervalWithMarginalProbability", false]], "computebilateralconfidenceintervalwithmarginalprobability() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeBilateralConfidenceIntervalWithMarginalProbability", false]], "computecdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeCDF", false]], "computecdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeCDF", false]], "computecdfgradient() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeCDFGradient", false]], "computecdfgradient() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeCDFGradient", false]], "computecharacteristicfunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeCharacteristicFunction", false]], "computecharacteristicfunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeCharacteristicFunction", false]], "computecomplementarycdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeComplementaryCDF", false]], "computecomplementarycdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeComplementaryCDF", false]], "computeconditionalcdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeConditionalCDF", false]], "computeconditionalcdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeConditionalCDF", false]], "computeconditionalddf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeConditionalDDF", false]], "computeconditionalddf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeConditionalDDF", false]], "computeconditionalpdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeConditionalPDF", false]], "computeconditionalpdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeConditionalPDF", false]], "computeconditionalquantile() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeConditionalQuantile", false]], "computeconditionalquantile() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeConditionalQuantile", false]], "computeddf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeDDF", false]], "computeddf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeDDF", false]], "computeentropy() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeEntropy", false]], "computeentropy() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeEntropy", false]], "computegeneratingfunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeGeneratingFunction", false]], "computegeneratingfunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeGeneratingFunction", false]], "computeinversesurvivalfunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeInverseSurvivalFunction", false]], "computeinversesurvivalfunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeInverseSurvivalFunction", false]], "computelogcharacteristicfunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeLogCharacteristicFunction", false]], "computelogcharacteristicfunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeLogCharacteristicFunction", false]], "computeloggeneratingfunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeLogGeneratingFunction", false]], "computeloggeneratingfunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeLogGeneratingFunction", false]], "computelogpdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeLogPDF", false]], "computelogpdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeLogPDF", false]], "computelogpdfgradient() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeLogPDFGradient", false]], "computelogpdfgradient() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeLogPDFGradient", false]], "computelowerextremaldependencematrix() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeLowerExtremalDependenceMatrix", false]], "computelowerextremaldependencematrix() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeLowerExtremalDependenceMatrix", false]], "computelowertaildependencematrix() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeLowerTailDependenceMatrix", false]], "computelowertaildependencematrix() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeLowerTailDependenceMatrix", false]], "computeminimumvolumeinterval() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeMinimumVolumeInterval", false]], "computeminimumvolumeinterval() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeMinimumVolumeInterval", false]], "computeminimumvolumeintervalwithmarginalprobability() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeMinimumVolumeIntervalWithMarginalProbability", false]], "computeminimumvolumeintervalwithmarginalprobability() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeMinimumVolumeIntervalWithMarginalProbability", false]], "computeminimumvolumelevelset() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeMinimumVolumeLevelSet", false]], "computeminimumvolumelevelset() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeMinimumVolumeLevelSet", false]], "computeminimumvolumelevelsetwiththreshold() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeMinimumVolumeLevelSetWithThreshold", false]], "computeminimumvolumelevelsetwiththreshold() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeMinimumVolumeLevelSetWithThreshold", false]], "computepdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computePDF", false]], "computepdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computePDF", false]], "computepdfgradient() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computePDFGradient", false]], "computepdfgradient() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computePDFGradient", false]], "computeprobability() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeProbability", false]], "computeprobability() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeProbability", false]], "computequantile() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeQuantile", false]], "computequantile() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeQuantile", false]], "computeradialdistributioncdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeRadialDistributionCDF", false]], "computeradialdistributioncdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeRadialDistributionCDF", false]], "computescalarquantile() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeScalarQuantile", false]], "computescalarquantile() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeScalarQuantile", false]], "computesequentialconditionalcdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeSequentialConditionalCDF", false]], "computesequentialconditionalcdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeSequentialConditionalCDF", false]], "computesequentialconditionalddf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeSequentialConditionalDDF", false]], "computesequentialconditionalddf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeSequentialConditionalDDF", false]], "computesequentialconditionalpdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeSequentialConditionalPDF", false]], "computesequentialconditionalpdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeSequentialConditionalPDF", false]], "computesequentialconditionalquantile() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeSequentialConditionalQuantile", false]], "computesequentialconditionalquantile() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeSequentialConditionalQuantile", false]], "computesurvivalfunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeSurvivalFunction", false]], "computesurvivalfunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeSurvivalFunction", false]], "computeunilateralconfidenceinterval() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeUnilateralConfidenceInterval", false]], "computeunilateralconfidenceinterval() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeUnilateralConfidenceInterval", false]], "computeunilateralconfidenceintervalwithmarginalprobability() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeUnilateralConfidenceIntervalWithMarginalProbability", false]], "computeunilateralconfidenceintervalwithmarginalprobability() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeUnilateralConfidenceIntervalWithMarginalProbability", false]], "computeupperextremaldependencematrix() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeUpperExtremalDependenceMatrix", false]], "computeupperextremaldependencematrix() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeUpperExtremalDependenceMatrix", false]], "computeuppertaildependencematrix() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.computeUpperTailDependenceMatrix", false]], "computeuppertaildependencematrix() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.computeUpperTailDependenceMatrix", false]], "continuousbayesiannetwork (class in otagrum)": [[6, "otagrum.ContinuousBayesianNetwork", false]], "continuousbayesiannetworkfactory (class in otagrum)": [[7, "otagrum.ContinuousBayesianNetworkFactory", false]], "continuousmiic (class in otagrum)": [[8, "otagrum.ContinuousMIIC", false]], "continuouspc (class in otagrum)": [[9, "otagrum.ContinuousPC", false]], "continuousttest (class in otagrum)": [[10, "otagrum.ContinuousTTest", false]], "correctedmutualinformation (class in otagrum)": [[11, "otagrum.CorrectedMutualInformation", false]], "cos() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.cos", false]], "cos() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.cos", false]], "cosh() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.cosh", false]], "cosh() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.cosh", false]], "discretize() (otagrum.utils static method)": [[17, "otagrum.Utils.Discretize", false]], "drawcdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawCDF", false]], "drawcdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawCDF", false]], "drawlogpdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawLogPDF", false]], "drawlogpdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawLogPDF", false]], "drawlowerextremaldependencefunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawLowerExtremalDependenceFunction", false]], "drawlowerextremaldependencefunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawLowerExtremalDependenceFunction", false]], "drawlowertaildependencefunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawLowerTailDependenceFunction", false]], "drawlowertaildependencefunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawLowerTailDependenceFunction", false]], "drawmarginal1dcdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawMarginal1DCDF", false]], "drawmarginal1dcdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawMarginal1DCDF", false]], "drawmarginal1dlogpdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawMarginal1DLogPDF", false]], "drawmarginal1dlogpdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawMarginal1DLogPDF", false]], "drawmarginal1dpdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawMarginal1DPDF", false]], "drawmarginal1dpdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawMarginal1DPDF", false]], "drawmarginal1dsurvivalfunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawMarginal1DSurvivalFunction", false]], "drawmarginal1dsurvivalfunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawMarginal1DSurvivalFunction", false]], "drawmarginal2dcdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawMarginal2DCDF", false]], "drawmarginal2dcdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawMarginal2DCDF", false]], "drawmarginal2dlogpdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawMarginal2DLogPDF", false]], "drawmarginal2dlogpdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawMarginal2DLogPDF", false]], "drawmarginal2dpdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawMarginal2DPDF", false]], "drawmarginal2dpdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawMarginal2DPDF", false]], "drawmarginal2dsurvivalfunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawMarginal2DSurvivalFunction", false]], "drawmarginal2dsurvivalfunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawMarginal2DSurvivalFunction", false]], "drawpdf() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawPDF", false]], "drawpdf() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawPDF", false]], "drawquantile() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawQuantile", false]], "drawquantile() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawQuantile", false]], "drawsurvivalfunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawSurvivalFunction", false]], "drawsurvivalfunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawSurvivalFunction", false]], "drawupperextremaldependencefunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawUpperExtremalDependenceFunction", false]], "drawupperextremaldependencefunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawUpperExtremalDependenceFunction", false]], "drawuppertaildependencefunction() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.drawUpperTailDependenceFunction", false]], "drawuppertaildependencefunction() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.drawUpperTailDependenceFunction", false]], "exp() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.exp", false]], "exp() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.exp", false]], "frommarginal() (otagrum.utils static method)": [[17, "otagrum.Utils.FromMarginal", false]], "frompotential() (otagrum.utils static method)": [[17, "otagrum.Utils.FromPotential", false]], "getalpha() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.getAlpha", false]], "getalpha() (otagrum.continuousttest method)": [[10, "otagrum.ContinuousTTest.getAlpha", false]], "getalpha() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.getAlpha", false]], "getbestscore() (otagrum.tabulist method)": [[16, "otagrum.TabuList.getBestScore", false]], "getbinnumber() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getBinNumber", false]], "getbootstrapsize() (otagrum.continuousbayesiannetworkfactory method)": [[7, "otagrum.ContinuousBayesianNetworkFactory.getBootstrapSize", false]], "getbootstrapsize() (otagrum.junctiontreebernsteincopulafactory method)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory.getBootstrapSize", false]], "getcdfepsilon() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getCDFEpsilon", false]], "getcdfepsilon() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getCDFEpsilon", false]], "getcentralmoment() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getCentralMoment", false]], "getcentralmoment() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getCentralMoment", false]], "getchildren() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.getChildren", false]], "getcholesky() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getCholesky", false]], "getcholesky() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getCholesky", false]], "getclassname() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getClassName", false]], "getclassname() (otagrum.continuousbayesiannetworkfactory method)": [[7, "otagrum.ContinuousBayesianNetworkFactory.getClassName", false]], "getclassname() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getClassName", false]], "getclassname() (otagrum.junctiontreebernsteincopulafactory method)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory.getClassName", false]], "getclassname() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.getClassName", false]], "getclique() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.getClique", false]], "getcliquescollection() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.getCliquesCollection", false]], "getcopula() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getCopula", false]], "getcopula() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getCopula", false]], "getcopulaatnode() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getCopulaAtNode", false]], "getcopulas() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getCopulas", false]], "getcopulasample() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getCopulaSample", false]], "getcorrelation() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getCorrelation", false]], "getcorrelation() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getCorrelation", false]], "getcovariance() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getCovariance", false]], "getcovariance() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getCovariance", false]], "getdag() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getDAG", false]], "getdag() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.getDAG", false]], "getdatadescription() (otagrum.continuousttest method)": [[10, "otagrum.ContinuousTTest.getDataDescription", false]], "getdatadescription() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.getDataDescription", false]], "getdescription() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getDescription", false]], "getdescription() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getDescription", false]], "getdescription() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.getDescription", false]], "getdescription() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.getDescription", false]], "getdimension() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getDimension", false]], "getdimension() (otagrum.continuousttest method)": [[10, "otagrum.ContinuousTTest.getDimension", false]], "getdimension() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.getDimension", false]], "getdimension() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getDimension", false]], "getdispersionindicator() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getDispersionIndicator", false]], "getdispersionindicator() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getDispersionIndicator", false]], "getintegrationnodesnumber() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getIntegrationNodesNumber", false]], "getintegrationnodesnumber() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getIntegrationNodesNumber", false]], "getinversecholesky() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getInverseCholesky", false]], "getinversecholesky() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getInverseCholesky", false]], "getinverseisoprobabilistictransformation() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getInverseIsoProbabilisticTransformation", false]], "getinverseisoprobabilistictransformation() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getInverseIsoProbabilisticTransformation", false]], "getisoprobabilistictransformation() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getIsoProbabilisticTransformation", false]], "getisoprobabilistictransformation() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getIsoProbabilisticTransformation", false]], "getk() (otagrum.continuousttest static method)": [[10, "otagrum.ContinuousTTest.GetK", false]], "getkendalltau() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getKendallTau", false]], "getkendalltau() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getKendallTau", false]], "getkurtosis() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getKurtosis", false]], "getkurtosis() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getKurtosis", false]], "getlatentvariables() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.getLatentVariables", false]], "getmarginal() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getMarginal", false]], "getmarginal() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getMarginal", false]], "getmarginal() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.getMarginal", false]], "getmarginals() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getMarginals", false]], "getmaxparents() (otagrum.tabulist method)": [[16, "otagrum.TabuList.getMaxParents", false]], "getmean() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getMean", false]], "getmean() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getMean", false]], "getmoment() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getMoment", false]], "getmoment() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getMoment", false]], "getname() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getName", false]], "getname() (otagrum.continuousbayesiannetworkfactory method)": [[7, "otagrum.ContinuousBayesianNetworkFactory.getName", false]], "getname() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getName", false]], "getname() (otagrum.junctiontreebernsteincopulafactory method)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory.getName", false]], "getname() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.getName", false]], "getneighbours() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.getNeighbours", false]], "getnodes() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.getNodes", false]], "getordermaxfirst() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.getOrderMaxFirst", false]], "getparameter() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getParameter", false]], "getparameter() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getParameter", false]], "getparameterdescription() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getParameterDescription", false]], "getparameterdescription() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getParameterDescription", false]], "getparameterdimension() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getParameterDimension", false]], "getparameterdimension() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getParameterDimension", false]], "getparameterscollection() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getParametersCollection", false]], "getparameterscollection() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getParametersCollection", false]], "getparents() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getParents", false]], "getparents() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.getParents", false]], "getpdfepsilon() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getPDFEpsilon", false]], "getpdfepsilon() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getPDFEpsilon", false]], "getpearsoncorrelation() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getPearsonCorrelation", false]], "getpearsoncorrelation() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getPearsonCorrelation", false]], "getpositionindicator() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getPositionIndicator", false]], "getpositionindicator() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getPositionIndicator", false]], "getprobabilities() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getProbabilities", false]], "getprobabilities() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getProbabilities", false]], "getpvalue() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.getPValue", false]], "getrange() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getRange", false]], "getrange() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getRange", false]], "getrealization() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getRealization", false]], "getrealization() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getRealization", false]], "getrestarts() (otagrum.tabulist method)": [[16, "otagrum.TabuList.getRestarts", false]], "getroughness() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getRoughness", false]], "getroughness() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getRoughness", false]], "getsample() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getSample", false]], "getsample() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getSample", false]], "getsamplebyinversion() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getSampleByInversion", false]], "getsamplebyinversion() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getSampleByInversion", false]], "getsamplebyqmc() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getSampleByQMC", false]], "getsamplebyqmc() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getSampleByQMC", false]], "getseparator() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.getSeparator", false]], "getseparatorscollection() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.getSeparatorsCollection", false]], "getsepset() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.getSepset", false]], "getsepsetnames() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.getSepsetNames", false]], "getshapematrix() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getShapeMatrix", false]], "getshapematrix() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getShapeMatrix", false]], "getshiftedmoment() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getShiftedMoment", false]], "getshiftedmoment() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getShiftedMoment", false]], "getsingularities() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getSingularities", false]], "getsingularities() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getSingularities", false]], "getsize() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.getSize", false]], "getsize() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.getSize", false]], "getsize() (otagrum.namedjunctiontree method)": [[15, "otagrum.NamedJunctionTree.getSize", false]], "getskewness() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getSkewness", false]], "getskewness() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getSkewness", false]], "getspearmancorrelation() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getSpearmanCorrelation", false]], "getspearmancorrelation() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getSpearmanCorrelation", false]], "getstandarddeviation() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getStandardDeviation", false]], "getstandarddeviation() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getStandardDeviation", false]], "getstandarddistribution() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getStandardDistribution", false]], "getstandarddistribution() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getStandardDistribution", false]], "getstandardrepresentative() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getStandardRepresentative", false]], "getstandardrepresentative() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getStandardRepresentative", false]], "getsupport() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.getSupport", false]], "getsupport() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.getSupport", false]], "gettopologicalorder() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.getTopologicalOrder", false]], "gettrace() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.getTrace", false]], "getttest() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.getTTest", false]], "getttest() (otagrum.continuousttest method)": [[10, "otagrum.ContinuousTTest.getTTest", false]], "getttestwithoutcorrections() (otagrum.continuousttest method)": [[10, "otagrum.ContinuousTTest.getTTestWithoutCorrections", false]], "getverbosity() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.getVerbosity", false]], "getverbosity() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.getVerbosity", false]], "getverbosity() (otagrum.tabulist method)": [[16, "otagrum.TabuList.getVerbosity", false]], "hasellipticalcopula() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.hasEllipticalCopula", false]], "hasellipticalcopula() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.hasEllipticalCopula", false]], "hasindependentcopula() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.hasIndependentCopula", false]], "hasindependentcopula() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.hasIndependentCopula", false]], "hasname() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.hasName", false]], "hasname() (otagrum.continuousbayesiannetworkfactory method)": [[7, "otagrum.ContinuousBayesianNetworkFactory.hasName", false]], "hasname() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.hasName", false]], "hasname() (otagrum.junctiontreebernsteincopulafactory method)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory.hasName", false]], "hasname() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.hasName", false]], "idfromname() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.idFromName", false]], "inverse() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.inverse", false]], "inverse() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.inverse", false]], "iscontinuous() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.isContinuous", false]], "iscontinuous() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.isContinuous", false]], "iscopula() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.isCopula", false]], "iscopula() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.isCopula", false]], "isdiscrete() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.isDiscrete", false]], "isdiscrete() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.isDiscrete", false]], "iselliptical() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.isElliptical", false]], "iselliptical() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.isElliptical", false]], "isindep() (otagrum.continuousttest method)": [[10, "otagrum.ContinuousTTest.isIndep", false]], "isindepfromtest() (otagrum.continuousttest static method)": [[10, "otagrum.ContinuousTTest.isIndepFromTest", false]], "isintegral() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.isIntegral", false]], "isintegral() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.isIntegral", false]], "isremoved() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.isRemoved", false]], "junctiontreebernsteincopula (class in otagrum)": [[12, "otagrum.JunctionTreeBernsteinCopula", false]], "junctiontreebernsteincopulafactory (class in otagrum)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory", false]], "learndag() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.learnDAG", false]], "learndag() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.learnDAG", false]], "learndag() (otagrum.tabulist method)": [[16, "otagrum.TabuList.learnDAG", false]], "learnjunctiontree() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.learnJunctionTree", false]], "learnpdag() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.learnPDAG", false]], "learnpdag() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.learnPDAG", false]], "learnskeleton() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.learnSkeleton", false]], "learnskeleton() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.learnSkeleton", false]], "ln() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.ln", false]], "ln() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.ln", false]], "log() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.log", false]], "log() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.log", false]], "nameddag (class in otagrum)": [[14, "otagrum.NamedDAG", false]], "namedjunctiontree (class in otagrum)": [[15, "otagrum.NamedJunctionTree", false]], "pdagtodot() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.PDAGtoDot", false]], "setalpha() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.setAlpha", false]], "setalpha() (otagrum.continuousttest method)": [[10, "otagrum.ContinuousTTest.setAlpha", false]], "setalpha() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.setAlpha", false]], "setbootstrapsize() (otagrum.continuousbayesiannetworkfactory method)": [[7, "otagrum.ContinuousBayesianNetworkFactory.setBootstrapSize", false]], "setbootstrapsize() (otagrum.junctiontreebernsteincopulafactory method)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory.setBootstrapSize", false]], "setcliquesorder() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.setCliquesOrder", false]], "setcmode() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.setCMode", false]], "setcmode() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.setCMode", false]], "setcmode() (otagrum.tabulist method)": [[16, "otagrum.TabuList.setCMode", false]], "setcopulasample() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.setCopulaSample", false]], "setdagandmarginalsandcopulas() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.setDAGAndMarginalsAndCopulas", false]], "setdescription() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.setDescription", false]], "setdescription() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.setDescription", false]], "setintegrationnodesnumber() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.setIntegrationNodesNumber", false]], "setintegrationnodesnumber() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.setIntegrationNodesNumber", false]], "setkmode() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.setKMode", false]], "setkmode() (otagrum.correctedmutualinformation method)": [[11, "otagrum.CorrectedMutualInformation.setKMode", false]], "setname() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.setName", false]], "setname() (otagrum.continuousbayesiannetworkfactory method)": [[7, "otagrum.ContinuousBayesianNetworkFactory.setName", false]], "setname() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.setName", false]], "setname() (otagrum.junctiontreebernsteincopulafactory method)": [[13, "otagrum.JunctionTreeBernsteinCopulaFactory.setName", false]], "setname() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.setName", false]], "setparameter() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.setParameter", false]], "setparameter() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.setParameter", false]], "setparameterscollection() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.setParametersCollection", false]], "setparameterscollection() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.setParametersCollection", false]], "setverbosity() (otagrum.continuousmiic method)": [[8, "otagrum.ContinuousMIIC.setVerbosity", false]], "setverbosity() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.setVerbosity", false]], "setverbosity() (otagrum.tabulist method)": [[16, "otagrum.TabuList.setVerbosity", false]], "sin() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.sin", false]], "sin() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.sin", false]], "sinh() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.sinh", false]], "sinh() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.sinh", false]], "skeletontodot() (otagrum.continuouspc method)": [[9, "otagrum.ContinuousPC.skeletonToDot", false]], "sqr() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.sqr", false]], "sqr() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.sqr", false]], "sqrt() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.sqrt", false]], "sqrt() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.sqrt", false]], "tabulist (class in otagrum)": [[16, "otagrum.TabuList", false]], "tan() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.tan", false]], "tan() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.tan", false]], "tanh() (otagrum.continuousbayesiannetwork method)": [[6, "otagrum.ContinuousBayesianNetwork.tanh", false]], "tanh() (otagrum.junctiontreebernsteincopula method)": [[12, "otagrum.JunctionTreeBernsteinCopula.tanh", false]], "todot() (otagrum.nameddag method)": [[14, "otagrum.NamedDAG.toDot", false]], "utils (class in otagrum)": [[17, "otagrum.Utils", false]]}, "objects": {"otagrum": [[6, 0, 1, "", "ContinuousBayesianNetwork"], [7, 0, 1, "", "ContinuousBayesianNetworkFactory"], [8, 0, 1, "", "ContinuousMIIC"], [9, 0, 1, "", "ContinuousPC"], [10, 0, 1, "", "ContinuousTTest"], [11, 0, 1, "", "CorrectedMutualInformation"], [12, 0, 1, "", "JunctionTreeBernsteinCopula"], [13, 0, 1, "", "JunctionTreeBernsteinCopulaFactory"], [14, 0, 1, "", "NamedDAG"], [15, 0, 1, "", "NamedJunctionTree"], [16, 0, 1, "", "TabuList"], [17, 0, 1, "", "Utils"]], "otagrum.ContinuousBayesianNetwork": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "abs"], [6, 1, 1, "", "acos"], [6, 1, 1, "", "acosh"], [6, 1, 1, "", "asin"], [6, 1, 1, "", "asinh"], [6, 1, 1, "", "atan"], [6, 1, 1, "", "atanh"], [6, 1, 1, "", "cbrt"], [6, 1, 1, "", "computeBilateralConfidenceInterval"], [6, 1, 1, "", "computeBilateralConfidenceIntervalWithMarginalProbability"], [6, 1, 1, "", "computeCDF"], [6, 1, 1, "", "computeCDFGradient"], [6, 1, 1, "", "computeCharacteristicFunction"], [6, 1, 1, "", "computeComplementaryCDF"], [6, 1, 1, "", "computeConditionalCDF"], [6, 1, 1, "", "computeConditionalDDF"], [6, 1, 1, "", "computeConditionalPDF"], [6, 1, 1, "", "computeConditionalQuantile"], [6, 1, 1, "", "computeDDF"], [6, 1, 1, "", "computeEntropy"], [6, 1, 1, "", "computeGeneratingFunction"], [6, 1, 1, "", "computeInverseSurvivalFunction"], [6, 1, 1, "", "computeLogCharacteristicFunction"], [6, 1, 1, "", "computeLogGeneratingFunction"], [6, 1, 1, "", "computeLogPDF"], [6, 1, 1, "", "computeLogPDFGradient"], [6, 1, 1, "", "computeLowerExtremalDependenceMatrix"], [6, 1, 1, "", "computeLowerTailDependenceMatrix"], [6, 1, 1, "", "computeMinimumVolumeInterval"], [6, 1, 1, "", "computeMinimumVolumeIntervalWithMarginalProbability"], [6, 1, 1, "", "computeMinimumVolumeLevelSet"], [6, 1, 1, "", "computeMinimumVolumeLevelSetWithThreshold"], [6, 1, 1, "", "computePDF"], [6, 1, 1, "", "computePDFGradient"], [6, 1, 1, "", "computeProbability"], [6, 1, 1, "", "computeQuantile"], [6, 1, 1, "", "computeRadialDistributionCDF"], [6, 1, 1, "", "computeScalarQuantile"], [6, 1, 1, "", "computeSequentialConditionalCDF"], [6, 1, 1, "", "computeSequentialConditionalDDF"], [6, 1, 1, "", "computeSequentialConditionalPDF"], [6, 1, 1, "", "computeSequentialConditionalQuantile"], [6, 1, 1, "", "computeSurvivalFunction"], [6, 1, 1, "", "computeUnilateralConfidenceInterval"], [6, 1, 1, "", "computeUnilateralConfidenceIntervalWithMarginalProbability"], [6, 1, 1, "", "computeUpperExtremalDependenceMatrix"], [6, 1, 1, "", "computeUpperTailDependenceMatrix"], [6, 1, 1, "", "cos"], [6, 1, 1, "", "cosh"], [6, 1, 1, "", "drawCDF"], [6, 1, 1, "", "drawLogPDF"], [6, 1, 1, "", "drawLowerExtremalDependenceFunction"], [6, 1, 1, "", "drawLowerTailDependenceFunction"], [6, 1, 1, "", "drawMarginal1DCDF"], [6, 1, 1, "", "drawMarginal1DLogPDF"], [6, 1, 1, "", "drawMarginal1DPDF"], [6, 1, 1, "", "drawMarginal1DSurvivalFunction"], [6, 1, 1, "", "drawMarginal2DCDF"], [6, 1, 1, "", "drawMarginal2DLogPDF"], [6, 1, 1, "", "drawMarginal2DPDF"], [6, 1, 1, "", "drawMarginal2DSurvivalFunction"], [6, 1, 1, "", "drawPDF"], [6, 1, 1, "", "drawQuantile"], [6, 1, 1, "", "drawSurvivalFunction"], [6, 1, 1, "", "drawUpperExtremalDependenceFunction"], [6, 1, 1, "", "drawUpperTailDependenceFunction"], [6, 1, 1, "", "exp"], [6, 1, 1, "", "getCDFEpsilon"], [6, 1, 1, "", "getCentralMoment"], [6, 1, 1, "", "getCholesky"], [6, 1, 1, "", "getClassName"], [6, 1, 1, "", "getCopula"], [6, 1, 1, "", "getCopulaAtNode"], [6, 1, 1, "", "getCopulas"], [6, 1, 1, "", "getCorrelation"], [6, 1, 1, "", "getCovariance"], [6, 1, 1, "", "getDAG"], [6, 1, 1, "", "getDescription"], [6, 1, 1, "", "getDimension"], [6, 1, 1, "", "getDispersionIndicator"], [6, 1, 1, "", "getIntegrationNodesNumber"], [6, 1, 1, "", "getInverseCholesky"], [6, 1, 1, "", "getInverseIsoProbabilisticTransformation"], [6, 1, 1, "", "getIsoProbabilisticTransformation"], [6, 1, 1, "", "getKendallTau"], [6, 1, 1, "", "getKurtosis"], [6, 1, 1, "", "getMarginal"], [6, 1, 1, "", "getMarginals"], [6, 1, 1, "", "getMean"], [6, 1, 1, "", "getMoment"], [6, 1, 1, "", "getName"], [6, 1, 1, "", "getPDFEpsilon"], [6, 1, 1, "", "getParameter"], [6, 1, 1, "", "getParameterDescription"], [6, 1, 1, "", "getParameterDimension"], [6, 1, 1, "", "getParametersCollection"], [6, 1, 1, "", "getParents"], [6, 1, 1, "", "getPearsonCorrelation"], [6, 1, 1, "", "getPositionIndicator"], [6, 1, 1, "", "getProbabilities"], [6, 1, 1, "", "getRange"], [6, 1, 1, "", "getRealization"], [6, 1, 1, "", "getRoughness"], [6, 1, 1, "", "getSample"], [6, 1, 1, "", "getSampleByInversion"], [6, 1, 1, "", "getSampleByQMC"], [6, 1, 1, "", "getShapeMatrix"], [6, 1, 1, "", "getShiftedMoment"], [6, 1, 1, "", "getSingularities"], [6, 1, 1, "", "getSkewness"], [6, 1, 1, "", "getSpearmanCorrelation"], [6, 1, 1, "", "getStandardDeviation"], [6, 1, 1, "", "getStandardDistribution"], [6, 1, 1, "", "getStandardRepresentative"], [6, 1, 1, "", "getSupport"], [6, 1, 1, "", "hasEllipticalCopula"], [6, 1, 1, "", "hasIndependentCopula"], [6, 1, 1, "", "hasName"], [6, 1, 1, "", "inverse"], [6, 1, 1, "", "isContinuous"], [6, 1, 1, "", "isCopula"], [6, 1, 1, "", "isDiscrete"], [6, 1, 1, "", "isElliptical"], [6, 1, 1, "", "isIntegral"], [6, 1, 1, "", "ln"], [6, 1, 1, "", "log"], [6, 1, 1, "", "setDAGAndMarginalsAndCopulas"], [6, 1, 1, "", "setDescription"], [6, 1, 1, "", "setIntegrationNodesNumber"], [6, 1, 1, "", "setName"], [6, 1, 1, "", "setParameter"], [6, 1, 1, "", "setParametersCollection"], [6, 1, 1, "", "sin"], [6, 1, 1, "", "sinh"], [6, 1, 1, "", "sqr"], [6, 1, 1, "", "sqrt"], [6, 1, 1, "", "tan"], [6, 1, 1, "", "tanh"]], "otagrum.ContinuousBayesianNetworkFactory": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "build"], [7, 1, 1, "", "buildAsContinuousBayesianNetwork"], [7, 1, 1, "", "buildEstimator"], [7, 1, 1, "", "getBootstrapSize"], [7, 1, 1, "", "getClassName"], [7, 1, 1, "", "getName"], [7, 1, 1, "", "hasName"], [7, 1, 1, "", "setBootstrapSize"], [7, 1, 1, "", "setName"]], "otagrum.ContinuousMIIC": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "addForbiddenArc"], [8, 1, 1, "", "addMandatoryArc"], [8, 1, 1, "", "getAlpha"], [8, 1, 1, "", "getLatentVariables"], [8, 1, 1, "", "getVerbosity"], [8, 1, 1, "", "learnDAG"], [8, 1, 1, "", "learnPDAG"], [8, 1, 1, "", "learnSkeleton"], [8, 1, 1, "", "setAlpha"], [8, 1, 1, "", "setCMode"], [8, 1, 1, "", "setKMode"], [8, 1, 1, "", "setVerbosity"]], "otagrum.ContinuousPC": [[9, 1, 1, "", "PDAGtoDot"], [9, 1, 1, "", "__init__"], [9, 1, 1, "", "getPValue"], [9, 1, 1, "", "getSepset"], [9, 1, 1, "", "getSepsetNames"], [9, 1, 1, "", "getTTest"], [9, 1, 1, "", "getTrace"], [9, 1, 1, "", "getVerbosity"], [9, 1, 1, "", "idFromName"], [9, 1, 1, "", "isRemoved"], [9, 1, 1, "", "learnDAG"], [9, 1, 1, "", "learnJunctionTree"], [9, 1, 1, "", "learnPDAG"], [9, 1, 1, "", "learnSkeleton"], [9, 1, 1, "", "setVerbosity"], [9, 1, 1, "", "skeletonToDot"]], "otagrum.ContinuousTTest": [[10, 1, 1, "", "GetK"], [10, 1, 1, "", "__init__"], [10, 1, 1, "", "clearCache"], [10, 1, 1, "", "clearCacheLevel"], [10, 1, 1, "", "getAlpha"], [10, 1, 1, "", "getDataDescription"], [10, 1, 1, "", "getDimension"], [10, 1, 1, "", "getTTest"], [10, 1, 1, "", "getTTestWithoutCorrections"], [10, 1, 1, "", "isIndep"], [10, 1, 1, "", "isIndepFromTest"], [10, 1, 1, "", "setAlpha"]], "otagrum.CorrectedMutualInformation": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "clearCaches"], [11, 1, 1, "", "compute2PtCorrectedInformation"], [11, 1, 1, "", "compute3PtCorrectedInformation"], [11, 1, 1, "", "getAlpha"], [11, 1, 1, "", "getDataDescription"], [11, 1, 1, "", "getDimension"], [11, 1, 1, "", "getSize"], [11, 1, 1, "", "setAlpha"], [11, 1, 1, "", "setCMode"], [11, 1, 1, "", "setKMode"]], "otagrum.JunctionTreeBernsteinCopula": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "abs"], [12, 1, 1, "", "acos"], [12, 1, 1, "", "acosh"], [12, 1, 1, "", "asin"], [12, 1, 1, "", "asinh"], [12, 1, 1, "", "atan"], [12, 1, 1, "", "atanh"], [12, 1, 1, "", "cbrt"], [12, 1, 1, "", "computeBilateralConfidenceInterval"], [12, 1, 1, "", "computeBilateralConfidenceIntervalWithMarginalProbability"], [12, 1, 1, "", "computeCDF"], [12, 1, 1, "", "computeCDFGradient"], [12, 1, 1, "", "computeCharacteristicFunction"], [12, 1, 1, "", "computeComplementaryCDF"], [12, 1, 1, "", "computeConditionalCDF"], [12, 1, 1, "", "computeConditionalDDF"], [12, 1, 1, "", "computeConditionalPDF"], [12, 1, 1, "", "computeConditionalQuantile"], [12, 1, 1, "", "computeDDF"], [12, 1, 1, "", "computeEntropy"], [12, 1, 1, "", "computeGeneratingFunction"], [12, 1, 1, "", "computeInverseSurvivalFunction"], [12, 1, 1, "", "computeLogCharacteristicFunction"], [12, 1, 1, "", "computeLogGeneratingFunction"], [12, 1, 1, "", "computeLogPDF"], [12, 1, 1, "", "computeLogPDFGradient"], [12, 1, 1, "", "computeLowerExtremalDependenceMatrix"], [12, 1, 1, "", "computeLowerTailDependenceMatrix"], [12, 1, 1, "", "computeMinimumVolumeInterval"], [12, 1, 1, "", "computeMinimumVolumeIntervalWithMarginalProbability"], [12, 1, 1, "", "computeMinimumVolumeLevelSet"], [12, 1, 1, "", "computeMinimumVolumeLevelSetWithThreshold"], [12, 1, 1, "", "computePDF"], [12, 1, 1, "", "computePDFGradient"], [12, 1, 1, "", "computeProbability"], [12, 1, 1, "", "computeQuantile"], [12, 1, 1, "", "computeRadialDistributionCDF"], [12, 1, 1, "", "computeScalarQuantile"], [12, 1, 1, "", "computeSequentialConditionalCDF"], [12, 1, 1, "", "computeSequentialConditionalDDF"], [12, 1, 1, "", "computeSequentialConditionalPDF"], [12, 1, 1, "", "computeSequentialConditionalQuantile"], [12, 1, 1, "", "computeSurvivalFunction"], [12, 1, 1, "", "computeUnilateralConfidenceInterval"], [12, 1, 1, "", "computeUnilateralConfidenceIntervalWithMarginalProbability"], [12, 1, 1, "", "computeUpperExtremalDependenceMatrix"], [12, 1, 1, "", "computeUpperTailDependenceMatrix"], [12, 1, 1, "", "cos"], [12, 1, 1, "", "cosh"], [12, 1, 1, "", "drawCDF"], [12, 1, 1, "", "drawLogPDF"], [12, 1, 1, "", "drawLowerExtremalDependenceFunction"], [12, 1, 1, "", "drawLowerTailDependenceFunction"], [12, 1, 1, "", "drawMarginal1DCDF"], [12, 1, 1, "", "drawMarginal1DLogPDF"], [12, 1, 1, "", "drawMarginal1DPDF"], [12, 1, 1, "", "drawMarginal1DSurvivalFunction"], [12, 1, 1, "", "drawMarginal2DCDF"], [12, 1, 1, "", "drawMarginal2DLogPDF"], [12, 1, 1, "", "drawMarginal2DPDF"], [12, 1, 1, "", "drawMarginal2DSurvivalFunction"], [12, 1, 1, "", "drawPDF"], [12, 1, 1, "", "drawQuantile"], [12, 1, 1, "", "drawSurvivalFunction"], [12, 1, 1, "", "drawUpperExtremalDependenceFunction"], [12, 1, 1, "", "drawUpperTailDependenceFunction"], [12, 1, 1, "", "exp"], [12, 1, 1, "", "getBinNumber"], [12, 1, 1, "", "getCDFEpsilon"], [12, 1, 1, "", "getCentralMoment"], [12, 1, 1, "", "getCholesky"], [12, 1, 1, "", "getClassName"], [12, 1, 1, "", "getCopula"], [12, 1, 1, "", "getCopulaSample"], [12, 1, 1, "", "getCorrelation"], [12, 1, 1, "", "getCovariance"], [12, 1, 1, "", "getDescription"], [12, 1, 1, "", "getDimension"], [12, 1, 1, "", "getDispersionIndicator"], [12, 1, 1, "", "getIntegrationNodesNumber"], [12, 1, 1, "", "getInverseCholesky"], [12, 1, 1, "", "getInverseIsoProbabilisticTransformation"], [12, 1, 1, "", "getIsoProbabilisticTransformation"], [12, 1, 1, "", "getKendallTau"], [12, 1, 1, "", "getKurtosis"], [12, 1, 1, "", "getMarginal"], [12, 1, 1, "", "getMean"], [12, 1, 1, "", "getMoment"], [12, 1, 1, "", "getName"], [12, 1, 1, "", "getPDFEpsilon"], [12, 1, 1, "", "getParameter"], [12, 1, 1, "", "getParameterDescription"], [12, 1, 1, "", "getParameterDimension"], [12, 1, 1, "", "getParametersCollection"], [12, 1, 1, "", "getPearsonCorrelation"], [12, 1, 1, "", "getPositionIndicator"], [12, 1, 1, "", "getProbabilities"], [12, 1, 1, "", "getRange"], [12, 1, 1, "", "getRealization"], [12, 1, 1, "", "getRoughness"], [12, 1, 1, "", "getSample"], [12, 1, 1, "", "getSampleByInversion"], [12, 1, 1, "", "getSampleByQMC"], [12, 1, 1, "", "getShapeMatrix"], [12, 1, 1, "", "getShiftedMoment"], [12, 1, 1, "", "getSingularities"], [12, 1, 1, "", "getSkewness"], [12, 1, 1, "", "getSpearmanCorrelation"], [12, 1, 1, "", "getStandardDeviation"], [12, 1, 1, "", "getStandardDistribution"], [12, 1, 1, "", "getStandardRepresentative"], [12, 1, 1, "", "getSupport"], [12, 1, 1, "", "hasEllipticalCopula"], [12, 1, 1, "", "hasIndependentCopula"], [12, 1, 1, "", "hasName"], [12, 1, 1, "", "inverse"], [12, 1, 1, "", "isContinuous"], [12, 1, 1, "", "isCopula"], [12, 1, 1, "", "isDiscrete"], [12, 1, 1, "", "isElliptical"], [12, 1, 1, "", "isIntegral"], [12, 1, 1, "", "ln"], [12, 1, 1, "", "log"], [12, 1, 1, "", "setCliquesOrder"], [12, 1, 1, "", "setCopulaSample"], [12, 1, 1, "", "setDescription"], [12, 1, 1, "", "setIntegrationNodesNumber"], [12, 1, 1, "", "setName"], [12, 1, 1, "", "setParameter"], [12, 1, 1, "", "setParametersCollection"], [12, 1, 1, "", "sin"], [12, 1, 1, "", "sinh"], [12, 1, 1, "", "sqr"], [12, 1, 1, "", "sqrt"], [12, 1, 1, "", "tan"], [12, 1, 1, "", "tanh"]], "otagrum.JunctionTreeBernsteinCopulaFactory": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "build"], [13, 1, 1, "", "buildAsJunctionTreeBernsteinCopula"], [13, 1, 1, "", "buildEstimator"], [13, 1, 1, "", "getBootstrapSize"], [13, 1, 1, "", "getClassName"], [13, 1, 1, "", "getName"], [13, 1, 1, "", "hasName"], [13, 1, 1, "", "setBootstrapSize"], [13, 1, 1, "", "setName"]], "otagrum.NamedDAG": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "getChildren"], [14, 1, 1, "", "getClassName"], [14, 1, 1, "", "getDAG"], [14, 1, 1, "", "getDescription"], [14, 1, 1, "", "getName"], [14, 1, 1, "", "getParents"], [14, 1, 1, "", "getSize"], [14, 1, 1, "", "getTopologicalOrder"], [14, 1, 1, "", "hasName"], [14, 1, 1, "", "setName"], [14, 1, 1, "", "toDot"]], "otagrum.NamedJunctionTree": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "getClique"], [15, 1, 1, "", "getCliquesCollection"], [15, 1, 1, "", "getDescription"], [15, 1, 1, "", "getMarginal"], [15, 1, 1, "", "getNeighbours"], [15, 1, 1, "", "getNodes"], [15, 1, 1, "", "getOrderMaxFirst"], [15, 1, 1, "", "getSeparator"], [15, 1, 1, "", "getSeparatorsCollection"], [15, 1, 1, "", "getSize"]], "otagrum.TabuList": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "getBestScore"], [16, 1, 1, "", "getMaxParents"], [16, 1, 1, "", "getRestarts"], [16, 1, 1, "", "getVerbosity"], [16, 1, 1, "", "learnDAG"], [16, 1, 1, "", "setCMode"], [16, 1, 1, "", "setVerbosity"]], "otagrum.Utils": [[17, 1, 1, "", "Discretize"], [17, 1, 1, "", "FromMarginal"], [17, 1, 1, "", "FromPotential"], [17, 1, 1, "", "__init__"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "objtypes": {"0": "py:class", "1": "py:method"}, "terms": {"": [1, 4, 6, 7, 9, 12, 13, 14], "0": [1, 2, 3, 5, 6, 7, 10, 12, 13, 15, 17], "00": [3, 5], "01": 2, "0x55cec3239d60": 1, "0x55cec3263110": 1, "0x55cec4ea4e10": 2, "0x55cec555efc0": 2, "0x55cec556ac60": 2, "0x55cec58b4030": 1, "0x55cec58d2570": 2, "0x55cec611ba60": 2, "0x7ff8f1373aa0": 1, "0x7ff8f14fd9a0": 1, "0x7ff8f164afc0": 1, "0x7ff8f62d77d0": 1, "1": [1, 2, 6, 7, 10, 12, 13, 15, 17], "10": [1, 2, 6, 7, 12, 17], "100": [2, 6, 12], "1000": [2, 6, 12], "11428571428571421": 1, "12": 1, "14": 1, "15": 1, "150": 1, "15241697100666607": 2, "15cm": 1, "1713": 1, "18": 17, "1d": [6, 12], "2": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17], "20": [1, 17], "25": [1, 17], "3": [1, 2, 6, 12, 15, 17], "30": [1, 17], "305": [2, 3, 5], "31620906143480526": 2, "32857134257593235": 1, "4": [1, 6, 12, 15, 17], "40": 1, "40cm": 1, "496o": 1, "5": [1, 2, 6, 7, 12, 13, 15], "50": 1, "511": [6, 12], "55": 1, "56": 1, "6": [1, 2, 6, 12, 15], "600": [1, 3, 5], "6571426851518647": 1, "7": [12, 15], "75": [1, 17], "8": [1, 6, 17], "9": [6, 12], "90": 1, "906": [3, 5], "90cm": 1, "9486": [6, 12], "9488": [6, 12], "A": [2, 4, 6, 7, 9, 10, 12, 15, 17], "And": 2, "As": [2, 6, 12], "By": 2, "For": [4, 6, 12], "If": [1, 6, 7, 8, 9, 10, 12, 13, 16], "In": [4, 6, 7, 9, 12, 13], "It": [4, 6, 8, 9, 12], "NO": 4, "The": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "Then": [2, 6, 12], "There": 1, "These": 8, "To": [2, 6, 12], "With": [6, 12], "_": [6, 12], "_0": [6, 12], "__class__": [6, 7, 12, 13, 14], "__init__": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "__name__": [6, 7, 12, 13, 14], "_beta": [6, 12], "_l": [6, 12], "_p": [6, 12], "a_1": [6, 12], "a_d": [6, 12], "a_i": [6, 12], "ab": [6, 12], "abil": 4, "abl": 1, "about": [1, 8, 9, 16], "absolut": [6, 12], "access": 1, "accessor": [6, 7, 8, 9, 12, 13, 14, 15], "accord": [6, 7, 12, 13, 17], "achiev": [6, 12], "aco": [6, 12], "acosh": [6, 12], "act": 4, "acycl": [2, 4, 14], "ad": 8, "add": [1, 2, 4, 8, 9, 16, 17], "addarc": [1, 2], "addforbiddenarc": 8, "addjointtarget": 1, "addlabel": [1, 17], "addmandatoryarc": 8, "addnod": 2, "addtick": 1, "agrum": [1, 4, 17], "agrumeri": 4, "air": 1, "algorithm": [2, 4, 6, 7, 8, 9, 12, 16], "align": [6, 12], "all": [0, 1, 4, 5, 6, 12], "allow": [8, 9, 12], "alpha": [6, 7, 8, 9, 10, 11, 12, 13], "alreadi": [6, 12], "also": [1, 6, 7, 12], "among": [6, 12], "an": [1, 6, 8, 9, 10, 12, 14, 15, 16, 17], "ani": [1, 6, 12], "anoth": [2, 6, 7, 12, 13], "answer": [6, 12], "anteced": 1, "api": 4, "append": [2, 6], "ar": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17], "arc": [1, 2, 8, 9], "arccosin": [6, 12], "arcsin": [6, 12], "arctang": [6, 12], "arg": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "argmin_": [6, 12], "argument": [6, 12], "arrai": [6, 12], "asin": [6, 12], "asinh": [6, 12], "associ": [2, 4, 6, 9, 12, 14, 15], "assum": [6, 12], "asymptot": [6, 7, 12, 13], "atan": [6, 12], "atanh": [6, 12], "atmospher": 1, "attribut": 1, "auto_exampl": 3, "auto_examples_jupyt": 0, "auto_examples_python": 0, "avail": [6, 7, 12, 13, 14, 15], "averag": 1, "avoid": [8, 9, 16], "ax": [2, 6, 12], "axi": [2, 6, 12], "b": [2, 6, 12], "b_1": [6, 12], "b_d": [6, 12], "b_i": [6, 12], "back": [6, 12], "balconi": 1, "bar": [6, 12], "base": [6, 8, 12], "basi": [6, 12], "bathroom": 1, "bay": 1, "bayesian": [4, 6, 7, 8, 9, 14, 15], "bayesnet": [1, 6, 12, 14, 15], "been": [2, 9], "begin": [2, 6, 12, 15], "behaviour": 2, "being": [7, 9], "belief": 4, "benefit": [6, 12], "bernstein": [2, 8, 10, 11, 12, 13, 16], "bernsteincopula": 2, "bernsteincopulafactori": 7, "beta": [6, 7, 12], "between": [2, 4, 8, 9, 11], "bic": 16, "big": [6, 12, 17], "bigcap": [6, 12], "bigcap_": [6, 12], "biject": [6, 12], "bilater": [6, 12], "bin": [10, 12, 13], "binnumb": 12, "biologi": 1, "bivari": [6, 12], "bn": [1, 4, 6, 12, 14, 15], "bool": [6, 7, 8, 9, 12, 13, 14, 16], "boolean": [6, 12], "bootstrap": [7, 13], "bootstraps": [7, 13], "both": [1, 6, 12], "bound": [6, 12], "brent": [6, 12], "bright": [1, 17], "build": [1, 2, 4, 7, 12, 13], "buildascontinuousbayesiannetwork": 7, "buildasjunctiontreebernsteincopula": 13, "buildestim": [6, 7, 12, 13], "built": [4, 6, 7, 12, 13], "bytesio": 2, "c": [2, 4, 6, 12], "c_": [6, 12], "c_i": [6, 12], "cach": [10, 11], "call": [4, 6, 12], "can": [1, 2, 4, 6, 7, 12, 16], "cap": [6, 12], "cartesian": [6, 12], "case": [4, 6, 7, 12, 13], "categor": 1, "cbn": [2, 4, 6, 16], "cbrt": [6, 12], "cd": 4, "cdf": [6, 12], "cdfepsilon": [6, 12], "ce_x": [6, 12], "cell": [10, 12], "cellar": 1, "center": [6, 12], "central": [6, 12], "certain": [6, 12], "chang": [2, 8, 9, 10, 11, 16], "channel": 4, "characterist": [6, 12], "check": 4, "chi": [6, 12], "chi_l": [6, 12], "chib": [6, 12], "chil": [6, 12], "chilb": [6, 12], "children": 14, "choleski": [6, 12], "circl": [8, 9, 16], "cl": [6, 12], "class": [1, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "class_nam": [6, 7, 12, 13, 14], "claytoncopula": [6, 12], "clear": [10, 11], "clearcach": [10, 11], "clearcachelevel": 10, "cliqu": [9, 12, 15], "cliquegraph": 15, "cliquescollect": 12, "cliquesord": 12, "clone": 4, "close": [6, 12], "cluster": [10, 12], "cm": 1, "cmake": 4, "cmode": [8, 11, 16], "cmodetyp": [8, 11, 16], "cmodetypes_bernstein": 2, "cmodetypes_gaussian": 2, "co": [6, 12], "co_n": [6, 12], "code": [0, 1, 2], "coeffici": [6, 12], "collect": [2, 6, 12], "com": 4, "command": 4, "common": [6, 9, 12], "compar": 2, "complementari": [6, 12], "complet": [8, 9], "complex": [6, 12], "compon": [6, 12], "componentwis": [6, 12], "comput": [2, 6, 8, 10, 11, 12, 16, 17], "compute2ptcorrectedinform": 11, "compute3ptcorrectedinform": 11, "compute_mean_l": 2, "computebilateralconfidenceinterv": [6, 12], "computebilateralconfidenceintervalwithmarginalprob": [6, 12], "computecdf": [1, 6, 12], "computecdfgradi": [6, 12], "computecharacteristicfunct": [6, 12], "computecomplementarycdf": [6, 12], "computeconditionalcdf": [6, 12], "computeconditionalddf": [6, 12], "computeconditionalpdf": [6, 12], "computeconditionalquantil": [6, 12], "computeddf": [6, 12], "computeentropi": [6, 12], "computegeneratingfunct": [6, 12], "computeinversesurvivalfunct": [6, 12], "computelogcharacteristicfunct": [6, 12], "computeloggeneratingfunct": [6, 12], "computelogpdf": [2, 6, 12], "computelogpdfgradi": [6, 12], "computelowerextremaldependencematrix": [6, 12], "computelowertaildependencematrix": [6, 12], "computeminimumvolumeinterv": [6, 12], "computeminimumvolumeintervalwithmarginalprob": [6, 12], "computeminimumvolumelevelset": [6, 12], "computeminimumvolumelevelsetwiththreshold": [6, 12], "computepdf": [6, 12], "computepdfgradi": [6, 12], "computeprob": [6, 12], "computequantil": [6, 12], "computeradialdistributioncdf": [6, 12], "computescalarquantil": [6, 12], "computesequentialconditionalcdf": [6, 12], "computesequentialconditionalddf": [6, 12], "computesequentialconditionalpdf": [6, 12], "computesequentialconditionalquantil": [6, 12], "computesurvivalfunct": [6, 12], "computeunilateralconfidenceinterv": [6, 12], "computeunilateralconfidenceintervalwithmarginalprob": [6, 12], "computeupperextremaldependencematrix": [6, 12], "computeuppertaildependencematrix": [6, 12], "condit": [1, 2, 4, 6, 7, 8, 9, 10, 12, 13], "condition": [4, 9, 11], "confid": [6, 10, 12], "config": 4, "confint": [6, 12], "confinterv": [6, 12], "connect": 4, "consid": [6, 7, 12], "consist": [6, 8, 9, 12], "constrain": 9, "constraint": [2, 8, 9], "construct": 2, "constructor": [6, 12, 14, 15], "consum": [6, 12], "contain": [9, 10, 11], "continu": [1, 2, 6, 12, 17], "continuousbayesiannetwork": [2, 4, 7], "continuousbayesiannetworkfactori": 4, "continuousmi": [2, 4], "continuouspc": [2, 4, 7], "continuousttest": [2, 4], "contrain": 8, "convert": 17, "copula": [2, 4, 6, 7, 8, 10, 11, 12, 13, 16], "copulasampl": 12, "copulasfactori": 7, "core": [1, 2], "corner": [6, 12], "correct": [2, 8, 10, 11], "correctedmutualinform": [2, 4, 8, 16], "correl": [6, 12], "correlationmatrix": [2, 6, 12], "correspond": 12, "cosh": [6, 12], "cosin": [6, 12], "count": 12, "coupl": [6, 12], "cov": [6, 12], "covari": [6, 7, 12, 13], "covariancematrix": [6, 12], "cpdf": [6, 12], "cpt": 1, "creat": [1, 2, 4, 6, 8, 9, 12, 16], "create_png": 2, "cross": 11, "cset": [6, 12], "cubic": [6, 12], "cumul": [6, 12], "cup": [6, 12], "curv": [6, 12], "d": [2, 6, 7, 8, 9, 10, 11, 12, 13, 16, 17], "dag": [2, 4, 6, 8, 9, 11, 14, 16], "dark": 1, "data": [1, 2, 7, 8, 9, 10, 11, 12, 13, 16], "ddf": [6, 12], "declar": 1, "decomposit": 16, "dedic": [6, 12], "def": [1, 2], "default": [2, 6, 7, 12, 13], "defaultalpha": 7, "defaultbootstraps": [6, 12], "defaultmaximumconditioningsets": 7, "defaultpointnumb": [6, 12], "defin": [4, 6, 12, 17], "definit": [6, 12], "delta": [6, 12], "denot": [6, 12], "densiti": [6, 12], "dep": [6, 12], "depend": [4, 6, 12], "deriv": [6, 12], "describ": 12, "descript": [6, 9, 10, 11, 12, 15], "desir": 15, "detail": [4, 6, 8, 9, 12, 16], "determin": [6, 7, 12, 13], "deviat": [6, 12], "dfdtheta": [6, 12], "dfrac": [6, 12], "di": [6, 12], "dictionari": [6, 12], "die": 1, "diffeomorph": [6, 12], "differ": [1, 6, 7, 12, 13], "differenti": [6, 12], "digit": [6, 12], "dim": [1, 6, 17], "dim_lcc": 2, "dimens": [6, 7, 10, 11, 12], "dimension": [6, 12], "direct": [2, 4, 14], "directori": 4, "discontinu": [6, 12], "discrep": [6, 12], "discret": [1, 4, 6, 7, 12, 17], "discretizedvari": [1, 17], "dispers": [6, 12], "displai": [1, 2, 9, 11, 14], "dist": [6, 7, 12, 13, 17], "distribut": [1, 4, 6, 7, 12, 13, 17], "distributionfactori": [6, 7, 12], "distributionfactoryresult": [7, 13], "distributionimplement": [6, 12], "distributionparamet": [7, 13], "divid": [10, 12], "do": 2, "domain": [6, 12, 17], "domains": 1, "done": [2, 6, 12], "dot": [6, 9, 11, 12, 14], "dotstr": 2, "doubl": [1, 6, 12, 16], "download": [0, 1, 2], "draw": [6, 12], "drawcdf": [6, 12], "drawlogpdf": [6, 12], "drawlowerextremaldependencefunct": [6, 12], "drawlowertaildependencefunct": [6, 12], "drawmarginal1dcdf": [6, 12], "drawmarginal1dlogpdf": [6, 12], "drawmarginal1dpdf": [6, 12], "drawmarginal1dsurvivalfunct": [6, 12], "drawmarginal2dcdf": [6, 12], "drawmarginal2dlogpdf": [6, 12], "drawmarginal2dpdf": [6, 12], "drawmarginal2dsurvivalfunct": [6, 12], "drawpdf": [1, 6, 12], "drawquantil": [6, 12], "drawsurvivalfunct": [6, 12], "drawupperextremaldependencefunct": [6, 12], "drawuppertaildependencefunct": [6, 12], "dry": [1, 17], "due": [2, 6, 12], "duse_sphinx": 4, "e": [6, 12], "each": [2, 4, 6, 7, 8, 9, 10, 12], "edg": [2, 4, 8, 9, 15, 16], "effici": [4, 6, 12], "either": [6, 12, 17], "elif": 2, "ellipt": [6, 12], "empir": [10, 12], "empiricalbernsteincopula": 2, "empti": [6, 7, 11, 12, 13, 14], "encod": 6, "end": [1, 2, 6, 12, 15], "enter": 1, "entir": 16, "entropi": [6, 11, 12], "eqnarrai": [6, 12], "equal": [6, 7, 12], "equat": [6, 12], "equival": 9, "especi": [6, 12], "estim": [2, 4, 7, 12, 13], "evalu": [1, 6, 12], "even": [6, 12], "evid": 1, "exampl": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 17], "except": [1, 2, 6, 12], "execut": [3, 5], "exist": [4, 6, 12], "exp": [6, 12], "exp_ll": 2, "expect": [1, 6, 12], "exponenti": [6, 12], "extract": [4, 6, 10, 12], "extrem": [6, 12], "f": [2, 6, 12], "f_": [6, 12], "f_1": [6, 12], "f_2": [6, 12], "f_i": [6, 12], "f_x": [6, 12], "f_y": [6, 12], "factor": [6, 12], "factori": [7, 13], "fail": [1, 2], "fall": [6, 12], "fals": [2, 6, 12], "famili": [6, 12], "fastprototyp": [6, 12, 15], "featur": [6, 12], "fig": 2, "file": [3, 5], "final": [1, 2, 4, 9, 16], "find": [6, 12], "fine": 7, "finit": 2, "first": [2, 4, 6, 7, 12, 13], "firstmargin": [6, 12], "fisher": [7, 13], "fit": [6, 7, 12, 13], "fittedr": [6, 12], "fix": [2, 6, 10, 12], "flag": [6, 8, 9, 12, 16], "flat": [6, 12], "float": [6, 7, 8, 9, 10, 11, 12, 13, 16], "focus": 1, "follow": [1, 2, 4, 6, 7, 12], "foral": [6, 12], "forg": 4, "form": [6, 12], "format": [9, 11, 14], "found": 9, "fourth": [6, 12], "frac": [6, 12], "frankcopula": [6, 12], "from": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16], "frommargin": [1, 17], "frompotenti": [1, 17], "frontier": [6, 12], "full": [1, 2], "function": [2, 4, 6, 12, 17], "furthermor": 1, "g": [6, 12], "g_x": [6, 12], "galleri": [0, 1, 2, 5], "gauss": [6, 12], "gaussian": [2, 6, 8, 11, 12, 16], "gener": [0, 1, 2, 6, 12], "geq": [6, 12], "get": [1, 6, 12], "getalpha": [8, 10, 11], "getbestscor": 16, "getbinnumb": 12, "getbootstraps": [7, 13], "getcdfepsilon": [6, 12], "getcentralmo": [6, 12], "getchildren": 14, "getcholeski": [6, 12], "getclassnam": [6, 7, 12, 13, 14], "getcliqu": 15, "getcliquescollect": 15, "getcmod": 11, "getcopula": [2, 6, 12], "getcopulaatnod": 6, "getcopulasampl": 12, "getcorrel": [6, 12], "getcovari": [6, 12], "getdag": [6, 14], "getdatadescript": [10, 11], "getdescript": [1, 6, 12, 14, 15], "getdimens": [2, 6, 10, 11, 12], "getdispersionind": [6, 12], "getintegrationnodesnumb": [6, 12], "getinversecholeski": [6, 12], "getinverseisoprobabilistictransform": [6, 12], "getisoprobabilistictransform": [6, 12], "getk": [2, 10], "getkendalltau": [6, 12], "getkmod": 11, "getkurtosi": [6, 12], "getlatentvari": 8, "getmargin": [1, 2, 6, 12, 15], "getmaxpar": 16, "getmean": [6, 12], "getmoment": [6, 12], "getnam": [6, 7, 12, 13, 14], "getneighbour": 15, "getnod": 15, "getordermaxfirst": 15, "getpar": [2, 6, 14], "getparamet": [6, 12], "getparameterdescript": [6, 12], "getparameterdimens": [6, 12], "getparameterdistribut": [6, 12], "getparameterscollect": [6, 12], "getpdfepsilon": [6, 12], "getpearsoncorrel": [6, 12], "getpositionind": [6, 12], "getprob": [6, 12], "getpvalu": 9, "getrang": [6, 12], "getreal": [6, 12], "getrestart": 16, "getrough": [6, 12], "getsampl": [2, 6, 12], "getsamplebyinvers": [6, 12], "getsamplebyqmc": [6, 12], "getsepar": 15, "getseparatorscollect": 15, "getsepset": 9, "getsepsetnam": 9, "getshapematrix": [6, 12], "getshiftedmo": [6, 12], "getsingular": [6, 12], "getsiz": [2, 6, 11, 14, 15], "getskew": [6, 12], "getspearmancorrel": [6, 12], "getstandarddevi": [6, 12], "getstandarddistribut": [6, 12], "getstandardrepres": [6, 12], "getsupport": [6, 12], "gettopologicalord": 14, "gettrac": 9, "getttest": [9, 10], "getttestwithoutcorrect": 10, "getverbos": [8, 9, 16], "git": 4, "github": 4, "gitlab": 4, "give": [1, 4, 6, 9, 12], "given": [6, 10, 12], "gnb": [1, 2], "go": [1, 2], "gradient": [6, 12], "graph": [2, 4, 6, 8, 9, 11, 12, 14, 16], "graph2": [6, 12], "graph3": [6, 12], "graph_from_dot_data": 2, "graphic": [4, 6, 7, 12], "greater": 1, "grow": 1, "growth": [0, 3, 5, 17], "gum": [1, 2, 6, 8, 9, 12, 15, 17], "h": [1, 11], "h_dist": 1, "h_dist_dim": 1, "h_dist_wet": 1, "h_m_dist": 1, "ha": [1, 2, 6, 7, 9, 12], "happi": 1, "hasellipticalcopula": [6, 12], "hasindependentcopula": [6, 12], "hasnam": [6, 7, 12, 13, 14], "have": [1, 2, 6, 9, 12, 14, 16], "head": 8, "height": [1, 17], "height_dist": 17, "heightwhenbrightanddri": 1, "heightwhenbrightandwet": 1, "heightwhendimanddri": 1, "heightwhendimandwet": 1, "henc": [2, 6, 12], "here": 1, "hessian": [6, 12], "high": [6, 12], "histogram": 17, "histogramfactori": 7, "home": 1, "html": 1, "http": 4, "hybrid": 8, "hypercub": [10, 12], "hypothesi": [9, 10], "i": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17], "id": [8, 9, 10, 11, 14, 15], "ident": [6, 12], "idfromnam": 9, "ie": [1, 6, 7, 12, 15], "ij": [6, 12], "imagin": 1, "img": 2, "implement": [6, 12], "impli": [8, 9, 16], "import": [1, 2, 6, 7, 12, 13, 15, 17], "importerror": [1, 2], "imread": 2, "imshow": 2, "indep": [9, 10], "independ": [4, 6, 7, 9, 10, 12], "independeci": 9, "independentcopula": 2, "index": [4, 6, 12], "indexheight": 1, "indexlight": 1, "indexmoistur": 1, "indic": [2, 6, 7, 9, 12, 14, 15], "inf": [6, 12], "infer": 4, "influenc": 1, "info": 11, "inform": [1, 2, 7, 8, 11, 13], "infti": [6, 12], "initi": [7, 13, 16], "initial_dag": 16, "input": [4, 6, 7, 12, 13], "insid": [1, 6, 12], "instanc": 1, "int": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "int_": [6, 12], "integ": [6, 12], "integr": [6, 12], "integrationnodesnumb": [6, 12], "interest": [4, 6, 12], "interfac": 15, "interior": [6, 12], "interquartil": [6, 12], "intersect": [6, 9, 12], "interv": [6, 12], "invari": [6, 12], "invers": [6, 7, 12, 13], "involv": 12, "io": 2, "ipynb": [1, 2], "ipython": [1, 2], "iscontinu": [6, 12], "iscopula": [6, 12], "iscopulasampl": 12, "isdiscret": [6, 12], "isellipt": [6, 12], "isempiricalcopulasampl": 12, "isindep": 10, "isindepfromtest": 10, "isintegr": [6, 12], "iso": [6, 12], "iso_lin": [6, 12], "isoprobabilist": [6, 12], "isremov": 9, "its": [1, 6, 7, 8, 10, 12, 13], "j": [2, 6, 12], "jag": 1, "joint": [1, 6], "jointdistribut": [6, 12], "jointposterior": 1, "jt": [12, 15], "jtagr": [12, 15], "junction": [9, 12, 13, 15], "junctiontre": [12, 15], "junctiontreebernsteincopula": [4, 13], "junctiontreebernsteincopulafactori": 4, "jupyt": [0, 1, 2], "k": [2, 6, 10, 12], "kappa": [6, 12], "kei": [2, 7], "kendal": [6, 12], "kernel": [7, 13], "kernelsmooth": [7, 13], "kind": [1, 2], "kmode": [8, 11], "kmodetyp": 11, "kmodetypes_na": 2, "kmodetypes_nocorr": 2, "know": 1, "knowledg": 8, "known": [6, 12], "kurtosi": [6, 12], "kwarg": 17, "l": [6, 12], "l_dist_wet": 1, "label": 1, "labelizedvari": [1, 17], "lambda": [6, 12], "lambda_i": [6, 12], "largest": 15, "last": [6, 12], "latent": 8, "lazypropag": [1, 12, 15], "lcbn": 2, "lcc_list": 2, "ldot": [6, 12], "lead": 2, "learn": [2, 4, 7, 8, 9, 16], "learndag": [2, 8, 9, 16], "learner": [2, 8, 9, 16], "learnjunctiontre": 9, "learnpdag": [2, 8, 9], "learnskeleton": [2, 8, 9], "learnt": 7, "least": [1, 6, 12], "lebesgu": [6, 12], "left": [6, 12, 17], "len": 2, "leq": [6, 12, 17], "let": [1, 6, 12], "level": [6, 10, 12], "levelset": [6, 12], "lg": [6, 12], "li": [6, 12], "lib": [1, 2], "librari": 4, "light": [1, 17], "like": [1, 6, 12], "likelihood": [7, 13], "lim_": [6, 12], "limits_": [6, 12], "line": [6, 12], "linear": [6, 12], "link": [1, 4, 9], "linv": [6, 12], "list": [2, 6, 10, 11, 12, 14, 15, 16], "live": 1, "ll": 2, "ln": [6, 12], "local": [2, 4, 6, 7, 12], "log": [6, 12], "logarithm": [6, 12], "loglikelihood": 2, "logpdf": [6, 10, 12], "logscal": [6, 12], "logscalei": [6, 12], "logscalex": [6, 12], "look": [2, 9], "lot": [8, 9, 16], "low": [6, 12], "lower": [6, 12], "lowercorn": [6, 12], "m": [1, 6, 12], "m_list": 2, "made": [6, 12], "mainli": 1, "make": [2, 4], "makeinfer": 1, "manipul": 4, "map": [2, 6, 12], "mapsto": [6, 12], "margin": [2, 4, 6, 7, 12, 15], "marginalindex": [6, 12], "marginalprob": [6, 12], "marginalsfactori": 7, "marri": 1, "mat": [6, 12], "mathbb": [6, 12], "mathemat": [6, 12], "matplotlib": [1, 2], "matrix": [6, 7, 12, 13], "max": [1, 6, 12], "max_par": 16, "maxconditioningsets": 9, "maximum": [7, 9, 13, 16], "maximumconditioningsets": [7, 13], "maximumdiscretesupport": 7, "maxpar": 7, "mb": [3, 5], "mean": [2, 6, 7, 12], "measur": [6, 12], "median": [6, 12], "mem": [1, 3, 5], "member": [6, 12], "mesh": [6, 12], "meteorolog": 1, "method": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "metric": [6, 12], "mid": [6, 12], "might": [1, 6, 12], "miic": [2, 8], "min": [1, 6, 12], "minimum": [6, 12], "minimumvolumelevelsetsamplings": [6, 12], "minut": [1, 2], "mixedgraph": [2, 8, 9], "mixedhistogramuserdefin": 17, "mkdir": 4, "mod": 1, "mode": [8, 11], "model": [1, 2, 4, 7, 8, 11, 12, 13, 16], "modul": 4, "modulu": [6, 12], "moist": 1, "moistur": [1, 17], "moment": [6, 7, 12, 13], "moral": 9, "more": [1, 4, 6, 12], "moreov": [2, 16], "most": [6, 12], "mu": [1, 6, 12], "mu_i": [6, 12], "multivari": [6, 12, 17], "must": [6, 12], "mutual": [2, 8, 11], "my": 1, "n": [2, 6, 9, 12, 17], "n_paramet": [6, 12], "nabla": [6, 12], "naiv": [2, 8, 11], "name": [1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], "nameddag": [2, 4, 6, 7, 8, 9, 16], "namedjunctiontre": [4, 9, 12], "nataf": [6, 12], "nativ": [6, 7, 12, 13], "natur": [6, 12], "nbbin": 13, "ndag": [2, 6, 7], "necessari": 4, "need": [2, 4], "neg": 8, "neighbor": 9, "neighbour": 15, "neq": [6, 12], "net": 1, "network": [4, 6, 7, 8, 9, 14, 15], "new": [1, 4, 7, 8, 9, 10, 13, 16], "next": [1, 4], "njt": [9, 15], "nocorr": [2, 8, 11], "nod": [14, 15], "nod1": 15, "nod2": 15, "node": [1, 2, 4, 6, 8, 9, 10, 11, 14, 15, 16], "node1": 15, "node2": 15, "nodeid": 6, "non": [2, 6, 12], "none": 1, "nonparametr": 12, "nonzero": [6, 12], "norm": [6, 12], "normal": [1, 2, 6, 7, 12, 13, 17], "normalcopulafactori": 7, "normalfactori": [6, 7, 12], "note": [6, 7, 8, 9, 11, 12, 13, 16], "notebook": [0, 1, 2], "now": [1, 2], "npoint": [6, 12], "number": [6, 7, 10, 12, 13, 14, 15, 16], "numer": [6, 12], "object": [1, 2, 6, 7, 12, 13, 14], "obtain": [6, 8, 12], "off": 2, "offer": 4, "one": [1, 6, 8, 12, 15, 17], "onli": [6, 7, 12], "openturn": [1, 2, 4, 6, 7, 9, 12, 13, 14, 15, 17], "option": [6, 7, 9, 12, 13], "order": [1, 6, 9, 12, 14, 15], "orient": [2, 8, 9, 16], "orthonorm": [6, 12], "ot": [1, 2, 6, 7, 12, 17], "otagrum": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "other": [4, 6, 7, 12, 13, 15], "otherwis": [6, 12], "out": 1, "outsid": [1, 2, 6, 12], "over": [6, 12, 16], "p": [1, 6, 7, 9, 10, 12, 17], "p_": [6, 12], "p_1": [6, 12], "p_i": [6, 12, 17], "p_j": [6, 12], "p_valu": 9, "p_x": [6, 12], "packag": 1, "page": 4, "param": [7, 13], "paramdist": [6, 12], "paramet": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "parameter": [4, 6], "parametr": [2, 6, 7, 12, 13], "parent": [4, 6, 7, 14, 16], "part": [6, 12], "partial": [2, 6, 12], "particular": [1, 4], "pass": 1, "pc": [2, 9], "pdag": [2, 8, 9, 11, 16], "pdagtodot": 9, "pdf": [6, 12], "pdfepsilon": [6, 12], "pearson": [6, 12], "perform": 4, "phi": [6, 12], "phi_2": [6, 12], "phi_x": [6, 12], "place": 1, "plain": 1, "plant": [0, 3, 5, 17], "plot": [6, 12], "plot_plant_growth": [1, 3, 5], "plot_using_otagrum": [2, 3, 5], "plt": [1, 2], "pm": 1, "point": [6, 8, 11, 12], "pointnbrind": [6, 12], "pointnumb": [6, 12], "pointwithdescript": [6, 12], "polynomi": [6, 12], "posit": [6, 12], "possibli": 11, "posterior": 1, "pot": [1, 17], "potenti": 17, "precis": [6, 12], "predict": 1, "present": [1, 6, 12], "preserv": [6, 12], "print": [1, 2, 8, 9, 16], "prior": 8, "prob": [6, 12, 17], "probabilist": [4, 6, 12], "probabl": [1, 4, 6, 12, 17], "problem": [1, 6, 12], "procedur": [8, 9, 16], "process": 7, "prod_": [6, 12], "product": [6, 12], "prohibit": 1, "propag": [2, 8, 9], "properti": [6, 12], "provid": [2, 4, 7], "pseudo": [6, 12], "psi": [6, 12], "purpos": 1, "put": 1, "py": [1, 2, 3, 5, 6], "pyagrum": [1, 2, 4, 6, 8, 9, 11, 12, 14, 15, 17], "pydot": 2, "pylab": [1, 2], "python": [0, 1, 2], "python3": 1, "q": [6, 12], "qmax": [6, 12], "qmin": [6, 12], "qquad": [6, 12], "quad": [6, 12], "qualiti": [1, 17], "quantif": 1, "quantifi": 1, "quantil": [6, 12], "quantiti": 1, "r": [2, 6, 12], "r2": [6, 12], "r_": [6, 12], "radiu": [6, 12], "random": [2, 4, 6, 12, 16], "randomgener": [2, 6, 12], "rang": [1, 2, 6, 12], "rank": [6, 12], "rate": 1, "raw": [2, 10], "rcl": [6, 12], "reach": 1, "realis": [6, 12], "realiz": [6, 12], "reason": 1, "recov": 2, "rectangular": [6, 12], "recurs": [6, 12], "reduc": [6, 12], "refer": [1, 6, 12], "region": [6, 12], "regular": [7, 13], "relat": 11, "releas": 4, "reli": [2, 8], "reload": [6, 12], "remain": [2, 8, 9, 16], "remembr": 1, "remov": [8, 9], "repo": 4, "repositori": 4, "repres": [4, 6, 12, 14], "represent": [6, 9, 11, 12], "request": [6, 12], "requir": 1, "resdist": [7, 13], "resort": [6, 12], "resourcemap": [6, 7, 12], "respect": [6, 12], "restart": 16, "result": [7, 10, 13, 17], "return": [2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "rho": [6, 12], "rho_": [6, 12], "right": [6, 12, 17], "rightarrow": [6, 12], "risk": 1, "root": [6, 12], "rosenblatt": [6, 12], "rotat": [6, 12], "rough": [6, 12], "round": [6, 12], "rset": [6, 12], "run": [1, 2, 4, 6, 12], "s_": [6, 12], "s_i": [6, 12], "said": [6, 12], "same": [6, 12], "sampl": [2, 6, 7, 10, 12, 13], "satisfi": [6, 12], "scalar": [6, 12], "scale": [6, 12], "scope": 6, "score": [8, 16], "script": [1, 2], "search": [4, 8, 9], "second": [1, 2, 6, 12], "secondmargin": [6, 12], "section": [0, 1], "see": [6, 7, 12, 13], "seed": 2, "seek": 2, "select": [6, 12], "sep_set": 9, "separ": [9, 12, 15], "separatorscollect": 12, "sepset": 9, "sepset_nam": 9, "sequenc": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "sequenti": [6, 12], "set": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13], "setalpha": [2, 8, 10, 11], "setasunsignedinteg": [6, 12], "setbootstraps": [7, 13], "setcliquesord": 12, "setcmod": [2, 8, 11, 16], "setcopulasampl": 12, "setdagandmarginalsandcopula": 6, "setdescript": [1, 6, 12], "setevid": 1, "setintegrationnodesnumb": [6, 12], "setkmod": [2, 8, 11], "setlegend": [6, 12], "setnam": [6, 7, 12, 13, 14], "setparamet": [6, 12], "setparameterscollect": [6, 12], "setse": 2, "setverbos": [8, 9, 16], "sever": 1, "shape": [6, 12], "share": 9, "shift": [6, 12], "should": 7, "show": [1, 2, 6, 12], "showdot": 2, "showpotenti": 1, "sigma": [1, 6, 12], "sigma_": [6, 12], "sigma_i": [6, 12], "sigma_j": [6, 12], "signific": [6, 12], "sim": [6, 12], "simeq": [6, 12], "simpli": [6, 12], "simul": [6, 12], "sin": [6, 12], "sine": [6, 12], "singular": [6, 12], "sinh": [6, 12], "site": 1, "situat": 1, "size": [2, 6, 7, 10, 11, 12, 13, 14, 15, 16], "skeleton": [2, 8, 9, 11], "skeletontodot": 9, "skew": [6, 12], "smallest": [6, 12], "so": [1, 2, 6, 12], "sobol": [6, 12], "solv": [6, 12], "some": [1, 6, 12], "sourc": [0, 1, 2], "space": 12, "spearman": [6, 12], "specif": [6, 12], "specifi": [1, 6, 7, 10, 12, 13], "spheric": [6, 12], "sphinx": [0, 1, 2], "sqr": [6, 12], "sqrt": [6, 12], "squar": [6, 12], "standard": [6, 12], "standard_distribut": [6, 12], "standarddistributionpolynomialfactori": [6, 12], "start": [6, 8, 9, 12, 16], "static": [10, 17], "statist": [1, 9, 10], "std_repr_dist": [6, 12], "step": [1, 8, 9, 16], "str": [6, 7, 8, 9, 11, 12, 13, 14, 17], "strictli": [6, 12], "structur": [2, 6, 7, 8, 9, 12, 16], "studi": 1, "sub": 12, "subset": 9, "subtract": 2, "suffer": 1, "sum": [6, 12], "summari": 9, "sup": [6, 12], "supp": [6, 12], "support": [6, 12], "surviv": [6, 12], "survivalfunct": [6, 12], "svg": 2, "symetri": [6, 12], "t": [2, 6, 9, 10, 12], "t_": 17, "t_i": 17, "tabl": [1, 17], "tabu": 16, "tabu_list_s": 16, "tabulist": 4, "tail": [6, 8, 12], "take": [4, 9], "taken": [6, 12], "tan": [6, 12], "tangent": [6, 12], "tanh": [6, 12], "target": [6, 12, 15], "tau": [6, 12], "tell": [6, 12], "term": [6, 12], "test": [2, 6, 7, 9, 10, 12, 13, 14], "th": [6, 12], "than": 1, "thank": 1, "thei": 1, "theoret": 8, "theta": [6, 12], "thi": [0, 1, 2, 4, 6, 8, 9, 12, 16], "third": [6, 12], "those": 2, "three": [8, 9, 11], "threshold": [6, 7, 9, 10, 12, 13], "through": 2, "throughout": 2, "thu": [6, 12], "tick": [1, 17], "time": [1, 2, 6, 12], "tinv": [6, 12], "todot": [2, 14], "too": 1, "tool": 1, "topolog": 14, "total": [1, 2, 3, 5], "tr": [6, 12], "trace": 9, "train": [1, 2], "transform": [6, 7, 12, 13], "travers": 12, "tree": [9, 12, 13, 15], "triangul": 9, "triangular": 1, "triangularmatrix": [6, 12], "triplet": [8, 9], "tropic": 1, "true": [2, 6, 7, 8, 9, 12, 13, 14, 16], "true_ll": 2, "try": [1, 2], "ttest": [9, 10], "tune": 7, "tupl": 10, "two": [2, 9], "u": [1, 6, 11, 12], "u_i": [6, 12], "unbound": [6, 12], "under": [6, 12], "underli": [6, 7, 10, 11, 12, 14], "undigraph": [2, 8, 9, 11], "undirect": [2, 8, 9, 16], "uniform": [1, 2, 6, 12], "uniformfactori": 2, "unilater": [6, 12], "uniqu": [6, 12], "unit": [6, 10, 12], "univari": [6, 7, 12, 17], "unless": [8, 9, 16], "unus": 6, "upper": [6, 12], "uppercorn": [6, 12], "us": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 16, 17], "usag": [7, 13], "use_sphinx": 4, "usebetafactori": 7, "userdefin": [1, 17], "userwarn": 1, "usr": 1, "usual": 1, "util": [1, 4], "v": [2, 8, 9, 16, 17], "valid": [6, 12], "valu": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 16], "var": [6, 8, 12], "variabl": [1, 4, 6, 8, 9, 10, 11, 12, 14, 15, 17], "varianc": [6, 12], "variat": 1, "vect": [6, 12], "vector": [6, 12], "verbos": [8, 9, 16], "veri": 1, "verifi": [6, 12], "via": 4, "view": [1, 6, 12], "viewer": [1, 6, 12], "volum": [6, 12], "wa": 9, "wai": [7, 13], "want": 4, "warn": 1, "we": [1, 2, 6, 9, 12], "well": [1, 6, 12], "were": 1, "wet": [1, 17], "what": 1, "when": [1, 6, 8, 11, 12], "where": [1, 4, 6, 12, 17], "whether": [6, 9, 12], "which": [1, 2, 4, 6, 8, 9, 10, 12], "while": [6, 12], "whithin": 1, "whose": 14, "without": 10, "workincopulaspac": 7, "write": [2, 6, 12], "x": [1, 6, 8, 9, 10, 11, 12, 17], "x_": [6, 12], "x_0": [6, 12], "x_1": [6, 12], "x_d": [6, 12], "x_i": [6, 12], "x_j": [6, 12], "x_max": [6, 12], "x_min": [6, 12], "x_p": [6, 12], "xcond": [6, 12], "xd": [6, 12], "xj": [6, 12], "xmax": [6, 12], "xmin": [6, 12], "xp": [6, 12], "y": [6, 8, 9, 10, 11, 12], "y_": [6, 12], "y_i": [6, 12], "ye": 4, "yet": [1, 6, 12], "you": 4, "z": [6, 8, 9, 10, 11, 12], "zero": [6, 12], "zip": 0}, "titles": ["Examples", "Plant growth", "Using otagrum", "Computation times", "OTAgrum documentation", "Computation times", "ContinuousBayesianNetwork", "ContinuousBayesianNetworkFactory", "ContinuousMIIC", "ContinuousPC", "ContinuousTTest", "CorrectedMutualInformation", "JunctionTreeBernsteinCopula", "JunctionTreeBernsteinCopulaFactory", "NamedDAG", "NamedJunctionTree", "TabuList", "Utils", "API"], "titleterms": {"api": 18, "comput": [3, 5], "conda": 4, "continuousbayesiannetwork": 6, "continuousbayesiannetworkfactori": 7, "continuousmi": 8, "continuouspc": 9, "continuousttest": 10, "correctedmutualinform": 11, "document": 4, "exampl": 0, "growth": 1, "how": 4, "i": 4, "indic": 4, "instal": 4, "introduct": 4, "junctiontreebernsteincopula": 12, "junctiontreebernsteincopulafactori": 13, "linux": 4, "manual": 4, "nameddag": 14, "namedjunctiontre": 15, "otagrum": [2, 4], "plant": 1, "tabl": 4, "tabulist": 16, "time": [3, 5], "us": 2, "user": 4, "util": 17, "what": 4}})