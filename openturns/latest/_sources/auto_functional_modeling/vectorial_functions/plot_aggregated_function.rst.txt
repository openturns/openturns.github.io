
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_functional_modeling/vectorial_functions/plot_aggregated_function.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_functional_modeling_vectorial_functions_plot_aggregated_function.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_functional_modeling_vectorial_functions_plot_aggregated_function.py:


Create an aggregated function
=============================

.. GENERATED FROM PYTHON SOURCE LINES 7-12

In this example we are going to build a function that stacks all the outputs from several functions

.. math::
   f = (f_1, \dots, f_n)


.. GENERATED FROM PYTHON SOURCE LINES 14-18

.. code-block:: Python

    import openturns as ot

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 19-20

assume a list of functions to aggregate

.. GENERATED FROM PYTHON SOURCE LINES 20-26

.. code-block:: Python

    functions = list()
    functions.append(ot.SymbolicFunction(["x1", "x2", "x3"], ["x1^2 + x2", "x1 + x2 + x3"]))
    functions.append(
        ot.SymbolicFunction(["x1", "x2", "x3"], ["x1 + 2 * x2 + x3", "x1 + x2 - x3"])
    )








.. GENERATED FROM PYTHON SOURCE LINES 27-28

create the aggregated function

.. GENERATED FROM PYTHON SOURCE LINES 28-30

.. code-block:: Python

    function = ot.AggregatedFunction(functions)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

evaluate the function

.. GENERATED FROM PYTHON SOURCE LINES 32-35

.. code-block:: Python

    x = [1.0, 2.0, 3.0]
    y = function(x)
    print("x=", x, "y=", y)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    x= [1.0, 2.0, 3.0] y= [3,6,8,0]





.. _sphx_glr_download_auto_functional_modeling_vectorial_functions_plot_aggregated_function.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_aggregated_function.ipynb <plot_aggregated_function.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_aggregated_function.py <plot_aggregated_function.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_aggregated_function.zip <plot_aggregated_function.zip>`
