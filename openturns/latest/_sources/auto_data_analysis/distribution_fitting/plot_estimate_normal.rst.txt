
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_data_analysis/distribution_fitting/plot_estimate_normal.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_data_analysis_distribution_fitting_plot_estimate_normal.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_data_analysis_distribution_fitting_plot_estimate_normal.py:


Fit a parametric distribution
=============================

.. GENERATED FROM PYTHON SOURCE LINES 10-15

In this example we estimate the parameters of a distribution from a given sample.
Once we are settled on a good candidate, we use the corresponding factory to fit
the distribution. Each distribution factory has one or several estimators available.
They are all derived from either the Maximum Likelihood method or from the method of moments (see :ref:`parametric_estimation`).


.. GENERATED FROM PYTHON SOURCE LINES 17-21

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pyplot as plt








.. GENERATED FROM PYTHON SOURCE LINES 22-27

The Normal distribution
-----------------------

The parameters are estimated by the method of moments.


.. GENERATED FROM PYTHON SOURCE LINES 29-30

We consider a sample, here created from a standard :class:`~openturns.Normal` distribution :

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: Python

    sample = ot.Normal().getSample(1000)








.. GENERATED FROM PYTHON SOURCE LINES 33-34

We can estimate a Normal distribution with :class:`~openturns.NormalFactory` :

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: Python

    distribution = ot.NormalFactory().build(sample)








.. GENERATED FROM PYTHON SOURCE LINES 37-38

We take a look at the estimated parameters with the `getParameter` method :

.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: Python

    print(distribution.getParameter())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [0.00679743,0.980133]




.. GENERATED FROM PYTHON SOURCE LINES 41-42

We draw the fitted distribution

.. GENERATED FROM PYTHON SOURCE LINES 42-46

.. code-block:: Python

    graph = distribution.drawPDF()
    graph.setTitle("Fitted Normal distribution")
    view = viewer.View(graph)




.. image-sg:: /auto_data_analysis/distribution_fitting/images/sphx_glr_plot_estimate_normal_001.svg
   :alt: Fitted Normal distribution
   :srcset: /auto_data_analysis/distribution_fitting/images/sphx_glr_plot_estimate_normal_001.svg
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 47-52

The Student distribution
------------------------

The parameters of the Student law are estimated by a mixed method of moments and reduces MLE.


.. GENERATED FROM PYTHON SOURCE LINES 54-55

We generate a sample from a :class:`~openturns.Student` distribution with parameters :math:`\nu=5.0`, :math:`\mu = -0.5` and a scale parameter :math:`\sigma=2.0`.

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    sample = ot.Student(5.0, -0.5, 2.0).getSample(1000)








.. GENERATED FROM PYTHON SOURCE LINES 58-59

We use the factory to build an estimated distribution :

.. GENERATED FROM PYTHON SOURCE LINES 59-61

.. code-block:: Python

    distribution = ot.StudentFactory().build(sample)








.. GENERATED FROM PYTHON SOURCE LINES 62-63

We can obtain the estimated parameters with the `getParameter` method :

.. GENERATED FROM PYTHON SOURCE LINES 63-66

.. code-block:: Python

    print(distribution.getParameter())






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [4.90307,-0.634589,1.85743]




.. GENERATED FROM PYTHON SOURCE LINES 67-68

Draw fitted distribution

.. GENERATED FROM PYTHON SOURCE LINES 68-72

.. code-block:: Python

    graph = distribution.drawPDF()
    graph.setTitle("Fitted Student distribution")
    view = viewer.View(graph)




.. image-sg:: /auto_data_analysis/distribution_fitting/images/sphx_glr_plot_estimate_normal_002.svg
   :alt: Fitted Student distribution
   :srcset: /auto_data_analysis/distribution_fitting/images/sphx_glr_plot_estimate_normal_002.svg
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 73-78

The Pareto distribution
-----------------------

By default the parameters of the :class:`~openturns.Pareto` distribution are estimated by least squares.


.. GENERATED FROM PYTHON SOURCE LINES 80-81

We use a sample from a Pareto distribution with a scale parameter :math:`\beta=1.0`, a shape parameter :math:`\alpha > 1.0` and a location parameter :math:`\gamma = 0.0`.

.. GENERATED FROM PYTHON SOURCE LINES 81-83

.. code-block:: Python

    sample = ot.Pareto(1.0, 1.0, 0.0).getSample(1000)








.. GENERATED FROM PYTHON SOURCE LINES 84-85

Draw fitted distribution

.. GENERATED FROM PYTHON SOURCE LINES 85-95

.. code-block:: Python

    distribution = ot.ParetoFactory().build(sample)

    print(distribution.getParameter())

    graph = distribution.drawPDF()
    graph.setTitle("Fitted Pareto distribution")
    view = viewer.View(graph)


    plt.show()



.. image-sg:: /auto_data_analysis/distribution_fitting/images/sphx_glr_plot_estimate_normal_003.svg
   :alt: Fitted Pareto distribution
   :srcset: /auto_data_analysis/distribution_fitting/images/sphx_glr_plot_estimate_normal_003.svg
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [0.657018,0.861117,0.348716]





.. _sphx_glr_download_auto_data_analysis_distribution_fitting_plot_estimate_normal.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_estimate_normal.ipynb <plot_estimate_normal.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_estimate_normal.py <plot_estimate_normal.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_estimate_normal.zip <plot_estimate_normal.zip>`
