
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/random_vectors/plot_python_randomvector.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_random_vectors_plot_python_randomvector.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_random_vectors_plot_python_randomvector.py:


Create a random vector
======================

.. GENERATED FROM PYTHON SOURCE LINES 6-14

In this example we are going to create a distribution or copula.

The way to go is inheriting the PythonRandomVector class and overload its methods:

- getRealization
- getSample
- getMean
- getCovariance

.. GENERATED FROM PYTHON SOURCE LINES 16-21

.. code-block:: default

    import openturns as ot

    ot.Log.Show(ot.Log.NONE)









.. GENERATED FROM PYTHON SOURCE LINES 22-23

Inherit PythonRandomVector

.. GENERATED FROM PYTHON SOURCE LINES 23-47

.. code-block:: default

    class RVEC(ot.PythonRandomVector):
        def __init__(self):
            super(RVEC, self).__init__(2)
            self.setDescription(["R", "S"])

        def getRealization(self):
            X = [ot.RandomGenerator.Generate(), 2.0 + ot.RandomGenerator.Generate()]
            return X

        def getSample(self, size):
            X = []
            for i in range(size):
                X.append(
                    [ot.RandomGenerator.Generate(), 2.0 + ot.RandomGenerator.Generate()]
                )
            return X

        def getMean(self):
            return [0.5, 2.5]

        def getCovariance(self):
            return [[1.0, 0.0], [0.0, 1.0]]









.. GENERATED FROM PYTHON SOURCE LINES 48-49

Instantiate our distribution

.. GENERATED FROM PYTHON SOURCE LINES 49-51

.. code-block:: default

    randomVector = ot.RandomVector(RVEC())








.. GENERATED FROM PYTHON SOURCE LINES 52-53

Get a sample

.. GENERATED FROM PYTHON SOURCE LINES 53-55

.. code-block:: default

    randomVector.getSample(5)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>v0</TH><TH>v1</TH></TR>
    <TR><TH>0</TH><TD>0.5487328</TD><TD>2.274968</TD></TR>
    <TR><TH>1</TH><TD>0.9045159</TD><TD>2.863349</TD></TR>
    <TR><TH>2</TH><TD>0.05826365</TD><TD>2.59874</TD></TR>
    <TR><TH>3</TH><TD>0.5172324</TD><TD>2.836237</TD></TR>
    <TR><TH>4</TH><TD>0.2992355</TD><TD>2.759111</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 56-57

Get mean

.. GENERATED FROM PYTHON SOURCE LINES 57-59

.. code-block:: default

    randomVector.getMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[0.5,2.5]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 60-61

Compute the probability contained in an interval

.. GENERATED FROM PYTHON SOURCE LINES 61-62

.. code-block:: default

    randomVector.getCovariance()





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[[ 1 0 ]<br>
     [ 0 1 ]]</p>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.002 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_random_vectors_plot_python_randomvector.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_python_randomvector.py <plot_python_randomvector.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_python_randomvector.ipynb <plot_python_randomvector.ipynb>`
