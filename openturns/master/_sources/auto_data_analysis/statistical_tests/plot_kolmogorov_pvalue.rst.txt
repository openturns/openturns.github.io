
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_data_analysis/statistical_tests/plot_kolmogorov_pvalue.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_data_analysis_statistical_tests_plot_kolmogorov_pvalue.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_data_analysis_statistical_tests_plot_kolmogorov_pvalue.py:


Kolmogorov-Smirnov : understand the p-value
===========================================

.. GENERATED FROM PYTHON SOURCE LINES 7-13

In this example, we illustrate the calculation of the Kolmogorov-Smirnov (KS) p-value.

* We generate a sample from a Gaussian distribution.
* We create a uniform distribution with known parameters.
* The Kolmogorov-Smirnov statistics is computed and plot on the empirical cumulated distribution function.
* We plot the p-value as the area under the part of the curve exceeding the observed statistics.

.. GENERATED FROM PYTHON SOURCE LINES 15-21

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 22-23

We generate a sample from a standard Gaussian distribution.

.. GENERATED FROM PYTHON SOURCE LINES 25-29

.. code-block:: Python

    dist = ot.Normal()
    samplesize = 10
    sample = dist.getSample(samplesize)








.. GENERATED FROM PYTHON SOURCE LINES 30-33

.. code-block:: Python

    testdistribution = ot.Normal()
    result = ot.FittingTest.Kolmogorov(sample, testdistribution, 0.01)








.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: Python

    pvalue = result.getPValue()
    pvalue





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    0.2839491968257861



.. GENERATED FROM PYTHON SOURCE LINES 38-41

.. code-block:: Python

    KSstat = result.getStatistic()
    KSstat





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    0.29619142429563383



.. GENERATED FROM PYTHON SOURCE LINES 42-43

Compute exact Kolmogorov PDF.

.. GENERATED FROM PYTHON SOURCE LINES 45-46

Create a function which returns the CDF given the KS distance.

.. GENERATED FROM PYTHON SOURCE LINES 49-54

.. code-block:: Python

    def pKolmogorovPy(x):
        y = ot.DistFunc.pKolmogorov(samplesize, x[0])
        return [y]









.. GENERATED FROM PYTHON SOURCE LINES 55-58

.. code-block:: Python

    pKolmogorov = ot.PythonFunction(1, 1, pKolmogorovPy)









.. GENERATED FROM PYTHON SOURCE LINES 59-60

Create a function which returns the KS PDF given the KS distance: use the `gradient` method.

.. GENERATED FROM PYTHON SOURCE LINES 63-67

.. code-block:: Python

    def kolmogorovPDF(x):
        return pKolmogorov.gradient(x)[0, 0]









.. GENERATED FROM PYTHON SOURCE LINES 68-82

.. code-block:: Python

    def dKolmogorov(x):
        """
        Compute Kolmogorov PDF for given x.
        x : a Sample, the points where the PDF must be evaluated
        Reference
        Numerical Derivatives in Scilab, Michael Baudin, May 2009
        """
        n = x.getSize()
        y = ot.Sample(n, 1)
        for i in range(n):
            y[i, 0] = kolmogorovPDF(x[i])
        return y









.. GENERATED FROM PYTHON SOURCE LINES 83-92

.. code-block:: Python

    def linearSample(xmin, xmax, npoints):
        """Returns a sample created from a regular grid
        from xmin to xmax with npoints points."""
        step = (xmax - xmin) / (npoints - 1)
        rg = ot.RegularGrid(xmin, step, npoints)
        vertices = rg.getVertices()
        return vertices









.. GENERATED FROM PYTHON SOURCE LINES 93-98

.. code-block:: Python

    n = 1000  # Number of points in the plot
    s = linearSample(0.001, 0.999, n)
    y = dKolmogorov(s)









.. GENERATED FROM PYTHON SOURCE LINES 99-100

Create a regular grid starting from the observed KS statistics.

.. GENERATED FROM PYTHON SOURCE LINES 102-105

.. code-block:: Python

    nplot = 100
    x = linearSample(KSstat, 0.6, nplot)








.. GENERATED FROM PYTHON SOURCE LINES 106-107

Compute the bounds to fill: the lower vertical bound is 0 and the upper vertical bound is the KS PDF.

.. GENERATED FROM PYTHON SOURCE LINES 109-112

.. code-block:: Python

    vLow = [0.0] * nplot
    vUp = [pKolmogorov.gradient(x[i])[0, 0] for i in range(nplot)]








.. GENERATED FROM PYTHON SOURCE LINES 113-135

.. code-block:: Python

    boundsPoly = ot.Polygon.FillBetween(x.asPoint(), vLow, vUp)
    boundsPoly.setLegend("pvalue = %.4f" % (pvalue))
    curve = ot.Curve(s, y)
    curve.setLegend("Exact distribution")
    curveStat = ot.Curve([KSstat, KSstat], [0.0, kolmogorovPDF([KSstat])])
    curveStat.setColor("red")
    curveStat.setLegend("KS-statistics = %.4f" % (KSstat))
    graph = ot.Graph(
        "Kolmogorov-Smirnov distribution (known parameters)",
        "KS-Statistics",
        "PDF",
        True,
        "upper right",
    )
    graph.setLegends(["Empirical distribution"])
    graph.add(curve)
    graph.add(curveStat)
    graph.add(boundsPoly)
    graph.setTitle("Kolmogorov-Smirnov distribution (known parameters)")
    view = viewer.View(graph)
    plt.show()




.. image-sg:: /auto_data_analysis/statistical_tests/images/sphx_glr_plot_kolmogorov_pvalue_001.png
   :alt: Kolmogorov-Smirnov distribution (known parameters)
   :srcset: /auto_data_analysis/statistical_tests/images/sphx_glr_plot_kolmogorov_pvalue_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 136-138

We observe that the p-value is the area of the curve which corresponds to
the KS distances greater than the observed KS statistics.


.. _sphx_glr_download_auto_data_analysis_statistical_tests_plot_kolmogorov_pvalue.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_kolmogorov_pvalue.ipynb <plot_kolmogorov_pvalue.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_kolmogorov_pvalue.py <plot_kolmogorov_pvalue.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_kolmogorov_pvalue.zip <plot_kolmogorov_pvalue.zip>`
