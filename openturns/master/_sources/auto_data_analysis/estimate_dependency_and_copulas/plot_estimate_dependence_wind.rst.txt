
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_data_analysis/estimate_dependency_and_copulas/plot_estimate_dependence_wind.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_data_analysis_estimate_dependency_and_copulas_plot_estimate_dependence_wind.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_data_analysis_estimate_dependency_and_copulas_plot_estimate_dependence_wind.py:


Estimate tail dependence coefficients on the wind data
======================================================

.. GENERATED FROM PYTHON SOURCE LINES 7-13

In this example we estimate the tail dependence coefficient of a bivariate sample
applied to the corresponding annual maximum wind speeds over the period 1944-1983
at two locations in the United States: Albany, New-York and Hartford, Connecticut.
Readers should refer to [coles2001]_ to get more details.

First, we load the wave_surge dataset. The speeds are expressed in knot : one knot is equalt to one nautical mile per hour, which means :math:`1.852\, km.h^{-1}`.

.. GENERATED FROM PYTHON SOURCE LINES 13-32

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as otv
    from openturns.usecases import coles

    data = coles.Coles().wind[:, 1:]
    print(data[:5])

    graph = ot.Graph(
        "Annual maximum wind speeds at Albany (NY) and Hartford (CT)",
        "spped at Albany (knot)",
        "speed at Hartford (knot)",
        True,
        "",
    )
    cloud = ot.Cloud(data)
    cloud.setColor("red")
    graph.add(cloud)
    view = otv.View(graph)




.. image-sg:: /auto_data_analysis/estimate_dependency_and_copulas/images/sphx_glr_plot_estimate_dependence_wind_001.svg
   :alt: Annual maximum wind speeds at Albany (NY) and Hartford (CT)
   :srcset: /auto_data_analysis/estimate_dependency_and_copulas/images/sphx_glr_plot_estimate_dependence_wind_001.svg
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

        [ Hartford Albany   ]
    0 : [ 49       52       ]
    1 : [ 54       46       ]
    2 : [ 60       48       ]
    3 : [ 49       44       ]
    4 : [ 57       42       ]




.. GENERATED FROM PYTHON SOURCE LINES 33-40

We plot the graph of the function :math:`u \mapsto \chi(u)` and the graph of the function
:math:`u \mapsto \bar{\chi}(u)`. We conclude that both variables are asymptotially dependent
as :math:`\chi > 0` and that they are positively correlated as :math:`\hat{\chi} > 0`.
We cn visually deduce the upper tail dependence coefficient :math:`\chi \simeq 0.26` and
the upper extremal dependence coefficient :math:`\bar{\chi} \simeq 0.5`.
Note that the number of data points is so small that the curves seem chaotic.
It is difficult, if not impossible, to deduce the value of :math:`\chi` and :math:`\bar{\chi}` from the curves.

.. GENERATED FROM PYTHON SOURCE LINES 40-47

.. code-block:: Python

    graph1 = ot.VisualTest.DrawUpperTailDependenceFunction(data)
    graph2 = ot.VisualTest.DrawUpperExtremalDependenceFunction(data)
    grid = ot.GridLayout(1, 2)
    grid.setGraph(0, 0, graph1)
    grid.setGraph(0, 1, graph2)
    view = otv.View(grid)




.. image-sg:: /auto_data_analysis/estimate_dependency_and_copulas/images/sphx_glr_plot_estimate_dependence_wind_002.svg
   :alt: , Upper tail dependence function, Upper extremal dependence function
   :srcset: /auto_data_analysis/estimate_dependency_and_copulas/images/sphx_glr_plot_estimate_dependence_wind_002.svg
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 48-49

.. code-block:: Python

    otv.View.ShowAll()








.. _sphx_glr_download_auto_data_analysis_estimate_dependency_and_copulas_plot_estimate_dependence_wind.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_estimate_dependence_wind.ipynb <plot_estimate_dependence_wind.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_estimate_dependence_wind.py <plot_estimate_dependence_wind.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_estimate_dependence_wind.zip <plot_estimate_dependence_wind.zip>`
