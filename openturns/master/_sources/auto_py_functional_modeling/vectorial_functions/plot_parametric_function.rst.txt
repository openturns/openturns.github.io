.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_py_functional_modeling_vectorial_functions_plot_parametric_function.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_py_functional_modeling_vectorial_functions_plot_parametric_function.py:


Create a parametric function
============================

In this example we are going to create a parametric function:

.. math:: 
   d_{L,I}(E, F):  \mathbb{R}^2  \rightarrow \mathbb{R}

function from an existing "full" function:

.. math:: 
 d(E, F, L, I):  \mathbb{R}^4  \rightarrow \mathbb{R}



.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    import math as m
    ot.Log.Show(ot.Log.NONE)









Create the function with all parameters d(E, F, L, I)


.. code-block:: default

    def d_func(X):
        E, F, L, I = X
        d = -F * L**3 / (3.0 * E * I)
        return [d]
    beam = ot.PythonFunction(4, 1, d_func)








Evaluate d


.. code-block:: default

    x = [50.0, 1.0, 10.0, 5.0]
    beam(x)






.. raw:: html

    <p>[-1.33333]</p>
    <br />
    <br />

Create the indices of the frozen parameters (L,I) from the full parameter list


.. code-block:: default

    indices = [2, 3]








Create the values of the frozen parameters (L,I)


.. code-block:: default

    referencePoint = [10.0, 5.0]








Create the parametric function


.. code-block:: default

    beam_LI = ot.ParametricFunction(beam, indices, referencePoint)








Evaluate d on (E,F) with fixed parameters (L,I)


.. code-block:: default

    beam_LI([50.0, 1.0])





.. raw:: html

    <p>[-1.33333]</p>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.003 seconds)


.. _sphx_glr_download_auto_py_functional_modeling_vectorial_functions_plot_parametric_function.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_parametric_function.py <plot_parametric_function.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_parametric_function.ipynb <plot_parametric_function.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
