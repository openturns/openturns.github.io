
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_reliability_sensitivity/reliability/plot_flood_model.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_reliability_sensitivity_reliability_plot_flood_model.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_reliability_sensitivity_reliability_plot_flood_model.py:


Estimate a flooding probability
===============================

.. GENERATED FROM PYTHON SOURCE LINES 6-7

In this example, we estimate the probability that the output of a function exceeds a given threshold with the FORM method. We consider the :ref:`flooding model <use-case-flood-model>`.

.. GENERATED FROM PYTHON SOURCE LINES 10-12

Define the model
----------------

.. GENERATED FROM PYTHON SOURCE LINES 14-20

.. code-block:: default

    from openturns.usecases import flood_model
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 21-22

We load the flooding model from the usecases module :

.. GENERATED FROM PYTHON SOURCE LINES 22-24

.. code-block:: default

    fm = flood_model.FloodModel()








.. GENERATED FROM PYTHON SOURCE LINES 25-26

We load the joint probability distribution of the input parameters.

.. GENERATED FROM PYTHON SOURCE LINES 26-28

.. code-block:: default

    distribution = fm.distribution








.. GENERATED FROM PYTHON SOURCE LINES 29-30

We create the model.

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: default

    model = fm.model








.. GENERATED FROM PYTHON SOURCE LINES 35-37

Define the event
----------------

.. GENERATED FROM PYTHON SOURCE LINES 39-40

Then we create the event whose probability we want to estimate.

.. GENERATED FROM PYTHON SOURCE LINES 42-47

.. code-block:: default

    vect = ot.RandomVector(distribution)
    G = ot.CompositeRandomVector(model, vect)
    event = ot.ThresholdEvent(G, ot.Greater(), 0.0)
    event.setName('overflow')








.. GENERATED FROM PYTHON SOURCE LINES 48-50

Estimate the probability with FORM
----------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 52-53

Define a solver.

.. GENERATED FROM PYTHON SOURCE LINES 55-62

.. code-block:: default

    optimAlgo = ot.Cobyla()
    optimAlgo.setMaximumEvaluationNumber(1000)
    optimAlgo.setMaximumAbsoluteError(1.0e-10)
    optimAlgo.setMaximumRelativeError(1.0e-10)
    optimAlgo.setMaximumResidualError(1.0e-10)
    optimAlgo.setMaximumConstraintError(1.0e-10)








.. GENERATED FROM PYTHON SOURCE LINES 63-64

Run FORM.

.. GENERATED FROM PYTHON SOURCE LINES 66-72

.. code-block:: default

    startingPoint = distribution.getMean()
    algo = ot.FORM(optimAlgo, event, startingPoint)
    algo.run()
    result = algo.getResult()
    standardSpaceDesignPoint = result.getStandardSpaceDesignPoint()








.. GENERATED FROM PYTHON SOURCE LINES 73-74

Retrieve results.

.. GENERATED FROM PYTHON SOURCE LINES 76-80

.. code-block:: default

    result = algo.getResult()
    probability = result.getEventProbability()
    print('Pf=', probability)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Pf= 0.0005340887806479541




.. GENERATED FROM PYTHON SOURCE LINES 81-82

Importance factors.

.. GENERATED FROM PYTHON SOURCE LINES 84-87

.. code-block:: default

    graph = result.drawImportanceFactors()
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_reliability_sensitivity/reliability/images/sphx_glr_plot_flood_model_001.png
   :alt: Importance Factors from Design Point - overflow
   :srcset: /auto_reliability_sensitivity/reliability/images/sphx_glr_plot_flood_model_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.055 seconds)


.. _sphx_glr_download_auto_reliability_sensitivity_reliability_plot_flood_model.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_flood_model.py <plot_flood_model.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_flood_model.ipynb <plot_flood_model.ipynb>`
