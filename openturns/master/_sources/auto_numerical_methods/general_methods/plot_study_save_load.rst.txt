
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_numerical_methods/general_methods/plot_study_save_load.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_numerical_methods_general_methods_plot_study_save_load.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_numerical_methods_general_methods_plot_study_save_load.py:


Save/load a study
=================

.. GENERATED FROM PYTHON SOURCE LINES 23-29

The objective of this example is to demonstrate how to save the structures created within a script session to disk in order to be able to load them in a future session.

There are several possible ways to achieve this:

- with the standard pickle module
- with openturns's Study

.. GENERATED FROM PYTHON SOURCE LINES 31-39

.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    import os
    import pickle
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 40-41

create objects to save

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: default

    distribution = ot.Normal(4.0, 3.0)
    function = ot.SymbolicFunction(['x1', 'x2'], ['x1 + x2'])








.. GENERATED FROM PYTHON SOURCE LINES 45-48

**With the pickle module**

The objects are retrieved in the same order they are stored.

.. GENERATED FROM PYTHON SOURCE LINES 50-51

save objects

.. GENERATED FROM PYTHON SOURCE LINES 51-55

.. code-block:: default

    with open('study.pkl', 'wb') as f:
        pickle.dump(distribution, f)
        pickle.dump(function, f)








.. GENERATED FROM PYTHON SOURCE LINES 56-57

load saved objects

.. GENERATED FROM PYTHON SOURCE LINES 57-62

.. code-block:: default

    with open('study.pkl', 'rb') as f:
        loaded_distribution = pickle.load(f)
        loaded_function = pickle.load(f)
    str(loaded_distribution), str(loaded_function)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ('Normal(mu = 4, sigma = 3)', '[x1,x2]->[x1 + x2]')



.. GENERATED FROM PYTHON SOURCE LINES 63-74

**With OpenTURNS' Study**

In order to be able to manipulate the objects contained in a Study, it is necessary to:

- create the same empty structure in the new study,
- fill this new empty structure with the content of the loaded structure, identified with its name or its id.

Each object is identified whether with:

- its name: it is useful to give names to the objects we want to save. If no name has been given by the user, we can use the name by default. The name of each object saved can be checked in the file.XML created or by printing the study in the python interface (with the command print).
- its id number : this id number is unique for each object. It is useful to distinguish objects of same type which names are identical, equal to the default name given ('Unnamed'). This id number may be checked by printing the study loaded in the python interface (with the command print): be careful, this print operation must be performed after having loaded the study (the id number may be different from the one indicated in the file.XML associated to the study).

.. GENERATED FROM PYTHON SOURCE LINES 76-77

Create a Study Object

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: default

    study = ot.Study()








.. GENERATED FROM PYTHON SOURCE LINES 80-81

Associate it to an XML file

.. GENERATED FROM PYTHON SOURCE LINES 81-84

.. code-block:: default

    fileName = 'study.xml'
    study.setStorageManager(ot.XMLStorageManager(fileName))








.. GENERATED FROM PYTHON SOURCE LINES 85-86

Add an object to the study; at this point it is not written to disk yet

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: default

    study.add('distribution', distribution)
    study.add('function', function)








.. GENERATED FROM PYTHON SOURCE LINES 90-91

Save the study; this writes into the file

.. GENERATED FROM PYTHON SOURCE LINES 91-93

.. code-block:: default

    study.save()








.. GENERATED FROM PYTHON SOURCE LINES 94-95

Create a new study associated to the same file

.. GENERATED FROM PYTHON SOURCE LINES 95-98

.. code-block:: default

    study = ot.Study()
    study.setStorageManager(ot.XMLStorageManager(fileName))








.. GENERATED FROM PYTHON SOURCE LINES 99-100

Load the file and all its objects

.. GENERATED FROM PYTHON SOURCE LINES 100-102

.. code-block:: default

    study.load()








.. GENERATED FROM PYTHON SOURCE LINES 103-104

Check the content of the myStudy

.. GENERATED FROM PYTHON SOURCE LINES 104-106

.. code-block:: default

    print("Study = " , study)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Study =    196 => FunctionImplementation
    [x1,x2]->[x1 + x2]
      197 => Normal
    Normal(mu = 4, sigma = 3)
      'distribution' is aliased to 197
      'function' is aliased to 196




.. GENERATED FROM PYTHON SOURCE LINES 107-108

List names of stored objects

.. GENERATED FROM PYTHON SOURCE LINES 108-110

.. code-block:: default

    study.printLabels()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    'distribution;function'



.. GENERATED FROM PYTHON SOURCE LINES 111-112

Check our 'distribution' labelled object was loaded

.. GENERATED FROM PYTHON SOURCE LINES 112-114

.. code-block:: default

    study.hasObject('distribution')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    True



.. GENERATED FROM PYTHON SOURCE LINES 115-116

Load the objects; we must create a void object of the desired type (or parent type)

.. GENERATED FROM PYTHON SOURCE LINES 116-121

.. code-block:: default

    distributionLoaded = ot.Normal()
    functionLoaded = ot.Function()
    study.fillObject('distribution', loaded_distribution)
    study.fillObject('function', loaded_function)
    str(loaded_distribution), str(loaded_function)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    ('Normal(mu = 4, sigma = 3)', '[x1,x2]->[x1 + x2]')




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.019 seconds)


.. _sphx_glr_download_auto_numerical_methods_general_methods_plot_study_save_load.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_study_save_load.py <plot_study_save_load.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_study_save_load.ipynb <plot_study_save_load.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
