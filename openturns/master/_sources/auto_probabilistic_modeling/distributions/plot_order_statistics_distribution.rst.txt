
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/distributions/plot_order_statistics_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_distributions_plot_order_statistics_distribution.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_distributions_plot_order_statistics_distribution.py:


Create a maximum entropy statistics distribution
================================================

.. GENERATED FROM PYTHON SOURCE LINES 7-12

In this example we are going to build maximum entropy statistics distribution, which yields ordered realizations:

.. math::
   X_1 \leq \dots \leq X_n


.. GENERATED FROM PYTHON SOURCE LINES 14-20

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 21-22

Create a collection of distributions

.. GENERATED FROM PYTHON SOURCE LINES 22-24

.. code-block:: Python

    coll = [ot.Beta(1.5, 1.7, 0.0, 1.0), ot.Beta(2.0, 2.3, 0.5, 1.2)]








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Create the distribution

.. GENERATED FROM PYTHON SOURCE LINES 26-29

.. code-block:: Python

    distribution = ot.MaximumEntropyOrderStatisticsDistribution(coll)
    print(distribution)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    MaximumEntropyOrderStatisticsDistribution(collection = [Beta(alpha = 1.5, beta = 1.7, a = 0, b = 1),Beta(alpha = 2, beta = 2.3, a = 0.5, b = 1.2)])




.. GENERATED FROM PYTHON SOURCE LINES 30-31

Draw a sample (ordered!)

.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: Python

    distribution.getSample(10)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th></tr>
      <tr><th>0</th><td>0.8832486</td><td>0.8957517</td></tr>
      <tr><th>1</th><td>0.5836542</td><td>0.6722579</td></tr>
      <tr><th>2</th><td>0.3265067</td><td>0.9604826</td></tr>
      <tr><th>3</th><td>0.8183162</td><td>1.119319</td></tr>
      <tr><th>4</th><td>0.5247459</td><td>0.6703216</td></tr>
      <tr><th>5</th><td>0.8002262</td><td>0.8102919</td></tr>
      <tr><th>6</th><td>0.8286967</td><td>0.9409432</td></tr>
      <tr><th>7</th><td>0.6790498</td><td>0.9014674</td></tr>
      <tr><th>8</th><td>0.1614631</td><td>1.049137</td></tr>
      <tr><th>9</th><td>0.1646297</td><td>0.5626579</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 34-35

Draw PDF

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: Python

    graph = distribution.drawPDF()
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_order_statistics_distribution_001.png
   :alt: [X0,X1] iso-PDF
   :srcset: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_order_statistics_distribution_001.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_distributions_plot_order_statistics_distribution.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_order_statistics_distribution.ipynb <plot_order_statistics_distribution.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_order_statistics_distribution.py <plot_order_statistics_distribution.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_order_statistics_distribution.zip <plot_order_statistics_distribution.zip>`
