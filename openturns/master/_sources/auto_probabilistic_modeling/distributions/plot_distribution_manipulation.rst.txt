
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/distributions/plot_distribution_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_distributions_plot_distribution_manipulation.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_distributions_plot_distribution_manipulation.py:


Distribution manipulation
=========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

In this example we are going to exhibit some of the services exposed by the distribution objects:

- ask for the dimension, with the method getDimension
- extract the marginal distributions, with the method getMarginal
- to ask for some properties, with isContinuous, isDiscrete, isElliptical
- to get the copula, with the method getCopula*
- to ask for some properties on the copula, with the methods hasIndependentCopula, hasEllipticalCopula
- to evaluate some moments, with getMean, getStandardDeviation, getCovariance, getSkewness, getKurtosis
- to evaluate the roughness, with the method getRoughness
- to get one realization or simultaneously :math:`n` realizations, with the method getRealization, getSample
- to evaluate the probability content of a given interval, with the method computeProbability
- to evaluate a quantile or a complementary quantile, with the method computeQuantile
- to evaluate the characteristic function of the distribution
- to evaluate the derivative of the CDF or PDF
- to draw some curves

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create an 1-d distribution

.. GENERATED FROM PYTHON SOURCE LINES 31-40

.. code-block:: default

    dist_1 = ot.Normal()

    # Create a 2-d distribution
    dist_2 = ot.ComposedDistribution([ot.Normal(), ot.Triangular(0.0, 2.0, 3.0)], ot.ClaytonCopula(2.3))

    # Create a 3-d distribution
    copula_dim3 = ot.Student(5.0, 3).getCopula()
    dist_3 = ot.ComposedDistribution([ot.Normal(), ot.Triangular(0.0, 2.0, 3.0), ot.Exponential(0.2)], copula_dim3)








.. GENERATED FROM PYTHON SOURCE LINES 41-42

Get the dimension fo the distribution

.. GENERATED FROM PYTHON SOURCE LINES 42-44

.. code-block:: default

    dist_2.getDimension()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    2



.. GENERATED FROM PYTHON SOURCE LINES 45-46

Get the 2nd marginal

.. GENERATED FROM PYTHON SOURCE LINES 46-48

.. code-block:: default

    dist_2.getMarginal(1)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>Triangular(a = 0, m = 2, b = 3)</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 49-50

Get a 2-d marginal

.. GENERATED FROM PYTHON SOURCE LINES 50-52

.. code-block:: default

    dist_3.getMarginal([0, 1]).getDimension()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    2



.. GENERATED FROM PYTHON SOURCE LINES 53-54

Ask some properties of the distribution

.. GENERATED FROM PYTHON SOURCE LINES 54-56

.. code-block:: default

    dist_1.isContinuous(), dist_1.isDiscrete(), dist_1.isElliptical()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    (True, False, True)



.. GENERATED FROM PYTHON SOURCE LINES 57-58

Get the copula

.. GENERATED FROM PYTHON SOURCE LINES 58-60

.. code-block:: default

    copula = dist_2.getCopula()








.. GENERATED FROM PYTHON SOURCE LINES 61-62

Ask some properties on the copula

.. GENERATED FROM PYTHON SOURCE LINES 62-64

.. code-block:: default

    dist_2.hasIndependentCopula(), dist_2.hasEllipticalCopula()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    (False, False)



.. GENERATED FROM PYTHON SOURCE LINES 65-66

mean vector of the distribution

.. GENERATED FROM PYTHON SOURCE LINES 66-68

.. code-block:: default

    dist_2.getMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[0,1.66667]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-70

standard deviation vector of the distribution

.. GENERATED FROM PYTHON SOURCE LINES 70-72

.. code-block:: default

    dist_2.getStandardDeviation()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[1,0.62361]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 73-74

covariance matrix of the distribution

.. GENERATED FROM PYTHON SOURCE LINES 74-76

.. code-block:: default

    dist_2.getCovariance()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[[ 1        0.491927 ]<br>
     [ 0.491927 0.388889 ]]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 77-78

skewness vector of the distribution

.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: default

    dist_2.getSkewness()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[0,-0.305441]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-82

kurtosis vector of the distribution

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: default

    dist_2.getKurtosis()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[3,2.4]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

roughness of the distribution

.. GENERATED FROM PYTHON SOURCE LINES 86-88

.. code-block:: default

    dist_1.getRoughness()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    0.28209479177387814



.. GENERATED FROM PYTHON SOURCE LINES 89-90

Get one realization

.. GENERATED FROM PYTHON SOURCE LINES 90-92

.. code-block:: default

    dist_2.getRealization()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[0.779052,2.64799]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 93-94

Get several realizations

.. GENERATED FROM PYTHON SOURCE LINES 94-96

.. code-block:: default

    dist_2.getSample(5)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>X0</TH><TH>X1</TH></TR>
    <TR><TH>0</TH><TD>0.06985929</TD><TD>1.42593</TD></TR>
    <TR><TH>1</TH><TD>-0.2847443</TD><TD>1.680554</TD></TR>
    <TR><TH>2</TH><TD>-1.842467</TD><TD>0.7630956</TD></TR>
    <TR><TH>3</TH><TD>0.3236553</TD><TD>2.048827</TD></TR>
    <TR><TH>4</TH><TD>0.1203091</TD><TD>2.285018</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 97-98

Evaluate the PDF at the mean point

.. GENERATED FROM PYTHON SOURCE LINES 98-100

.. code-block:: default

    dist_2.computePDF(dist_2.getMean())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    0.3528005531670077



.. GENERATED FROM PYTHON SOURCE LINES 101-102

Evaluate the CDF at the mean point

.. GENERATED FROM PYTHON SOURCE LINES 102-104

.. code-block:: default

    dist_2.computeCDF(dist_2.getMean())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    0.3706626446357781



.. GENERATED FROM PYTHON SOURCE LINES 105-106

Evaluate the complementary CDF

.. GENERATED FROM PYTHON SOURCE LINES 106-108

.. code-block:: default

    dist_2.computeComplementaryCDF(dist_2.getMean())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    0.6293373553642219



.. GENERATED FROM PYTHON SOURCE LINES 109-110

Evaluate the survival function at the mean point

.. GENERATED FROM PYTHON SOURCE LINES 110-112

.. code-block:: default

    dist_2.computeSurvivalFunction(dist_2.getMean())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    0.4076996816728151



.. GENERATED FROM PYTHON SOURCE LINES 113-114

Evaluate the PDF on a sample

.. GENERATED FROM PYTHON SOURCE LINES 114-116

.. code-block:: default

    dist_2.computePDF(dist_2.getSample(5))






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>v0</TH></TR>
    <TR><TH>0</TH><TD>0.2107205</TD></TR>
    <TR><TH>1</TH><TD>0.2829345</TD></TR>
    <TR><TH>2</TH><TD>0.2683372</TD></TR>
    <TR><TH>3</TH><TD>0.3159856</TD></TR>
    <TR><TH>4</TH><TD>0.3618715</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 117-118

Evaluate the CDF on a sample

.. GENERATED FROM PYTHON SOURCE LINES 118-120

.. code-block:: default

    dist_2.computeCDF(dist_2.getSample(5))






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>v0</TH></TR>
    <TR><TH>0</TH><TD>0.7326854</TD></TR>
    <TR><TH>1</TH><TD>0.5003563</TD></TR>
    <TR><TH>2</TH><TD>0.820944</TD></TR>
    <TR><TH>3</TH><TD>0.01091264</TD></TR>
    <TR><TH>4</TH><TD>0.4877803</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 121-122

Evaluate the probability content of an 1-d interval

.. GENERATED FROM PYTHON SOURCE LINES 122-125

.. code-block:: default

    interval = ot.Interval(-2.0, 3.0)
    dist_1.computeProbability(interval)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    0.9758999700201907



.. GENERATED FROM PYTHON SOURCE LINES 126-127

Evaluate the probability content of a 2-d interval

.. GENERATED FROM PYTHON SOURCE LINES 127-130

.. code-block:: default

    interval = ot.Interval([0.4, -1], [3.4, 2])
    dist_2.computeProbability(interval)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    0.129833882783416



.. GENERATED FROM PYTHON SOURCE LINES 131-132

Evaluate the quantile of order p=90%

.. GENERATED FROM PYTHON SOURCE LINES 132-134

.. code-block:: default

    dist_2.computeQuantile(0.90)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[1.60422,2.59627]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 135-136

and the quantile of order 1-p

.. GENERATED FROM PYTHON SOURCE LINES 136-138

.. code-block:: default

    dist_2.computeQuantile(0.90, True)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[-1.10363,0.899591]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 139-141

Evaluate the quantiles of order p et q
For example, the quantile 90% and 95%

.. GENERATED FROM PYTHON SOURCE LINES 141-143

.. code-block:: default

    dist_1.computeQuantile([0.90, 0.95])






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>v0</TH></TR>
    <TR><TH>0</TH><TD>1.281552</TD></TR>
    <TR><TH>1</TH><TD>1.644854</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 144-145

and the quantile of order 1-p and 1-q

.. GENERATED FROM PYTHON SOURCE LINES 145-147

.. code-block:: default

    dist_1.computeQuantile([0.90, 0.95], True)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>v0</TH></TR>
    <TR><TH>0</TH><TD>-1.281552</TD></TR>
    <TR><TH>1</TH><TD>-1.644854</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 148-149

Evaluate the characteristic function of the distribution (only 1-d)

.. GENERATED FROM PYTHON SOURCE LINES 149-151

.. code-block:: default

    dist_1.computeCharacteristicFunction(dist_1.getMean()[0])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    (1+0j)



.. GENERATED FROM PYTHON SOURCE LINES 152-153

Evaluate the derivatives of the PDF with respect to the parameters at mean

.. GENERATED FROM PYTHON SOURCE LINES 153-155

.. code-block:: default

    dist_2.computePDFGradient(dist_2.getMean())






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[0,-0.398942,0.12963,-0.277778,-0.185185,0]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 156-157

Evaluate the derivatives of the CDF with respect to the parameters at mean

.. GENERATED FROM PYTHON SOURCE LINES 157-159

.. code-block:: default

    dist_2.computeCDFGradient(dist_2.getMean())






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[-0.398942,-0,-0.169753,-0.231481,-0.555556,0]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 160-161

draw PDF

.. GENERATED FROM PYTHON SOURCE LINES 161-164

.. code-block:: default

    graph = dist_1.drawPDF()
    view = viewer.View(graph)




.. image:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_distribution_manipulation_001.png
    :alt: plot distribution manipulation
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 165-166

draw CDF

.. GENERATED FROM PYTHON SOURCE LINES 166-169

.. code-block:: default

    graph = dist_1.drawCDF()
    view = viewer.View(graph)




.. image:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_distribution_manipulation_002.png
    :alt: plot distribution manipulation
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 170-171

Draw an 1-d quantile curve

.. GENERATED FROM PYTHON SOURCE LINES 171-179

.. code-block:: default


    # Define the range and the number of points
    qMin = 0.2
    qMax = 0.6
    nbrPoints = 101
    quantileGraph = dist_1.drawQuantile(qMin, qMax, nbrPoints)
    view = viewer.View(quantileGraph)




.. image:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_distribution_manipulation_003.png
    :alt: plot distribution manipulation
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 180-181

Draw a 2-d quantile curve

.. GENERATED FROM PYTHON SOURCE LINES 181-189

.. code-block:: default


    # Define the range and the number of points
    qMin = 0.3
    qMax = 0.9
    nbrPoints = 101
    quantileGraph = dist_2.drawQuantile(qMin, qMax, nbrPoints)
    view = viewer.View(quantileGraph)
    plt.show()



.. image:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_distribution_manipulation_004.png
    :alt: [X0,X1] Quantile
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.374 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_distributions_plot_distribution_manipulation.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_distribution_manipulation.py <plot_distribution_manipulation.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_distribution_manipulation.ipynb <plot_distribution_manipulation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
