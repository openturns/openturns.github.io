
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/distributions/plot_bayes_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_distributions_plot_bayes_distribution.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_distributions_plot_bayes_distribution.py:


Create a Bayes distribution
===========================

.. GENERATED FROM PYTHON SOURCE LINES 6-16

In this example we are going to build the distribution of the random vector

.. math::
   (Y, \vect{X}|\vect{\Theta})

with :math:`\vect{X}` conditioned by the random vector :math:`\vect{\Theta}` obtained with the random variable :math:`Y` through a function :math:`f`

.. math::
   \vect{\Theta}=f(Y)


.. GENERATED FROM PYTHON SOURCE LINES 18-24

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Create the :math:`Y` distribution

.. GENERATED FROM PYTHON SOURCE LINES 26-29

.. code-block:: Python


    YDist = ot.Normal(0.0, 1.0)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create :math:`\vect{\Theta}=f(Y)`

.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: Python

    f = ot.SymbolicFunction(["y"], ["y", "0.1 + y^2"])








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Create the :math:`\vect{X}|\vect{\Theta}` distribution

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: Python


    XgivenThetaDist = ot.Normal()








.. GENERATED FROM PYTHON SOURCE LINES 39-40

Create the distribution

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: Python

    XDist = ot.BayesDistribution(XgivenThetaDist, YDist, f)
    XDist.setDescription(["X|Theta=f(y)", "y"])
    XDist






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    BayesDistribution
    <ul>
      <li>name=BayesDistribution</li>
      <li>dimension=2</li>
      <li>weight=1</li>
      <li>range=]-inf (-7.65063), (7.65063) +inf[
    ]-inf (-412.759), (412.759) +inf[</li>
      <li>description=[X|Theta=f(y),y]</li>
      <li>isParallel=false</li>
      <li>isCopula=false</li>
    </ul>

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-46

Get a sample

.. GENERATED FROM PYTHON SOURCE LINES 46-48

.. code-block:: Python

    sample = XDist.getSample(100)








.. GENERATED FROM PYTHON SOURCE LINES 49-50

Draw PDF

.. GENERATED FROM PYTHON SOURCE LINES 50-57

.. code-block:: Python

    graph = XDist.drawPDF()
    cloud = ot.Cloud(sample)
    cloud.setColor("red")
    cloud.setLegend("sample")
    graph.add(cloud)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_bayes_distribution_001.png
   :alt: [X|Theta=f(y),y] iso-PDF
   :srcset: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_bayes_distribution_001.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_distributions_plot_bayes_distribution.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_bayes_distribution.ipynb <plot_bayes_distribution.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_bayes_distribution.py <plot_bayes_distribution.py>`
