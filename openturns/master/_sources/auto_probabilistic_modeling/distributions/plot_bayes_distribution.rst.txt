
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/distributions/plot_bayes_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_distributions_plot_bayes_distribution.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_distributions_plot_bayes_distribution.py:


Create a Bayes distribution
===========================

.. GENERATED FROM PYTHON SOURCE LINES 7-17

In this example we are going to build the distribution of the random vector

.. math::
   (Y, \vect{X}|\vect{\Theta})

with :math:`\vect{X}` conditioned by the random vector :math:`\vect{\Theta}` obtained with the random variable :math:`Y` through a function :math:`f`

.. math::
   \vect{\Theta}=f(Y)


.. GENERATED FROM PYTHON SOURCE LINES 19-25

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 26-27

Create the :math:`Y` distribution

.. GENERATED FROM PYTHON SOURCE LINES 27-30

.. code-block:: Python


    YDist = ot.Normal(0.0, 1.0)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Create :math:`\vect{\Theta}=f(Y)`

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: Python

    f = ot.SymbolicFunction(["y"], ["y", "0.1 + y^2"])








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Create the :math:`\vect{X}|\vect{\Theta}` distribution

.. GENERATED FROM PYTHON SOURCE LINES 36-39

.. code-block:: Python


    XgivenThetaDist = ot.Normal()








.. GENERATED FROM PYTHON SOURCE LINES 40-41

create the distribution

.. GENERATED FROM PYTHON SOURCE LINES 41-45

.. code-block:: Python

    XDist = ot.JointByConditioningDistribution(XgivenThetaDist, YDist, f)
    XDist.setDescription(["X|Theta=f(y)", "y"])
    XDist






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    JointByConditioningDistribution
    <ul>
      <li>name=JointByConditioningDistribution</li>
      <li>dimension=2</li>
      <li>weight=1</li>
      <li>range=]-inf (-7.65063), (7.65063) +inf[
    ]-inf (-396.355), (396.355) +inf[</li>
      <li>description=[X|Theta=f(y),y]</li>
      <li>isParallel=false</li>
      <li>isCopula=false</li>
    </ul>

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 46-47

Get a sample

.. GENERATED FROM PYTHON SOURCE LINES 47-49

.. code-block:: Python

    sample = XDist.getSample(100)








.. GENERATED FROM PYTHON SOURCE LINES 50-51

Draw PDF

.. GENERATED FROM PYTHON SOURCE LINES 51-58

.. code-block:: Python

    graph = XDist.drawPDF()
    cloud = ot.Cloud(sample)
    cloud.setColor("red")
    cloud.setLegend("sample")
    graph.add(cloud)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_bayes_distribution_001.png
   :alt: X|Theta=f(y) iso-PDF
   :srcset: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_bayes_distribution_001.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_distributions_plot_bayes_distribution.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_bayes_distribution.ipynb <plot_bayes_distribution.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_bayes_distribution.py <plot_bayes_distribution.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_bayes_distribution.zip <plot_bayes_distribution.zip>`
