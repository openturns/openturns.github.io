
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/distributions/plot_bayes_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_distributions_plot_bayes_distribution.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_distributions_plot_bayes_distribution.py:


Create a Bayes distribution
===========================

.. GENERATED FROM PYTHON SOURCE LINES 6-16

In this example we are going to build the distribution of the random vector

.. math::
   ( \underline{X}|\underline{\Theta}, \underline{Y})

with X conditioned by the random variable Theta obtained with the random variable Y through a function f

.. math::
   \underline{\Theta}=f(\underline{Y})


.. GENERATED FROM PYTHON SOURCE LINES 18-24

.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 25-26

create the Y distribution

.. GENERATED FROM PYTHON SOURCE LINES 26-28

.. code-block:: default

    YDist = ot.Uniform(-1.0, 1.0)








.. GENERATED FROM PYTHON SOURCE LINES 29-30

create Theta=f(y)

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: default

    f = ot.SymbolicFunction(['y'], ['y', '1 + y'])








.. GENERATED FROM PYTHON SOURCE LINES 33-34

create the X|Theta distribution

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: default

    XgivenThetaDist = ot.Uniform()








.. GENERATED FROM PYTHON SOURCE LINES 37-38

create the distribution

.. GENERATED FROM PYTHON SOURCE LINES 38-42

.. code-block:: default

    XDist = ot.BayesDistribution(XgivenThetaDist, YDist, f)
    XDist.setDescription(['X|Theta=f(y)', 'y'])
    XDist






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>BayesDistribution(X, Y with X|Theta~Uniform(Theta), Theta=f(Y), f=[y]->[y,1 + y], Y~Uniform(a = -1, b = 1))</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 43-44

Get a sample

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: default

    sample = XDist.getSample(100)








.. GENERATED FROM PYTHON SOURCE LINES 47-48

draw PDF

.. GENERATED FROM PYTHON SOURCE LINES 48-55

.. code-block:: default

    graph = XDist.drawPDF()
    cloud = ot.Cloud(sample)
    cloud.setColor('red')
    cloud.setLegend('sample')
    graph.add(cloud)
    view = viewer.View(graph)
    plt.show()



.. image:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_bayes_distribution_001.png
    :alt: [X|Theta=f(y),y] iso-PDF
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /home/devel/project/build/python/src/site-packages/openturns/viewer.py:437: UserWarning: No contour levels were found within the data range.
      contourset = self._ax[0].contour(X, Y, Z, **contour_kw)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.209 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_distributions_plot_bayes_distribution.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_bayes_distribution.py <plot_bayes_distribution.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_bayes_distribution.ipynb <plot_bayes_distribution.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
