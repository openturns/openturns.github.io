
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/distributions/plot_conditional_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_distributions_plot_conditional_distribution.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_distributions_plot_conditional_distribution.py:


Create a conditional distribution
=================================

.. GENERATED FROM PYTHON SOURCE LINES 8-18

In this example we are going to build the distribution of the random vector X conditioned by the random variable Theta

.. math::
   \underline{X}|\underline{\Theta}

with Theta obtained with the random variable Y through a function f

.. math::
   \underline{\Theta}=f(\underline{Y})


.. GENERATED FROM PYTHON SOURCE LINES 20-24

.. code-block:: default

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt








.. GENERATED FROM PYTHON SOURCE LINES 25-26

create the Y distribution

.. GENERATED FROM PYTHON SOURCE LINES 26-28

.. code-block:: default

    YDist = ot.Uniform(-1.0, 1.0)








.. GENERATED FROM PYTHON SOURCE LINES 29-30

create Theta=f(y)

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: default

    f = ot.SymbolicFunction(['y'], ['y', '1+y^2'])








.. GENERATED FROM PYTHON SOURCE LINES 33-34

create the X|Theta distribution

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: default

    XgivenThetaDist = ot.Uniform()








.. GENERATED FROM PYTHON SOURCE LINES 37-38

create the distribution

.. GENERATED FROM PYTHON SOURCE LINES 38-42

.. code-block:: default

    XDist = ot.ConditionalDistribution(XgivenThetaDist, YDist, f)
    XDist.setDescription(['X|Theta=f(y)'])
    XDist






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>ConditionalDistribution(X with X|Theta~Uniform(Theta), Theta=f(Y), f=[y]->[y,1+y^2], Y~Uniform(a = -1, b = 1))</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 43-44

Get a sample

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: default

    XDist.getSample(5)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>X|Theta=f(y)</TH></TR>
    <TR><TH>0</TH><TD>1.431419</TD></TR>
    <TR><TH>1</TH><TD>1.072163</TD></TR>
    <TR><TH>2</TH><TD>0.362335</TD></TR>
    <TR><TH>3</TH><TD>0.1600886</TD></TR>
    <TR><TH>4</TH><TD>1.028835</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 47-48

draw PDF

.. GENERATED FROM PYTHON SOURCE LINES 48-51

.. code-block:: default

    graph = XDist.drawPDF()
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_conditional_distribution_001.png
   :alt: plot conditional distribution
   :srcset: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_conditional_distribution_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.100 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_distributions_plot_conditional_distribution.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_conditional_distribution.py <plot_conditional_distribution.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_conditional_distribution.ipynb <plot_conditional_distribution.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
