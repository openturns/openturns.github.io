
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/distributions/plot_conditional_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_distributions_plot_conditional_distribution.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_distributions_plot_conditional_distribution.py:


Create a Deconditioned distribution
===================================

.. GENERATED FROM PYTHON SOURCE LINES 7-12

.. code-block:: Python


    import openturns as ot
    import openturns.viewer as otv









.. GENERATED FROM PYTHON SOURCE LINES 13-24

In this example we are going to build the distribution of the random vector :math:`\vect{X}` conditioned by
the random vector :math:`\vect{\Theta}`:

.. math::
   \vect{X}|\vect{\Theta}

with :math:`\vect{\Theta}` obtained with the random variable :math:`Y` through a function :math:`f`

.. math::
   \vect{\Theta} = f(\vect{Y})


.. GENERATED FROM PYTHON SOURCE LINES 26-30

We consider the following case: :math:`X|\vect{\Theta} \sim \cU(\vect{\Theta})`
with :math:`\vect{\Theta} = (Y, 1 + Y^2)` and :math:`Y \sim \cU(-1,1)`.

We first create the :math:`Y` distribution:

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: Python

    YDist = ot.Uniform(-1.0, 1.0)








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Then we create the link function :math:`f: y \rightarrow (y, 1+y^2)`:

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: Python

    f = ot.SymbolicFunction(["y"], ["y", "1+y^2"])








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Then, we create the :math:`\vect{X}|\vect{\Theta}` distribution:

.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: Python

    XgivenThetaDist = ot.Uniform()








.. GENERATED FROM PYTHON SOURCE LINES 41-42

At last, we create the deconditioned distribution of :math:`X`:

.. GENERATED FROM PYTHON SOURCE LINES 42-46

.. code-block:: Python

    XDist = ot.DeconditionedDistribution(XgivenThetaDist, YDist, f)
    XDist.setDescription([r"$X|\mathbf{\boldsymbol{\Theta}} = f(Y)$"])
    XDist






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    DeconditionedDistribution
    <ul>
      <li>name=DeconditionedDistribution</li>
      <li>dimension=1</li>
      <li>weight=1</li>
      <li>range=[-0.998771, 1.99754]</li>
      <li>description=[$X|\mathbf{\boldsymbol{\Theta}} = f(Y)$]</li>
      <li>isParallel=true</li>
      <li>isCopula=false</li>
    </ul>

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 47-48

Get a sample:

.. GENERATED FROM PYTHON SOURCE LINES 48-50

.. code-block:: Python

    XDist.getSample(5)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>$X|\mathbf{\boldsymbol{\Theta}} = f(Y)$</th></tr>
      <tr><th>0</th><td>0.9728113</td></tr>
      <tr><th>1</th><td>-0.655941</td></tr>
      <tr><th>2</th><td>1.050775</td></tr>
      <tr><th>3</th><td>1.277257</td></tr>
      <tr><th>4</th><td>-0.101663</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-52

Draw the PDF:

.. GENERATED FROM PYTHON SOURCE LINES 52-56

.. code-block:: Python

    graph = XDist.drawPDF()
    view = otv.View(graph)





.. image-sg:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_conditional_distribution_001.png
   :alt: plot conditional distribution
   :srcset: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_conditional_distribution_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 57-58

.. code-block:: Python

    view.ShowAll()








.. _sphx_glr_download_auto_probabilistic_modeling_distributions_plot_conditional_distribution.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_conditional_distribution.ipynb <plot_conditional_distribution.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_conditional_distribution.py <plot_conditional_distribution.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_conditional_distribution.zip <plot_conditional_distribution.zip>`
