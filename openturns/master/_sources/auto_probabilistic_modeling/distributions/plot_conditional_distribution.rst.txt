
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/distributions/plot_conditional_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_distributions_plot_conditional_distribution.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_distributions_plot_conditional_distribution.py:


Create a conditional distribution
=================================

.. GENERATED FROM PYTHON SOURCE LINES 7-12

.. code-block:: Python


    import openturns as ot
    import openturns.viewer as otv









.. GENERATED FROM PYTHON SOURCE LINES 13-23

In this example we are going to build the distribution of the random vector :math:`\vect{X}` conditioned by the random vector :math:`\vect{\Theta}`

.. math::
   \vect{X}|\vect{\Theta}

with :math:`\vect{\Theta}` obtained with the random variable :math:`Y` through a function :math:`f`

.. math::
   \vect{\Theta}=f(Y)


.. GENERATED FROM PYTHON SOURCE LINES 25-26

Create the :math:`Y` distribution

.. GENERATED FROM PYTHON SOURCE LINES 26-28

.. code-block:: Python

    YDist = ot.Uniform(-1.0, 1.0)








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Create :math:`\vect{\Theta}=f(Y)`

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: Python

    f = ot.SymbolicFunction(["y"], ["y", "1+y^2"])








.. GENERATED FROM PYTHON SOURCE LINES 33-34

Create the :math:`\vect{X}|\vect{\Theta}` distribution

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: Python

    XgivenThetaDist = ot.Uniform()








.. GENERATED FROM PYTHON SOURCE LINES 37-38

create the distribution

.. GENERATED FROM PYTHON SOURCE LINES 38-42

.. code-block:: Python

    XDist = ot.DeconditionedDistribution(XgivenThetaDist, YDist, f)
    XDist.setDescription(["X|Theta=f(y)"])
    XDist






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    DeconditionedDistribution
    <ul>
      <li>name=DeconditionedDistribution</li>
      <li>dimension=1</li>
      <li>weight=1</li>
      <li>range=[-0.998771, 1.99754]</li>
      <li>description=[X|Theta=f(y)]</li>
      <li>isParallel=true</li>
      <li>isCopula=false</li>
    </ul>

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 43-44

Get a sample

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: Python

    XDist.getSample(5)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X|Theta=f(y)</th></tr>
      <tr><th>0</th><td>-0.6322433</td></tr>
      <tr><th>1</th><td>1.073249</td></tr>
      <tr><th>2</th><td>1.845307</td></tr>
      <tr><th>3</th><td>0.5121019</td></tr>
      <tr><th>4</th><td>0.1032413</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 47-48

Draw PDF

.. GENERATED FROM PYTHON SOURCE LINES 48-52

.. code-block:: Python

    graph = XDist.drawPDF()
    view = otv.View(graph)





.. image-sg:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_conditional_distribution_001.png
   :alt: plot conditional distribution
   :srcset: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_conditional_distribution_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 53-54

.. code-block:: Python

    view.ShowAll()








.. _sphx_glr_download_auto_probabilistic_modeling_distributions_plot_conditional_distribution.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_conditional_distribution.ipynb <plot_conditional_distribution.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_conditional_distribution.py <plot_conditional_distribution.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_conditional_distribution.zip <plot_conditional_distribution.zip>`
