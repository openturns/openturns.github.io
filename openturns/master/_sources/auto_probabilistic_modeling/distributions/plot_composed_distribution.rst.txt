
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/distributions/plot_composed_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_distributions_plot_composed_distribution.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_distributions_plot_composed_distribution.py:


Create a composed distribution
==============================

.. GENERATED FROM PYTHON SOURCE LINES 6-7

In this example we are going to create a multidimensional distribution described by its marginal distributions and optionally its dependence structure (a particular copula).

.. GENERATED FROM PYTHON SOURCE LINES 9-15

.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 16-17

create the marginals

.. GENERATED FROM PYTHON SOURCE LINES 17-19

.. code-block:: default

    marginals = [ot.Normal(), ot.Gumbel()]








.. GENERATED FROM PYTHON SOURCE LINES 20-21

create the multivariate distribution, assume no dependency structure

.. GENERATED FROM PYTHON SOURCE LINES 21-23

.. code-block:: default

    distribution = ot.ComposedDistribution(marginals)








.. GENERATED FROM PYTHON SOURCE LINES 24-25

draw PDF

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: default

    graph = distribution.drawPDF()
    view = viewer.View(graph)




.. image:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_composed_distribution_001.png
    :alt: [X0,X1] iso-PDF
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 29-30

create the copula which specifies the dependency structure

.. GENERATED FROM PYTHON SOURCE LINES 30-35

.. code-block:: default

    R = ot.CorrelationMatrix(2)
    R[0, 1] = 0.3
    copula = ot.NormalCopula(R)
    copula






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>NormalCopula(R = [[ 1   0.3 ]<br>
     [ 0.3 1   ]])</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 36-37

create the multivariate distribution with the desired copula

.. GENERATED FROM PYTHON SOURCE LINES 37-39

.. code-block:: default

    distribution = ot.ComposedDistribution(marginals, copula)








.. GENERATED FROM PYTHON SOURCE LINES 40-41

draw PDF

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: default

    graph = distribution.drawPDF()
    view = viewer.View(graph)
    plt.show()



.. image:: /auto_probabilistic_modeling/distributions/images/sphx_glr_plot_composed_distribution_002.png
    :alt: [X0,X1] iso-PDF
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.287 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_distributions_plot_composed_distribution.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_composed_distribution.py <plot_composed_distribution.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_composed_distribution.ipynb <plot_composed_distribution.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
