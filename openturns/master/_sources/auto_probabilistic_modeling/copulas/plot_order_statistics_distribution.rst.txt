
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/copulas/plot_order_statistics_distribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_copulas_plot_order_statistics_distribution.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_copulas_plot_order_statistics_distribution.py:


Create a maximum entropy statistics distribution
================================================

.. GENERATED FROM PYTHON SOURCE LINES 6-11

In this example we are going to build maximum entropy statistics distribution, which yields ordered realizations:

.. math::
   X_1 \leq \dots \leq X_n


.. GENERATED FROM PYTHON SOURCE LINES 13-19

.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 20-21

create a collection of distribution

.. GENERATED FROM PYTHON SOURCE LINES 21-23

.. code-block:: default

    coll = [ot.Beta(1.5, 1.7, 0.0, 1.0),  ot.Beta(2.0, 2.3, 0.5, 1.2)]








.. GENERATED FROM PYTHON SOURCE LINES 24-25

create the distribution

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: default

    distribution = ot.MaximumEntropyOrderStatisticsDistribution(coll)
    print(distribution)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    MaximumEntropyOrderStatisticsDistribution(collection = [Beta(alpha = 1.5, beta = 1.7, a = 0, b = 1),Beta(alpha = 2, beta = 2.3, a = 0.5, b = 1.2)])




.. GENERATED FROM PYTHON SOURCE LINES 29-30

draw a sample (ordered!)

.. GENERATED FROM PYTHON SOURCE LINES 30-32

.. code-block:: default

    distribution.getSample(10)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>X0</TH><TH>X1</TH></TR>
    <TR><TH>0</TH><TD>0.6440287</TD><TD>1.086573</TD></TR>
    <TR><TH>1</TH><TD>0.7141691</TD><TD>0.9588674</TD></TR>
    <TR><TH>2</TH><TD>0.4362711</TD><TD>0.6576377</TD></TR>
    <TR><TH>3</TH><TD>0.5940418</TD><TD>0.6238439</TD></TR>
    <TR><TH>4</TH><TD>0.5273163</TD><TD>0.5399325</TD></TR>
    <TR><TH>5</TH><TD>0.3097874</TD><TD>0.742308</TD></TR>
    <TR><TH>6</TH><TD>0.6399305</TD><TD>0.7142689</TD></TR>
    <TR><TH>7</TH><TD>0.8138742</TD><TD>0.8253311</TD></TR>
    <TR><TH>8</TH><TD>0.5889975</TD><TD>0.7029539</TD></TR>
    <TR><TH>9</TH><TD>0.4969304</TD><TD>0.5786498</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 33-34

draw PDF

.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: default

    graph = distribution.drawPDF()
    view = viewer.View(graph)
    plt.show()



.. image:: /auto_probabilistic_modeling/copulas/images/sphx_glr_plot_order_statistics_distribution_001.png
    :alt: [X0,X1] iso-PDF
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.378 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_copulas_plot_order_statistics_distribution.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_order_statistics_distribution.py <plot_order_statistics_distribution.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_order_statistics_distribution.ipynb <plot_order_statistics_distribution.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
