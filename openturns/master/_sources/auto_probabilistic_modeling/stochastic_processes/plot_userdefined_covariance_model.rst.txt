
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_userdefined_covariance_model.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_userdefined_covariance_model.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_userdefined_covariance_model.py:


Create a custom covariance model
================================

.. GENERATED FROM PYTHON SOURCE LINES 7-10

This example illustrates how the user can define his own covariance model.



.. GENERATED FROM PYTHON SOURCE LINES 12-18

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    import math as m

    ot.Log.Show(ot.Log.NONE)







.. GENERATED FROM PYTHON SOURCE LINES 19-21

Construct the covariance model
------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 23-24

Create the time grid

.. GENERATED FROM PYTHON SOURCE LINES 24-29

.. code-block:: Python

    N = 32
    a = 4.0
    mesh = ot.IntervalMesher([N]).build(ot.Interval(-a, a))









.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the covariance function depending on `(s,t)`

.. GENERATED FROM PYTHON SOURCE LINES 31-35

.. code-block:: Python

    def C(s, t):
        return m.exp(-4.0 * abs(s - t) / (1 + (s * s + t * t)))









.. GENERATED FROM PYTHON SOURCE LINES 36-37

Create the large covariance matrix

.. GENERATED FROM PYTHON SOURCE LINES 37-44

.. code-block:: Python

    covariance = ot.CovarianceMatrix(mesh.getVerticesNumber())
    for k in range(mesh.getVerticesNumber()):
        t = mesh.getVertices()[k]
        for ll in range(k + 1):
            s = mesh.getVertices()[ll]
            covariance[k, ll] = C(s[0], t[0])








.. GENERATED FROM PYTHON SOURCE LINES 45-46

Create the covariance model

.. GENERATED FROM PYTHON SOURCE LINES 46-49

.. code-block:: Python

    covmodel = ot.UserDefinedCovarianceModel(mesh, covariance)









.. GENERATED FROM PYTHON SOURCE LINES 50-52

Draw the covariance model as a function
---------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 55-56

Define the function to draw

.. GENERATED FROM PYTHON SOURCE LINES 56-63

.. code-block:: Python

    def f(x):
        return [covmodel([x[0]], [x[1]])[0, 0]]


    func = ot.PythonFunction(2, 1, f)
    func.setDescription(["$s$", "$t$", "$cov$"])








.. GENERATED FROM PYTHON SOURCE LINES 64-65

Draw the function with default options

.. GENERATED FROM PYTHON SOURCE LINES 65-70

.. code-block:: Python

    cov_graph = func.draw([-a] * 2, [a] * 2, [512] * 2)
    cov_graph.setLegendPosition("")
    view = viewer.View(cov_graph)





.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_userdefined_covariance_model_001.png
   :alt: $cov$ as a function of ($s$,$t$)
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_userdefined_covariance_model_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 71-72

Draw the function in a filled contour graph

.. GENERATED FROM PYTHON SOURCE LINES 72-77

.. code-block:: Python

    cov_graph = func.draw(
        0, 1, 0, [0] * 2, [-a] * 2, [a] * 2, [512] * 2, ot.GraphImplementation.NONE, True
    )
    view = viewer.View(cov_graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_userdefined_covariance_model_002.png
   :alt: $cov$ as a function of ($s$,$t$)
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_userdefined_covariance_model_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 78-80

Draw the covariance model as a matrix
-------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 82-83

Use raw matshow

.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. code-block:: Python

    plt.matshow(covariance)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_userdefined_covariance_model_003.png
   :alt: plot userdefined covariance model
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_userdefined_covariance_model_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.image.AxesImage object at 0x75e2957313d0>



.. GENERATED FROM PYTHON SOURCE LINES 86-91

Draw the covariance model as a matrix with the correct axes.

To obtain the correct orientation of the y axis we use the origin argument.
To obtain the correct graduations we use the extent argument.
We also change the colormap used.

.. GENERATED FROM PYTHON SOURCE LINES 91-99

.. code-block:: Python

    pas = 2 * a / (N - 1)
    plt.matshow(
        covariance,
        cmap="gray",
        origin="lower",
        extent=(-a - pas / 2, a + pas / 2, -a - pas / 2, a + pas / 2),
    )
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_userdefined_covariance_model_004.png
   :alt: plot userdefined covariance model
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_userdefined_covariance_model_004.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.743 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_userdefined_covariance_model.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_userdefined_covariance_model.ipynb <plot_userdefined_covariance_model.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_userdefined_covariance_model.py <plot_userdefined_covariance_model.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_userdefined_covariance_model.zip <plot_userdefined_covariance_model.zip>`
