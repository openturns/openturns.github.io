
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_discrete_markov_chain_process.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_discrete_markov_chain_process.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_discrete_markov_chain_process.py:


Create a discrete Markov chain process
======================================

.. GENERATED FROM PYTHON SOURCE LINES 6-26

This example details first how to create and manipulate a discrete Markov chain.

A discrete Markov chain :math:`X: \Omega \times \mathcal{D} \rightarrow E`, where :math:`E = [\![ 0,...,p-1]\!]` is a process
where :math:`\mathcal{D}=\mathbb{R}` discretized on the time grid :math:`(t_k)_{k \geq 0}` such
that:

.. math::
   \begin{aligned}
     \forall k > 0,\: \mathbb{P} ( X_{t_k} \> | \> X_{t_0},...X_{t_{k-1}} )  =  \mathbb{P} ( X_{t_k} \> | \> X_{t_{k-1}} )
  \end{aligned}


The transition matrix of the process :math:`\mathcal{M} = (m_{i,j})` can be defined such that:

.. math::
    \begin{aligned}
        \forall t_k \in \mathcal{D}, \forall i,j < p , \> m_{i+1,j+1} = \mathbb{P} (X_{t_{k+1}} = j \> | \> X_{t_{k}} = i)
    \end{aligned}

The library proposes to model it through the object *DiscreteMarkovChain* defined thanks to the origin :math:`X_{t_0}` (which can be either deterministic or uncertain), the transition matrix :math:`\mathcal{M}` and the time grid.

.. GENERATED FROM PYTHON SOURCE LINES 28-34

.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Define the origin

.. GENERATED FROM PYTHON SOURCE LINES 36-38

.. code-block:: default

    origin = ot.Dirac(0.0)








.. GENERATED FROM PYTHON SOURCE LINES 39-40

Define the transition matrix

.. GENERATED FROM PYTHON SOURCE LINES 40-42

.. code-block:: default

    transition = ot.SquareMatrix([[0.1, 0.3, 0.6], [0.7, 0.1, 0.2], [0.5, 0.3, 0.2]])








.. GENERATED FROM PYTHON SOURCE LINES 43-44

Define an 1-d mesh

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: default

    tgrid = ot.RegularGrid(0.0, 1.0, 50)








.. GENERATED FROM PYTHON SOURCE LINES 47-48

Markov chain definition and realization

.. GENERATED FROM PYTHON SOURCE LINES 48-54

.. code-block:: default

    process = ot.DiscreteMarkovChain(origin, transition, tgrid)
    real = process.getRealization()
    graph = real.drawMarginal(0)
    graph.setTitle('Discrete Markov chain')
    view = viewer.View(graph)




.. image:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_discrete_markov_chain_process_001.png
    :alt: Discrete Markov chain
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-56

Get several realizations

.. GENERATED FROM PYTHON SOURCE LINES 56-62

.. code-block:: default

    process.setTimeGrid(ot.RegularGrid(0.0,1.0,20))
    reals = process.getSample(3)
    graph = reals.drawMarginal(0)
    graph.setTitle('Discrete Markov chain, 3 realizations')
    view = viewer.View(graph)




.. image:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_discrete_markov_chain_process_002.png
    :alt: Discrete Markov chain, 3 realizations
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 63-64

Markov chain future 10 steps

.. GENERATED FROM PYTHON SOURCE LINES 64-69

.. code-block:: default

    future = process.getFuture(10)
    graph = future.drawMarginal(0)
    graph.setTitle('Markov chain future 10 steps')
    view = viewer.View(graph)




.. image:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_discrete_markov_chain_process_003.png
    :alt: Markov chain future 10 steps
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 70-71

Markov chain 3 different futures

.. GENERATED FROM PYTHON SOURCE LINES 71-76

.. code-block:: default

    futures = process.getFuture(10,3)
    graph = futures.drawMarginal(0)
    graph.setTitle('Three Markov chain futures, 10 steps')
    view = viewer.View(graph)
    plt.show()



.. image:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_discrete_markov_chain_process_004.png
    :alt: Three Markov chain futures, 10 steps
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.413 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_discrete_markov_chain_process.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_discrete_markov_chain_process.py <plot_discrete_markov_chain_process.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_discrete_markov_chain_process.ipynb <plot_discrete_markov_chain_process.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
