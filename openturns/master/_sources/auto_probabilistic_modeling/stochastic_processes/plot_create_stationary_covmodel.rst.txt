
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_create_stationary_covmodel.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_create_stationary_covmodel.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_create_stationary_covmodel.py:


Create a stationary covariance model
====================================

.. GENERATED FROM PYTHON SOURCE LINES 6-32

This use case illustrates how the User can create a covariance function from parametric models.
The library implements the *multivariate Exponential model* as a parametric model for the covariance function where the spatial covariance function :math:`\rho` writes:

.. math::
   \rho(\underline{s}, \underline{t} ) = e^{-\left\| \underline{s}- \underline{t} \right\|_2} \quad \forall (\underline{s}, \underline{t}) \in \mathcal{D}

It is possible to define the exponential model from the spatial covariance matrix :math:`\underline{\underline{C}}^{spat}` rather than the correlation matrix :math:`\underline{\underline{R}}`:

.. math::
    \forall \underline{t} \in \mathcal{D},\quad \underline{\underline{C}}^{spat} = \mathbb{E} \left[ X_{\underline{t}} X^t_{\underline{t}} \right] = \underline{\underline{A}}\,\underline{\underline{R}}\, \underline{\underline{A}}

with:

.. math::
   \underline{\underline{A}} = \mbox{Diag}(a_1, \dots, a_d)

We call :math:`\underline{a}` the amplitude vector and :math:`\underline{\lambda}` the scale vector.

The library implements the multivariate exponential model thanks to the object *ExponentialModel* which is created from:


- the scale and amplitude vectors :math:`(\underline{\lambda}, \underline{a})`: in that case, by default :math:`\underline{\underline{R}} = \underline{\underline{I}}`;
- the scale and amplitude vectors and the spatial correlation matrix  :math:`(\underline{\lambda}, \underline{a},\underline{\underline{R}})`;
- the scale and amplitude vectors and the spatial covariance matrix  :math:`(\underline{\lambda}, \underline{a},\underline{\underline{C}})`;
  Then :math:`\underline{\underline{C}}` is mapped into the associated correlation matrix :math:`\underline{\underline{R}}` and the previous constructor is used.


.. GENERATED FROM PYTHON SOURCE LINES 34-38

.. code-block:: default

    import openturns as ot

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 39-40

Create the amplitude vector (output dimension 3)

.. GENERATED FROM PYTHON SOURCE LINES 40-60

.. code-block:: default

    amplitude = [1.0, 2.0, 3.0]

    # Scale vector (input dimension 1)
    scale = [4.0]

    # spatialCorrelation
    spatialCorrelation = ot.CorrelationMatrix(3)
    spatialCorrelation[0, 1] = 0.8
    spatialCorrelation[0, 2] = 0.6
    spatialCorrelation[1, 2] = 0.1

    # spatialCovariance
    spatialCovariance = ot.CovarianceMatrix(3)
    spatialCovariance[0, 0] = 4.0
    spatialCovariance[1, 1] = 5.0
    spatialCovariance[2, 2] = 6.0
    spatialCovariance[0, 1] = 1.2
    spatialCovariance[0, 2] = 0.9
    spatialCovariance[1, 2] = -0.2








.. GENERATED FROM PYTHON SOURCE LINES 61-62

Create the covariance model from the amplitude and scale, no spatial correlation

.. GENERATED FROM PYTHON SOURCE LINES 62-64

.. code-block:: default

    ot.ExponentialModel(scale, amplitude)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>ExponentialModel(scale=[4], amplitude=[1,2,3], no spatial correlation)</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 65-66

or from the amplitude, scale and spatialCovariance

.. GENERATED FROM PYTHON SOURCE LINES 66-68

.. code-block:: default

    ot.ExponentialModel(scale, amplitude, spatialCorrelation)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>ExponentialModel(scale=[4], amplitude=[1,2,3], spatial correlation=<br>
    [[ 1   0.8 0.6 ]<br>
     [ 0.8 1   0.1 ]<br>
     [ 0.6 0.1 1   ]])</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-70

or from the scale and spatialCovariance

.. GENERATED FROM PYTHON SOURCE LINES 70-71

.. code-block:: default

    ot.ExponentialModel(scale, spatialCovariance)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>ExponentialModel(scale=[4], amplitude=[2,2.23607,2.44949], spatial correlation=<br>
    [[  1          0.268328   0.183712  ]<br>
     [  0.268328   1         -0.0365148 ]<br>
     [  0.183712  -0.0365148  1         ]])</p>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.003 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_create_stationary_covmodel.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_create_stationary_covmodel.py <plot_create_stationary_covmodel.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_create_stationary_covmodel.ipynb <plot_create_stationary_covmodel.ipynb>`
