
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-1.49593,-1.78805,0.398296],[1.48969,2.26602,0.118253],[-0.40708,0.0607846,-0.654845],[0.364534,-2.14263,0.954047],[0.464764,0.0431245,0.979569],[-0.242276,0.372278,1.68835],[0.920129,-0.438236,-0.630551],[0.897167,-1.21482,-0.353617],[0.203765,-0.568447,0.261984],[-0.506183,-0.979379,1.22373],[-0.564772,-0.300683,0.370902],[-1.21635,1.94823,-0.924245],[0.949056,0.384918,1.52387],[0.534127,0.285084,-0.522056],[0.329246,0.332832,-1.50033],[-0.0533484,0.352261,0.10447],[1.30401,1.57636,1.29518],[-0.400447,-1.97847,-1.03647],[0.499836,-1.05229,1.54313],[0.396343,0.803623,-2.37489],[0.965371,0.504655,0.801387],[0.825575,0.610568,-1.53142],[-1.52921,-0.64038,1.81848],[-0.50699,0.307893,-0.375043],[-0.216535,0.723543,-1.26912],[-0.433269,1.15789,-0.790997],[-2.05652,1.09801,-0.784791],[0.674562,-0.896392,-1.48483],[-0.0307624,0.806981,-0.147193],[2.11577,1.20431,0.520882],[-0.98611,0.538988,1.87587],[0.917015,-0.458245,-1.52361],[1.1378,0.508111,0.472757],[0.769111,-1.95593,-0.509681],[1.27922,-1.34548,-0.280589],[1.18151,0.161984,1.00385],[0.172106,-0.982605,0.197192],[0.255772,-0.863752,1.05693],[-0.154458,-0.0119612,0.368945],[0.868623,0.908919,-0.982979],[0.660956,0.926693,0.145944],[1.40382,1.44376,0.388451],[0.76438,-2.0577,-0.795768],[-0.354664,-1.34408,0.548944],[-0.647012,-0.457824,0.903265],[-0.32998,1.28957,-0.0775801],[1.33111,0.735798,-0.274171],[-0.127159,-1.41042,-0.65531],[0.177689,-0.237834,-1.50586],[-0.900952,0.268715,-0.0933616],[-0.563665,-0.142909,-0.568582],[0.273904,1.43596,1.0374],[0.120264,1.11535,0.589974],[-0.218412,-0.23464,-0.847642],[0.492996,0.0189056,-0.567358],[0.0716648,-0.682668,-0.0085884],[-1.64145,0.266322,-1.29964],[0.352805,0.686046,-0.0754229],[0.770212,0.120954,-1.16581],[0.383473,0.1017,1.53833],[1.49685,0.475161,-0.195345],[-1.95155,-1.06219,0.898985],[-1.36832,-0.423198,1.32863],[-0.887517,-0.155404,-1.02521],[1.07566,1.54527,-0.735497],[0.822469,0.51592,-1.47413],[-0.772138,-0.0614279,-0.0854661],[-0.352172,0.871567,0.14399],[0.887824,0.988026,0.860907],[-0.293775,0.0167719,-0.120875],[-0.41711,-0.424837,-1.56024],[0.385097,-1.03109,0.720051],[-2.1428,-0.381708,0.677758],[0.747934,0.573009,1.67108],[-0.522339,-0.354268,-0.442569],[1.13098,-1.05056,-0.342971],[-1.43616,-0.639565,1.20405],[-0.25211,-0.0285873,-0.404182],[-0.117111,0.134192,0.8841],[-0.883756,-1.1228,-0.697026],[0.809892,-0.529813,-0.631706],[-2.38046,0.888387,0.199086],[-0.350471,-2.02591,1.30877],[0.497974,-0.0759786,0.383637],[-0.171006,-1.03517,0.648431],[0.0113479,-0.951294,-0.300549],[-1.46537,0.144694,-0.495559],[-0.739685,0.498294,-0.253484],[-1.08924,1.20179,-1.4136],[-2.23463,0.156334,1.18527],[-0.0294335,-0.342164,-0.717644],[0.587462,0.659403,0.410661],[-0.888157,0.641001,-0.947234],[-0.502917,-1.02079,1.55652],[0.802058,-0.658881,0.774827],[-0.580514,0.770429,0.948207],[0.261621,-0.509793,0.669575],[0.517516,0.0514511,0.297611],[-1.69843,0.505326,0.997483],[-0.323185,0.235026,0.873936]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.4361552</td><td>0.9025005</td><td>0.5853829</td></tr>
      <tr><th>1</th><td>0.1</td><td>-0.7184092</td><td>-2.368226</td><td>0.5443587</td></tr>
      <tr><th>2</th><td>0.2</td><td>0.2757092</td><td>-0.9291016</td><td>1.352597</td></tr>
      <tr><th>3</th><td>0.3</td><td>0.06232148</td><td>-0.8531238</td><td>-1.356738</td></tr>
      <tr><th>4</th><td>0.4</td><td>1.068514</td><td>-0.200405</td><td>-1.82948</td></tr>
      <tr><th>5</th><td>0.5</td><td>0.9182191</td><td>0.5835473</td><td>0.09132903</td></tr>
      <tr><th>6</th><td>0.6</td><td>0.6430566</td><td>-0.8590896</td><td>-0.8030329</td></tr>
      <tr><th>7</th><td>0.7</td><td>0.8962341</td><td>-1.316951</td><td>-0.01149726</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.6628488</td><td>-0.05474896</td><td>-0.7676742</td></tr>
      <tr><th>9</th><td>0.9</td><td>0.924745</td><td>-1.121636</td><td>1.238437</td></tr>
      <tr><th>10</th><td>1</td><td>0.9107344</td><td>0.07231526</td><td>1.090272</td></tr>
      <tr><th>11</th><td>1.1</td><td>-0.1566808</td><td>-0.5249371</td><td>0.5527062</td></tr>
      <tr><th>12</th><td>1.2</td><td>1.302091</td><td>-0.2808364</td><td>0.2068209</td></tr>
      <tr><th>13</th><td>1.3</td><td>-0.461368</td><td>-1.160595</td><td>0.8500207</td></tr>
      <tr><th>14</th><td>1.4</td><td>-0.9912753</td><td>-1.504321</td><td>0.1295255</td></tr>
      <tr><th>15</th><td>1.5</td><td>1.651052</td><td>1.955239</td><td>0.1246915</td></tr>
      <tr><th>16</th><td>1.6</td><td>1.640839</td><td>-0.2970899</td><td>-0.344176</td></tr>
      <tr><th>17</th><td>1.7</td><td>2.144119</td><td>0.5218872</td><td>0.08691471</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.1382511</td><td>0.538688</td><td>1.198113</td></tr>
      <tr><th>19</th><td>1.9</td><td>-0.4865582</td><td>-0.2374941</td><td>-0.07006011</td></tr>
      <tr><th>20</th><td>2</td><td>-1.325103</td><td>1.399299</td><td>0.4244303</td></tr>
      <tr><th>21</th><td>2.1</td><td>0.4271125</td><td>-2.856728</td><td>2.012459</td></tr>
      <tr><th>22</th><td>2.2</td><td>1.504603</td><td>-0.004179435</td><td>0.7953167</td></tr>
      <tr><th>23</th><td>2.3</td><td>2.012973</td><td>-0.04929104</td><td>0.8119239</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.1651816</td><td>-1.04382</td><td>-0.9461147</td></tr>
      <tr><th>25</th><td>2.5</td><td>-1.414466</td><td>0.2321896</td><td>0.8674696</td></tr>
      <tr><th>26</th><td>2.6</td><td>0.6470525</td><td>-2.531896</td><td>0.1897285</td></tr>
      <tr><th>27</th><td>2.7</td><td>1.491191</td><td>1.415183</td><td>-0.3676942</td></tr>
      <tr><th>28</th><td>2.8</td><td>-1.734811</td><td>1.38644</td><td>0.01765961</td></tr>
      <tr><th>29</th><td>2.9</td><td>-1.658927</td><td>0.194939</td><td>1.171514</td></tr>
      <tr><th>30</th><td>3</td><td>0.1802254</td><td>0.1198505</td><td>0.2660359</td></tr>
      <tr><th>31</th><td>3.1</td><td>-1.544704</td><td>-0.9627244</td><td>-1.383454</td></tr>
      <tr><th>32</th><td>3.2</td><td>-0.3607729</td><td>0.8348612</td><td>0.4798783</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.3935805</td><td>-2.158076</td><td>0.2510048</td></tr>
      <tr><th>34</th><td>3.4</td><td>1.078358</td><td>0.1201074</td><td>2.128676</td></tr>
      <tr><th>35</th><td>3.5</td><td>0.2626359</td><td>0.2491397</td><td>-1.23845</td></tr>
      <tr><th>36</th><td>3.6</td><td>-1.30374</td><td>0.8851511</td><td>-0.1121505</td></tr>
      <tr><th>37</th><td>3.7</td><td>-0.3451013</td><td>1.963376</td><td>-0.1304791</td></tr>
      <tr><th>38</th><td>3.8</td><td>-0.08808395</td><td>-1.427684</td><td>-0.08328389</td></tr>
      <tr><th>39</th><td>3.9</td><td>0.188659</td><td>0.4355174</td><td>1.033348</td></tr>
      <tr><th>40</th><td>4</td><td>2.268686</td><td>-0.3365096</td><td>1.249999</td></tr>
      <tr><th>41</th><td>4.1</td><td>-0.6308257</td><td>0.1660046</td><td>-0.09686297</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.9443034</td><td>-0.6554592</td><td>1.685795</td></tr>
      <tr><th>43</th><td>4.3</td><td>0.4632588</td><td>-0.3671818</td><td>-1.268037</td></tr>
      <tr><th>44</th><td>4.4</td><td>0.2840942</td><td>-0.1869771</td><td>-1.650254</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.4975101</td><td>0.2418607</td><td>-1.189623</td></tr>
      <tr><th>46</th><td>4.6</td><td>-1.286412</td><td>-0.986196</td><td>1.825154</td></tr>
      <tr><th>47</th><td>4.7</td><td>-1.651026</td><td>0.3675075</td><td>-0.5747416</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.8666763</td><td>-0.61016</td><td>-1.181058</td></tr>
      <tr><th>49</th><td>4.9</td><td>1.377106</td><td>-1.500974</td><td>0.7818488</td></tr>
      <tr><th>50</th><td>5</td><td>0.05847969</td><td>-1.121997</td><td>0.5067662</td></tr>
      <tr><th>51</th><td>5.1</td><td>-0.3835761</td><td>-0.6536614</td><td>-0.8552251</td></tr>
      <tr><th>52</th><td>5.2</td><td>-0.7880499</td><td>0.7664494</td><td>0.0867305</td></tr>
      <tr><th>53</th><td>5.3</td><td>-0.1671313</td><td>1.571402</td><td>0.5237354</td></tr>
      <tr><th>54</th><td>5.4</td><td>-2.271012</td><td>1.473439</td><td>-1.149154</td></tr>
      <tr><th>55</th><td>5.5</td><td>-1.301355</td><td>0.1351959</td><td>-0.3507404</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.7663741</td><td>0.8002677</td><td>-1.07428</td></tr>
      <tr><th>57</th><td>5.7</td><td>-0.7678262</td><td>-0.466856</td><td>-0.249732</td></tr>
      <tr><th>58</th><td>5.8</td><td>0.3828273</td><td>-1.220903</td><td>-1.083455</td></tr>
      <tr><th>59</th><td>5.9</td><td>0.211424</td><td>0.1781521</td><td>2.066804</td></tr>
      <tr><th>60</th><td>6</td><td>0.505195</td><td>-3.7571</td><td>-0.855569</td></tr>
      <tr><th>61</th><td>6.1</td><td>1.131337</td><td>0.4048984</td><td>-1.292772</td></tr>
      <tr><th>62</th><td>6.2</td><td>-0.5885152</td><td>-0.9040348</td><td>-1.811424</td></tr>
      <tr><th>63</th><td>6.3</td><td>-0.4540115</td><td>0.4872801</td><td>-2.103385</td></tr>
      <tr><th>64</th><td>6.4</td><td>-0.4182675</td><td>-0.2211023</td><td>0.1783326</td></tr>
      <tr><th>65</th><td>6.5</td><td>0.8046797</td><td>0.8205583</td><td>0.0913624</td></tr>
      <tr><th>66</th><td>6.6</td><td>-1.093873</td><td>0.4436267</td><td>0.620545</td></tr>
      <tr><th>67</th><td>6.7</td><td>1.691478</td><td>0.2795307</td><td>0.2088909</td></tr>
      <tr><th>68</th><td>6.8</td><td>0.5535081</td><td>1.932881</td><td>1.161575</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.2763577</td><td>-0.5663548</td><td>0.303096</td></tr>
      <tr><th>70</th><td>7</td><td>-2.376118</td><td>-1.006016</td><td>0.5273854</td></tr>
      <tr><th>71</th><td>7.1</td><td>-1.426188</td><td>0.6233944</td><td>0.6532991</td></tr>
      <tr><th>72</th><td>7.2</td><td>0.5299803</td><td>-0.7518613</td><td>0.5654809</td></tr>
      <tr><th>73</th><td>7.3</td><td>-0.415121</td><td>0.6694832</td><td>-0.859268</td></tr>
      <tr><th>74</th><td>7.4</td><td>-0.4080791</td><td>-1.169819</td><td>-2.267168</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.4958234</td><td>-0.9757402</td><td>0.2415626</td></tr>
      <tr><th>76</th><td>7.6</td><td>1.718893</td><td>0.4791522</td><td>1.820716</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.893837</td><td>0.1190557</td><td>-2.198463</td></tr>
      <tr><th>78</th><td>7.8</td><td>-1.263902</td><td>-1.019062</td><td>-1.494342</td></tr>
      <tr><th>79</th><td>7.9</td><td>-1.605574</td><td>0.1263031</td><td>0.0003113966</td></tr>
      <tr><th>80</th><td>8</td><td>-0.6211834</td><td>1.416651</td><td>0.07860792</td></tr>
      <tr><th>81</th><td>8.1</td><td>0.1804061</td><td>0.8434724</td><td>0.1035083</td></tr>
      <tr><th>82</th><td>8.2</td><td>1.028753</td><td>1.009904</td><td>0.1023514</td></tr>
      <tr><th>83</th><td>8.3</td><td>0.2753848</td><td>0.4710608</td><td>0.1288417</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.4479726</td><td>-0.04276567</td><td>0.4439627</td></tr>
      <tr><th>85</th><td>8.5</td><td>-0.5989925</td><td>-1.868466</td><td>-0.2356728</td></tr>
      <tr><th>86</th><td>8.6</td><td>-0.1256057</td><td>-1.371393</td><td>-1.024909</td></tr>
      <tr><th>87</th><td>8.7</td><td>0.3003323</td><td>-0.2583919</td><td>0.05896106</td></tr>
      <tr><th>88</th><td>8.8</td><td>0.1419329</td><td>0.595315</td><td>-0.4886994</td></tr>
      <tr><th>89</th><td>8.9</td><td>1.923915</td><td>0.1577672</td><td>1.485828</td></tr>
      <tr><th>90</th><td>9</td><td>-2.047378</td><td>0.6123952</td><td>-0.261225</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.7533827</td><td>-0.9184318</td><td>-0.9723859</td></tr>
      <tr><th>92</th><td>9.2</td><td>-0.5923282</td><td>0.2597511</td><td>0.4661719</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.9679454</td><td>0.6224268</td><td>0.2757754</td></tr>
      <tr><th>94</th><td>9.4</td><td>0.5845005</td><td>0.3337173</td><td>2.51312</td></tr>
      <tr><th>95</th><td>9.5</td><td>1.251801</td><td>0.2853155</td><td>1.016155</td></tr>
      <tr><th>96</th><td>9.6</td><td>1.019465</td><td>1.194412</td><td>-1.460687</td></tr>
      <tr><th>97</th><td>9.7</td><td>1.533355</td><td>0.8344018</td><td>-0.5494846</td></tr>
      <tr><th>98</th><td>9.8</td><td>0.4734345</td><td>0.7373573</td><td>-1.002287</td></tr>
      <tr><th>99</th><td>9.9</td><td>0.4134034</td><td>1.11625</td><td>1.853142</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.255772,-0.863752,1.05693]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.255772,-0.863752,1.05693]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  0.25577203579995367




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-1.495928</td><td>-1.788047</td><td>0.3982964</td></tr>
      <tr><th>1</th><td>1.489693</td><td>2.266017</td><td>0.1182529</td></tr>
      <tr><th>2</th><td>-0.4070802</td><td>0.06078461</td><td>-0.6548447</td></tr>
      <tr><th>3</th><td>0.3645344</td><td>-2.142633</td><td>0.9540471</td></tr>
      <tr><th>4</th><td>0.4647645</td><td>0.0431245</td><td>0.9795687</td></tr>
      <tr><th>5</th><td>-0.2422764</td><td>0.3722784</td><td>1.688352</td></tr>
      <tr><th>6</th><td>0.9201293</td><td>-0.4382361</td><td>-0.6305509</td></tr>
      <tr><th>7</th><td>0.8971668</td><td>-1.214822</td><td>-0.3536175</td></tr>
      <tr><th>8</th><td>0.2037645</td><td>-0.568447</td><td>0.2619836</td></tr>
      <tr><th>9</th><td>-0.5061828</td><td>-0.9793789</td><td>1.223734</td></tr>
      <tr><th>10</th><td>-0.5647721</td><td>-0.3006826</td><td>0.3709018</td></tr>
      <tr><th>11</th><td>-1.216349</td><td>1.948227</td><td>-0.9242449</td></tr>
      <tr><th>12</th><td>0.9490555</td><td>0.3849176</td><td>1.523873</td></tr>
      <tr><th>13</th><td>0.5341267</td><td>0.2850839</td><td>-0.5220557</td></tr>
      <tr><th>14</th><td>0.3292461</td><td>0.3328323</td><td>-1.500331</td></tr>
      <tr><th>15</th><td>-0.05334841</td><td>0.3522608</td><td>0.1044701</td></tr>
      <tr><th>16</th><td>1.304009</td><td>1.576365</td><td>1.29518</td></tr>
      <tr><th>17</th><td>-0.4004465</td><td>-1.978474</td><td>-1.036471</td></tr>
      <tr><th>18</th><td>0.4998358</td><td>-1.052287</td><td>1.54313</td></tr>
      <tr><th>19</th><td>0.3963434</td><td>0.8036226</td><td>-2.374885</td></tr>
      <tr><th>20</th><td>0.9653706</td><td>0.5046554</td><td>0.8013865</td></tr>
      <tr><th>21</th><td>0.8255755</td><td>0.6105675</td><td>-1.531416</td></tr>
      <tr><th>22</th><td>-1.529212</td><td>-0.64038</td><td>1.818483</td></tr>
      <tr><th>23</th><td>-0.5069896</td><td>0.3078927</td><td>-0.3750434</td></tr>
      <tr><th>24</th><td>-0.2165348</td><td>0.7235429</td><td>-1.26912</td></tr>
      <tr><th>25</th><td>-0.4332687</td><td>1.157891</td><td>-0.7909972</td></tr>
      <tr><th>26</th><td>-2.05652</td><td>1.098009</td><td>-0.7847914</td></tr>
      <tr><th>27</th><td>0.6745615</td><td>-0.8963917</td><td>-1.484834</td></tr>
      <tr><th>28</th><td>-0.03076236</td><td>0.806981</td><td>-0.1471934</td></tr>
      <tr><th>29</th><td>2.115769</td><td>1.204311</td><td>0.5208823</td></tr>
      <tr><th>30</th><td>-0.9861102</td><td>0.5389879</td><td>1.875869</td></tr>
      <tr><th>31</th><td>0.9170148</td><td>-0.4582447</td><td>-1.523612</td></tr>
      <tr><th>32</th><td>1.137796</td><td>0.5081114</td><td>0.4727569</td></tr>
      <tr><th>33</th><td>0.7691113</td><td>-1.95593</td><td>-0.5096811</td></tr>
      <tr><th>34</th><td>1.279216</td><td>-1.345476</td><td>-0.2805888</td></tr>
      <tr><th>35</th><td>1.181514</td><td>0.1619842</td><td>1.003852</td></tr>
      <tr><th>36</th><td>0.1721062</td><td>-0.9826046</td><td>0.1971917</td></tr>
      <tr><th>37</th><td>0.255772</td><td>-0.8637517</td><td>1.056928</td></tr>
      <tr><th>38</th><td>-0.1544579</td><td>-0.01196115</td><td>0.3689451</td></tr>
      <tr><th>39</th><td>0.8686227</td><td>0.9089193</td><td>-0.9829789</td></tr>
      <tr><th>40</th><td>0.6609559</td><td>0.9266933</td><td>0.1459436</td></tr>
      <tr><th>41</th><td>1.403818</td><td>1.443758</td><td>0.3884509</td></tr>
      <tr><th>42</th><td>0.7643798</td><td>-2.057701</td><td>-0.7957679</td></tr>
      <tr><th>43</th><td>-0.3546644</td><td>-1.34408</td><td>0.5489435</td></tr>
      <tr><th>44</th><td>-0.647012</td><td>-0.4578245</td><td>0.9032653</td></tr>
      <tr><th>45</th><td>-0.3299796</td><td>1.289568</td><td>-0.07758007</td></tr>
      <tr><th>46</th><td>1.331111</td><td>0.7357982</td><td>-0.2741708</td></tr>
      <tr><th>47</th><td>-0.1271593</td><td>-1.410416</td><td>-0.6553102</td></tr>
      <tr><th>48</th><td>0.1776892</td><td>-0.2378335</td><td>-1.505861</td></tr>
      <tr><th>49</th><td>-0.900952</td><td>0.2687153</td><td>-0.09336155</td></tr>
      <tr><th>50</th><td>-0.5636654</td><td>-0.1429089</td><td>-0.5685817</td></tr>
      <tr><th>51</th><td>0.273904</td><td>1.43596</td><td>1.037396</td></tr>
      <tr><th>52</th><td>0.1202636</td><td>1.115345</td><td>0.5899737</td></tr>
      <tr><th>53</th><td>-0.2184118</td><td>-0.2346401</td><td>-0.8476424</td></tr>
      <tr><th>54</th><td>0.4929963</td><td>0.01890561</td><td>-0.5673581</td></tr>
      <tr><th>55</th><td>0.07166476</td><td>-0.6826682</td><td>-0.008588397</td></tr>
      <tr><th>56</th><td>-1.641453</td><td>0.2663215</td><td>-1.299642</td></tr>
      <tr><th>57</th><td>0.3528046</td><td>0.6860459</td><td>-0.07542293</td></tr>
      <tr><th>58</th><td>0.7702116</td><td>0.1209536</td><td>-1.165813</td></tr>
      <tr><th>59</th><td>0.3834728</td><td>0.1017001</td><td>1.538335</td></tr>
      <tr><th>60</th><td>1.496847</td><td>0.4751608</td><td>-0.195345</td></tr>
      <tr><th>61</th><td>-1.95155</td><td>-1.062191</td><td>0.8989847</td></tr>
      <tr><th>62</th><td>-1.368318</td><td>-0.4231979</td><td>1.328631</td></tr>
      <tr><th>63</th><td>-0.8875174</td><td>-0.1554045</td><td>-1.025215</td></tr>
      <tr><th>64</th><td>1.075661</td><td>1.545273</td><td>-0.7354973</td></tr>
      <tr><th>65</th><td>0.8224693</td><td>0.5159199</td><td>-1.474126</td></tr>
      <tr><th>66</th><td>-0.7721379</td><td>-0.06142787</td><td>-0.08546612</td></tr>
      <tr><th>67</th><td>-0.3521721</td><td>0.8715675</td><td>0.1439903</td></tr>
      <tr><th>68</th><td>0.8878237</td><td>0.9880256</td><td>0.860907</td></tr>
      <tr><th>69</th><td>-0.2937748</td><td>0.01677195</td><td>-0.1208754</td></tr>
      <tr><th>70</th><td>-0.4171096</td><td>-0.4248371</td><td>-1.560238</td></tr>
      <tr><th>71</th><td>0.3850975</td><td>-1.031094</td><td>0.7200509</td></tr>
      <tr><th>72</th><td>-2.142801</td><td>-0.3817075</td><td>0.6777582</td></tr>
      <tr><th>73</th><td>0.7479338</td><td>0.5730094</td><td>1.671083</td></tr>
      <tr><th>74</th><td>-0.5223386</td><td>-0.354268</td><td>-0.4425692</td></tr>
      <tr><th>75</th><td>1.130979</td><td>-1.05056</td><td>-0.342971</td></tr>
      <tr><th>76</th><td>-1.436158</td><td>-0.639565</td><td>1.204052</td></tr>
      <tr><th>77</th><td>-0.2521101</td><td>-0.02858727</td><td>-0.4041822</td></tr>
      <tr><th>78</th><td>-0.1171113</td><td>0.1341922</td><td>0.8840997</td></tr>
      <tr><th>79</th><td>-0.8837564</td><td>-1.122804</td><td>-0.6970263</td></tr>
      <tr><th>80</th><td>0.8098919</td><td>-0.5298126</td><td>-0.6317058</td></tr>
      <tr><th>81</th><td>-2.380455</td><td>0.888387</td><td>0.1990858</td></tr>
      <tr><th>82</th><td>-0.3504713</td><td>-2.025908</td><td>1.308772</td></tr>
      <tr><th>83</th><td>0.4979743</td><td>-0.07597858</td><td>0.3836372</td></tr>
      <tr><th>84</th><td>-0.1710055</td><td>-1.035169</td><td>0.6484309</td></tr>
      <tr><th>85</th><td>0.01134786</td><td>-0.9512936</td><td>-0.300549</td></tr>
      <tr><th>86</th><td>-1.465369</td><td>0.1446938</td><td>-0.4955587</td></tr>
      <tr><th>87</th><td>-0.7396853</td><td>0.4982941</td><td>-0.2534844</td></tr>
      <tr><th>88</th><td>-1.089241</td><td>1.201793</td><td>-1.4136</td></tr>
      <tr><th>89</th><td>-2.234634</td><td>0.1563339</td><td>1.185275</td></tr>
      <tr><th>90</th><td>-0.02943352</td><td>-0.3421641</td><td>-0.7176443</td></tr>
      <tr><th>91</th><td>0.5874625</td><td>0.6594025</td><td>0.4106613</td></tr>
      <tr><th>92</th><td>-0.8881571</td><td>0.6410008</td><td>-0.9472343</td></tr>
      <tr><th>93</th><td>-0.5029174</td><td>-1.020786</td><td>1.556516</td></tr>
      <tr><th>94</th><td>0.802058</td><td>-0.6588808</td><td>0.7748271</td></tr>
      <tr><th>95</th><td>-0.5805142</td><td>0.770429</td><td>0.9482069</td></tr>
      <tr><th>96</th><td>0.2616208</td><td>-0.5097928</td><td>0.6695748</td></tr>
      <tr><th>97</th><td>0.5175164</td><td>0.05145106</td><td>0.2976114</td></tr>
      <tr><th>98</th><td>-1.698429</td><td>0.5053256</td><td>0.9974833</td></tr>
      <tr><th>99</th><td>-0.3231854</td><td>0.2350262</td><td>0.8739356</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[-0.0146214,-0.00710809,0.0288364]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
