
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-1.20935,-0.665422,-0.672209],[1.42739,1.10299,-1.16851],[0.561302,-1.02943,-0.667569],[-0.648883,0.157631,-1.06816],[0.903095,-1.12787,0.333152],[0.60091,-1.33155,-0.717185],[0.246482,-1.703,-0.96713],[0.281029,-0.0409216,0.991792],[-0.591916,-1.75152,-0.0282168],[-0.545089,-0.705866,-2.58258],[1.54587,2.19234,-0.378296],[0.680732,-0.0861803,0.469484],[1.57111,1.42873,0.00337752],[-0.330639,1.12953,0.520502],[0.110113,0.410815,0.350095],[0.618419,1.7796,0.103092],[0.97057,-0.198629,1.59011],[-0.251434,0.81318,0.320815],[-1.46592,-0.571218,0.0158113],[1.76639,-0.72946,1.23811],[-0.600193,-0.014878,-0.566851],[-0.630607,1.5044,-1.03431],[-0.327967,0.996005,0.566442],[0.775806,0.414144,0.460453],[1.86378,0.489273,0.217751],[1.21933,1.51246,-0.174404],[-0.828922,0.56878,0.0634984],[-1.07447,0.448793,0.293342],[1.20587,-1.39479,-0.544796],[0.830137,0.781657,-0.608631],[-0.604662,-0.27674,-0.120375],[0.920937,-1.26815,1.15476],[-0.672204,0.0203962,0.164275],[-0.466749,0.987882,-0.496638],[1.12184,1.3306,-1.45213],[-0.79006,1.02042,-0.546807],[-0.116876,1.01704,0.383316],[1.22599,-0.123425,-0.914158],[-0.242276,0.910214,1.23578],[0.202392,1.02667,0.544829],[0.332149,-0.137938,-0.246491],[-0.932926,-1.09976,-0.121353],[-0.75451,-1.81899,-0.687277],[0.875796,-1.05375,-0.549376],[-0.314738,-0.199147,1.19613],[0.330785,-0.323325,-0.032306],[-0.548071,-1.17894,1.45443],[-1.16504,1.58469,1.33447],[1.49586,1.48679,-1.90956],[1.21193,-0.191663,0.969738],[1.1804,-0.288994,0.620123],[-0.0757318,1.13331,0.506056],[1.20202,-2.00883,-0.0476534],[-0.0170667,1.68983,-1.25244],[0.756925,-3.92603,1.08126],[-1.15251,0.724679,0.419295],[-1.4239,-1.10413,-1.13061],[2.12137,-0.326189,1.08404],[0.00361357,-1.12717,0.802935],[-0.918369,-1.2019,0.429651],[-0.856515,-1.49001,0.943202],[0.944551,-0.981911,-0.34511],[-0.265405,-0.292022,1.57382],[-0.10447,1.38471,-0.893537],[-0.693007,-0.607757,0.15178],[-0.433868,0.677082,-1.22922],[1.23513,0.645462,0.302072],[0.476476,0.560977,-0.620641],[-3.22793,-0.150103,-1.22873],[-0.628696,-0.599341,0.11873],[2.03142,-0.596985,0.666537],[2.52895,0.998953,0.476773],[-1.24234,1.01079,-2.21848],[-0.223835,-0.739356,0.00297058],[-2.55743,0.255915,0.63702],[-1.93435,2.61931,0.330167],[0.116493,-1.27367,0.473369],[0.0915365,-0.406909,2.14701],[-1.25603,0.795132,-0.789078],[-0.265437,-1.13055,-0.690701],[-0.936389,0.796421,-0.214423],[-0.24721,-1.58014,-0.298159],[0.847921,0.504099,0.116175],[-1.25761,0.375463,-0.598308],[-0.797982,-1.18696,0.455821],[-1.015,-2.01245,-0.255901],[1.95786,-1.78867,0.0347871],[-2.33587,-0.0776501,0.46341],[1.56954,-0.575878,-0.514656],[1.83378,1.64529,-0.898299],[0.566363,-0.40754,0.403643],[-1.28174,-0.232505,-0.238988],[1.26329,0.461753,-0.432794],[-0.262474,-0.928717,-0.623665],[-0.634858,0.260451,0.0754255],[-0.637168,0.711826,-0.106403],[-0.569906,-0.585882,0.683771],[0.0728471,1.56436,1.01868],[-1.32165,-0.797171,0.426246],[-0.649832,1.39846,0.849176]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.04179159</td><td>1.439154</td><td>0.6624838</td></tr>
      <tr><th>1</th><td>0.1</td><td>-0.009359922</td><td>0.2967535</td><td>-0.2868428</td></tr>
      <tr><th>2</th><td>0.2</td><td>0.2846556</td><td>-0.3002433</td><td>-0.284345</td></tr>
      <tr><th>3</th><td>0.3</td><td>0.4617045</td><td>-2.095628</td><td>-0.05690645</td></tr>
      <tr><th>4</th><td>0.4</td><td>0.8150813</td><td>-0.3171022</td><td>2.111874</td></tr>
      <tr><th>5</th><td>0.5</td><td>-1.504714</td><td>1.074447</td><td>0.8746172</td></tr>
      <tr><th>6</th><td>0.6</td><td>0.7488202</td><td>0.7241263</td><td>-0.5275619</td></tr>
      <tr><th>7</th><td>0.7</td><td>0.9839647</td><td>-1.084307</td><td>1.051371</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.5304777</td><td>1.212075</td><td>1.125706</td></tr>
      <tr><th>9</th><td>0.9</td><td>0.1135311</td><td>-0.493565</td><td>1.517906</td></tr>
      <tr><th>10</th><td>1</td><td>-0.2328725</td><td>-0.7090242</td><td>0.1357484</td></tr>
      <tr><th>11</th><td>1.1</td><td>0.2427119</td><td>0.1327073</td><td>1.089901</td></tr>
      <tr><th>12</th><td>1.2</td><td>-0.7452156</td><td>-0.7491462</td><td>-0.3546185</td></tr>
      <tr><th>13</th><td>1.3</td><td>-0.4167036</td><td>-0.6117351</td><td>-0.01753494</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.2565679</td><td>-0.6801869</td><td>1.064933</td></tr>
      <tr><th>15</th><td>1.5</td><td>1.130483</td><td>-0.299645</td><td>-3.165092</td></tr>
      <tr><th>16</th><td>1.6</td><td>-0.457555</td><td>0.6602615</td><td>-0.4878186</td></tr>
      <tr><th>17</th><td>1.7</td><td>0.2271658</td><td>0.0006951365</td><td>0.06697018</td></tr>
      <tr><th>18</th><td>1.8</td><td>-1.390668</td><td>0.9461057</td><td>1.564199</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.5820338</td><td>-0.658591</td><td>0.6130289</td></tr>
      <tr><th>20</th><td>2</td><td>0.3293551</td><td>2.39711</td><td>-1.637451</td></tr>
      <tr><th>21</th><td>2.1</td><td>-0.4216113</td><td>1.485623</td><td>-0.3511608</td></tr>
      <tr><th>22</th><td>2.2</td><td>1.630295</td><td>-0.8212969</td><td>0.1446785</td></tr>
      <tr><th>23</th><td>2.3</td><td>-0.5392736</td><td>-1.226758</td><td>0.5933895</td></tr>
      <tr><th>24</th><td>2.4</td><td>0.0975824</td><td>-1.631912</td><td>-0.2810528</td></tr>
      <tr><th>25</th><td>2.5</td><td>-1.807263</td><td>-0.2005412</td><td>-0.9436559</td></tr>
      <tr><th>26</th><td>2.6</td><td>0.7209601</td><td>-1.705849</td><td>-2.315374</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.7501516</td><td>-0.2874755</td><td>0.5076537</td></tr>
      <tr><th>28</th><td>2.8</td><td>-0.404146</td><td>-0.7072352</td><td>0.5419148</td></tr>
      <tr><th>29</th><td>2.9</td><td>-0.5178163</td><td>-1.066261</td><td>0.2321969</td></tr>
      <tr><th>30</th><td>3</td><td>-1.567426</td><td>-0.1475794</td><td>-1.578213</td></tr>
      <tr><th>31</th><td>3.1</td><td>0.6907166</td><td>-1.693742</td><td>-0.06537793</td></tr>
      <tr><th>32</th><td>3.2</td><td>1.931406</td><td>0.2087821</td><td>-0.4252845</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.6268604</td><td>-0.07935444</td><td>0.3032426</td></tr>
      <tr><th>34</th><td>3.4</td><td>0.122638</td><td>1.039938</td><td>-0.01554112</td></tr>
      <tr><th>35</th><td>3.5</td><td>0.7301093</td><td>0.5729049</td><td>1.799309</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.2899303</td><td>-0.2611477</td><td>0.9503801</td></tr>
      <tr><th>37</th><td>3.7</td><td>-0.2232486</td><td>-0.4123668</td><td>-2.417321</td></tr>
      <tr><th>38</th><td>3.8</td><td>-0.5099241</td><td>-1.30861</td><td>2.175716</td></tr>
      <tr><th>39</th><td>3.9</td><td>-0.343146</td><td>0.7247831</td><td>1.119364</td></tr>
      <tr><th>40</th><td>4</td><td>1.767087</td><td>0.3412475</td><td>-2.051774</td></tr>
      <tr><th>41</th><td>4.1</td><td>-1.111989</td><td>-2.103055</td><td>-0.09647846</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.3953371</td><td>-1.206493</td><td>-1.227034</td></tr>
      <tr><th>43</th><td>4.3</td><td>-0.4550603</td><td>0.2365519</td><td>0.1770188</td></tr>
      <tr><th>44</th><td>4.4</td><td>0.2785135</td><td>2.295894</td><td>-1.337713</td></tr>
      <tr><th>45</th><td>4.5</td><td>1.721575</td><td>-1.639534</td><td>0.0193263</td></tr>
      <tr><th>46</th><td>4.6</td><td>0.01205495</td><td>-1.169596</td><td>0.4113173</td></tr>
      <tr><th>47</th><td>4.7</td><td>-0.125993</td><td>-1.869996</td><td>0.6943578</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.510288</td><td>-1.52649</td><td>-1.385658</td></tr>
      <tr><th>49</th><td>4.9</td><td>0.9753957</td><td>-0.09777839</td><td>-0.226957</td></tr>
      <tr><th>50</th><td>5</td><td>0.2654622</td><td>0.3932421</td><td>1.05568</td></tr>
      <tr><th>51</th><td>5.1</td><td>1.337554</td><td>1.114853</td><td>2.047495</td></tr>
      <tr><th>52</th><td>5.2</td><td>-1.724766</td><td>0.1074406</td><td>-0.06650043</td></tr>
      <tr><th>53</th><td>5.3</td><td>0.1658274</td><td>0.5904037</td><td>-0.4006266</td></tr>
      <tr><th>54</th><td>5.4</td><td>-1.123891</td><td>-2.449266</td><td>-0.6961268</td></tr>
      <tr><th>55</th><td>5.5</td><td>0.4186937</td><td>0.7820475</td><td>0.451945</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.7174034</td><td>0.2800964</td><td>-0.3914194</td></tr>
      <tr><th>57</th><td>5.7</td><td>-0.7592035</td><td>0.2844692</td><td>0.87753</td></tr>
      <tr><th>58</th><td>5.8</td><td>0.4458631</td><td>0.8507106</td><td>0.3381855</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.8222697</td><td>-0.8804249</td><td>0.3666346</td></tr>
      <tr><th>60</th><td>6</td><td>-0.4716659</td><td>-0.5329627</td><td>-2.093287</td></tr>
      <tr><th>61</th><td>6.1</td><td>0.6683311</td><td>1.959084</td><td>-0.1881438</td></tr>
      <tr><th>62</th><td>6.2</td><td>-2.164575</td><td>-1.61896</td><td>-0.2778913</td></tr>
      <tr><th>63</th><td>6.3</td><td>-0.29831</td><td>-1.304249</td><td>-0.5504175</td></tr>
      <tr><th>64</th><td>6.4</td><td>2.405736</td><td>-0.7815925</td><td>-0.7959583</td></tr>
      <tr><th>65</th><td>6.5</td><td>1.008374</td><td>1.520833</td><td>0.6576745</td></tr>
      <tr><th>66</th><td>6.6</td><td>2.042123</td><td>0.2781422</td><td>1.163612</td></tr>
      <tr><th>67</th><td>6.7</td><td>1.487263</td><td>-1.060554</td><td>-0.8082266</td></tr>
      <tr><th>68</th><td>6.8</td><td>0.4518365</td><td>-1.298473</td><td>-0.6836874</td></tr>
      <tr><th>69</th><td>6.9</td><td>0.03025463</td><td>-2.693156</td><td>-0.9900275</td></tr>
      <tr><th>70</th><td>7</td><td>1.309823</td><td>0.7118733</td><td>0.3546136</td></tr>
      <tr><th>71</th><td>7.1</td><td>-1.652694</td><td>1.145107</td><td>-2.081073</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.5740369</td><td>-0.0209567</td><td>-1.0959</td></tr>
      <tr><th>73</th><td>7.3</td><td>0.2388448</td><td>-0.4702876</td><td>-0.03481667</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.7705554</td><td>-2.459939</td><td>-0.2466734</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.6460668</td><td>1.859331</td><td>-0.04391898</td></tr>
      <tr><th>76</th><td>7.6</td><td>1.110228</td><td>-0.8421599</td><td>-1.144076</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.7087623</td><td>1.235243</td><td>0.05291168</td></tr>
      <tr><th>78</th><td>7.8</td><td>0.699508</td><td>1.298892</td><td>-0.5641014</td></tr>
      <tr><th>79</th><td>7.9</td><td>-0.6648091</td><td>0.2474009</td><td>0.4858404</td></tr>
      <tr><th>80</th><td>8</td><td>0.1252583</td><td>0.7529052</td><td>-0.0530763</td></tr>
      <tr><th>81</th><td>8.1</td><td>-0.148412</td><td>0.3576811</td><td>0.1069623</td></tr>
      <tr><th>82</th><td>8.2</td><td>1.180983</td><td>-1.15371</td><td>-1.09859</td></tr>
      <tr><th>83</th><td>8.3</td><td>-0.6745217</td><td>1.662253</td><td>0.9326646</td></tr>
      <tr><th>84</th><td>8.4</td><td>-2.524638</td><td>-0.3992138</td><td>1.265623</td></tr>
      <tr><th>85</th><td>8.5</td><td>0.4793866</td><td>-1.116671</td><td>-1.246736</td></tr>
      <tr><th>86</th><td>8.6</td><td>-0.2463264</td><td>1.827193</td><td>-1.217009</td></tr>
      <tr><th>87</th><td>8.7</td><td>0.7101924</td><td>-1.048635</td><td>-0.751713</td></tr>
      <tr><th>88</th><td>8.8</td><td>-0.7186295</td><td>-0.1533755</td><td>-0.3195646</td></tr>
      <tr><th>89</th><td>8.9</td><td>1.220783</td><td>-1.794029</td><td>2.0003</td></tr>
      <tr><th>90</th><td>9</td><td>1.359667</td><td>0.8775906</td><td>2.021295</td></tr>
      <tr><th>91</th><td>9.1</td><td>-1.359231</td><td>1.127818</td><td>0.1959187</td></tr>
      <tr><th>92</th><td>9.2</td><td>1.885723</td><td>-1.041549</td><td>-0.8751599</td></tr>
      <tr><th>93</th><td>9.3</td><td>-1.354932</td><td>-0.2841384</td><td>-1.069829</td></tr>
      <tr><th>94</th><td>9.4</td><td>-1.843234</td><td>0.221824</td><td>-0.4726313</td></tr>
      <tr><th>95</th><td>9.5</td><td>0.9604547</td><td>-0.02969449</td><td>0.3964155</td></tr>
      <tr><th>96</th><td>9.6</td><td>-0.4502997</td><td>1.353262</td><td>2.1346</td></tr>
      <tr><th>97</th><td>9.7</td><td>2.664808</td><td>-0.5142646</td><td>0.7776383</td></tr>
      <tr><th>98</th><td>9.8</td><td>1.16635</td><td>0.3979271</td><td>-0.9508219</td></tr>
      <tr><th>99</th><td>9.9</td><td>1.189741</td><td>0.08739516</td><td>1.604178</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [1.22599,-0.123425,-0.914158]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [1.22599,-0.123425,-0.914158]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  1.225985614819186




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-1.209347</td><td>-0.6654215</td><td>-0.6722088</td></tr>
      <tr><th>1</th><td>1.427391</td><td>1.102987</td><td>-1.168514</td></tr>
      <tr><th>2</th><td>0.561302</td><td>-1.029426</td><td>-0.6675692</td></tr>
      <tr><th>3</th><td>-0.6488833</td><td>0.1576307</td><td>-1.068163</td></tr>
      <tr><th>4</th><td>0.9030952</td><td>-1.127867</td><td>0.3331525</td></tr>
      <tr><th>5</th><td>0.6009105</td><td>-1.331555</td><td>-0.7171853</td></tr>
      <tr><th>6</th><td>0.2464824</td><td>-1.703005</td><td>-0.9671297</td></tr>
      <tr><th>7</th><td>0.2810291</td><td>-0.04092162</td><td>0.9917923</td></tr>
      <tr><th>8</th><td>-0.5919164</td><td>-1.751523</td><td>-0.02821679</td></tr>
      <tr><th>9</th><td>-0.5450886</td><td>-0.705866</td><td>-2.582578</td></tr>
      <tr><th>10</th><td>1.545872</td><td>2.192341</td><td>-0.3782958</td></tr>
      <tr><th>11</th><td>0.6807323</td><td>-0.08618025</td><td>0.4694836</td></tr>
      <tr><th>12</th><td>1.571115</td><td>1.428727</td><td>0.003377522</td></tr>
      <tr><th>13</th><td>-0.330639</td><td>1.129534</td><td>0.5205022</td></tr>
      <tr><th>14</th><td>0.1101126</td><td>0.4108149</td><td>0.3500949</td></tr>
      <tr><th>15</th><td>0.6184189</td><td>1.779604</td><td>0.1030923</td></tr>
      <tr><th>16</th><td>0.9705704</td><td>-0.1986295</td><td>1.590111</td></tr>
      <tr><th>17</th><td>-0.251434</td><td>0.8131798</td><td>0.3208151</td></tr>
      <tr><th>18</th><td>-1.465924</td><td>-0.5712184</td><td>0.01581125</td></tr>
      <tr><th>19</th><td>1.766391</td><td>-0.7294596</td><td>1.238113</td></tr>
      <tr><th>20</th><td>-0.6001934</td><td>-0.01487802</td><td>-0.5668511</td></tr>
      <tr><th>21</th><td>-0.6306073</td><td>1.504403</td><td>-1.034312</td></tr>
      <tr><th>22</th><td>-0.3279666</td><td>0.9960052</td><td>0.5664415</td></tr>
      <tr><th>23</th><td>0.7758058</td><td>0.414144</td><td>0.4604525</td></tr>
      <tr><th>24</th><td>1.863777</td><td>0.489273</td><td>0.2177508</td></tr>
      <tr><th>25</th><td>1.219333</td><td>1.51246</td><td>-0.1744038</td></tr>
      <tr><th>26</th><td>-0.8289223</td><td>0.5687798</td><td>0.06349841</td></tr>
      <tr><th>27</th><td>-1.074469</td><td>0.4487927</td><td>0.2933416</td></tr>
      <tr><th>28</th><td>1.205872</td><td>-1.394789</td><td>-0.544796</td></tr>
      <tr><th>29</th><td>0.8301366</td><td>0.7816568</td><td>-0.6086306</td></tr>
      <tr><th>30</th><td>-0.6046622</td><td>-0.2767402</td><td>-0.1203753</td></tr>
      <tr><th>31</th><td>0.9209375</td><td>-1.268147</td><td>1.154756</td></tr>
      <tr><th>32</th><td>-0.6722045</td><td>0.02039624</td><td>0.164275</td></tr>
      <tr><th>33</th><td>-0.4667488</td><td>0.9878823</td><td>-0.4966384</td></tr>
      <tr><th>34</th><td>1.121845</td><td>1.330602</td><td>-1.452129</td></tr>
      <tr><th>35</th><td>-0.7900599</td><td>1.020422</td><td>-0.5468066</td></tr>
      <tr><th>36</th><td>-0.1168755</td><td>1.017043</td><td>0.3833164</td></tr>
      <tr><th>37</th><td>1.225986</td><td>-0.1234252</td><td>-0.914158</td></tr>
      <tr><th>38</th><td>-0.2422755</td><td>0.9102141</td><td>1.235783</td></tr>
      <tr><th>39</th><td>0.2023917</td><td>1.02667</td><td>0.5448293</td></tr>
      <tr><th>40</th><td>0.332149</td><td>-0.1379378</td><td>-0.2464907</td></tr>
      <tr><th>41</th><td>-0.9329262</td><td>-1.099765</td><td>-0.1213528</td></tr>
      <tr><th>42</th><td>-0.7545101</td><td>-1.818989</td><td>-0.6872769</td></tr>
      <tr><th>43</th><td>0.8757957</td><td>-1.053747</td><td>-0.5493759</td></tr>
      <tr><th>44</th><td>-0.3147375</td><td>-0.1991472</td><td>1.196128</td></tr>
      <tr><th>45</th><td>0.3307851</td><td>-0.3233249</td><td>-0.032306</td></tr>
      <tr><th>46</th><td>-0.5480707</td><td>-1.178939</td><td>1.45443</td></tr>
      <tr><th>47</th><td>-1.165041</td><td>1.584692</td><td>1.334466</td></tr>
      <tr><th>48</th><td>1.49586</td><td>1.48679</td><td>-1.909561</td></tr>
      <tr><th>49</th><td>1.211926</td><td>-0.1916629</td><td>0.969738</td></tr>
      <tr><th>50</th><td>1.180397</td><td>-0.2889944</td><td>0.6201229</td></tr>
      <tr><th>51</th><td>-0.07573175</td><td>1.133314</td><td>0.5060555</td></tr>
      <tr><th>52</th><td>1.202018</td><td>-2.008832</td><td>-0.04765342</td></tr>
      <tr><th>53</th><td>-0.01706673</td><td>1.689834</td><td>-1.252441</td></tr>
      <tr><th>54</th><td>0.756925</td><td>-3.926034</td><td>1.081256</td></tr>
      <tr><th>55</th><td>-1.152506</td><td>0.7246789</td><td>0.4192951</td></tr>
      <tr><th>56</th><td>-1.423903</td><td>-1.104131</td><td>-1.130613</td></tr>
      <tr><th>57</th><td>2.121367</td><td>-0.3261888</td><td>1.084039</td></tr>
      <tr><th>58</th><td>0.003613568</td><td>-1.127173</td><td>0.8029345</td></tr>
      <tr><th>59</th><td>-0.9183686</td><td>-1.201905</td><td>0.4296506</td></tr>
      <tr><th>60</th><td>-0.8565148</td><td>-1.490014</td><td>0.943202</td></tr>
      <tr><th>61</th><td>0.9445509</td><td>-0.9819113</td><td>-0.3451096</td></tr>
      <tr><th>62</th><td>-0.2654049</td><td>-0.2920219</td><td>1.573819</td></tr>
      <tr><th>63</th><td>-0.10447</td><td>1.384708</td><td>-0.8935369</td></tr>
      <tr><th>64</th><td>-0.6930067</td><td>-0.6077566</td><td>0.1517802</td></tr>
      <tr><th>65</th><td>-0.4338685</td><td>0.6770823</td><td>-1.229219</td></tr>
      <tr><th>66</th><td>1.235125</td><td>0.6454625</td><td>0.302072</td></tr>
      <tr><th>67</th><td>0.4764762</td><td>0.560977</td><td>-0.6206412</td></tr>
      <tr><th>68</th><td>-3.227935</td><td>-0.1501031</td><td>-1.228728</td></tr>
      <tr><th>69</th><td>-0.6286957</td><td>-0.5993412</td><td>0.1187301</td></tr>
      <tr><th>70</th><td>2.03142</td><td>-0.5969852</td><td>0.6665374</td></tr>
      <tr><th>71</th><td>2.528949</td><td>0.9989534</td><td>0.476773</td></tr>
      <tr><th>72</th><td>-1.24234</td><td>1.010788</td><td>-2.218485</td></tr>
      <tr><th>73</th><td>-0.2238352</td><td>-0.7393557</td><td>0.002970579</td></tr>
      <tr><th>74</th><td>-2.557433</td><td>0.2559149</td><td>0.6370198</td></tr>
      <tr><th>75</th><td>-1.934351</td><td>2.619315</td><td>0.3301674</td></tr>
      <tr><th>76</th><td>0.116493</td><td>-1.27367</td><td>0.4733686</td></tr>
      <tr><th>77</th><td>0.09153647</td><td>-0.4069086</td><td>2.147005</td></tr>
      <tr><th>78</th><td>-1.256028</td><td>0.7951321</td><td>-0.7890779</td></tr>
      <tr><th>79</th><td>-0.2654374</td><td>-1.130552</td><td>-0.6907014</td></tr>
      <tr><th>80</th><td>-0.9363885</td><td>0.7964206</td><td>-0.2144228</td></tr>
      <tr><th>81</th><td>-0.2472104</td><td>-1.580141</td><td>-0.2981594</td></tr>
      <tr><th>82</th><td>0.8479212</td><td>0.5040989</td><td>0.116175</td></tr>
      <tr><th>83</th><td>-1.257609</td><td>0.3754634</td><td>-0.5983082</td></tr>
      <tr><th>84</th><td>-0.7979818</td><td>-1.186965</td><td>0.4558211</td></tr>
      <tr><th>85</th><td>-1.015002</td><td>-2.012448</td><td>-0.2559009</td></tr>
      <tr><th>86</th><td>1.957863</td><td>-1.788666</td><td>0.03478712</td></tr>
      <tr><th>87</th><td>-2.335867</td><td>-0.07765009</td><td>0.4634104</td></tr>
      <tr><th>88</th><td>1.569545</td><td>-0.5758785</td><td>-0.5146564</td></tr>
      <tr><th>89</th><td>1.833782</td><td>1.645285</td><td>-0.8982991</td></tr>
      <tr><th>90</th><td>0.5663632</td><td>-0.4075401</td><td>0.4036427</td></tr>
      <tr><th>91</th><td>-1.281742</td><td>-0.2325054</td><td>-0.2389883</td></tr>
      <tr><th>92</th><td>1.263294</td><td>0.4617528</td><td>-0.4327939</td></tr>
      <tr><th>93</th><td>-0.2624745</td><td>-0.9287169</td><td>-0.6236651</td></tr>
      <tr><th>94</th><td>-0.6348585</td><td>0.2604514</td><td>0.0754255</td></tr>
      <tr><th>95</th><td>-0.6371685</td><td>0.7118261</td><td>-0.1064033</td></tr>
      <tr><th>96</th><td>-0.5699059</td><td>-0.5858817</td><td>0.6837713</td></tr>
      <tr><th>97</th><td>0.07284709</td><td>1.564364</td><td>1.018678</td></tr>
      <tr><th>98</th><td>-1.321648</td><td>-0.7971713</td><td>0.4262463</td></tr>
      <tr><th>99</th><td>-0.649832</td><td>1.398465</td><td>0.8491763</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.0154075,-0.0167353,0.00200588]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
