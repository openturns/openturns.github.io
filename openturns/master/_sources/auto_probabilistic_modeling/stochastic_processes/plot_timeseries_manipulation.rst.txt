
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-0.379351,-1.50373,-0.379494],[-0.947478,0.771439,-0.249351],[0.182032,-0.244162,-0.0720985],[0.761119,-0.0917311,0.184603],[0.0924885,-0.677201,-0.0835614],[-1.01803,-0.753494,-0.324671],[0.38131,0.453937,1.13126],[-0.725168,0.774627,0.0343432],[-0.865929,-0.466356,0.501331],[-0.869606,1.02514,0.542456],[0.229855,0.321291,1.16408],[-0.256354,0.167595,-0.0843311],[-0.323808,-0.204193,0.288779],[-0.884852,1.9428,0.581075],[0.237442,-1.38408,-0.319378],[0.656458,-1.24731,0.0508053],[0.0244295,-0.0251588,-0.171817],[-2.138,-1.98095,-1.05362],[0.043228,1.32227,0.909705],[0.718637,-0.100924,-0.0934113],[-0.529017,-0.836176,-0.82245],[2.19577,-0.0371656,-1.57021],[-1.0372,0.208551,0.780464],[0.0418849,-1.88728,-1.48379],[0.366376,1.84691,1.30081],[-0.6903,0.742791,1.00368],[0.481158,-1.17727,0.0385255],[-1.20498,-0.446545,0.942687],[-0.51204,0.0697702,1.00127],[0.930974,0.151704,1.04346],[-0.300788,0.34022,0.0850944],[1.63577,-1.68113,-1.36459],[-1.68677,-0.655063,1.53669],[0.389829,0.701051,0.170569],[-0.421907,-2.07485,0.331954],[-0.499755,0.318678,0.655183],[0.205239,0.710699,0.37212],[-0.587202,1.19246,1.99511],[-0.0247279,-0.706509,1.13809],[0.55605,-1.64352,1.00521],[-0.930188,-1.00679,0.980574],[1.69327,0.75377,-0.180806],[-1.26503,0.736609,-1.6506],[0.826912,0.0358952,-0.438661],[1.46004,-0.166232,-0.502387],[1.35097,0.581755,0.339428],[0.229293,0.38751,1.32845],[-1.91246,-0.0614909,1.46364],[-1.65587,-1.31654,0.191118],[-0.0109436,-1.626,-1.3225],[-0.760028,-0.619448,2.46372],[2.81568,0.795358,0.962071],[-0.701745,-1.10705,0.974854],[-0.906108,-0.267115,-1.18116],[-0.225585,-0.0636506,1.47363],[-0.691882,0.415358,0.0456425],[-0.0369779,-0.775756,-0.498806],[-0.859232,-1.24426,-0.398811],[0.0303039,-0.364705,-0.129851],[0.966733,-1.11503,0.142353],[2.05703,-0.0761148,-1.24802],[0.897416,-1.25546,-0.383225],[-0.836867,0.0672737,1.71378],[0.618109,-1.15882,0.400148],[-0.28017,-0.833496,-0.267783],[-0.737422,-1.68299,1.38425],[1.00016,-1.02173,0.0883981],[0.859633,-0.648111,-0.165649],[0.332356,0.274072,0.338549],[0.463156,-2.93094,0.919745],[0.0216457,1.0501,0.849603],[-1.43932,-1.13104,0.906718],[-0.0120788,0.182258,0.044551],[-1.2541,0.303844,-0.59985],[0.586429,-0.474877,0.0208548],[-0.185566,-0.198172,-0.170759],[-0.95419,-1.48133,1.25507],[1.49282,-0.323122,1.26557],[0.404261,0.0869227,2.14285],[-0.671461,-0.58144,-1.45473],[0.630352,0.535263,-0.326636],[1.28883,-0.1335,-0.605234],[-0.59167,0.171391,0.909397],[-1.1581,1.81308,-0.271121],[0.556455,-0.484661,0.192428],[2.01147,1.25438,0.845431],[0.203708,0.479959,-0.22274],[-1.63561,0.432226,-1.49845],[-0.628211,-0.385634,-0.101158],[1.72575,-0.0437202,0.979707],[1.68115,1.73355,-0.442377],[1.99281,0.543569,-0.414303],[-0.749836,0.86894,-0.65781],[-0.484474,0.764902,-1.14796],[-0.946358,-0.445021,1.04485],[1.43522,-0.25741,-0.264529],[1.64681,-0.236082,-0.7717],[0.0304288,-0.931948,-0.972818],[-0.0898368,-0.0057464,1.29211],[1.0485,0.886176,-0.808972]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.4878539</td><td>0.4849741</td><td>-0.05341684</td></tr>
      <tr><th>1</th><td>0.1</td><td>1.190503</td><td>1.047521</td><td>0.3552533</td></tr>
      <tr><th>2</th><td>0.2</td><td>0.6886013</td><td>1.522294</td><td>-0.2397117</td></tr>
      <tr><th>3</th><td>0.3</td><td>0.4822037</td><td>1.385046</td><td>-1.687688</td></tr>
      <tr><th>4</th><td>0.4</td><td>-0.572125</td><td>0.01783494</td><td>-1.095668</td></tr>
      <tr><th>5</th><td>0.5</td><td>0.8282601</td><td>-0.1387428</td><td>0.1567201</td></tr>
      <tr><th>6</th><td>0.6</td><td>-0.0796386</td><td>-1.190688</td><td>-0.5470193</td></tr>
      <tr><th>7</th><td>0.7</td><td>0.06737171</td><td>0.9673045</td><td>0.2118491</td></tr>
      <tr><th>8</th><td>0.8</td><td>1.071238</td><td>1.482021</td><td>1.430056</td></tr>
      <tr><th>9</th><td>0.9</td><td>-0.8976878</td><td>-0.7819739</td><td>-0.7707443</td></tr>
      <tr><th>10</th><td>1</td><td>0.5198911</td><td>0.4614852</td><td>-0.5960942</td></tr>
      <tr><th>11</th><td>1.1</td><td>-0.5523987</td><td>0.03246506</td><td>-1.151215</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.03690296</td><td>0.8645474</td><td>-0.2555505</td></tr>
      <tr><th>13</th><td>1.3</td><td>1.156609</td><td>2.643948</td><td>-0.2622358</td></tr>
      <tr><th>14</th><td>1.4</td><td>-0.6443873</td><td>-1.11173</td><td>0.6129198</td></tr>
      <tr><th>15</th><td>1.5</td><td>-0.7589157</td><td>-0.5773332</td><td>-1.176238</td></tr>
      <tr><th>16</th><td>1.6</td><td>-0.2310928</td><td>-0.6193746</td><td>0.134462</td></tr>
      <tr><th>17</th><td>1.7</td><td>-1.320615</td><td>0.5753582</td><td>-1.05378</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.009481612</td><td>2.350204</td><td>0.2639304</td></tr>
      <tr><th>19</th><td>1.9</td><td>-1.221954</td><td>-0.401278</td><td>-2.098123</td></tr>
      <tr><th>20</th><td>2</td><td>0.2572954</td><td>-1.883471</td><td>-0.4647562</td></tr>
      <tr><th>21</th><td>2.1</td><td>-1.296216</td><td>-0.09344557</td><td>-1.129469</td></tr>
      <tr><th>22</th><td>2.2</td><td>0.5935801</td><td>-2.02654</td><td>0.4475681</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.5467113</td><td>-1.118861</td><td>-1.127556</td></tr>
      <tr><th>24</th><td>2.4</td><td>-2.318861</td><td>0.4555555</td><td>0.1784166</td></tr>
      <tr><th>25</th><td>2.5</td><td>0.5461812</td><td>-0.3275936</td><td>-0.9791527</td></tr>
      <tr><th>26</th><td>2.6</td><td>0.9568737</td><td>-0.8456988</td><td>-0.1389531</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.4264203</td><td>-0.2257287</td><td>0.5250713</td></tr>
      <tr><th>28</th><td>2.8</td><td>-0.5063444</td><td>1.261146</td><td>0.1363186</td></tr>
      <tr><th>29</th><td>2.9</td><td>0.1816184</td><td>-1.280231</td><td>-0.2351085</td></tr>
      <tr><th>30</th><td>3</td><td>0.7634355</td><td>-0.7334137</td><td>2.004817</td></tr>
      <tr><th>31</th><td>3.1</td><td>-0.9892557</td><td>-1.07414</td><td>0.4570659</td></tr>
      <tr><th>32</th><td>3.2</td><td>0.1804285</td><td>0.469028</td><td>0.005541989</td></tr>
      <tr><th>33</th><td>3.3</td><td>-2.273606</td><td>-0.1608164</td><td>-0.8204365</td></tr>
      <tr><th>34</th><td>3.4</td><td>-1.681518</td><td>1.330698</td><td>-0.1382253</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.7839315</td><td>0.9466966</td><td>2.030479</td></tr>
      <tr><th>36</th><td>3.6</td><td>0.2680677</td><td>-0.3963053</td><td>-0.9408127</td></tr>
      <tr><th>37</th><td>3.7</td><td>0.7910351</td><td>-1.652868</td><td>-1.157081</td></tr>
      <tr><th>38</th><td>3.8</td><td>1.850105</td><td>0.3681734</td><td>-0.5842603</td></tr>
      <tr><th>39</th><td>3.9</td><td>0.6645948</td><td>0.8253108</td><td>-0.8846606</td></tr>
      <tr><th>40</th><td>4</td><td>0.405502</td><td>-0.1173651</td><td>0.9852833</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.5631192</td><td>0.9267555</td><td>2.251432</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.747479</td><td>0.6633234</td><td>-0.7297032</td></tr>
      <tr><th>43</th><td>4.3</td><td>0.7728902</td><td>-1.303893</td><td>0.7423879</td></tr>
      <tr><th>44</th><td>4.4</td><td>1.750073</td><td>-1.320185</td><td>0.9196881</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.7339273</td><td>1.994602</td><td>-0.351616</td></tr>
      <tr><th>46</th><td>4.6</td><td>0.1899067</td><td>-0.3465214</td><td>-0.1132323</td></tr>
      <tr><th>47</th><td>4.7</td><td>0.8711018</td><td>-0.5384193</td><td>1.455341</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.2193204</td><td>0.4669979</td><td>0.08066797</td></tr>
      <tr><th>49</th><td>4.9</td><td>0.03903031</td><td>0.5857676</td><td>-0.08634871</td></tr>
      <tr><th>50</th><td>5</td><td>0.6576333</td><td>0.3706389</td><td>-0.8798251</td></tr>
      <tr><th>51</th><td>5.1</td><td>0.6549793</td><td>-0.4837042</td><td>0.626739</td></tr>
      <tr><th>52</th><td>5.2</td><td>-0.1371017</td><td>1.072947</td><td>-0.3319505</td></tr>
      <tr><th>53</th><td>5.3</td><td>-0.5404275</td><td>-0.05561489</td><td>-1.135265</td></tr>
      <tr><th>54</th><td>5.4</td><td>-1.016066</td><td>0.40554</td><td>-1.165272</td></tr>
      <tr><th>55</th><td>5.5</td><td>0.3645843</td><td>0.8402561</td><td>0.2383398</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.5219519</td><td>-0.3113038</td><td>-0.91497</td></tr>
      <tr><th>57</th><td>5.7</td><td>0.8793046</td><td>-1.549406</td><td>0.8211256</td></tr>
      <tr><th>58</th><td>5.8</td><td>1.618021</td><td>0.4925946</td><td>0.2733375</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.4717603</td><td>-0.7665553</td><td>-1.42951</td></tr>
      <tr><th>60</th><td>6</td><td>-1.355335</td><td>1.562533</td><td>1.743442</td></tr>
      <tr><th>61</th><td>6.1</td><td>-0.4284636</td><td>0.7757345</td><td>0.9681671</td></tr>
      <tr><th>62</th><td>6.2</td><td>-2.999276</td><td>0.2072613</td><td>0.1760101</td></tr>
      <tr><th>63</th><td>6.3</td><td>1.08837</td><td>0.9908784</td><td>0.05081613</td></tr>
      <tr><th>64</th><td>6.4</td><td>0.5976005</td><td>-0.9838451</td><td>-0.3988631</td></tr>
      <tr><th>65</th><td>6.5</td><td>-0.3916624</td><td>1.60625</td><td>0.03708937</td></tr>
      <tr><th>66</th><td>6.6</td><td>-1.171467</td><td>0.8296396</td><td>-0.5108023</td></tr>
      <tr><th>67</th><td>6.7</td><td>-0.6020275</td><td>-1.043996</td><td>0.287797</td></tr>
      <tr><th>68</th><td>6.8</td><td>-0.2569424</td><td>0.6284949</td><td>-1.632345</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.8230811</td><td>0.6314497</td><td>0.6114012</td></tr>
      <tr><th>70</th><td>7</td><td>0.169279</td><td>-0.1117176</td><td>-1.245051</td></tr>
      <tr><th>71</th><td>7.1</td><td>-0.5190549</td><td>-0.8099002</td><td>-1.316398</td></tr>
      <tr><th>72</th><td>7.2</td><td>-1.274962</td><td>0.8563015</td><td>0.7357268</td></tr>
      <tr><th>73</th><td>7.3</td><td>-0.8017334</td><td>0.6488777</td><td>0.9957617</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.06903316</td><td>-0.1940638</td><td>0.07889616</td></tr>
      <tr><th>75</th><td>7.5</td><td>1.374544</td><td>-0.2796439</td><td>-0.1549519</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.6988841</td><td>-0.9170991</td><td>-1.088329</td></tr>
      <tr><th>77</th><td>7.7</td><td>-1.821051</td><td>1.280237</td><td>-0.8149041</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.5147489</td><td>-0.3740173</td><td>1.249748</td></tr>
      <tr><th>79</th><td>7.9</td><td>-1.094263</td><td>0.09294396</td><td>1.276232</td></tr>
      <tr><th>80</th><td>8</td><td>-0.140494</td><td>0.2345267</td><td>0.3846996</td></tr>
      <tr><th>81</th><td>8.1</td><td>-1.292552</td><td>-0.2396961</td><td>-0.5704662</td></tr>
      <tr><th>82</th><td>8.2</td><td>0.2547542</td><td>-0.1969062</td><td>-0.3321825</td></tr>
      <tr><th>83</th><td>8.3</td><td>0.2409778</td><td>0.4263283</td><td>0.04568715</td></tr>
      <tr><th>84</th><td>8.4</td><td>-1.438789</td><td>0.6413574</td><td>-0.01336053</td></tr>
      <tr><th>85</th><td>8.5</td><td>1.961986</td><td>1.204225</td><td>-0.3837175</td></tr>
      <tr><th>86</th><td>8.6</td><td>-0.8140088</td><td>0.1896378</td><td>-0.2960645</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.7330499</td><td>0.5650643</td><td>0.1097686</td></tr>
      <tr><th>88</th><td>8.8</td><td>-1.581109</td><td>-0.1465602</td><td>-1.786875</td></tr>
      <tr><th>89</th><td>8.9</td><td>-1.175693</td><td>1.015411</td><td>-0.462649</td></tr>
      <tr><th>90</th><td>9</td><td>0.1923147</td><td>1.558016</td><td>0.0644137</td></tr>
      <tr><th>91</th><td>9.1</td><td>0.9950944</td><td>-0.6698528</td><td>-1.284884</td></tr>
      <tr><th>92</th><td>9.2</td><td>-2.401885</td><td>0.259517</td><td>0.3101605</td></tr>
      <tr><th>93</th><td>9.3</td><td>-0.4626939</td><td>-1.568126</td><td>-0.2711711</td></tr>
      <tr><th>94</th><td>9.4</td><td>-2.107886</td><td>1.294605</td><td>0.8533241</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.1813651</td><td>1.295933</td><td>0.270741</td></tr>
      <tr><th>96</th><td>9.6</td><td>0.9364033</td><td>0.9986154</td><td>0.9374245</td></tr>
      <tr><th>97</th><td>9.7</td><td>-1.283038</td><td>0.2616672</td><td>0.9780432</td></tr>
      <tr><th>98</th><td>9.8</td><td>-1.449194</td><td>-0.4901467</td><td>-1.113042</td></tr>
      <tr><th>99</th><td>9.9</td><td>0.511844</td><td>-0.3084946</td><td>1.215154</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.587202,1.19246,1.99511]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.587202,1.19246,1.99511]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.5872021619133382




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-0.3793512</td><td>-1.50373</td><td>-0.3794941</td></tr>
      <tr><th>1</th><td>-0.947478</td><td>0.7714392</td><td>-0.2493514</td></tr>
      <tr><th>2</th><td>0.1820316</td><td>-0.2441618</td><td>-0.0720985</td></tr>
      <tr><th>3</th><td>0.7611191</td><td>-0.09173105</td><td>0.1846027</td></tr>
      <tr><th>4</th><td>0.0924885</td><td>-0.6772009</td><td>-0.08356139</td></tr>
      <tr><th>5</th><td>-1.018034</td><td>-0.7534939</td><td>-0.324671</td></tr>
      <tr><th>6</th><td>0.3813099</td><td>0.4539369</td><td>1.13126</td></tr>
      <tr><th>7</th><td>-0.7251682</td><td>0.7746266</td><td>0.03434321</td></tr>
      <tr><th>8</th><td>-0.8659288</td><td>-0.4663557</td><td>0.5013311</td></tr>
      <tr><th>9</th><td>-0.8696055</td><td>1.025144</td><td>0.5424559</td></tr>
      <tr><th>10</th><td>0.2298552</td><td>0.321291</td><td>1.164083</td></tr>
      <tr><th>11</th><td>-0.2563537</td><td>0.1675946</td><td>-0.08433112</td></tr>
      <tr><th>12</th><td>-0.3238077</td><td>-0.2041929</td><td>0.2887785</td></tr>
      <tr><th>13</th><td>-0.884852</td><td>1.942803</td><td>0.5810747</td></tr>
      <tr><th>14</th><td>0.237442</td><td>-1.384084</td><td>-0.3193779</td></tr>
      <tr><th>15</th><td>0.6564584</td><td>-1.247306</td><td>0.05080532</td></tr>
      <tr><th>16</th><td>0.02442952</td><td>-0.02515883</td><td>-0.1718168</td></tr>
      <tr><th>17</th><td>-2.138004</td><td>-1.980945</td><td>-1.053625</td></tr>
      <tr><th>18</th><td>0.043228</td><td>1.322269</td><td>0.909705</td></tr>
      <tr><th>19</th><td>0.7186372</td><td>-0.1009238</td><td>-0.09341134</td></tr>
      <tr><th>20</th><td>-0.5290168</td><td>-0.8361758</td><td>-0.8224495</td></tr>
      <tr><th>21</th><td>2.195773</td><td>-0.0371656</td><td>-1.570211</td></tr>
      <tr><th>22</th><td>-1.037199</td><td>0.2085511</td><td>0.780464</td></tr>
      <tr><th>23</th><td>0.04188487</td><td>-1.887278</td><td>-1.483792</td></tr>
      <tr><th>24</th><td>0.3663761</td><td>1.846911</td><td>1.300807</td></tr>
      <tr><th>25</th><td>-0.6903</td><td>0.7427905</td><td>1.003678</td></tr>
      <tr><th>26</th><td>0.4811583</td><td>-1.177268</td><td>0.03852553</td></tr>
      <tr><th>27</th><td>-1.204982</td><td>-0.4465449</td><td>0.9426871</td></tr>
      <tr><th>28</th><td>-0.5120404</td><td>0.06977023</td><td>1.001266</td></tr>
      <tr><th>29</th><td>0.9309744</td><td>0.1517041</td><td>1.043456</td></tr>
      <tr><th>30</th><td>-0.3007875</td><td>0.3402201</td><td>0.08509441</td></tr>
      <tr><th>31</th><td>1.635765</td><td>-1.681126</td><td>-1.364593</td></tr>
      <tr><th>32</th><td>-1.686767</td><td>-0.6550635</td><td>1.536691</td></tr>
      <tr><th>33</th><td>0.3898292</td><td>0.7010506</td><td>0.1705686</td></tr>
      <tr><th>34</th><td>-0.4219068</td><td>-2.074849</td><td>0.3319537</td></tr>
      <tr><th>35</th><td>-0.4997551</td><td>0.3186779</td><td>0.655183</td></tr>
      <tr><th>36</th><td>0.2052387</td><td>0.7106992</td><td>0.3721195</td></tr>
      <tr><th>37</th><td>-0.5872022</td><td>1.192464</td><td>1.995108</td></tr>
      <tr><th>38</th><td>-0.0247279</td><td>-0.7065089</td><td>1.138092</td></tr>
      <tr><th>39</th><td>0.5560503</td><td>-1.643523</td><td>1.005211</td></tr>
      <tr><th>40</th><td>-0.9301879</td><td>-1.00679</td><td>0.9805744</td></tr>
      <tr><th>41</th><td>1.693267</td><td>0.7537704</td><td>-0.1808063</td></tr>
      <tr><th>42</th><td>-1.265031</td><td>0.7366085</td><td>-1.6506</td></tr>
      <tr><th>43</th><td>0.8269118</td><td>0.03589517</td><td>-0.4386609</td></tr>
      <tr><th>44</th><td>1.460037</td><td>-0.1662323</td><td>-0.5023873</td></tr>
      <tr><th>45</th><td>1.35097</td><td>0.5817552</td><td>0.3394283</td></tr>
      <tr><th>46</th><td>0.229293</td><td>0.3875097</td><td>1.32845</td></tr>
      <tr><th>47</th><td>-1.912461</td><td>-0.06149095</td><td>1.463638</td></tr>
      <tr><th>48</th><td>-1.655866</td><td>-1.316535</td><td>0.1911179</td></tr>
      <tr><th>49</th><td>-0.0109436</td><td>-1.625995</td><td>-1.322499</td></tr>
      <tr><th>50</th><td>-0.7600281</td><td>-0.6194482</td><td>2.463721</td></tr>
      <tr><th>51</th><td>2.815682</td><td>0.7953583</td><td>0.9620713</td></tr>
      <tr><th>52</th><td>-0.7017453</td><td>-1.107046</td><td>0.9748538</td></tr>
      <tr><th>53</th><td>-0.9061078</td><td>-0.2671148</td><td>-1.181159</td></tr>
      <tr><th>54</th><td>-0.2255849</td><td>-0.06365063</td><td>1.473625</td></tr>
      <tr><th>55</th><td>-0.6918818</td><td>0.4153575</td><td>0.04564248</td></tr>
      <tr><th>56</th><td>-0.03697792</td><td>-0.7757558</td><td>-0.4988056</td></tr>
      <tr><th>57</th><td>-0.8592316</td><td>-1.244262</td><td>-0.3988106</td></tr>
      <tr><th>58</th><td>0.0303039</td><td>-0.3647055</td><td>-0.1298512</td></tr>
      <tr><th>59</th><td>0.9667331</td><td>-1.115028</td><td>0.1423534</td></tr>
      <tr><th>60</th><td>2.057025</td><td>-0.07611477</td><td>-1.248023</td></tr>
      <tr><th>61</th><td>0.8974156</td><td>-1.255462</td><td>-0.3832252</td></tr>
      <tr><th>62</th><td>-0.8368668</td><td>0.06727373</td><td>1.713784</td></tr>
      <tr><th>63</th><td>0.6181091</td><td>-1.158818</td><td>0.4001481</td></tr>
      <tr><th>64</th><td>-0.2801695</td><td>-0.8334962</td><td>-0.2677828</td></tr>
      <tr><th>65</th><td>-0.7374224</td><td>-1.682987</td><td>1.38425</td></tr>
      <tr><th>66</th><td>1.000163</td><td>-1.021729</td><td>0.08839809</td></tr>
      <tr><th>67</th><td>0.8596329</td><td>-0.6481108</td><td>-0.1656489</td></tr>
      <tr><th>68</th><td>0.3323563</td><td>0.2740721</td><td>0.3385486</td></tr>
      <tr><th>69</th><td>0.4631562</td><td>-2.930945</td><td>0.9197452</td></tr>
      <tr><th>70</th><td>0.02164568</td><td>1.050097</td><td>0.8496034</td></tr>
      <tr><th>71</th><td>-1.439321</td><td>-1.131039</td><td>0.9067178</td></tr>
      <tr><th>72</th><td>-0.0120788</td><td>0.1822581</td><td>0.04455097</td></tr>
      <tr><th>73</th><td>-1.2541</td><td>0.303844</td><td>-0.5998503</td></tr>
      <tr><th>74</th><td>0.5864288</td><td>-0.4748768</td><td>0.02085484</td></tr>
      <tr><th>75</th><td>-0.1855656</td><td>-0.1981719</td><td>-0.1707585</td></tr>
      <tr><th>76</th><td>-0.9541903</td><td>-1.481326</td><td>1.255073</td></tr>
      <tr><th>77</th><td>1.492823</td><td>-0.3231216</td><td>1.265572</td></tr>
      <tr><th>78</th><td>0.4042606</td><td>0.08692271</td><td>2.14285</td></tr>
      <tr><th>79</th><td>-0.6714614</td><td>-0.5814395</td><td>-1.454729</td></tr>
      <tr><th>80</th><td>0.630352</td><td>0.5352626</td><td>-0.3266359</td></tr>
      <tr><th>81</th><td>1.288826</td><td>-0.1335002</td><td>-0.6052342</td></tr>
      <tr><th>82</th><td>-0.5916697</td><td>0.1713911</td><td>0.9093967</td></tr>
      <tr><th>83</th><td>-1.1581</td><td>1.813075</td><td>-0.2711212</td></tr>
      <tr><th>84</th><td>0.5564551</td><td>-0.4846608</td><td>0.1924282</td></tr>
      <tr><th>85</th><td>2.011466</td><td>1.254384</td><td>0.845431</td></tr>
      <tr><th>86</th><td>0.2037076</td><td>0.4799594</td><td>-0.2227397</td></tr>
      <tr><th>87</th><td>-1.635613</td><td>0.4322255</td><td>-1.498454</td></tr>
      <tr><th>88</th><td>-0.6282113</td><td>-0.3856337</td><td>-0.1011582</td></tr>
      <tr><th>89</th><td>1.725747</td><td>-0.04372019</td><td>0.9797068</td></tr>
      <tr><th>90</th><td>1.681153</td><td>1.733546</td><td>-0.4423775</td></tr>
      <tr><th>91</th><td>1.99281</td><td>0.5435691</td><td>-0.4143031</td></tr>
      <tr><th>92</th><td>-0.7498362</td><td>0.8689405</td><td>-0.6578104</td></tr>
      <tr><th>93</th><td>-0.4844743</td><td>0.7649023</td><td>-1.147965</td></tr>
      <tr><th>94</th><td>-0.9463582</td><td>-0.4450213</td><td>1.044854</td></tr>
      <tr><th>95</th><td>1.435222</td><td>-0.2574095</td><td>-0.2645286</td></tr>
      <tr><th>96</th><td>1.646814</td><td>-0.2360818</td><td>-0.7716999</td></tr>
      <tr><th>97</th><td>0.03042881</td><td>-0.9319483</td><td>-0.9728175</td></tr>
      <tr><th>98</th><td>-0.08983677</td><td>-0.005746396</td><td>1.292111</td></tr>
      <tr><th>99</th><td>1.048497</td><td>0.8861757</td><td>-0.8089719</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.0245022,-0.119565,0.129097]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
