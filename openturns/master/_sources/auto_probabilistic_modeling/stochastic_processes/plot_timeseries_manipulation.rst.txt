
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-0.993777,-0.163409,-0.142493],[1.8044,-0.786189,-1.48621],[-0.477388,1.92326,-0.525451],[1.503,-1.82704,0.289864],[-0.255913,0.811325,0.0853034],[-0.322097,-1.80873,1.11877],[0.297298,0.516813,-0.803659],[-0.799038,0.264805,-0.314432],[-0.779774,0.0392085,1.15619],[-0.565482,0.559328,-0.905343],[1.77225,-0.736188,1.1764],[-0.920796,3.00164,1.50922],[0.572424,-0.872891,0.0328461],[2.17366,0.831166,-0.173685],[0.479823,0.143652,1.88035],[1.16143,1.18561,0.833265],[-0.115465,-1.69823,-1.58805],[-2.05219,-1.15372,-0.682605],[-3.09535,-0.58843,-0.02563],[0.273945,0.279722,-0.519453],[-0.850101,-0.378157,-1.16156],[0.962374,2.58492,-2.30328],[-0.615382,-0.23371,0.0797428],[-0.285722,-3.47307,-0.488548],[-1.02919,3.27139,0.388827],[-1.28849,-0.973851,-1.61957],[-1.37599,0.208308,-0.770391],[0.117084,-0.634706,-0.377044],[-0.612563,0.232455,0.503482],[0.317903,0.473711,0.950082],[0.941378,2.03704,-0.517467],[0.507327,-0.660358,1.8463],[0.221623,0.94224,0.839484],[-1.94562,-0.450954,-0.753242],[-0.446703,0.562799,0.615001],[0.877056,0.689751,1.27292],[0.365166,1.30572,1.12024],[-0.184365,-1.11775,0.28822],[1.25392,-0.186548,-0.114083],[-1.15721,-1.56478,0.669794],[0.283203,-0.273144,-0.449483],[1.56068,-0.220012,0.326645],[0.723016,-1.50603,-1.0126],[-0.489155,0.0363837,-0.271028],[2.63671,-1.22674,-0.530819],[-0.00170886,-1.45279,-1.7814],[1.63447,1.34051,0.429952],[-0.22525,0.563039,2.69764],[-1.39529,0.26004,0.647925],[-1.44333,-0.794308,-0.819361],[0.0568984,0.351576,-0.178574],[-0.247488,0.350498,1.40108],[-0.386738,0.304157,0.539674],[0.375265,-0.340078,0.576491],[-3.12761,-0.227662,0.259487],[1.14351,-0.873155,-3.63437],[-0.123793,-0.0394592,0.0498106],[-0.42642,1.73554,0.597182],[-0.317749,0.50467,1.86347],[-1.41345,0.38478,0.0679608],[0.360784,0.268291,-0.378867],[-0.00802015,-0.793501,-2.71499],[1.30687,-0.507448,-0.0590073],[-2.19694,0.0365961,0.0580404],[-0.378043,-0.804948,0.149068],[-0.370759,-0.0677359,-1.9115],[0.563339,-0.559378,0.94079],[-1.43997,0.0152575,1.03141],[-0.135612,-0.578103,-0.498559],[-0.457184,0.67502,2.11883],[-0.929185,0.282636,-1.09957],[-0.350762,1.75855,-1.10167],[0.440939,0.855069,-0.770494],[-0.56021,0.915452,-1.06346],[0.856197,-1.17744,0.484232],[0.827902,0.200809,2.18404],[0.564543,0.279507,-0.912785],[0.52317,-0.360065,-1.94592],[1.22322,-0.754455,-1.22682],[-0.772805,0.93143,0.00535722],[-1.18266,1.22836,-0.168837],[-0.109234,-1.81453,-1.85982],[-1.67509,-0.498767,0.406449],[-0.673022,-0.510458,1.20029],[-0.125771,-0.662682,-0.885116],[0.35351,0.337874,-0.244413],[0.304737,-0.605917,-0.348661],[-0.296486,1.59363,0.253888],[1.03328,-0.439986,-0.133534],[-0.126226,-1.88696,-0.00405386],[0.531562,0.00167635,1.0064],[0.324986,0.227798,-1.96789],[1.20984,0.269002,0.639964],[1.4346,2.73186,-0.695765],[0.074596,-0.685806,-0.200882],[1.88057,-0.0160679,-2.44174],[-2.0193,-0.0698693,-1.62304],[-0.715499,-0.790362,0.364962],[-0.84773,0.536343,0.68684],[0.667842,0.32755,-0.781149]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.6408524</td><td>-0.7374831</td><td>0.368277</td></tr>
      <tr><th>1</th><td>0.1</td><td>-1.576745</td><td>0.01460775</td><td>-0.325465</td></tr>
      <tr><th>2</th><td>0.2</td><td>-1.108475</td><td>0.29031</td><td>-1.227284</td></tr>
      <tr><th>3</th><td>0.3</td><td>-1.277085</td><td>1.80444</td><td>0.6644834</td></tr>
      <tr><th>4</th><td>0.4</td><td>1.359414</td><td>-1.51428</td><td>0.3265652</td></tr>
      <tr><th>5</th><td>0.5</td><td>1.290521</td><td>0.1682668</td><td>0.3010339</td></tr>
      <tr><th>6</th><td>0.6</td><td>-0.3836663</td><td>2.271607</td><td>1.174319</td></tr>
      <tr><th>7</th><td>0.7</td><td>1.265362</td><td>-0.2584104</td><td>0.9531383</td></tr>
      <tr><th>8</th><td>0.8</td><td>-0.8670554</td><td>0.09935704</td><td>-1.176255</td></tr>
      <tr><th>9</th><td>0.9</td><td>-0.6100591</td><td>-0.08977986</td><td>-0.5725791</td></tr>
      <tr><th>10</th><td>1</td><td>-1.516916</td><td>-0.09892389</td><td>-0.5046545</td></tr>
      <tr><th>11</th><td>1.1</td><td>1.95381</td><td>-0.3254568</td><td>-0.359383</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.3135465</td><td>-0.4055652</td><td>-0.01617226</td></tr>
      <tr><th>13</th><td>1.3</td><td>0.01752178</td><td>-1.12015</td><td>0.8362689</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.6418117</td><td>0.9874338</td><td>1.411472</td></tr>
      <tr><th>15</th><td>1.5</td><td>0.2552663</td><td>-0.8740623</td><td>0.1272143</td></tr>
      <tr><th>16</th><td>1.6</td><td>-0.9091989</td><td>-1.243555</td><td>-0.3765271</td></tr>
      <tr><th>17</th><td>1.7</td><td>1.365733</td><td>0.3422247</td><td>-0.3236863</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.6167757</td><td>1.313824</td><td>-2.360301</td></tr>
      <tr><th>19</th><td>1.9</td><td>-0.6562383</td><td>-1.190272</td><td>0.7262228</td></tr>
      <tr><th>20</th><td>2</td><td>-1.019531</td><td>-1.99581</td><td>-0.7454227</td></tr>
      <tr><th>21</th><td>2.1</td><td>1.084537</td><td>-0.2364756</td><td>1.690154</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.7000977</td><td>-1.212936</td><td>1.767648</td></tr>
      <tr><th>23</th><td>2.3</td><td>-0.7657739</td><td>2.476741</td><td>0.3820256</td></tr>
      <tr><th>24</th><td>2.4</td><td>2.011887</td><td>1.034959</td><td>1.831946</td></tr>
      <tr><th>25</th><td>2.5</td><td>1.178873</td><td>-0.1146198</td><td>-0.5008855</td></tr>
      <tr><th>26</th><td>2.6</td><td>1.443875</td><td>1.702282</td><td>0.278535</td></tr>
      <tr><th>27</th><td>2.7</td><td>0.04173287</td><td>0.2868442</td><td>-1.071211</td></tr>
      <tr><th>28</th><td>2.8</td><td>1.234262</td><td>1.231551</td><td>2.55423</td></tr>
      <tr><th>29</th><td>2.9</td><td>1.34966</td><td>1.506827</td><td>-0.2921244</td></tr>
      <tr><th>30</th><td>3</td><td>1.796391</td><td>-0.3900387</td><td>-0.6220435</td></tr>
      <tr><th>31</th><td>3.1</td><td>-0.407307</td><td>-1.119743</td><td>-0.1756881</td></tr>
      <tr><th>32</th><td>3.2</td><td>-0.8657419</td><td>0.8550674</td><td>-0.7441125</td></tr>
      <tr><th>33</th><td>3.3</td><td>-1.213287</td><td>-0.5764781</td><td>-0.8196323</td></tr>
      <tr><th>34</th><td>3.4</td><td>1.674124</td><td>1.820031</td><td>0.2426977</td></tr>
      <tr><th>35</th><td>3.5</td><td>0.349135</td><td>0.5117729</td><td>-2.138218</td></tr>
      <tr><th>36</th><td>3.6</td><td>0.1313031</td><td>0.8190505</td><td>-0.4863046</td></tr>
      <tr><th>37</th><td>3.7</td><td>-1.216154</td><td>0.8994983</td><td>-1.00721</td></tr>
      <tr><th>38</th><td>3.8</td><td>-2.187986</td><td>0.2311694</td><td>1.216147</td></tr>
      <tr><th>39</th><td>3.9</td><td>-0.8711979</td><td>1.162043</td><td>-0.1806544</td></tr>
      <tr><th>40</th><td>4</td><td>-1.108643</td><td>2.163768</td><td>-0.3132919</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.20518</td><td>-0.8015762</td><td>0.7685945</td></tr>
      <tr><th>42</th><td>4.2</td><td>-1.437159</td><td>-0.07814996</td><td>0.6022885</td></tr>
      <tr><th>43</th><td>4.3</td><td>0.7346239</td><td>-0.7123554</td><td>-0.9213061</td></tr>
      <tr><th>44</th><td>4.4</td><td>0.1360318</td><td>-0.05147475</td><td>0.1920235</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.3411192</td><td>1.001265</td><td>-0.6335113</td></tr>
      <tr><th>46</th><td>4.6</td><td>0.04004798</td><td>1.122346</td><td>0.7645192</td></tr>
      <tr><th>47</th><td>4.7</td><td>-1.595078</td><td>-0.01910027</td><td>0.9169575</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.3992777</td><td>-0.7815567</td><td>-1.031527</td></tr>
      <tr><th>49</th><td>4.9</td><td>-1.381457</td><td>-1.256363</td><td>-1.861599</td></tr>
      <tr><th>50</th><td>5</td><td>0.5002377</td><td>0.09540187</td><td>0.445072</td></tr>
      <tr><th>51</th><td>5.1</td><td>0.6472077</td><td>1.478564</td><td>-0.7646461</td></tr>
      <tr><th>52</th><td>5.2</td><td>0.8892758</td><td>-0.273124</td><td>-0.7757787</td></tr>
      <tr><th>53</th><td>5.3</td><td>2.653919</td><td>0.3576672</td><td>-0.2855469</td></tr>
      <tr><th>54</th><td>5.4</td><td>1.272336</td><td>0.7698763</td><td>-1.318251</td></tr>
      <tr><th>55</th><td>5.5</td><td>-1.282494</td><td>0.5950108</td><td>0.03164944</td></tr>
      <tr><th>56</th><td>5.6</td><td>-1.862506</td><td>-0.4124897</td><td>-1.146177</td></tr>
      <tr><th>57</th><td>5.7</td><td>-0.6647476</td><td>-0.9286357</td><td>-0.4789236</td></tr>
      <tr><th>58</th><td>5.8</td><td>-1.538786</td><td>-0.7099618</td><td>1.578918</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.3912209</td><td>1.110332</td><td>0.8222289</td></tr>
      <tr><th>60</th><td>6</td><td>0.9967446</td><td>0.8551318</td><td>0.5185121</td></tr>
      <tr><th>61</th><td>6.1</td><td>-0.2271731</td><td>-0.5757521</td><td>0.4070822</td></tr>
      <tr><th>62</th><td>6.2</td><td>-2.526788</td><td>1.338943</td><td>-0.4963402</td></tr>
      <tr><th>63</th><td>6.3</td><td>0.3478383</td><td>3.055137</td><td>1.33809</td></tr>
      <tr><th>64</th><td>6.4</td><td>-0.7583433</td><td>-0.037008</td><td>-0.1661216</td></tr>
      <tr><th>65</th><td>6.5</td><td>0.464379</td><td>0.02644424</td><td>0.8780693</td></tr>
      <tr><th>66</th><td>6.6</td><td>-0.5496685</td><td>-1.360539</td><td>1.320511</td></tr>
      <tr><th>67</th><td>6.7</td><td>-0.8584018</td><td>-0.9166398</td><td>-0.01029441</td></tr>
      <tr><th>68</th><td>6.8</td><td>0.2010622</td><td>0.1333978</td><td>0.8425414</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.3896742</td><td>-0.7730475</td><td>0.74064</td></tr>
      <tr><th>70</th><td>7</td><td>0.8903823</td><td>0.9472375</td><td>1.485157</td></tr>
      <tr><th>71</th><td>7.1</td><td>0.2172597</td><td>0.2122053</td><td>0.7379066</td></tr>
      <tr><th>72</th><td>7.2</td><td>0.9454046</td><td>2.18472</td><td>1.292942</td></tr>
      <tr><th>73</th><td>7.3</td><td>0.2114194</td><td>0.3367849</td><td>-2.410623</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.4093513</td><td>0.06175404</td><td>-0.3765669</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.1684941</td><td>-0.2429851</td><td>0.805673</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.7608275</td><td>-0.09407919</td><td>-0.1648804</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.336536</td><td>1.074285</td><td>0.4311049</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.5371327</td><td>0.431709</td><td>-1.627993</td></tr>
      <tr><th>79</th><td>7.9</td><td>-0.1521396</td><td>0.2729695</td><td>-2.279945</td></tr>
      <tr><th>80</th><td>8</td><td>0.9172709</td><td>1.463697</td><td>-0.7044664</td></tr>
      <tr><th>81</th><td>8.1</td><td>-1.62832</td><td>-0.771392</td><td>-1.568083</td></tr>
      <tr><th>82</th><td>8.2</td><td>-1.663342</td><td>1.286501</td><td>2.536413</td></tr>
      <tr><th>83</th><td>8.3</td><td>0.2619889</td><td>-0.8270734</td><td>-0.6911574</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.0312472</td><td>-0.8760665</td><td>0.6216763</td></tr>
      <tr><th>85</th><td>8.5</td><td>0.1659911</td><td>2.189069</td><td>-2.888793</td></tr>
      <tr><th>86</th><td>8.6</td><td>0.2405393</td><td>-1.613987</td><td>-1.862271</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.03238437</td><td>-2.337729</td><td>-0.2189983</td></tr>
      <tr><th>88</th><td>8.8</td><td>1.062785</td><td>0.4380165</td><td>-0.5030013</td></tr>
      <tr><th>89</th><td>8.9</td><td>-0.4766666</td><td>0.0503306</td><td>-0.2369615</td></tr>
      <tr><th>90</th><td>9</td><td>0.7013194</td><td>0.3984313</td><td>0.2248753</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.5750284</td><td>0.5258652</td><td>-0.9157953</td></tr>
      <tr><th>92</th><td>9.2</td><td>-0.9898483</td><td>1.220098</td><td>-1.664254</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.7753362</td><td>0.1903339</td><td>0.3967258</td></tr>
      <tr><th>94</th><td>9.4</td><td>2.55582</td><td>0.03314172</td><td>1.276229</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.4228874</td><td>0.3187033</td><td>-0.3583244</td></tr>
      <tr><th>96</th><td>9.6</td><td>0.2438413</td><td>-1.608691</td><td>0.9783437</td></tr>
      <tr><th>97</th><td>9.7</td><td>0.7506524</td><td>1.92767</td><td>0.9484566</td></tr>
      <tr><th>98</th><td>9.8</td><td>-0.3294276</td><td>0.5883389</td><td>0.2247334</td></tr>
      <tr><th>99</th><td>9.9</td><td>0.3239943</td><td>-0.8640997</td><td>-0.06152559</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.184365,-1.11775,0.28822]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.184365,-1.11775,0.28822]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.18436471633585713




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-0.9937768</td><td>-0.1634095</td><td>-0.142493</td></tr>
      <tr><th>1</th><td>1.804401</td><td>-0.786189</td><td>-1.48621</td></tr>
      <tr><th>2</th><td>-0.4773878</td><td>1.923255</td><td>-0.5254505</td></tr>
      <tr><th>3</th><td>1.502998</td><td>-1.827035</td><td>0.2898639</td></tr>
      <tr><th>4</th><td>-0.2559132</td><td>0.8113246</td><td>0.08530344</td></tr>
      <tr><th>5</th><td>-0.3220968</td><td>-1.808731</td><td>1.118774</td></tr>
      <tr><th>6</th><td>0.2972976</td><td>0.5168131</td><td>-0.803659</td></tr>
      <tr><th>7</th><td>-0.7990376</td><td>0.2648045</td><td>-0.3144318</td></tr>
      <tr><th>8</th><td>-0.7797745</td><td>0.03920851</td><td>1.156188</td></tr>
      <tr><th>9</th><td>-0.5654825</td><td>0.5593278</td><td>-0.9053426</td></tr>
      <tr><th>10</th><td>1.772246</td><td>-0.7361878</td><td>1.176404</td></tr>
      <tr><th>11</th><td>-0.9207956</td><td>3.001643</td><td>1.509218</td></tr>
      <tr><th>12</th><td>0.5724241</td><td>-0.8728914</td><td>0.03284612</td></tr>
      <tr><th>13</th><td>2.173656</td><td>0.8311658</td><td>-0.1736848</td></tr>
      <tr><th>14</th><td>0.4798229</td><td>0.1436524</td><td>1.880351</td></tr>
      <tr><th>15</th><td>1.161431</td><td>1.185612</td><td>0.8332646</td></tr>
      <tr><th>16</th><td>-0.1154651</td><td>-1.698227</td><td>-1.588052</td></tr>
      <tr><th>17</th><td>-2.052193</td><td>-1.153724</td><td>-0.6826052</td></tr>
      <tr><th>18</th><td>-3.095346</td><td>-0.5884301</td><td>-0.02563001</td></tr>
      <tr><th>19</th><td>0.2739453</td><td>0.2797218</td><td>-0.5194526</td></tr>
      <tr><th>20</th><td>-0.8501012</td><td>-0.3781575</td><td>-1.161556</td></tr>
      <tr><th>21</th><td>0.9623739</td><td>2.584922</td><td>-2.303276</td></tr>
      <tr><th>22</th><td>-0.615382</td><td>-0.2337098</td><td>0.07974284</td></tr>
      <tr><th>23</th><td>-0.2857217</td><td>-3.473066</td><td>-0.4885482</td></tr>
      <tr><th>24</th><td>-1.029185</td><td>3.271395</td><td>0.388827</td></tr>
      <tr><th>25</th><td>-1.28849</td><td>-0.9738513</td><td>-1.619571</td></tr>
      <tr><th>26</th><td>-1.375989</td><td>0.2083084</td><td>-0.7703914</td></tr>
      <tr><th>27</th><td>0.1170844</td><td>-0.6347058</td><td>-0.3770445</td></tr>
      <tr><th>28</th><td>-0.6125632</td><td>0.2324552</td><td>0.5034815</td></tr>
      <tr><th>29</th><td>0.3179033</td><td>0.4737114</td><td>0.9500817</td></tr>
      <tr><th>30</th><td>0.9413779</td><td>2.037038</td><td>-0.5174667</td></tr>
      <tr><th>31</th><td>0.5073267</td><td>-0.6603584</td><td>1.846303</td></tr>
      <tr><th>32</th><td>0.2216227</td><td>0.9422402</td><td>0.8394842</td></tr>
      <tr><th>33</th><td>-1.94562</td><td>-0.4509544</td><td>-0.7532421</td></tr>
      <tr><th>34</th><td>-0.4467027</td><td>0.5627993</td><td>0.6150013</td></tr>
      <tr><th>35</th><td>0.8770556</td><td>0.6897507</td><td>1.272918</td></tr>
      <tr><th>36</th><td>0.3651659</td><td>1.305722</td><td>1.120238</td></tr>
      <tr><th>37</th><td>-0.1843647</td><td>-1.117754</td><td>0.2882195</td></tr>
      <tr><th>38</th><td>1.253919</td><td>-0.1865485</td><td>-0.114083</td></tr>
      <tr><th>39</th><td>-1.157212</td><td>-1.564781</td><td>0.6697938</td></tr>
      <tr><th>40</th><td>0.2832033</td><td>-0.2731439</td><td>-0.4494832</td></tr>
      <tr><th>41</th><td>1.560679</td><td>-0.2200123</td><td>0.3266447</td></tr>
      <tr><th>42</th><td>0.7230157</td><td>-1.50603</td><td>-1.012603</td></tr>
      <tr><th>43</th><td>-0.4891552</td><td>0.03638373</td><td>-0.2710284</td></tr>
      <tr><th>44</th><td>2.636712</td><td>-1.226739</td><td>-0.530819</td></tr>
      <tr><th>45</th><td>-0.001708857</td><td>-1.45279</td><td>-1.7814</td></tr>
      <tr><th>46</th><td>1.634468</td><td>1.340513</td><td>0.4299522</td></tr>
      <tr><th>47</th><td>-0.2252497</td><td>0.5630386</td><td>2.697642</td></tr>
      <tr><th>48</th><td>-1.395287</td><td>0.26004</td><td>0.6479247</td></tr>
      <tr><th>49</th><td>-1.443327</td><td>-0.7943085</td><td>-0.8193612</td></tr>
      <tr><th>50</th><td>0.05689837</td><td>0.3515761</td><td>-0.1785735</td></tr>
      <tr><th>51</th><td>-0.2474882</td><td>0.3504976</td><td>1.401081</td></tr>
      <tr><th>52</th><td>-0.386738</td><td>0.3041573</td><td>0.5396743</td></tr>
      <tr><th>53</th><td>0.3752646</td><td>-0.3400784</td><td>0.5764906</td></tr>
      <tr><th>54</th><td>-3.127614</td><td>-0.227662</td><td>0.259487</td></tr>
      <tr><th>55</th><td>1.143506</td><td>-0.8731546</td><td>-3.634366</td></tr>
      <tr><th>56</th><td>-0.1237932</td><td>-0.03945923</td><td>0.04981057</td></tr>
      <tr><th>57</th><td>-0.4264201</td><td>1.735536</td><td>0.5971824</td></tr>
      <tr><th>58</th><td>-0.3177491</td><td>0.5046703</td><td>1.863473</td></tr>
      <tr><th>59</th><td>-1.413451</td><td>0.3847804</td><td>0.06796084</td></tr>
      <tr><th>60</th><td>0.360784</td><td>0.2682908</td><td>-0.3788668</td></tr>
      <tr><th>61</th><td>-0.008020155</td><td>-0.793501</td><td>-2.71499</td></tr>
      <tr><th>62</th><td>1.306866</td><td>-0.5074475</td><td>-0.05900732</td></tr>
      <tr><th>63</th><td>-2.196938</td><td>0.03659612</td><td>0.05804045</td></tr>
      <tr><th>64</th><td>-0.3780433</td><td>-0.804948</td><td>0.1490685</td></tr>
      <tr><th>65</th><td>-0.3707594</td><td>-0.06773591</td><td>-1.9115</td></tr>
      <tr><th>66</th><td>0.5633393</td><td>-0.5593783</td><td>0.9407903</td></tr>
      <tr><th>67</th><td>-1.439967</td><td>0.01525747</td><td>1.031408</td></tr>
      <tr><th>68</th><td>-0.1356121</td><td>-0.5781031</td><td>-0.4985595</td></tr>
      <tr><th>69</th><td>-0.4571836</td><td>0.6750199</td><td>2.118829</td></tr>
      <tr><th>70</th><td>-0.9291848</td><td>0.2826359</td><td>-1.099569</td></tr>
      <tr><th>71</th><td>-0.3507623</td><td>1.758553</td><td>-1.101667</td></tr>
      <tr><th>72</th><td>0.4409388</td><td>0.8550687</td><td>-0.7704942</td></tr>
      <tr><th>73</th><td>-0.5602096</td><td>0.9154517</td><td>-1.06346</td></tr>
      <tr><th>74</th><td>0.8561973</td><td>-1.17744</td><td>0.484232</td></tr>
      <tr><th>75</th><td>0.8279025</td><td>0.200809</td><td>2.184036</td></tr>
      <tr><th>76</th><td>0.5645429</td><td>0.279507</td><td>-0.9127849</td></tr>
      <tr><th>77</th><td>0.5231696</td><td>-0.3600647</td><td>-1.94592</td></tr>
      <tr><th>78</th><td>1.223219</td><td>-0.7544553</td><td>-1.226824</td></tr>
      <tr><th>79</th><td>-0.7728053</td><td>0.9314302</td><td>0.005357225</td></tr>
      <tr><th>80</th><td>-1.182658</td><td>1.22836</td><td>-0.1688372</td></tr>
      <tr><th>81</th><td>-0.1092335</td><td>-1.814533</td><td>-1.859825</td></tr>
      <tr><th>82</th><td>-1.67509</td><td>-0.4987669</td><td>0.406449</td></tr>
      <tr><th>83</th><td>-0.6730218</td><td>-0.5104576</td><td>1.200294</td></tr>
      <tr><th>84</th><td>-0.125771</td><td>-0.6626815</td><td>-0.8851159</td></tr>
      <tr><th>85</th><td>0.3535096</td><td>0.3378737</td><td>-0.2444128</td></tr>
      <tr><th>86</th><td>0.3047368</td><td>-0.6059174</td><td>-0.3486606</td></tr>
      <tr><th>87</th><td>-0.2964864</td><td>1.59363</td><td>0.2538879</td></tr>
      <tr><th>88</th><td>1.033279</td><td>-0.4399858</td><td>-0.1335344</td></tr>
      <tr><th>89</th><td>-0.1262261</td><td>-1.886956</td><td>-0.004053856</td></tr>
      <tr><th>90</th><td>0.5315616</td><td>0.001676351</td><td>1.006399</td></tr>
      <tr><th>91</th><td>0.3249857</td><td>0.2277978</td><td>-1.967892</td></tr>
      <tr><th>92</th><td>1.209841</td><td>0.2690022</td><td>0.6399635</td></tr>
      <tr><th>93</th><td>1.434601</td><td>2.731861</td><td>-0.6957649</td></tr>
      <tr><th>94</th><td>0.07459602</td><td>-0.6858063</td><td>-0.2008818</td></tr>
      <tr><th>95</th><td>1.880569</td><td>-0.01606788</td><td>-2.441744</td></tr>
      <tr><th>96</th><td>-2.019304</td><td>-0.06986934</td><td>-1.623043</td></tr>
      <tr><th>97</th><td>-0.715499</td><td>-0.7903617</td><td>0.3649625</td></tr>
      <tr><th>98</th><td>-0.8477304</td><td>0.5363431</td><td>0.6868402</td></tr>
      <tr><th>99</th><td>0.6678424</td><td>0.32755</td><td>-0.7811489</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[-0.0436083,0.00835112,-0.073282]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
