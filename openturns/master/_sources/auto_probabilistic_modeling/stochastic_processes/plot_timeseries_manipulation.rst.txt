
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 7-22

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 24-30

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[0.703046,1.21078,-0.796388],[-0.11102,0.73256,0.676395],[0.0893379,-0.742361,-0.255395],[0.0712879,-0.431408,0.0938549],[-0.292538,0.371845,-0.411223],[1.4992,0.750987,-0.426869],[0.59473,-2.19616,0.94693],[1.32884,1.94995,-0.421352],[0.00480999,-0.755668,-0.369851],[0.0647491,1.07261,-1.19279],[-0.289195,1.1873,-1.06098],[0.951671,-0.45668,1.17001],[1.62026,-0.757656,0.0613681],[1.27113,-0.0056616,-0.096334],[-0.557624,-0.644321,0.148187],[1.06934,1.81429,-0.0852692],[-0.964749,0.506396,-0.588332],[-0.962423,-0.485683,-1.12821],[0.780816,-0.0753787,-0.501676],[-1.77674,1.25282,0.486977],[-0.78852,1.07619,0.290351],[0.525301,0.503252,1.4221],[-0.0665661,0.530009,0.279423],[-0.231917,1.69031,0.296354],[2.272,-0.459636,-0.93398],[-0.193331,0.232782,1.34625],[0.757389,2.34332,1.94382],[0.150779,-0.426301,-0.552778],[0.429587,-0.583562,0.924527],[1.42046,1.1661,0.654435],[-0.392812,0.695102,0.684256],[-1.87926,0.423747,0.800408],[0.681141,-0.435646,-0.210743],[-1.3871,0.513383,0.89024],[-0.530822,-0.715512,1.27736],[2.95553,-0.0707793,-0.586084],[-0.1097,1.20013,0.563628],[-1.18244,-0.737721,-0.520444],[-0.372062,0.258126,-0.560466],[0.789977,1.08331,-0.436922],[-2.03556,0.612294,0.494804],[0.0558726,-1.0017,0.421975],[0.0816057,1.22336,0.601406],[-0.898428,0.698386,0.533434],[0.812805,0.573295,-1.68772],[0.653725,0.168632,1.06333],[0.282714,0.346257,-0.606444],[-1.24061,-0.588419,1.05372],[0.11151,-0.758343,0.561701],[0.361404,1.90153,-1.30925],[1.46072,-0.952499,0.86123],[-0.429296,-1.09613,-0.0906845],[-0.526664,-1.47973,0.281832],[1.26973,-2.41694,-1.05138],[0.939468,0.09892,-0.135655],[0.816425,-1.47645,-0.499567],[0.228861,-0.104605,1.22111],[-0.807893,-2.52909,1.18078],[-0.739763,0.527766,0.0401638],[-2.43755,0.641242,0.476305],[-1.08274,-1.971,1.01848],[2.26346,-0.121364,-0.647464],[1.27033,-0.287041,0.390875],[-0.92058,0.258546,-0.601177],[-1.20206,0.171075,-0.508963],[0.641137,-2.50884,-0.439546],[-0.395651,0.682252,0.267132],[0.175837,1.48721,-0.683076],[-0.584976,1.45604,0.557964],[-0.122623,0.300539,0.626177],[0.0160203,0.493317,0.0972009],[0.311922,-0.722011,-1.53383],[-0.350167,0.0662784,-0.924035],[1.60141,-0.207361,-0.561369],[0.79125,-2.22222,-0.212052],[-0.0779416,0.731236,-0.296717],[0.43792,1.18832,-0.223293],[-0.316393,-1.5785,-1.09278],[-0.276204,-0.962525,-0.284339],[-1.79544,-1.78828,-1.13575],[-0.422085,0.0992826,0.0688395],[1.15104,-1.65201,-0.000450992],[0.832986,1.28472,-0.572967],[-0.4665,0.399307,1.16432],[-0.664971,0.842034,2.49306],[0.228223,0.363669,-0.0693421],[0.703609,2.04777,-0.481539],[-1.00192,-0.543995,-0.124305],[0.0652512,2.20317,-0.261828],[0.868794,1.01055,0.221415],[-0.474411,-1.68195,2.70021],[-0.227157,1.70189,-0.720641],[1.76364,0.693627,-1.39032],[-0.516327,0.150406,0.0650008],[1.1868,0.438557,-0.780131],[1.01483,1.95355,0.483527],[-1.09527,-0.781462,-0.130487],[1.13324,-0.203018,-1.10868],[0.464768,-0.36963,-0.589522],[-0.143436,-0.862953,1.27632]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-46

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.0748077</td><td>0.000762106</td><td>0.9822069</td></tr>
      <tr><th>1</th><td>0.1</td><td>1.202957</td><td>0.8501739</td><td>-0.4385612</td></tr>
      <tr><th>2</th><td>0.2</td><td>-1.047836</td><td>-0.2525749</td><td>-1.636427</td></tr>
      <tr><th>3</th><td>0.3</td><td>-2.134033</td><td>0.61863</td><td>-0.7038944</td></tr>
      <tr><th>4</th><td>0.4</td><td>-0.5245171</td><td>0.6542026</td><td>-1.250629</td></tr>
      <tr><th>5</th><td>0.5</td><td>0.8042435</td><td>-1.494206</td><td>-0.6401283</td></tr>
      <tr><th>6</th><td>0.6</td><td>0.7364096</td><td>0.5243453</td><td>1.949757</td></tr>
      <tr><th>7</th><td>0.7</td><td>-0.7051445</td><td>1.189855</td><td>-0.2764362</td></tr>
      <tr><th>8</th><td>0.8</td><td>1.382676</td><td>1.469816</td><td>0.464692</td></tr>
      <tr><th>9</th><td>0.9</td><td>-1.443566</td><td>-0.4286939</td><td>1.147868</td></tr>
      <tr><th>10</th><td>1</td><td>1.20098</td><td>-0.8416379</td><td>-0.1026892</td></tr>
      <tr><th>11</th><td>1.1</td><td>0.648358</td><td>0.1896285</td><td>1.081031</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.4558133</td><td>0.05846896</td><td>1.176852</td></tr>
      <tr><th>13</th><td>1.3</td><td>-0.772658</td><td>-0.4527082</td><td>-0.04269964</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.3224928</td><td>-0.7881625</td><td>-0.7596235</td></tr>
      <tr><th>15</th><td>1.5</td><td>-1.25253</td><td>-1.42723</td><td>-0.6372513</td></tr>
      <tr><th>16</th><td>1.6</td><td>0.2583003</td><td>-0.4214508</td><td>0.5544344</td></tr>
      <tr><th>17</th><td>1.7</td><td>-1.739081</td><td>-0.9609174</td><td>1.577286</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.3657643</td><td>-0.5025408</td><td>0.2238177</td></tr>
      <tr><th>19</th><td>1.9</td><td>1.248549</td><td>-0.2572013</td><td>2.616378</td></tr>
      <tr><th>20</th><td>2</td><td>0.2615781</td><td>-0.1781159</td><td>-2.59447</td></tr>
      <tr><th>21</th><td>2.1</td><td>-0.7771484</td><td>-0.03032959</td><td>-0.2896666</td></tr>
      <tr><th>22</th><td>2.2</td><td>1.288344</td><td>0.2081205</td><td>-0.004210108</td></tr>
      <tr><th>23</th><td>2.3</td><td>-0.2843267</td><td>-0.06940396</td><td>-0.8826687</td></tr>
      <tr><th>24</th><td>2.4</td><td>0.6673643</td><td>-1.203031</td><td>-2.295131</td></tr>
      <tr><th>25</th><td>2.5</td><td>0.2764141</td><td>0.691974</td><td>0.9578635</td></tr>
      <tr><th>26</th><td>2.6</td><td>-1.051331</td><td>-0.5694667</td><td>-1.009916</td></tr>
      <tr><th>27</th><td>2.7</td><td>1.117033</td><td>0.409787</td><td>0.1832706</td></tr>
      <tr><th>28</th><td>2.8</td><td>-0.849442</td><td>-1.985808</td><td>-0.1531615</td></tr>
      <tr><th>29</th><td>2.9</td><td>-0.332199</td><td>1.226124</td><td>0.8137284</td></tr>
      <tr><th>30</th><td>3</td><td>0.5516743</td><td>0.6999453</td><td>1.233427</td></tr>
      <tr><th>31</th><td>3.1</td><td>0.06822048</td><td>0.3783377</td><td>1.282073</td></tr>
      <tr><th>32</th><td>3.2</td><td>1.648155</td><td>-0.9277588</td><td>0.6974777</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.09630287</td><td>-1.064779</td><td>-1.105684</td></tr>
      <tr><th>34</th><td>3.4</td><td>-0.3596173</td><td>0.5308124</td><td>-1.506855</td></tr>
      <tr><th>35</th><td>3.5</td><td>0.7927669</td><td>-1.312056</td><td>0.4363912</td></tr>
      <tr><th>36</th><td>3.6</td><td>-2.149455</td><td>2.391504</td><td>1.342545</td></tr>
      <tr><th>37</th><td>3.7</td><td>-0.4640597</td><td>0.2054868</td><td>-1.130038</td></tr>
      <tr><th>38</th><td>3.8</td><td>-0.4912909</td><td>-1.742569</td><td>-1.194335</td></tr>
      <tr><th>39</th><td>3.9</td><td>-1.212952</td><td>-0.01822911</td><td>2.355051</td></tr>
      <tr><th>40</th><td>4</td><td>0.5419789</td><td>-0.9831408</td><td>-1.495664</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.02640251</td><td>-0.7612945</td><td>1.963236</td></tr>
      <tr><th>42</th><td>4.2</td><td>0.863536</td><td>-0.2638966</td><td>-0.387766</td></tr>
      <tr><th>43</th><td>4.3</td><td>0.352037</td><td>-1.131239</td><td>0.3346331</td></tr>
      <tr><th>44</th><td>4.4</td><td>1.030777</td><td>0.9095587</td><td>0.8683613</td></tr>
      <tr><th>45</th><td>4.5</td><td>0.6695478</td><td>-0.266305</td><td>0.6096936</td></tr>
      <tr><th>46</th><td>4.6</td><td>0.5052102</td><td>1.322468</td><td>1.635348</td></tr>
      <tr><th>47</th><td>4.7</td><td>-0.07137118</td><td>0.06397398</td><td>-0.5275098</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.4808766</td><td>0.1910761</td><td>-1.795077</td></tr>
      <tr><th>49</th><td>4.9</td><td>-0.2822491</td><td>-1.568325</td><td>-1.426264</td></tr>
      <tr><th>50</th><td>5</td><td>0.6710894</td><td>0.6260458</td><td>0.399003</td></tr>
      <tr><th>51</th><td>5.1</td><td>1.699481</td><td>-0.6031606</td><td>0.882911</td></tr>
      <tr><th>52</th><td>5.2</td><td>-1.321014</td><td>1.281065</td><td>-0.1917316</td></tr>
      <tr><th>53</th><td>5.3</td><td>1.479881</td><td>-1.352937</td><td>-0.5786677</td></tr>
      <tr><th>54</th><td>5.4</td><td>-1.418731</td><td>-0.8259761</td><td>0.4825149</td></tr>
      <tr><th>55</th><td>5.5</td><td>-0.3270686</td><td>-0.7658104</td><td>-0.3108614</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.517657</td><td>0.3316479</td><td>0.08965379</td></tr>
      <tr><th>57</th><td>5.7</td><td>1.167615</td><td>0.6711765</td><td>-1.134969</td></tr>
      <tr><th>58</th><td>5.8</td><td>-1.101717</td><td>0.8104315</td><td>-0.4114452</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.610045</td><td>-1.82892</td><td>0.1607551</td></tr>
      <tr><th>60</th><td>6</td><td>-1.111283</td><td>-0.1988464</td><td>-1.277558</td></tr>
      <tr><th>61</th><td>6.1</td><td>0.9361729</td><td>0.5736499</td><td>-0.3890466</td></tr>
      <tr><th>62</th><td>6.2</td><td>0.8477566</td><td>-2.147613</td><td>-0.9762346</td></tr>
      <tr><th>63</th><td>6.3</td><td>-0.57626</td><td>-0.09100733</td><td>0.3414664</td></tr>
      <tr><th>64</th><td>6.4</td><td>0.4625979</td><td>1.771073</td><td>-2.262484</td></tr>
      <tr><th>65</th><td>6.5</td><td>-2.650273</td><td>0.7291487</td><td>0.858235</td></tr>
      <tr><th>66</th><td>6.6</td><td>0.2650921</td><td>1.176357</td><td>1.0639</td></tr>
      <tr><th>67</th><td>6.7</td><td>0.528604</td><td>-0.5368659</td><td>0.8025957</td></tr>
      <tr><th>68</th><td>6.8</td><td>1.174605</td><td>-0.1586213</td><td>1.012145</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.1334123</td><td>-0.868173</td><td>-0.5877784</td></tr>
      <tr><th>70</th><td>7</td><td>0.6173858</td><td>-0.5226632</td><td>-0.3566481</td></tr>
      <tr><th>71</th><td>7.1</td><td>-0.8425707</td><td>-0.2337403</td><td>0.4825342</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.2404402</td><td>0.02070597</td><td>0.2300499</td></tr>
      <tr><th>73</th><td>7.3</td><td>0.42112</td><td>-1.151564</td><td>1.052493</td></tr>
      <tr><th>74</th><td>7.4</td><td>-1.49032</td><td>1.322118</td><td>0.9062044</td></tr>
      <tr><th>75</th><td>7.5</td><td>-0.443143</td><td>0.8385225</td><td>-0.1640354</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.6963203</td><td>-1.068604</td><td>1.248976</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.4515491</td><td>0.4755462</td><td>0.8222239</td></tr>
      <tr><th>78</th><td>7.8</td><td>-1.033975</td><td>0.4320984</td><td>-1.793322</td></tr>
      <tr><th>79</th><td>7.9</td><td>0.4796311</td><td>-0.1779085</td><td>0.5862524</td></tr>
      <tr><th>80</th><td>8</td><td>-0.4707145</td><td>-0.3150318</td><td>-0.7852493</td></tr>
      <tr><th>81</th><td>8.1</td><td>0.5522536</td><td>-1.096359</td><td>-0.03510347</td></tr>
      <tr><th>82</th><td>8.2</td><td>-1.633479</td><td>0.8439433</td><td>1.320729</td></tr>
      <tr><th>83</th><td>8.3</td><td>2.049337</td><td>-1.173412</td><td>1.217555</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.9798335</td><td>-0.01550969</td><td>0.4859317</td></tr>
      <tr><th>85</th><td>8.5</td><td>0.5935442</td><td>1.530771</td><td>0.599483</td></tr>
      <tr><th>86</th><td>8.6</td><td>-0.06880658</td><td>-0.3669798</td><td>0.955001</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.07550249</td><td>-2.005285</td><td>0.8046677</td></tr>
      <tr><th>88</th><td>8.8</td><td>0.0565586</td><td>-0.6367039</td><td>-0.8447814</td></tr>
      <tr><th>89</th><td>8.9</td><td>-0.1872948</td><td>-0.5879375</td><td>-0.579844</td></tr>
      <tr><th>90</th><td>9</td><td>0.3844581</td><td>-1.839445</td><td>-1.246123</td></tr>
      <tr><th>91</th><td>9.1</td><td>0.5430497</td><td>0.4527102</td><td>1.467404</td></tr>
      <tr><th>92</th><td>9.2</td><td>1.238946</td><td>0.4503893</td><td>-1.475397</td></tr>
      <tr><th>93</th><td>9.3</td><td>-0.5872852</td><td>0.9894504</td><td>1.622657</td></tr>
      <tr><th>94</th><td>9.4</td><td>0.4790883</td><td>-0.4361889</td><td>0.5085639</td></tr>
      <tr><th>95</th><td>9.5</td><td>0.5485141</td><td>1.025673</td><td>0.5951818</td></tr>
      <tr><th>96</th><td>9.6</td><td>1.439315</td><td>0.4502868</td><td>0.3070368</td></tr>
      <tr><th>97</th><td>9.7</td><td>0.6204034</td><td>1.779605</td><td>0.8908674</td></tr>
      <tr><th>98</th><td>9.8</td><td>1.222593</td><td>-0.05100502</td><td>-1.034178</td></tr>
      <tr><th>99</th><td>9.9</td><td>-0.5692526</td><td>-1.160047</td><td>-2.034425</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-52

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 55-56

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 59-60

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-1.18244,-0.737721,-0.520444]




.. GENERATED FROM PYTHON SOURCE LINES 64-65

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-1.18244,-0.737721,-0.520444]




.. GENERATED FROM PYTHON SOURCE LINES 69-70

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 70-76

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -1.1824357065070745




.. GENERATED FROM PYTHON SOURCE LINES 77-78

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0.7030461</td><td>1.210779</td><td>-0.7963882</td></tr>
      <tr><th>1</th><td>-0.11102</td><td>0.7325601</td><td>0.6763951</td></tr>
      <tr><th>2</th><td>0.08933788</td><td>-0.7423606</td><td>-0.2553954</td></tr>
      <tr><th>3</th><td>0.07128788</td><td>-0.4314078</td><td>0.09385489</td></tr>
      <tr><th>4</th><td>-0.2925381</td><td>0.3718453</td><td>-0.4112227</td></tr>
      <tr><th>5</th><td>1.499203</td><td>0.7509871</td><td>-0.4268689</td></tr>
      <tr><th>6</th><td>0.5947304</td><td>-2.196157</td><td>0.9469301</td></tr>
      <tr><th>7</th><td>1.328841</td><td>1.949947</td><td>-0.4213517</td></tr>
      <tr><th>8</th><td>0.004809992</td><td>-0.7556679</td><td>-0.3698511</td></tr>
      <tr><th>9</th><td>0.06474914</td><td>1.072612</td><td>-1.192786</td></tr>
      <tr><th>10</th><td>-0.289195</td><td>1.1873</td><td>-1.060979</td></tr>
      <tr><th>11</th><td>0.9516709</td><td>-0.4566799</td><td>1.170006</td></tr>
      <tr><th>12</th><td>1.620262</td><td>-0.7576558</td><td>0.06136805</td></tr>
      <tr><th>13</th><td>1.271128</td><td>-0.0056616</td><td>-0.09633399</td></tr>
      <tr><th>14</th><td>-0.5576236</td><td>-0.6443209</td><td>0.1481875</td></tr>
      <tr><th>15</th><td>1.06934</td><td>1.814291</td><td>-0.08526915</td></tr>
      <tr><th>16</th><td>-0.9647485</td><td>0.5063963</td><td>-0.588332</td></tr>
      <tr><th>17</th><td>-0.9624231</td><td>-0.4856834</td><td>-1.128207</td></tr>
      <tr><th>18</th><td>0.7808161</td><td>-0.0753787</td><td>-0.5016762</td></tr>
      <tr><th>19</th><td>-1.776742</td><td>1.252825</td><td>0.4869771</td></tr>
      <tr><th>20</th><td>-0.7885195</td><td>1.076193</td><td>0.2903509</td></tr>
      <tr><th>21</th><td>0.5253006</td><td>0.5032516</td><td>1.422099</td></tr>
      <tr><th>22</th><td>-0.06656614</td><td>0.5300086</td><td>0.2794226</td></tr>
      <tr><th>23</th><td>-0.2319169</td><td>1.690314</td><td>0.2963543</td></tr>
      <tr><th>24</th><td>2.272005</td><td>-0.4596361</td><td>-0.9339799</td></tr>
      <tr><th>25</th><td>-0.1933311</td><td>0.2327823</td><td>1.346252</td></tr>
      <tr><th>26</th><td>0.7573892</td><td>2.343319</td><td>1.943825</td></tr>
      <tr><th>27</th><td>0.1507792</td><td>-0.4263007</td><td>-0.5527782</td></tr>
      <tr><th>28</th><td>0.4295866</td><td>-0.5835619</td><td>0.9245274</td></tr>
      <tr><th>29</th><td>1.420458</td><td>1.166099</td><td>0.6544352</td></tr>
      <tr><th>30</th><td>-0.3928117</td><td>0.6951021</td><td>0.6842561</td></tr>
      <tr><th>31</th><td>-1.879259</td><td>0.4237473</td><td>0.800408</td></tr>
      <tr><th>32</th><td>0.6811408</td><td>-0.435646</td><td>-0.2107432</td></tr>
      <tr><th>33</th><td>-1.387098</td><td>0.5133825</td><td>0.8902399</td></tr>
      <tr><th>34</th><td>-0.5308216</td><td>-0.7155122</td><td>1.27736</td></tr>
      <tr><th>35</th><td>2.955531</td><td>-0.07077929</td><td>-0.5860844</td></tr>
      <tr><th>36</th><td>-0.1096996</td><td>1.200128</td><td>0.563628</td></tr>
      <tr><th>37</th><td>-1.182436</td><td>-0.7377209</td><td>-0.5204437</td></tr>
      <tr><th>38</th><td>-0.372062</td><td>0.2581256</td><td>-0.5604657</td></tr>
      <tr><th>39</th><td>0.7899772</td><td>1.08331</td><td>-0.4369222</td></tr>
      <tr><th>40</th><td>-2.03556</td><td>0.6122945</td><td>0.4948037</td></tr>
      <tr><th>41</th><td>0.0558726</td><td>-1.001698</td><td>0.4219755</td></tr>
      <tr><th>42</th><td>0.08160575</td><td>1.223363</td><td>0.6014055</td></tr>
      <tr><th>43</th><td>-0.8984276</td><td>0.698386</td><td>0.5334341</td></tr>
      <tr><th>44</th><td>0.8128047</td><td>0.5732952</td><td>-1.687717</td></tr>
      <tr><th>45</th><td>0.653725</td><td>0.1686321</td><td>1.063334</td></tr>
      <tr><th>46</th><td>0.2827137</td><td>0.3462567</td><td>-0.6064438</td></tr>
      <tr><th>47</th><td>-1.240614</td><td>-0.588419</td><td>1.053724</td></tr>
      <tr><th>48</th><td>0.1115104</td><td>-0.7583429</td><td>0.5617011</td></tr>
      <tr><th>49</th><td>0.3614037</td><td>1.901529</td><td>-1.309245</td></tr>
      <tr><th>50</th><td>1.460718</td><td>-0.9524988</td><td>0.8612305</td></tr>
      <tr><th>51</th><td>-0.4292959</td><td>-1.096131</td><td>-0.09068447</td></tr>
      <tr><th>52</th><td>-0.5266636</td><td>-1.479735</td><td>0.2818322</td></tr>
      <tr><th>53</th><td>1.26973</td><td>-2.416943</td><td>-1.051385</td></tr>
      <tr><th>54</th><td>0.9394676</td><td>0.09891999</td><td>-0.1356552</td></tr>
      <tr><th>55</th><td>0.8164253</td><td>-1.476448</td><td>-0.4995674</td></tr>
      <tr><th>56</th><td>0.2288606</td><td>-0.1046052</td><td>1.221115</td></tr>
      <tr><th>57</th><td>-0.8078926</td><td>-2.529087</td><td>1.180779</td></tr>
      <tr><th>58</th><td>-0.7397631</td><td>0.5277659</td><td>0.0401638</td></tr>
      <tr><th>59</th><td>-2.437547</td><td>0.6412422</td><td>0.4763051</td></tr>
      <tr><th>60</th><td>-1.082743</td><td>-1.971004</td><td>1.01848</td></tr>
      <tr><th>61</th><td>2.263464</td><td>-0.1213644</td><td>-0.6474638</td></tr>
      <tr><th>62</th><td>1.270328</td><td>-0.2870412</td><td>0.3908749</td></tr>
      <tr><th>63</th><td>-0.9205803</td><td>0.2585463</td><td>-0.6011771</td></tr>
      <tr><th>64</th><td>-1.202058</td><td>0.171075</td><td>-0.5089627</td></tr>
      <tr><th>65</th><td>0.6411369</td><td>-2.50884</td><td>-0.439546</td></tr>
      <tr><th>66</th><td>-0.3956511</td><td>0.6822524</td><td>0.2671323</td></tr>
      <tr><th>67</th><td>0.1758367</td><td>1.487213</td><td>-0.6830758</td></tr>
      <tr><th>68</th><td>-0.5849758</td><td>1.456038</td><td>0.5579638</td></tr>
      <tr><th>69</th><td>-0.1226227</td><td>0.3005394</td><td>0.6261768</td></tr>
      <tr><th>70</th><td>0.01602033</td><td>0.4933174</td><td>0.09720095</td></tr>
      <tr><th>71</th><td>0.3119216</td><td>-0.7220109</td><td>-1.533831</td></tr>
      <tr><th>72</th><td>-0.3501667</td><td>0.06627836</td><td>-0.9240346</td></tr>
      <tr><th>73</th><td>1.601408</td><td>-0.2073615</td><td>-0.5613687</td></tr>
      <tr><th>74</th><td>0.7912505</td><td>-2.222222</td><td>-0.212052</td></tr>
      <tr><th>75</th><td>-0.07794159</td><td>0.7312363</td><td>-0.2967168</td></tr>
      <tr><th>76</th><td>0.4379197</td><td>1.188318</td><td>-0.2232926</td></tr>
      <tr><th>77</th><td>-0.316393</td><td>-1.578504</td><td>-1.092777</td></tr>
      <tr><th>78</th><td>-0.276204</td><td>-0.9625251</td><td>-0.2843389</td></tr>
      <tr><th>79</th><td>-1.79544</td><td>-1.788279</td><td>-1.135747</td></tr>
      <tr><th>80</th><td>-0.422085</td><td>0.09928256</td><td>0.06883952</td></tr>
      <tr><th>81</th><td>1.151039</td><td>-1.652008</td><td>-0.0004509923</td></tr>
      <tr><th>82</th><td>0.8329859</td><td>1.284725</td><td>-0.5729665</td></tr>
      <tr><th>83</th><td>-0.4665003</td><td>0.3993069</td><td>1.164319</td></tr>
      <tr><th>84</th><td>-0.664971</td><td>0.8420336</td><td>2.493065</td></tr>
      <tr><th>85</th><td>0.228223</td><td>0.3636695</td><td>-0.06934206</td></tr>
      <tr><th>86</th><td>0.7036087</td><td>2.047767</td><td>-0.4815394</td></tr>
      <tr><th>87</th><td>-1.001916</td><td>-0.5439951</td><td>-0.1243048</td></tr>
      <tr><th>88</th><td>0.06525115</td><td>2.203167</td><td>-0.2618275</td></tr>
      <tr><th>89</th><td>0.868794</td><td>1.010554</td><td>0.2214146</td></tr>
      <tr><th>90</th><td>-0.474411</td><td>-1.681953</td><td>2.700209</td></tr>
      <tr><th>91</th><td>-0.2271573</td><td>1.701894</td><td>-0.7206411</td></tr>
      <tr><th>92</th><td>1.763638</td><td>0.6936265</td><td>-1.390322</td></tr>
      <tr><th>93</th><td>-0.5163267</td><td>0.1504055</td><td>0.06500079</td></tr>
      <tr><th>94</th><td>1.186797</td><td>0.4385569</td><td>-0.7801312</td></tr>
      <tr><th>95</th><td>1.014835</td><td>1.953554</td><td>0.4835273</td></tr>
      <tr><th>96</th><td>-1.095266</td><td>-0.7814623</td><td>-0.130487</td></tr>
      <tr><th>97</th><td>1.133239</td><td>-0.2030185</td><td>-1.108677</td></tr>
      <tr><th>98</th><td>0.4647684</td><td>-0.3696299</td><td>-0.5895216</td></tr>
      <tr><th>99</th><td>-0.1434357</td><td>-0.8629527</td><td>1.276321</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.070084,0.0562843,0.0205243]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 86-87

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-92

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 92-95

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
