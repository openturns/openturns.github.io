
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\underline{x}_0, \dots, \underline{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \underline{x}_i= X(\omega)(t_i)


A time series is stored in the **TimeSeries** object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values
Care! The number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[1.01189,-0.608942,0.259667],[0.324782,0.541045,0.124925],[0.63389,0.71797,0.204209],[-0.230565,-0.441029,0.218173],[0.358047,0.389048,0.0223299],[1.65473,0.718066,1.20039],[-0.0428541,0.299168,-1.95814],[0.342204,-0.822006,0.414328],[-0.336382,1.84368,-0.637582],[0.411799,-0.176888,-1.10384],[-0.414421,0.266101,-0.340295],[0.716981,-0.624488,1.48763],[-0.235484,0.22803,-0.8464],[-0.0506129,0.963482,-0.266606],[0.718303,-1.35427,-0.399967],[0.827442,-1.60123,-0.789026],[-0.470555,-1.17375,-1.17225],[1.44633,-0.0109896,-0.392194],[0.423681,-0.215168,-1.36186],[0.653895,1.87561,-0.402469],[0.623307,-0.207295,1.17231],[0.2915,-2.07544,-0.229841],[0.93204,-2.89787,-0.485802],[-0.315465,0.563317,-1.54763],[1.74913,-0.711751,0.120468],[0.85627,0.591214,-1.07519],[-0.751024,-0.550295,-1.29029],[0.776951,0.556825,-0.989392],[2.2382,-0.015504,0.87992],[1.10091,-1.08794,1.28143],[0.770213,-1.11943,0.361488],[-1.43777,0.192138,-1.69362],[1.48814,-0.979175,-1.66438],[2.75891,-0.0568873,-0.517364],[0.0644103,-0.497525,-1.67019],[-0.527852,1.15265,0.156536],[-0.790078,0.119299,-1.69795],[-0.4429,-0.541246,-1.35629],[-0.549982,-1.22042,-0.177045],[1.70917,-0.636661,0.218454],[0.448041,1.22407,-0.239304],[-0.437019,-0.533459,0.430689],[-0.549999,-0.920782,-2.35124],[-0.956058,0.943051,0.725423],[0.103282,0.516111,2.00502],[1.63507,-1.43977,0.529791],[1.03687,-0.444105,-0.753347],[0.100154,-0.550234,1.41372],[0.464214,0.447407,-1.05761],[1.35995,-0.710775,-0.164241],[-1.28354,0.556653,0.548566],[1.68737,0.79344,-0.540027],[-0.848387,-0.103264,0.958601],[-1.02522,-0.354939,-0.869302],[0.266897,0.296524,-2.24114],[-1.5607,-2.272,0.722451],[-2.16128,-0.32861,1.06975],[-1.77994,-0.832708,-0.245372],[-0.0205006,-0.170101,0.529296],[-0.725104,-1.16247,0.199523],[0.727148,-0.260688,-0.136772],[0.52023,-0.659133,-0.180673],[-1.04885,0.512371,0.20648],[-0.960832,0.414682,-1.22871],[2.57497,-0.00804901,-1.8859],[0.830757,-0.378346,0.479046],[1.60938,-0.570841,0.269096],[0.803503,0.583218,0.449756],[-0.693556,1.89666,0.0270818],[-0.258272,-0.37012,0.0456596],[-0.343048,-0.392484,-2.41093],[1.93921,-0.590044,0.22705],[-0.141765,0.855507,0.286761],[0.564812,-0.509701,1.40334],[-1.37852,0.434035,0.0342518],[0.896116,-0.870577,1.36995],[0.272597,0.579223,-1.5321],[0.957065,0.427663,-0.36668],[0.648699,-0.00464944,0.171548],[-0.0795761,0.455389,-2.14009],[0.933245,0.818686,-1.54826],[0.370246,-0.773089,-0.0129833],[0.187309,-2.13145,-1.19768],[-0.00500185,-0.125673,-1.89201],[3.40565,-0.103576,0.415448],[0.727255,0.978855,1.15808],[0.295275,0.283934,1.29426],[0.200773,0.342265,0.164085],[-0.608383,0.144346,0.537733],[0.696557,1.18791,2.18097],[-0.194809,0.628316,0.230866],[-0.648071,-0.0280203,0.871005],[1.24473,-0.106358,-0.234489],[-2.0102,0.121701,-1.33163],[-0.825457,-1.21658,-1.02579],[-1.22486,-0.735057,0.267431],[-0.313967,0.328403,-1.18542],[0.272577,-0.537997,-0.154628],[0.0348939,0.357208,0.87381],[-1.4897,-1.60323,0.276884]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.2052791</td><td>0.3135911</td><td>1.520626</td></tr>
      <tr><th>1</th><td>0.1</td><td>2.127892</td><td>0.1574096</td><td>0.05643199</td></tr>
      <tr><th>2</th><td>0.2</td><td>1.05201</td><td>-1.069286</td><td>0.03896958</td></tr>
      <tr><th>3</th><td>0.3</td><td>0.1088619</td><td>1.560223</td><td>0.8978581</td></tr>
      <tr><th>4</th><td>0.4</td><td>0.07131786</td><td>0.3290581</td><td>0.7683447</td></tr>
      <tr><th>5</th><td>0.5</td><td>-0.2017215</td><td>0.1483074</td><td>0.4988259</td></tr>
      <tr><th>6</th><td>0.6</td><td>-0.5406089</td><td>0.202215</td><td>1.52964</td></tr>
      <tr><th>7</th><td>0.7</td><td>-1.192179</td><td>0.5249542</td><td>-0.1271758</td></tr>
      <tr><th>8</th><td>0.8</td><td>1.001217</td><td>0.2995675</td><td>-0.07324792</td></tr>
      <tr><th>9</th><td>0.9</td><td>-0.5928008</td><td>0.509773</td><td>1.568079</td></tr>
      <tr><th>10</th><td>1</td><td>0.3693428</td><td>0.6873462</td><td>0.2602205</td></tr>
      <tr><th>11</th><td>1.1</td><td>1.560101</td><td>0.6838802</td><td>-0.2604079</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.1696515</td><td>-1.016573</td><td>0.8102853</td></tr>
      <tr><th>13</th><td>1.3</td><td>-0.9345477</td><td>0.4402335</td><td>0.1026545</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.1625502</td><td>0.9776058</td><td>-0.6851276</td></tr>
      <tr><th>15</th><td>1.5</td><td>-0.04119683</td><td>-0.1615313</td><td>0.009488993</td></tr>
      <tr><th>16</th><td>1.6</td><td>-0.6992373</td><td>0.8356431</td><td>0.9612086</td></tr>
      <tr><th>17</th><td>1.7</td><td>-0.3953424</td><td>0.2505092</td><td>-1.712787</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.3033722</td><td>1.713433</td><td>0.2879968</td></tr>
      <tr><th>19</th><td>1.9</td><td>-0.3462038</td><td>-1.243077</td><td>-0.6619336</td></tr>
      <tr><th>20</th><td>2</td><td>-0.5396257</td><td>0.7891796</td><td>0.525199</td></tr>
      <tr><th>21</th><td>2.1</td><td>0.2655049</td><td>-0.6153533</td><td>0.6677281</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.3206562</td><td>-0.00603524</td><td>-1.440427</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.07065125</td><td>0.4005165</td><td>-0.5370034</td></tr>
      <tr><th>24</th><td>2.4</td><td>-2.130432</td><td>0.1862285</td><td>-1.326288</td></tr>
      <tr><th>25</th><td>2.5</td><td>0.2426011</td><td>-0.8973327</td><td>-0.9573643</td></tr>
      <tr><th>26</th><td>2.6</td><td>1.588237</td><td>-0.2380769</td><td>-0.6543979</td></tr>
      <tr><th>27</th><td>2.7</td><td>1.498919</td><td>-0.7131357</td><td>-1.335157</td></tr>
      <tr><th>28</th><td>2.8</td><td>0.5676285</td><td>0.640198</td><td>-0.259729</td></tr>
      <tr><th>29</th><td>2.9</td><td>0.1922855</td><td>-1.402221</td><td>0.5600177</td></tr>
      <tr><th>30</th><td>3</td><td>-1.356244</td><td>1.034522</td><td>-0.3787931</td></tr>
      <tr><th>31</th><td>3.1</td><td>-0.1257271</td><td>-0.5878356</td><td>1.078941</td></tr>
      <tr><th>32</th><td>3.2</td><td>-1.669386</td><td>1.708344</td><td>-0.8459409</td></tr>
      <tr><th>33</th><td>3.3</td><td>-0.1786205</td><td>-0.1958844</td><td>1.811325</td></tr>
      <tr><th>34</th><td>3.4</td><td>0.4000363</td><td>1.108118</td><td>-0.4552358</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.7934174</td><td>2.283829</td><td>0.351885</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.06082214</td><td>1.182574</td><td>2.057236</td></tr>
      <tr><th>37</th><td>3.7</td><td>2.083603</td><td>-1.109457</td><td>0.6461174</td></tr>
      <tr><th>38</th><td>3.8</td><td>0.3140881</td><td>-1.259195</td><td>2.51347</td></tr>
      <tr><th>39</th><td>3.9</td><td>1.106768</td><td>-1.237082</td><td>-0.4050629</td></tr>
      <tr><th>40</th><td>4</td><td>1.244775</td><td>0.2588656</td><td>-0.1137998</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.3814998</td><td>0.1557911</td><td>0.4024124</td></tr>
      <tr><th>42</th><td>4.2</td><td>1.332716</td><td>-0.8056192</td><td>0.3854209</td></tr>
      <tr><th>43</th><td>4.3</td><td>-1.61086</td><td>-0.6874292</td><td>-0.02107395</td></tr>
      <tr><th>44</th><td>4.4</td><td>-1.405266</td><td>-0.6029087</td><td>-0.07453712</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.287633</td><td>-0.4026233</td><td>-0.4894317</td></tr>
      <tr><th>46</th><td>4.6</td><td>-0.5803388</td><td>1.196489</td><td>1.004556</td></tr>
      <tr><th>47</th><td>4.7</td><td>0.5372572</td><td>-0.08770909</td><td>1.423935</td></tr>
      <tr><th>48</th><td>4.8</td><td>0.6820146</td><td>2.884055</td><td>0.2796988</td></tr>
      <tr><th>49</th><td>4.9</td><td>-1.178997</td><td>-0.143892</td><td>0.6813079</td></tr>
      <tr><th>50</th><td>5</td><td>0.01437919</td><td>0.5099701</td><td>-1.060234</td></tr>
      <tr><th>51</th><td>5.1</td><td>0.04483657</td><td>0.2499197</td><td>1.24773</td></tr>
      <tr><th>52</th><td>5.2</td><td>-0.3856004</td><td>-0.2880728</td><td>-0.5890517</td></tr>
      <tr><th>53</th><td>5.3</td><td>0.4995753</td><td>1.132313</td><td>-0.8437811</td></tr>
      <tr><th>54</th><td>5.4</td><td>1.43619</td><td>-0.1876503</td><td>0.940522</td></tr>
      <tr><th>55</th><td>5.5</td><td>0.7151117</td><td>-1.439318</td><td>-0.1429401</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.1765888</td><td>0.9054335</td><td>0.6688361</td></tr>
      <tr><th>57</th><td>5.7</td><td>-0.1848348</td><td>-0.2056171</td><td>0.8539061</td></tr>
      <tr><th>58</th><td>5.8</td><td>1.082717</td><td>0.7860448</td><td>-1.839514</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.4807376</td><td>-0.7431111</td><td>0.2583894</td></tr>
      <tr><th>60</th><td>6</td><td>0.06498678</td><td>0.8220976</td><td>-0.2202976</td></tr>
      <tr><th>61</th><td>6.1</td><td>-1.267407</td><td>0.06548754</td><td>-2.506485</td></tr>
      <tr><th>62</th><td>6.2</td><td>0.2182682</td><td>-0.3734256</td><td>-0.3483342</td></tr>
      <tr><th>63</th><td>6.3</td><td>-1.020392</td><td>-0.9373684</td><td>0.793814</td></tr>
      <tr><th>64</th><td>6.4</td><td>-0.983334</td><td>-0.4151898</td><td>0.1049272</td></tr>
      <tr><th>65</th><td>6.5</td><td>-0.4991656</td><td>0.3643877</td><td>-0.1627931</td></tr>
      <tr><th>66</th><td>6.6</td><td>0.4925782</td><td>0.3548167</td><td>-0.8811936</td></tr>
      <tr><th>67</th><td>6.7</td><td>-0.819895</td><td>-2.106536</td><td>0.1773956</td></tr>
      <tr><th>68</th><td>6.8</td><td>-0.04881701</td><td>-0.9867962</td><td>-0.8862132</td></tr>
      <tr><th>69</th><td>6.9</td><td>1.219161</td><td>0.266691</td><td>0.188304</td></tr>
      <tr><th>70</th><td>7</td><td>0.8090514</td><td>1.619885</td><td>-0.5646788</td></tr>
      <tr><th>71</th><td>7.1</td><td>-0.9921044</td><td>0.7245245</td><td>0.3057475</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.4119946</td><td>2.759856</td><td>0.4088039</td></tr>
      <tr><th>73</th><td>7.3</td><td>1.121707</td><td>-0.6501654</td><td>-1.034288</td></tr>
      <tr><th>74</th><td>7.4</td><td>1.150379</td><td>0.5587453</td><td>1.332409</td></tr>
      <tr><th>75</th><td>7.5</td><td>-0.3225148</td><td>0.4750779</td><td>-0.1536095</td></tr>
      <tr><th>76</th><td>7.6</td><td>1.035535</td><td>1.381175</td><td>1.225896</td></tr>
      <tr><th>77</th><td>7.7</td><td>-0.1056646</td><td>0.3069166</td><td>0.4924758</td></tr>
      <tr><th>78</th><td>7.8</td><td>0.4262604</td><td>-0.5698308</td><td>-0.4156163</td></tr>
      <tr><th>79</th><td>7.9</td><td>-2.609303</td><td>-2.173168</td><td>-1.324497</td></tr>
      <tr><th>80</th><td>8</td><td>-1.45585</td><td>0.1801837</td><td>1.421198</td></tr>
      <tr><th>81</th><td>8.1</td><td>1.866039</td><td>-0.1742316</td><td>-1.55547</td></tr>
      <tr><th>82</th><td>8.2</td><td>1.4884</td><td>1.303924</td><td>-1.061323</td></tr>
      <tr><th>83</th><td>8.3</td><td>-1.305955</td><td>-1.629615</td><td>-0.2962869</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.8739792</td><td>0.1051378</td><td>-0.02998592</td></tr>
      <tr><th>85</th><td>8.5</td><td>-1.516032</td><td>1.474471</td><td>-1.03669</td></tr>
      <tr><th>86</th><td>8.6</td><td>-1.534651</td><td>0.8259901</td><td>0.457382</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.3865615</td><td>1.28411</td><td>-0.3259461</td></tr>
      <tr><th>88</th><td>8.8</td><td>1.637177</td><td>-0.8420178</td><td>-0.2924097</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.3615991</td><td>0.4570965</td><td>0.237978</td></tr>
      <tr><th>90</th><td>9</td><td>1.020826</td><td>1.699262</td><td>-0.5438809</td></tr>
      <tr><th>91</th><td>9.1</td><td>0.4973056</td><td>-1.469904</td><td>-2.294773</td></tr>
      <tr><th>92</th><td>9.2</td><td>-0.2623551</td><td>-1.554523</td><td>-2.82731</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.5825531</td><td>0.4139608</td><td>-0.9302437</td></tr>
      <tr><th>94</th><td>9.4</td><td>0.549059</td><td>-0.69065</td><td>-0.6021352</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.7677184</td><td>1.285077</td><td>-0.22259</td></tr>
      <tr><th>96</th><td>9.6</td><td>1.221741</td><td>0.4439343</td><td>-0.7078664</td></tr>
      <tr><th>97</th><td>9.7</td><td>-1.056912</td><td>0.5648551</td><td>0.2980986</td></tr>
      <tr><th>98</th><td>9.8</td><td>1.342418</td><td>1.085837</td><td>0.8239627</td></tr>
      <tr><th>99</th><td>9.9</td><td>-0.6283856</td><td>-0.8834576</td><td>0.8607533</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value Xi at index i

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.4429,-0.541246,-1.35629]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index i : Xi

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.4429,-0.541246,-1.35629]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index i of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.44290028916853585




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values (X1, .., Xn) of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>1.011887</td><td>-0.6089418</td><td>0.259667</td></tr>
      <tr><th>1</th><td>0.3247816</td><td>0.5410446</td><td>0.124925</td></tr>
      <tr><th>2</th><td>0.6338902</td><td>0.7179695</td><td>0.2042093</td></tr>
      <tr><th>3</th><td>-0.2305653</td><td>-0.4410291</td><td>0.2181727</td></tr>
      <tr><th>4</th><td>0.3580472</td><td>0.3890482</td><td>0.02232993</td></tr>
      <tr><th>5</th><td>1.654732</td><td>0.7180658</td><td>1.200392</td></tr>
      <tr><th>6</th><td>-0.04285412</td><td>0.2991685</td><td>-1.958143</td></tr>
      <tr><th>7</th><td>0.3422039</td><td>-0.8220064</td><td>0.4143278</td></tr>
      <tr><th>8</th><td>-0.3363815</td><td>1.84368</td><td>-0.637582</td></tr>
      <tr><th>9</th><td>0.4117993</td><td>-0.1768882</td><td>-1.10384</td></tr>
      <tr><th>10</th><td>-0.4144207</td><td>0.2661011</td><td>-0.3402945</td></tr>
      <tr><th>11</th><td>0.7169809</td><td>-0.6244882</td><td>1.487634</td></tr>
      <tr><th>12</th><td>-0.2354843</td><td>0.2280304</td><td>-0.8464</td></tr>
      <tr><th>13</th><td>-0.05061286</td><td>0.9634821</td><td>-0.2666059</td></tr>
      <tr><th>14</th><td>0.7183027</td><td>-1.35427</td><td>-0.3999666</td></tr>
      <tr><th>15</th><td>0.8274424</td><td>-1.601233</td><td>-0.7890261</td></tr>
      <tr><th>16</th><td>-0.470555</td><td>-1.173748</td><td>-1.172249</td></tr>
      <tr><th>17</th><td>1.446331</td><td>-0.01098964</td><td>-0.3921936</td></tr>
      <tr><th>18</th><td>0.4236814</td><td>-0.2151677</td><td>-1.361857</td></tr>
      <tr><th>19</th><td>0.6538955</td><td>1.875609</td><td>-0.4024692</td></tr>
      <tr><th>20</th><td>0.6233072</td><td>-0.2072951</td><td>1.17231</td></tr>
      <tr><th>21</th><td>0.2915004</td><td>-2.075439</td><td>-0.2298406</td></tr>
      <tr><th>22</th><td>0.9320396</td><td>-2.897866</td><td>-0.485802</td></tr>
      <tr><th>23</th><td>-0.3154649</td><td>0.5633166</td><td>-1.547632</td></tr>
      <tr><th>24</th><td>1.749131</td><td>-0.7117512</td><td>0.1204685</td></tr>
      <tr><th>25</th><td>0.8562701</td><td>0.5912137</td><td>-1.075188</td></tr>
      <tr><th>26</th><td>-0.751024</td><td>-0.5502947</td><td>-1.290288</td></tr>
      <tr><th>27</th><td>0.7769506</td><td>0.5568254</td><td>-0.9893918</td></tr>
      <tr><th>28</th><td>2.238198</td><td>-0.01550398</td><td>0.87992</td></tr>
      <tr><th>29</th><td>1.100906</td><td>-1.087936</td><td>1.281433</td></tr>
      <tr><th>30</th><td>0.7702127</td><td>-1.119431</td><td>0.3614885</td></tr>
      <tr><th>31</th><td>-1.437774</td><td>0.1921378</td><td>-1.693616</td></tr>
      <tr><th>32</th><td>1.488139</td><td>-0.9791753</td><td>-1.664384</td></tr>
      <tr><th>33</th><td>2.758905</td><td>-0.05688733</td><td>-0.5173643</td></tr>
      <tr><th>34</th><td>0.06441027</td><td>-0.4975254</td><td>-1.670192</td></tr>
      <tr><th>35</th><td>-0.5278518</td><td>1.152648</td><td>0.1565362</td></tr>
      <tr><th>36</th><td>-0.790078</td><td>0.1192994</td><td>-1.69795</td></tr>
      <tr><th>37</th><td>-0.4429003</td><td>-0.5412464</td><td>-1.356292</td></tr>
      <tr><th>38</th><td>-0.5499819</td><td>-1.220419</td><td>-0.1770449</td></tr>
      <tr><th>39</th><td>1.709167</td><td>-0.6366608</td><td>0.2184536</td></tr>
      <tr><th>40</th><td>0.4480405</td><td>1.224067</td><td>-0.2393039</td></tr>
      <tr><th>41</th><td>-0.4370185</td><td>-0.5334587</td><td>0.4306893</td></tr>
      <tr><th>42</th><td>-0.5499989</td><td>-0.9207816</td><td>-2.351244</td></tr>
      <tr><th>43</th><td>-0.9560584</td><td>0.943051</td><td>0.7254229</td></tr>
      <tr><th>44</th><td>0.1032824</td><td>0.5161109</td><td>2.005021</td></tr>
      <tr><th>45</th><td>1.635069</td><td>-1.439767</td><td>0.5297914</td></tr>
      <tr><th>46</th><td>1.036868</td><td>-0.4441049</td><td>-0.7533471</td></tr>
      <tr><th>47</th><td>0.1001542</td><td>-0.5502341</td><td>1.41372</td></tr>
      <tr><th>48</th><td>0.464214</td><td>0.4474071</td><td>-1.057613</td></tr>
      <tr><th>49</th><td>1.359945</td><td>-0.710775</td><td>-0.1642414</td></tr>
      <tr><th>50</th><td>-1.283544</td><td>0.5566532</td><td>0.5485656</td></tr>
      <tr><th>51</th><td>1.687374</td><td>0.7934399</td><td>-0.5400267</td></tr>
      <tr><th>52</th><td>-0.848387</td><td>-0.1032642</td><td>0.9586013</td></tr>
      <tr><th>53</th><td>-1.025222</td><td>-0.3549386</td><td>-0.8693017</td></tr>
      <tr><th>54</th><td>0.266897</td><td>0.296524</td><td>-2.241144</td></tr>
      <tr><th>55</th><td>-1.560704</td><td>-2.271998</td><td>0.7224505</td></tr>
      <tr><th>56</th><td>-2.161275</td><td>-0.3286104</td><td>1.069747</td></tr>
      <tr><th>57</th><td>-1.779941</td><td>-0.8327076</td><td>-0.2453716</td></tr>
      <tr><th>58</th><td>-0.0205006</td><td>-0.1701006</td><td>0.5292955</td></tr>
      <tr><th>59</th><td>-0.7251038</td><td>-1.162473</td><td>0.1995235</td></tr>
      <tr><th>60</th><td>0.7271477</td><td>-0.2606875</td><td>-0.1367718</td></tr>
      <tr><th>61</th><td>0.5202298</td><td>-0.6591333</td><td>-0.1806734</td></tr>
      <tr><th>62</th><td>-1.048847</td><td>0.5123711</td><td>0.2064803</td></tr>
      <tr><th>63</th><td>-0.960832</td><td>0.4146824</td><td>-1.228714</td></tr>
      <tr><th>64</th><td>2.57497</td><td>-0.008049008</td><td>-1.885899</td></tr>
      <tr><th>65</th><td>0.830757</td><td>-0.3783459</td><td>0.4790463</td></tr>
      <tr><th>66</th><td>1.609382</td><td>-0.5708413</td><td>0.2690964</td></tr>
      <tr><th>67</th><td>0.8035033</td><td>0.5832181</td><td>0.4497564</td></tr>
      <tr><th>68</th><td>-0.6935559</td><td>1.896662</td><td>0.02708176</td></tr>
      <tr><th>69</th><td>-0.258272</td><td>-0.37012</td><td>0.04565963</td></tr>
      <tr><th>70</th><td>-0.3430478</td><td>-0.3924844</td><td>-2.410929</td></tr>
      <tr><th>71</th><td>1.939206</td><td>-0.5900438</td><td>0.2270499</td></tr>
      <tr><th>72</th><td>-0.1417654</td><td>0.8555065</td><td>0.286761</td></tr>
      <tr><th>73</th><td>0.5648119</td><td>-0.5097008</td><td>1.403344</td></tr>
      <tr><th>74</th><td>-1.378522</td><td>0.4340351</td><td>0.03425181</td></tr>
      <tr><th>75</th><td>0.8961165</td><td>-0.8705775</td><td>1.369953</td></tr>
      <tr><th>76</th><td>0.2725969</td><td>0.5792226</td><td>-1.532103</td></tr>
      <tr><th>77</th><td>0.957065</td><td>0.4276634</td><td>-0.3666802</td></tr>
      <tr><th>78</th><td>0.6486989</td><td>-0.004649441</td><td>0.1715484</td></tr>
      <tr><th>79</th><td>-0.07957611</td><td>0.4553892</td><td>-2.140093</td></tr>
      <tr><th>80</th><td>0.9332446</td><td>0.8186856</td><td>-1.548256</td></tr>
      <tr><th>81</th><td>0.370246</td><td>-0.773089</td><td>-0.01298333</td></tr>
      <tr><th>82</th><td>0.1873089</td><td>-2.131449</td><td>-1.197682</td></tr>
      <tr><th>83</th><td>-0.005001849</td><td>-0.1256726</td><td>-1.892007</td></tr>
      <tr><th>84</th><td>3.40565</td><td>-0.1035762</td><td>0.4154477</td></tr>
      <tr><th>85</th><td>0.7272545</td><td>0.9788553</td><td>1.158081</td></tr>
      <tr><th>86</th><td>0.2952752</td><td>0.2839339</td><td>1.294258</td></tr>
      <tr><th>87</th><td>0.2007735</td><td>0.342265</td><td>0.1640854</td></tr>
      <tr><th>88</th><td>-0.6083832</td><td>0.1443463</td><td>0.5377329</td></tr>
      <tr><th>89</th><td>0.6965567</td><td>1.187906</td><td>2.180975</td></tr>
      <tr><th>90</th><td>-0.1948093</td><td>0.6283156</td><td>0.2308662</td></tr>
      <tr><th>91</th><td>-0.6480712</td><td>-0.02802031</td><td>0.8710046</td></tr>
      <tr><th>92</th><td>1.244731</td><td>-0.1063582</td><td>-0.2344887</td></tr>
      <tr><th>93</th><td>-2.010204</td><td>0.1217012</td><td>-1.331632</td></tr>
      <tr><th>94</th><td>-0.8254575</td><td>-1.216578</td><td>-1.025789</td></tr>
      <tr><th>95</th><td>-1.224865</td><td>-0.7350567</td><td>0.2674311</td></tr>
      <tr><th>96</th><td>-0.3139666</td><td>0.3284034</td><td>-1.185418</td></tr>
      <tr><th>97</th><td>0.2725766</td><td>-0.5379969</td><td>-0.1546276</td></tr>
      <tr><th>98</th><td>0.03489387</td><td>0.3572081</td><td>0.8738098</td></tr>
      <tr><th>99</th><td>-1.489697</td><td>-1.603233</td><td>0.2768838</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.153322,-0.0887119,-0.139828]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal i of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

with no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`
