
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-0.319935,0.710241,-1.12362],[-0.148765,0.138473,-0.693519],[-0.36844,-0.0952369,1.65523],[-0.295836,-1.99752,0.934086],[0.0422815,-0.403402,-1.85243],[0.206591,-1.40631,-0.55773],[0.950641,0.137209,-1.11893],[0.324919,0.564252,-0.648245],[1.95527,-0.286497,-0.496323],[-0.456993,1.0174,0.207799],[1.07488,-0.103375,-0.232638],[-0.45619,1.3392,-1.83655],[0.445854,-0.0732211,0.121114],[-1.26382,-0.25187,0.00758938],[1.62386,0.62583,0.130808],[0.187841,-1.72169,-1.41166],[1.36521,0.0259774,-1.30035],[-1.26504,-0.216937,-0.944956],[1.52215,0.612601,-0.193302],[-0.10566,1.89091,0.775017],[2.19854,0.561523,-1.28188],[-0.417271,0.456305,-0.102354],[-0.560156,-0.347614,-0.285816],[0.160869,0.234039,-2.10497],[1.67629,-0.630264,0.531087],[-0.148113,-1.6344,-0.476188],[1.08712,-0.267151,0.194683],[-0.32172,0.809668,1.72551],[1.91082,0.412653,0.489194],[-0.684687,-0.991052,0.330581],[1.20095,-0.391093,0.412998],[-0.0927341,-0.163247,0.180509],[0.15937,0.988833,0.242876],[0.444587,-0.470216,-0.412724],[-0.428996,0.707263,-1.07232],[-0.167512,0.162335,0.481779],[-0.245007,1.58607,-0.786683],[-0.549504,0.847008,-0.786008],[-0.83208,-1.66849,-0.529649],[0.203669,-1.62106,0.245886],[0.94869,1.55965,1.4145],[-1.23324,-2.2793,-1.08265],[1.84308,-0.462863,-0.792173],[0.895396,-1.74689,-1.09648],[0.714964,1.99966,2.52979],[0.741561,-1.64162,-1.57335],[0.202534,0.249076,0.839584],[1.57031,-1.1843,0.0570528],[-1.52343,-0.412556,-1.49778],[0.794589,-0.709381,0.488162],[0.238604,-2.9629,-0.816902],[-2.16373,0.0135167,-1.81599],[1.12448,0.963476,0.274562],[-1.43523,0.721119,0.69204],[-0.413806,-0.566962,0.997814],[-0.953947,1.19608,-0.380039],[-1.40409,-0.083382,0.7249],[-0.956077,0.231291,1.54334],[1.23013,0.794062,1.75555],[0.453254,0.635984,-0.497895],[-0.118916,-0.894871,-0.46348],[-0.465744,-0.419175,0.253809],[0.444152,0.521319,-0.444498],[-0.203536,1.17135,-0.598927],[0.347618,0.962295,0.231111],[-1.40123,-1.92181,0.915182],[1.03519,0.867754,0.613971],[-1.46144,-0.563275,-0.97386],[-0.447048,-1.04758,1.48901],[-0.165263,0.383883,1.22956],[-0.653887,0.177523,-0.472012],[-0.11216,0.935906,0.500805],[-0.41956,0.175913,0.453122],[-0.340087,0.24352,-0.150488],[-0.482274,-0.7044,-0.396994],[-0.0853007,-1.21246,1.90709],[-0.970957,-0.440859,-0.604284],[0.678414,-0.976555,-1.13495],[2.4028,1.09418,-0.866146],[-0.995037,-0.166068,-1.66931],[0.825548,1.69448,-1.23983],[0.713154,0.559578,-0.968462],[1.22829,0.226177,-0.890307],[0.667937,0.900693,-0.265234],[-1.70599,0.154187,-0.73966],[-0.430794,-0.0914347,0.173721],[0.543299,-0.508033,-0.887821],[-0.159309,-0.0530596,-1.31332],[1.05835,-0.697691,0.27561],[-0.667433,-1.52685,-0.357943],[-1.05794,0.363931,0.765583],[0.116919,-0.100144,0.991353],[0.151867,-0.167582,-0.00585009],[0.846329,0.377983,-0.864682],[-0.37869,0.780078,0.0326341],[-1.00286,-0.67759,-1.83624],[-0.106391,-0.5325,-0.443504],[0.0658839,-0.414199,-1.03282],[-0.357827,0.604376,0.916068],[0.604421,-1.75692,-0.438915]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>0.5989117</td><td>-1.408645</td><td>0.1178448</td></tr>
      <tr><th>1</th><td>0.1</td><td>1.309424</td><td>-1.228074</td><td>-2.622636</td></tr>
      <tr><th>2</th><td>0.2</td><td>-0.1164642</td><td>0.1491886</td><td>-1.153531</td></tr>
      <tr><th>3</th><td>0.3</td><td>0.2135013</td><td>0.8629363</td><td>-0.02240852</td></tr>
      <tr><th>4</th><td>0.4</td><td>-1.669409</td><td>0.1314671</td><td>1.397139</td></tr>
      <tr><th>5</th><td>0.5</td><td>-0.9420027</td><td>0.3163893</td><td>2.289168</td></tr>
      <tr><th>6</th><td>0.6</td><td>-0.09095568</td><td>-2.856333</td><td>0.009989224</td></tr>
      <tr><th>7</th><td>0.7</td><td>-0.8702988</td><td>-0.340845</td><td>0.3081663</td></tr>
      <tr><th>8</th><td>0.8</td><td>-1.79397</td><td>1.003903</td><td>0.04309122</td></tr>
      <tr><th>9</th><td>0.9</td><td>-1.89486</td><td>-0.5996637</td><td>1.591823</td></tr>
      <tr><th>10</th><td>1</td><td>-0.1227273</td><td>-1.285961</td><td>-1.034056</td></tr>
      <tr><th>11</th><td>1.1</td><td>0.6079347</td><td>-0.7478587</td><td>2.1362</td></tr>
      <tr><th>12</th><td>1.2</td><td>-1.536458</td><td>-0.7496651</td><td>-1.141987</td></tr>
      <tr><th>13</th><td>1.3</td><td>0.1690512</td><td>0.4165551</td><td>-0.4619345</td></tr>
      <tr><th>14</th><td>1.4</td><td>-1.474359</td><td>-0.2038524</td><td>0.7418568</td></tr>
      <tr><th>15</th><td>1.5</td><td>-0.8903707</td><td>-0.5328711</td><td>0.920918</td></tr>
      <tr><th>16</th><td>1.6</td><td>0.4782705</td><td>-0.3999414</td><td>-1.746036</td></tr>
      <tr><th>17</th><td>1.7</td><td>1.096853</td><td>-0.3836536</td><td>-1.903686</td></tr>
      <tr><th>18</th><td>1.8</td><td>0.7626493</td><td>-0.01239165</td><td>-0.09448483</td></tr>
      <tr><th>19</th><td>1.9</td><td>-0.08459941</td><td>0.6937829</td><td>0.3999621</td></tr>
      <tr><th>20</th><td>2</td><td>-0.1660214</td><td>-0.1389675</td><td>1.178142</td></tr>
      <tr><th>21</th><td>2.1</td><td>0.1850353</td><td>-0.04535639</td><td>-0.8979867</td></tr>
      <tr><th>22</th><td>2.2</td><td>0.7919292</td><td>0.3061092</td><td>-0.6595585</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.3240839</td><td>-1.029018</td><td>0.9406508</td></tr>
      <tr><th>24</th><td>2.4</td><td>0.4624959</td><td>-1.770576</td><td>-0.06764924</td></tr>
      <tr><th>25</th><td>2.5</td><td>1.562252</td><td>0.5870762</td><td>-1.912634</td></tr>
      <tr><th>26</th><td>2.6</td><td>-0.2540217</td><td>0.6937345</td><td>-0.4776554</td></tr>
      <tr><th>27</th><td>2.7</td><td>0.8788012</td><td>1.587563</td><td>1.329376</td></tr>
      <tr><th>28</th><td>2.8</td><td>-0.5161779</td><td>0.7388159</td><td>-1.720274</td></tr>
      <tr><th>29</th><td>2.9</td><td>0.498668</td><td>0.787712</td><td>-1.453556</td></tr>
      <tr><th>30</th><td>3</td><td>-2.265602</td><td>1.291452</td><td>-0.470497</td></tr>
      <tr><th>31</th><td>3.1</td><td>0.05660992</td><td>0.6004544</td><td>-0.5104861</td></tr>
      <tr><th>32</th><td>3.2</td><td>0.8618011</td><td>-0.300679</td><td>1.622925</td></tr>
      <tr><th>33</th><td>3.3</td><td>1.11999</td><td>1.656544</td><td>-0.9857372</td></tr>
      <tr><th>34</th><td>3.4</td><td>0.7978959</td><td>-0.897166</td><td>1.206682</td></tr>
      <tr><th>35</th><td>3.5</td><td>0.6907065</td><td>-0.01946934</td><td>0.9966655</td></tr>
      <tr><th>36</th><td>3.6</td><td>0.5830826</td><td>-0.4073363</td><td>-0.755022</td></tr>
      <tr><th>37</th><td>3.7</td><td>1.36454</td><td>0.1048236</td><td>-0.2720549</td></tr>
      <tr><th>38</th><td>3.8</td><td>0.4907307</td><td>-0.9110181</td><td>0.4060762</td></tr>
      <tr><th>39</th><td>3.9</td><td>-0.1450682</td><td>-0.8456679</td><td>0.133899</td></tr>
      <tr><th>40</th><td>4</td><td>2.157763</td><td>-0.195309</td><td>0.4342688</td></tr>
      <tr><th>41</th><td>4.1</td><td>-0.5128689</td><td>-1.540639</td><td>-1.329284</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.03340847</td><td>-0.1795752</td><td>2.133181</td></tr>
      <tr><th>43</th><td>4.3</td><td>0.831473</td><td>0.9695787</td><td>0.5505443</td></tr>
      <tr><th>44</th><td>4.4</td><td>-0.5486273</td><td>1.491749</td><td>-0.3884662</td></tr>
      <tr><th>45</th><td>4.5</td><td>0.8169971</td><td>-0.7782865</td><td>-0.9959353</td></tr>
      <tr><th>46</th><td>4.6</td><td>-0.6577847</td><td>-0.7440124</td><td>-1.578439</td></tr>
      <tr><th>47</th><td>4.7</td><td>-0.4668638</td><td>0.7045707</td><td>-0.730873</td></tr>
      <tr><th>48</th><td>4.8</td><td>0.04855204</td><td>1.411264</td><td>1.296229</td></tr>
      <tr><th>49</th><td>4.9</td><td>0.5112113</td><td>-0.2372327</td><td>0.01272592</td></tr>
      <tr><th>50</th><td>5</td><td>-0.05380239</td><td>0.2286664</td><td>0.6077574</td></tr>
      <tr><th>51</th><td>5.1</td><td>-0.5264981</td><td>-1.204281</td><td>0.2744213</td></tr>
      <tr><th>52</th><td>5.2</td><td>-1.719675</td><td>-0.08335812</td><td>0.81204</td></tr>
      <tr><th>53</th><td>5.3</td><td>1.049216</td><td>-2.473959</td><td>0.5468303</td></tr>
      <tr><th>54</th><td>5.4</td><td>-2.459595</td><td>1.112327</td><td>0.3619026</td></tr>
      <tr><th>55</th><td>5.5</td><td>-0.829273</td><td>1.051853</td><td>0.41615</td></tr>
      <tr><th>56</th><td>5.6</td><td>0.2907655</td><td>0.1515341</td><td>0.8185579</td></tr>
      <tr><th>57</th><td>5.7</td><td>-0.6198034</td><td>-0.4089773</td><td>-0.5718581</td></tr>
      <tr><th>58</th><td>5.8</td><td>1.182563</td><td>0.001628077</td><td>-1.238657</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.001981304</td><td>-0.6870157</td><td>-0.2028402</td></tr>
      <tr><th>60</th><td>6</td><td>-0.2743511</td><td>-0.2393532</td><td>2.627842</td></tr>
      <tr><th>61</th><td>6.1</td><td>-0.7902051</td><td>0.3273687</td><td>-0.8846184</td></tr>
      <tr><th>62</th><td>6.2</td><td>0.4728943</td><td>-0.3553711</td><td>-1.570621</td></tr>
      <tr><th>63</th><td>6.3</td><td>1.243784</td><td>0.7847218</td><td>-0.529348</td></tr>
      <tr><th>64</th><td>6.4</td><td>-1.342331</td><td>-0.6932885</td><td>-0.9331922</td></tr>
      <tr><th>65</th><td>6.5</td><td>0.02396322</td><td>-0.5257205</td><td>0.23743</td></tr>
      <tr><th>66</th><td>6.6</td><td>-0.1327072</td><td>0.6572031</td><td>0.4655023</td></tr>
      <tr><th>67</th><td>6.7</td><td>1.335173</td><td>0.076273</td><td>-0.7639137</td></tr>
      <tr><th>68</th><td>6.8</td><td>0.3885612</td><td>-0.6802381</td><td>0.07587895</td></tr>
      <tr><th>69</th><td>6.9</td><td>0.2332822</td><td>-1.490538</td><td>-0.6914136</td></tr>
      <tr><th>70</th><td>7</td><td>-0.6717109</td><td>0.2345238</td><td>-0.7296347</td></tr>
      <tr><th>71</th><td>7.1</td><td>-1.583149</td><td>0.6593634</td><td>-2.334618</td></tr>
      <tr><th>72</th><td>7.2</td><td>2.137421</td><td>-0.3528584</td><td>-0.1499137</td></tr>
      <tr><th>73</th><td>7.3</td><td>-0.6568159</td><td>0.656449</td><td>-0.3461161</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.3746421</td><td>-0.2695312</td><td>-0.1029154</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.1070592</td><td>0.3864104</td><td>0.949324</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.585208</td><td>-0.008811606</td><td>0.6302443</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.6142591</td><td>-0.6339778</td><td>0.1367468</td></tr>
      <tr><th>78</th><td>7.8</td><td>0.4197737</td><td>0.3225312</td><td>0.7810584</td></tr>
      <tr><th>79</th><td>7.9</td><td>-0.9541983</td><td>-0.673645</td><td>-0.8477335</td></tr>
      <tr><th>80</th><td>8</td><td>-0.02615876</td><td>-0.7249383</td><td>-1.407451</td></tr>
      <tr><th>81</th><td>8.1</td><td>0.0222604</td><td>0.5248376</td><td>-0.8735739</td></tr>
      <tr><th>82</th><td>8.2</td><td>0.7462308</td><td>-0.4651709</td><td>-1.236561</td></tr>
      <tr><th>83</th><td>8.3</td><td>-2.178598</td><td>-0.8283844</td><td>-1.413743</td></tr>
      <tr><th>84</th><td>8.4</td><td>-0.626627</td><td>1.375426</td><td>-0.2627852</td></tr>
      <tr><th>85</th><td>8.5</td><td>1.362412</td><td>-0.8424421</td><td>-1.148293</td></tr>
      <tr><th>86</th><td>8.6</td><td>-0.6245365</td><td>-0.4993743</td><td>-0.3912332</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.3139332</td><td>-1.606045</td><td>0.6265297</td></tr>
      <tr><th>88</th><td>8.8</td><td>-0.5042629</td><td>1.392257</td><td>1.443137</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.4405842</td><td>-1.461877</td><td>0.8749511</td></tr>
      <tr><th>90</th><td>9</td><td>-0.4015443</td><td>-0.02731962</td><td>-0.2483447</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.3608194</td><td>0.7554337</td><td>-0.5855491</td></tr>
      <tr><th>92</th><td>9.2</td><td>-0.8999992</td><td>1.292003</td><td>-2.158871</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.8727021</td><td>0.1459127</td><td>2.236973</td></tr>
      <tr><th>94</th><td>9.4</td><td>-1.442462</td><td>-0.783791</td><td>-1.724559</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.3590995</td><td>0.4224997</td><td>-1.018297</td></tr>
      <tr><th>96</th><td>9.6</td><td>-0.7956222</td><td>-0.4405417</td><td>-0.9064415</td></tr>
      <tr><th>97</th><td>9.7</td><td>-0.4109155</td><td>-0.04031023</td><td>-1.359395</td></tr>
      <tr><th>98</th><td>9.8</td><td>2.021743</td><td>-0.2401285</td><td>0.4989175</td></tr>
      <tr><th>99</th><td>9.9</td><td>-0.828816</td><td>0.434514</td><td>-0.7150026</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.549504,0.847008,-0.786008]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.549504,0.847008,-0.786008]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.5495035853148222




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-0.3199349</td><td>0.7102408</td><td>-1.123619</td></tr>
      <tr><th>1</th><td>-0.1487646</td><td>0.1384728</td><td>-0.6935194</td></tr>
      <tr><th>2</th><td>-0.3684404</td><td>-0.09523692</td><td>1.655226</td></tr>
      <tr><th>3</th><td>-0.2958358</td><td>-1.997523</td><td>0.934086</td></tr>
      <tr><th>4</th><td>0.04228148</td><td>-0.4034019</td><td>-1.852429</td></tr>
      <tr><th>5</th><td>0.2065907</td><td>-1.40631</td><td>-0.55773</td></tr>
      <tr><th>6</th><td>0.9506407</td><td>0.1372092</td><td>-1.118934</td></tr>
      <tr><th>7</th><td>0.3249186</td><td>0.5642524</td><td>-0.6482447</td></tr>
      <tr><th>8</th><td>1.955272</td><td>-0.2864971</td><td>-0.4963229</td></tr>
      <tr><th>9</th><td>-0.4569933</td><td>1.017396</td><td>0.2077992</td></tr>
      <tr><th>10</th><td>1.074885</td><td>-0.1033748</td><td>-0.232638</td></tr>
      <tr><th>11</th><td>-0.4561901</td><td>1.339201</td><td>-1.836549</td></tr>
      <tr><th>12</th><td>0.445854</td><td>-0.0732211</td><td>0.1211137</td></tr>
      <tr><th>13</th><td>-1.263816</td><td>-0.2518697</td><td>0.007589381</td></tr>
      <tr><th>14</th><td>1.623865</td><td>0.6258299</td><td>0.130808</td></tr>
      <tr><th>15</th><td>0.187841</td><td>-1.721691</td><td>-1.411656</td></tr>
      <tr><th>16</th><td>1.365208</td><td>0.0259774</td><td>-1.300352</td></tr>
      <tr><th>17</th><td>-1.265038</td><td>-0.2169373</td><td>-0.9449556</td></tr>
      <tr><th>18</th><td>1.522147</td><td>0.612601</td><td>-0.1933016</td></tr>
      <tr><th>19</th><td>-0.1056603</td><td>1.890912</td><td>0.7750169</td></tr>
      <tr><th>20</th><td>2.198538</td><td>0.5615233</td><td>-1.281875</td></tr>
      <tr><th>21</th><td>-0.4172707</td><td>0.4563049</td><td>-0.1023536</td></tr>
      <tr><th>22</th><td>-0.5601564</td><td>-0.3476136</td><td>-0.285816</td></tr>
      <tr><th>23</th><td>0.1608693</td><td>0.2340388</td><td>-2.104971</td></tr>
      <tr><th>24</th><td>1.676295</td><td>-0.6302642</td><td>0.5310868</td></tr>
      <tr><th>25</th><td>-0.1481128</td><td>-1.634396</td><td>-0.4761878</td></tr>
      <tr><th>26</th><td>1.087116</td><td>-0.267151</td><td>0.194683</td></tr>
      <tr><th>27</th><td>-0.3217204</td><td>0.8096684</td><td>1.725513</td></tr>
      <tr><th>28</th><td>1.910821</td><td>0.4126532</td><td>0.4891941</td></tr>
      <tr><th>29</th><td>-0.6846874</td><td>-0.9910524</td><td>0.3305813</td></tr>
      <tr><th>30</th><td>1.200946</td><td>-0.3910933</td><td>0.4129985</td></tr>
      <tr><th>31</th><td>-0.09273405</td><td>-0.1632469</td><td>0.1805087</td></tr>
      <tr><th>32</th><td>0.15937</td><td>0.9888326</td><td>0.2428763</td></tr>
      <tr><th>33</th><td>0.4445869</td><td>-0.4702158</td><td>-0.4127242</td></tr>
      <tr><th>34</th><td>-0.4289962</td><td>0.7072635</td><td>-1.072323</td></tr>
      <tr><th>35</th><td>-0.1675121</td><td>0.1623352</td><td>0.4817786</td></tr>
      <tr><th>36</th><td>-0.2450071</td><td>1.58607</td><td>-0.7866828</td></tr>
      <tr><th>37</th><td>-0.5495036</td><td>0.847008</td><td>-0.7860079</td></tr>
      <tr><th>38</th><td>-0.8320805</td><td>-1.668493</td><td>-0.529649</td></tr>
      <tr><th>39</th><td>0.2036688</td><td>-1.621059</td><td>0.245886</td></tr>
      <tr><th>40</th><td>0.9486896</td><td>1.559649</td><td>1.414504</td></tr>
      <tr><th>41</th><td>-1.233241</td><td>-2.279296</td><td>-1.082653</td></tr>
      <tr><th>42</th><td>1.843084</td><td>-0.4628634</td><td>-0.7921731</td></tr>
      <tr><th>43</th><td>0.8953958</td><td>-1.746886</td><td>-1.096485</td></tr>
      <tr><th>44</th><td>0.7149638</td><td>1.999663</td><td>2.529785</td></tr>
      <tr><th>45</th><td>0.7415609</td><td>-1.641622</td><td>-1.573346</td></tr>
      <tr><th>46</th><td>0.2025341</td><td>0.2490764</td><td>0.8395841</td></tr>
      <tr><th>47</th><td>1.570307</td><td>-1.184302</td><td>0.0570528</td></tr>
      <tr><th>48</th><td>-1.52343</td><td>-0.4125565</td><td>-1.497785</td></tr>
      <tr><th>49</th><td>0.7945886</td><td>-0.7093805</td><td>0.4881619</td></tr>
      <tr><th>50</th><td>0.2386039</td><td>-2.962897</td><td>-0.8169023</td></tr>
      <tr><th>51</th><td>-2.16373</td><td>0.01351671</td><td>-1.815995</td></tr>
      <tr><th>52</th><td>1.124481</td><td>0.9634763</td><td>0.2745625</td></tr>
      <tr><th>53</th><td>-1.435232</td><td>0.7211191</td><td>0.6920399</td></tr>
      <tr><th>54</th><td>-0.4138063</td><td>-0.5669623</td><td>0.9978136</td></tr>
      <tr><th>55</th><td>-0.9539474</td><td>1.196081</td><td>-0.3800386</td></tr>
      <tr><th>56</th><td>-1.404086</td><td>-0.083382</td><td>0.7249003</td></tr>
      <tr><th>57</th><td>-0.9560766</td><td>0.2312914</td><td>1.543339</td></tr>
      <tr><th>58</th><td>1.230134</td><td>0.7940622</td><td>1.755547</td></tr>
      <tr><th>59</th><td>0.4532536</td><td>0.6359841</td><td>-0.497895</td></tr>
      <tr><th>60</th><td>-0.1189157</td><td>-0.8948711</td><td>-0.4634795</td></tr>
      <tr><th>61</th><td>-0.4657444</td><td>-0.4191748</td><td>0.2538088</td></tr>
      <tr><th>62</th><td>0.4441516</td><td>0.5213187</td><td>-0.4444979</td></tr>
      <tr><th>63</th><td>-0.2035357</td><td>1.171347</td><td>-0.5989268</td></tr>
      <tr><th>64</th><td>0.3476179</td><td>0.9622955</td><td>0.2311109</td></tr>
      <tr><th>65</th><td>-1.401232</td><td>-1.921807</td><td>0.9151824</td></tr>
      <tr><th>66</th><td>1.035191</td><td>0.8677537</td><td>0.6139713</td></tr>
      <tr><th>67</th><td>-1.46144</td><td>-0.5632755</td><td>-0.9738599</td></tr>
      <tr><th>68</th><td>-0.4470482</td><td>-1.047584</td><td>1.489009</td></tr>
      <tr><th>69</th><td>-0.1652633</td><td>0.383883</td><td>1.229563</td></tr>
      <tr><th>70</th><td>-0.6538866</td><td>0.1775229</td><td>-0.4720119</td></tr>
      <tr><th>71</th><td>-0.1121597</td><td>0.9359057</td><td>0.500805</td></tr>
      <tr><th>72</th><td>-0.4195603</td><td>0.1759126</td><td>0.4531216</td></tr>
      <tr><th>73</th><td>-0.3400872</td><td>0.2435199</td><td>-0.1504884</td></tr>
      <tr><th>74</th><td>-0.4822744</td><td>-0.7043998</td><td>-0.3969936</td></tr>
      <tr><th>75</th><td>-0.0853007</td><td>-1.212459</td><td>1.907093</td></tr>
      <tr><th>76</th><td>-0.9709574</td><td>-0.4408592</td><td>-0.6042843</td></tr>
      <tr><th>77</th><td>0.6784143</td><td>-0.9765547</td><td>-1.134951</td></tr>
      <tr><th>78</th><td>2.4028</td><td>1.094182</td><td>-0.8661457</td></tr>
      <tr><th>79</th><td>-0.9950366</td><td>-0.1660679</td><td>-1.669315</td></tr>
      <tr><th>80</th><td>0.8255477</td><td>1.694475</td><td>-1.239833</td></tr>
      <tr><th>81</th><td>0.7131541</td><td>0.5595777</td><td>-0.968462</td></tr>
      <tr><th>82</th><td>1.22829</td><td>0.2261774</td><td>-0.8903069</td></tr>
      <tr><th>83</th><td>0.6679368</td><td>0.9006929</td><td>-0.2652342</td></tr>
      <tr><th>84</th><td>-1.70599</td><td>0.1541871</td><td>-0.7396597</td></tr>
      <tr><th>85</th><td>-0.4307938</td><td>-0.09143472</td><td>0.1737206</td></tr>
      <tr><th>86</th><td>0.5432986</td><td>-0.5080328</td><td>-0.8878213</td></tr>
      <tr><th>87</th><td>-0.1593086</td><td>-0.0530596</td><td>-1.313318</td></tr>
      <tr><th>88</th><td>1.058353</td><td>-0.6976912</td><td>0.27561</td></tr>
      <tr><th>89</th><td>-0.6674334</td><td>-1.526846</td><td>-0.3579427</td></tr>
      <tr><th>90</th><td>-1.057938</td><td>0.3639309</td><td>0.7655831</td></tr>
      <tr><th>91</th><td>0.1169189</td><td>-0.1001438</td><td>0.9913534</td></tr>
      <tr><th>92</th><td>0.1518666</td><td>-0.1675816</td><td>-0.005850092</td></tr>
      <tr><th>93</th><td>0.8463285</td><td>0.3779827</td><td>-0.8646821</td></tr>
      <tr><th>94</th><td>-0.3786897</td><td>0.7800781</td><td>0.03263405</td></tr>
      <tr><th>95</th><td>-1.002861</td><td>-0.6775904</td><td>-1.836239</td></tr>
      <tr><th>96</th><td>-0.1063908</td><td>-0.5325002</td><td>-0.4435041</td></tr>
      <tr><th>97</th><td>0.06588391</td><td>-0.4141992</td><td>-1.03282</td></tr>
      <tr><th>98</th><td>-0.357827</td><td>0.604376</td><td>0.9160682</td></tr>
      <tr><th>99</th><td>0.6044208</td><td>-1.75692</td><td>-0.4389152</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.0517546,-0.0454793,-0.11682]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
