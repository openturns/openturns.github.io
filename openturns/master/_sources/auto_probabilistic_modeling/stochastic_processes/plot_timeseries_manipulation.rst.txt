
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-0.402597,0.381811,0.284941],[0.810494,0.834638,0.246653],[1.07736,-0.881124,0.371505],[-0.637357,-0.0843436,0.314454],[-0.167594,-0.584461,0.978861],[-1.69755,0.969505,1.6377],[2.63559,2.23479,1.01851],[1.97088,0.100653,0.517534],[-0.720859,0.103555,0.0154274],[-0.646662,1.00735,0.248067],[-1.32444,0.31998,0.931539],[-0.457502,0.885634,-1.05628],[0.656164,0.144686,0.499984],[0.628825,-1.9684,-1.15597],[-0.61482,0.197587,0.503801],[0.558019,-1.44099,0.376716],[-0.265616,-0.712269,0.0794188],[1.48857,-0.928589,-0.682334],[0.492917,-0.597764,-2.27621],[-0.379737,-0.385806,-0.607327],[-0.224041,0.894273,0.184704],[-2.12423,1.05825,-1.2833],[-0.126588,0.244842,-0.0574464],[0.199642,-0.678877,0.494813],[0.878585,-0.52978,-1.44121],[0.482928,-0.8833,0.238458],[-1.39567,1.31747,2.25241],[-1.47238,0.601539,-1.37777],[0.324169,0.36685,-0.232406],[0.273383,-0.0634075,1.39868],[-1.00954,-1.52255,-0.850191],[0.218888,-1.4327,0.183403],[-1.47769,0.127882,1.73716],[-2.13153,-1.19744,0.419124],[0.704112,-0.708294,-1.20306],[-1.01885,0.585674,-1.20774],[-0.773032,0.64447,2.06602],[-1.06436,1.22979,1.40607],[-0.406747,-1.38212,-0.579167],[0.305833,1.27442,-1.25243],[-0.762234,0.355532,-0.377763],[-1.50963,1.75659,-0.12178],[-1.00534,1.49571,2.25415],[-0.653598,-0.412579,0.784677],[2.78983,1.37652,0.214764],[0.447518,0.382102,0.869695],[2.01068,0.504726,0.259569],[1.98183,1.52734,0.970831],[-0.45795,3.24252,1.17914],[0.00414058,-0.519904,-0.369269],[-0.728211,-1.91904,-0.38677],[-0.219365,0.812602,-0.0200205],[0.152573,0.761404,0.73081],[1.90414,2.85536,0.555847],[-1.55727,-0.633345,-0.0526423],[0.12607,1.67747,1.31025],[0.0961392,0.621077,-1.27909],[-1.81995,-0.535929,-0.558237],[1.63547,0.785247,1.29704],[0.440599,-0.36165,1.31954],[0.456217,-1.1064,0.0938825],[0.964817,0.528622,0.647425],[0.617191,1.22056,1.56231],[-1.10132,1.97464,-1.09951],[1.1568,-0.353953,0.233299],[-0.0927003,0.151743,-1.40427],[0.251896,0.298982,1.25228],[-0.0429753,-1.07282,0.31593],[-0.315742,1.18597,-0.654456],[1.71424,-0.966205,0.212292],[-0.834022,0.857448,-1.01667],[1.76252,-0.733332,-0.406603],[0.0167959,0.505963,0.133106],[2.06236,0.983619,-0.827266],[-0.386476,0.312151,-1.52338],[1.15606,-1.06579,-1.14151],[1.21103,0.53329,-1.25976],[0.788969,0.12294,0.193751],[-2.1295,1.64019,1.87687],[-1.35212,1.02795,-0.594442],[-0.123023,-0.163421,-0.205026],[1.95881,2.46699,1.03222],[-2.46712,0.103058,-0.660548],[0.459926,-0.368771,0.15772],[1.14295,0.321961,-1.08389],[-0.688254,0.571338,3.2356],[-0.495934,-0.279577,-0.875349],[0.357477,-0.155961,-1.81579],[-0.616101,-1.48805,-1.05078],[0.0222214,-0.611737,1.95635],[0.969657,-0.689797,0.0883514],[0.913555,1.34201,1.46711],[1.44693,0.174182,1.85145],[-1.36747,-0.966562,-1.26104],[0.191302,0.580773,-0.781748],[-0.0946987,-0.561808,0.2861],[0.614611,-0.415357,-2.5243],[2.33878,0.355159,0.370598],[0.596701,-1.09691,-1.27691],[0.204786,-0.366503,0.464282]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.968715</td><td>-0.7808273</td><td>-1.159201</td></tr>
      <tr><th>1</th><td>0.1</td><td>0.1372579</td><td>-1.707398</td><td>-1.274423</td></tr>
      <tr><th>2</th><td>0.2</td><td>-0.9212135</td><td>-0.297032</td><td>-1.144401</td></tr>
      <tr><th>3</th><td>0.3</td><td>0.2500063</td><td>0.5196716</td><td>-0.8978994</td></tr>
      <tr><th>4</th><td>0.4</td><td>0.584433</td><td>-0.3479884</td><td>-0.7570119</td></tr>
      <tr><th>5</th><td>0.5</td><td>-0.8233229</td><td>-0.4378524</td><td>0.0225743</td></tr>
      <tr><th>6</th><td>0.6</td><td>-0.107365</td><td>-1.158335</td><td>1.124997</td></tr>
      <tr><th>7</th><td>0.7</td><td>2.297042</td><td>-0.3072849</td><td>-0.8699629</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.6314955</td><td>0.5639932</td><td>0.6455593</td></tr>
      <tr><th>9</th><td>0.9</td><td>-2.319126</td><td>-0.9706224</td><td>0.5659254</td></tr>
      <tr><th>10</th><td>1</td><td>-0.5109025</td><td>0.4958788</td><td>-0.3130125</td></tr>
      <tr><th>11</th><td>1.1</td><td>-1.021895</td><td>0.1649817</td><td>0.7012531</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.5733224</td><td>-1.263493</td><td>-0.6364874</td></tr>
      <tr><th>13</th><td>1.3</td><td>-1.334948</td><td>-0.6635958</td><td>0.7989569</td></tr>
      <tr><th>14</th><td>1.4</td><td>-1.418328</td><td>0.465957</td><td>-0.4552497</td></tr>
      <tr><th>15</th><td>1.5</td><td>1.648595</td><td>2.160955</td><td>2.129782</td></tr>
      <tr><th>16</th><td>1.6</td><td>-0.3682795</td><td>-0.2288742</td><td>-1.775163</td></tr>
      <tr><th>17</th><td>1.7</td><td>-0.0991057</td><td>-0.7677312</td><td>-0.8045236</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.6576069</td><td>0.3370322</td><td>-2.245408</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.01916285</td><td>-0.3435076</td><td>0.2030047</td></tr>
      <tr><th>20</th><td>2</td><td>-0.1461558</td><td>-0.63834</td><td>0.1846185</td></tr>
      <tr><th>21</th><td>2.1</td><td>0.3936347</td><td>-0.6122799</td><td>-0.4411141</td></tr>
      <tr><th>22</th><td>2.2</td><td>-1.112364</td><td>-0.1127043</td><td>-1.770255</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.6707948</td><td>0.9431572</td><td>-1.433777</td></tr>
      <tr><th>24</th><td>2.4</td><td>0.3889816</td><td>-0.8490511</td><td>-0.9630433</td></tr>
      <tr><th>25</th><td>2.5</td><td>0.02220524</td><td>0.4209567</td><td>-2.007266</td></tr>
      <tr><th>26</th><td>2.6</td><td>0.1960944</td><td>-1.119164</td><td>-0.6607229</td></tr>
      <tr><th>27</th><td>2.7</td><td>0.01087528</td><td>0.1871653</td><td>-1.394616</td></tr>
      <tr><th>28</th><td>2.8</td><td>0.7880804</td><td>-0.7951832</td><td>0.684556</td></tr>
      <tr><th>29</th><td>2.9</td><td>0.06658792</td><td>-0.4989018</td><td>0.7200424</td></tr>
      <tr><th>30</th><td>3</td><td>-1.328441</td><td>-0.3555354</td><td>-0.01644082</td></tr>
      <tr><th>31</th><td>3.1</td><td>1.761797</td><td>-0.3014918</td><td>-1.19217</td></tr>
      <tr><th>32</th><td>3.2</td><td>0.5492528</td><td>-0.453811</td><td>-0.5172067</td></tr>
      <tr><th>33</th><td>3.3</td><td>-1.658988</td><td>-1.111016</td><td>-1.390957</td></tr>
      <tr><th>34</th><td>3.4</td><td>0.1926514</td><td>0.2232259</td><td>-0.213432</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.2014195</td><td>-1.293232</td><td>0.1604509</td></tr>
      <tr><th>36</th><td>3.6</td><td>0.1508277</td><td>0.5515963</td><td>-2.812875</td></tr>
      <tr><th>37</th><td>3.7</td><td>-0.4743212</td><td>-1.664332</td><td>-1.310664</td></tr>
      <tr><th>38</th><td>3.8</td><td>1.311411</td><td>-2.112413</td><td>0.004902625</td></tr>
      <tr><th>39</th><td>3.9</td><td>1.439739</td><td>0.3193421</td><td>0.1124644</td></tr>
      <tr><th>40</th><td>4</td><td>1.448207</td><td>-0.3213558</td><td>0.02499865</td></tr>
      <tr><th>41</th><td>4.1</td><td>-1.040967</td><td>0.4779165</td><td>-0.7828146</td></tr>
      <tr><th>42</th><td>4.2</td><td>0.2878286</td><td>0.8703409</td><td>-0.2235395</td></tr>
      <tr><th>43</th><td>4.3</td><td>0.2845207</td><td>0.9200104</td><td>0.7461464</td></tr>
      <tr><th>44</th><td>4.4</td><td>0.5548198</td><td>0.2661301</td><td>0.764567</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.2984352</td><td>1.2667</td><td>0.04893787</td></tr>
      <tr><th>46</th><td>4.6</td><td>-0.6531182</td><td>-1.22277</td><td>-0.4500834</td></tr>
      <tr><th>47</th><td>4.7</td><td>0.846179</td><td>-1.221637</td><td>-0.8104244</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.99261</td><td>0.2010986</td><td>-0.554249</td></tr>
      <tr><th>49</th><td>4.9</td><td>-0.8559879</td><td>0.3133253</td><td>-0.8452764</td></tr>
      <tr><th>50</th><td>5</td><td>1.127312</td><td>1.111407</td><td>0.6460338</td></tr>
      <tr><th>51</th><td>5.1</td><td>0.9689422</td><td>-1.660877</td><td>0.6252688</td></tr>
      <tr><th>52</th><td>5.2</td><td>0.5494622</td><td>0.02015456</td><td>-0.0007798551</td></tr>
      <tr><th>53</th><td>5.3</td><td>-0.105484</td><td>-0.352631</td><td>0.02183639</td></tr>
      <tr><th>54</th><td>5.4</td><td>-1.546278</td><td>1.330641</td><td>-0.3941664</td></tr>
      <tr><th>55</th><td>5.5</td><td>0.2508252</td><td>0.8057723</td><td>-1.125784</td></tr>
      <tr><th>56</th><td>5.6</td><td>-1.191023</td><td>0.4424165</td><td>-1.60006</td></tr>
      <tr><th>57</th><td>5.7</td><td>-0.3324965</td><td>1.342189</td><td>-0.7587675</td></tr>
      <tr><th>58</th><td>5.8</td><td>-1.257256</td><td>1.905052</td><td>1.59919</td></tr>
      <tr><th>59</th><td>5.9</td><td>-1.51931</td><td>0.1397061</td><td>-0.01699259</td></tr>
      <tr><th>60</th><td>6</td><td>1.123651</td><td>0.01418892</td><td>0.7010603</td></tr>
      <tr><th>61</th><td>6.1</td><td>-1.71857</td><td>0.7914377</td><td>-0.4033727</td></tr>
      <tr><th>62</th><td>6.2</td><td>-0.1647306</td><td>-1.270173</td><td>-3.501916</td></tr>
      <tr><th>63</th><td>6.3</td><td>0.2498369</td><td>-0.4700175</td><td>0.7821161</td></tr>
      <tr><th>64</th><td>6.4</td><td>1.116516</td><td>1.072978</td><td>0.6895577</td></tr>
      <tr><th>65</th><td>6.5</td><td>0.0001583226</td><td>0.8069661</td><td>-0.6233752</td></tr>
      <tr><th>66</th><td>6.6</td><td>1.142269</td><td>-0.6507542</td><td>0.720728</td></tr>
      <tr><th>67</th><td>6.7</td><td>-1.220581</td><td>-1.585985</td><td>1.04651</td></tr>
      <tr><th>68</th><td>6.8</td><td>-1.676851</td><td>-2.261709</td><td>-1.224107</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.346175</td><td>0.7936869</td><td>-1.31653</td></tr>
      <tr><th>70</th><td>7</td><td>0.7042802</td><td>-0.2865583</td><td>-0.6010381</td></tr>
      <tr><th>71</th><td>7.1</td><td>0.2364459</td><td>1.416725</td><td>0.6274033</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.2054219</td><td>1.233314</td><td>2.168341</td></tr>
      <tr><th>73</th><td>7.3</td><td>-1.016494</td><td>0.5583065</td><td>2.098505</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.9089124</td><td>-1.267311</td><td>-1.127265</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.1111569</td><td>0.703476</td><td>-1.489946</td></tr>
      <tr><th>76</th><td>7.6</td><td>0.6635587</td><td>-2.195627</td><td>-0.3084096</td></tr>
      <tr><th>77</th><td>7.7</td><td>-0.01617397</td><td>-0.2129302</td><td>0.7093079</td></tr>
      <tr><th>78</th><td>7.8</td><td>0.6897571</td><td>0.5080398</td><td>1.195073</td></tr>
      <tr><th>79</th><td>7.9</td><td>1.0507</td><td>-0.9494113</td><td>-0.6520361</td></tr>
      <tr><th>80</th><td>8</td><td>-0.0004015056</td><td>-0.3762159</td><td>-0.1142952</td></tr>
      <tr><th>81</th><td>8.1</td><td>0.9148492</td><td>-0.9659452</td><td>0.7316957</td></tr>
      <tr><th>82</th><td>8.2</td><td>-0.3216594</td><td>1.411868</td><td>-0.09591619</td></tr>
      <tr><th>83</th><td>8.3</td><td>-0.2196734</td><td>1.377515</td><td>-0.870754</td></tr>
      <tr><th>84</th><td>8.4</td><td>-0.3484663</td><td>1.414431</td><td>0.2861069</td></tr>
      <tr><th>85</th><td>8.5</td><td>0.4738759</td><td>0.5234543</td><td>0.1587469</td></tr>
      <tr><th>86</th><td>8.6</td><td>1.530056</td><td>1.549214</td><td>-0.3882099</td></tr>
      <tr><th>87</th><td>8.7</td><td>0.7807307</td><td>-0.2980301</td><td>-0.1465011</td></tr>
      <tr><th>88</th><td>8.8</td><td>-0.356495</td><td>0.06995737</td><td>-0.2563898</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.9631989</td><td>2.342288</td><td>-1.041722</td></tr>
      <tr><th>90</th><td>9</td><td>-0.5198929</td><td>-0.9408607</td><td>0.2754208</td></tr>
      <tr><th>91</th><td>9.1</td><td>1.761678</td><td>-0.8803578</td><td>0.3735814</td></tr>
      <tr><th>92</th><td>9.2</td><td>-0.7384489</td><td>1.034093</td><td>1.06487</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.506191</td><td>-0.1351634</td><td>0.5201431</td></tr>
      <tr><th>94</th><td>9.4</td><td>-1.327034</td><td>-0.1236504</td><td>0.5536172</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.72262</td><td>1.661464</td><td>-1.268764</td></tr>
      <tr><th>96</th><td>9.6</td><td>1.081364</td><td>-0.1707782</td><td>0.8242316</td></tr>
      <tr><th>97</th><td>9.7</td><td>1.191277</td><td>-0.4888818</td><td>0.6129308</td></tr>
      <tr><th>98</th><td>9.8</td><td>-1.302541</td><td>-2.314325</td><td>-0.4065216</td></tr>
      <tr><th>99</th><td>9.9</td><td>-0.7756519</td><td>1.049434</td><td>0.1066174</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-1.06436,1.22979,1.40607]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-1.06436,1.22979,1.40607]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -1.0643622238599901




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-0.4025969</td><td>0.381811</td><td>0.2849408</td></tr>
      <tr><th>1</th><td>0.8104945</td><td>0.8346376</td><td>0.2466528</td></tr>
      <tr><th>2</th><td>1.077356</td><td>-0.8811239</td><td>0.3715054</td></tr>
      <tr><th>3</th><td>-0.6373573</td><td>-0.08434365</td><td>0.3144542</td></tr>
      <tr><th>4</th><td>-0.1675935</td><td>-0.5844607</td><td>0.9788612</td></tr>
      <tr><th>5</th><td>-1.697548</td><td>0.9695048</td><td>1.637696</td></tr>
      <tr><th>6</th><td>2.635594</td><td>2.234793</td><td>1.018506</td></tr>
      <tr><th>7</th><td>1.970877</td><td>0.1006529</td><td>0.5175343</td></tr>
      <tr><th>8</th><td>-0.7208586</td><td>0.1035553</td><td>0.01542735</td></tr>
      <tr><th>9</th><td>-0.6466616</td><td>1.007352</td><td>0.2480675</td></tr>
      <tr><th>10</th><td>-1.324438</td><td>0.3199805</td><td>0.9315395</td></tr>
      <tr><th>11</th><td>-0.4575023</td><td>0.8856339</td><td>-1.056281</td></tr>
      <tr><th>12</th><td>0.6561635</td><td>0.1446857</td><td>0.4999844</td></tr>
      <tr><th>13</th><td>0.628825</td><td>-1.968402</td><td>-1.15597</td></tr>
      <tr><th>14</th><td>-0.6148195</td><td>0.1975866</td><td>0.5038005</td></tr>
      <tr><th>15</th><td>0.5580187</td><td>-1.440987</td><td>0.3767156</td></tr>
      <tr><th>16</th><td>-0.2656158</td><td>-0.7122686</td><td>0.0794188</td></tr>
      <tr><th>17</th><td>1.488568</td><td>-0.9285891</td><td>-0.6823337</td></tr>
      <tr><th>18</th><td>0.4929167</td><td>-0.5977638</td><td>-2.276206</td></tr>
      <tr><th>19</th><td>-0.3797373</td><td>-0.3858057</td><td>-0.607327</td></tr>
      <tr><th>20</th><td>-0.2240406</td><td>0.894273</td><td>0.1847035</td></tr>
      <tr><th>21</th><td>-2.124227</td><td>1.058254</td><td>-1.283298</td></tr>
      <tr><th>22</th><td>-0.1265884</td><td>0.2448417</td><td>-0.05744642</td></tr>
      <tr><th>23</th><td>0.1996422</td><td>-0.6788771</td><td>0.4948134</td></tr>
      <tr><th>24</th><td>0.8785851</td><td>-0.52978</td><td>-1.441205</td></tr>
      <tr><th>25</th><td>0.4829281</td><td>-0.8832996</td><td>0.2384584</td></tr>
      <tr><th>26</th><td>-1.395669</td><td>1.317473</td><td>2.252408</td></tr>
      <tr><th>27</th><td>-1.472378</td><td>0.6015391</td><td>-1.377767</td></tr>
      <tr><th>28</th><td>0.3241693</td><td>0.3668498</td><td>-0.2324059</td></tr>
      <tr><th>29</th><td>0.2733834</td><td>-0.06340752</td><td>1.398676</td></tr>
      <tr><th>30</th><td>-1.009537</td><td>-1.522546</td><td>-0.8501915</td></tr>
      <tr><th>31</th><td>0.2188884</td><td>-1.4327</td><td>0.1834034</td></tr>
      <tr><th>32</th><td>-1.477686</td><td>0.1278825</td><td>1.737163</td></tr>
      <tr><th>33</th><td>-2.131532</td><td>-1.197441</td><td>0.4191243</td></tr>
      <tr><th>34</th><td>0.7041117</td><td>-0.7082944</td><td>-1.203063</td></tr>
      <tr><th>35</th><td>-1.018853</td><td>0.5856736</td><td>-1.207744</td></tr>
      <tr><th>36</th><td>-0.7730316</td><td>0.6444698</td><td>2.066019</td></tr>
      <tr><th>37</th><td>-1.064362</td><td>1.229787</td><td>1.40607</td></tr>
      <tr><th>38</th><td>-0.4067466</td><td>-1.38212</td><td>-0.579167</td></tr>
      <tr><th>39</th><td>0.305833</td><td>1.274425</td><td>-1.252426</td></tr>
      <tr><th>40</th><td>-0.7622344</td><td>0.3555319</td><td>-0.3777629</td></tr>
      <tr><th>41</th><td>-1.509626</td><td>1.756588</td><td>-0.1217802</td></tr>
      <tr><th>42</th><td>-1.005337</td><td>1.495706</td><td>2.254154</td></tr>
      <tr><th>43</th><td>-0.6535983</td><td>-0.4125794</td><td>0.784677</td></tr>
      <tr><th>44</th><td>2.789834</td><td>1.376519</td><td>0.2147639</td></tr>
      <tr><th>45</th><td>0.4475176</td><td>0.3821017</td><td>0.8696953</td></tr>
      <tr><th>46</th><td>2.010685</td><td>0.5047263</td><td>0.2595689</td></tr>
      <tr><th>47</th><td>1.981826</td><td>1.527342</td><td>0.9708315</td></tr>
      <tr><th>48</th><td>-0.4579499</td><td>3.24252</td><td>1.179137</td></tr>
      <tr><th>49</th><td>0.004140585</td><td>-0.5199035</td><td>-0.3692695</td></tr>
      <tr><th>50</th><td>-0.7282112</td><td>-1.919039</td><td>-0.3867701</td></tr>
      <tr><th>51</th><td>-0.2193647</td><td>0.8126015</td><td>-0.02002045</td></tr>
      <tr><th>52</th><td>0.1525734</td><td>0.7614044</td><td>0.7308098</td></tr>
      <tr><th>53</th><td>1.904142</td><td>2.855362</td><td>0.5558466</td></tr>
      <tr><th>54</th><td>-1.557271</td><td>-0.6333448</td><td>-0.05264227</td></tr>
      <tr><th>55</th><td>0.1260701</td><td>1.67747</td><td>1.310249</td></tr>
      <tr><th>56</th><td>0.09613919</td><td>0.6210772</td><td>-1.279093</td></tr>
      <tr><th>57</th><td>-1.81995</td><td>-0.5359285</td><td>-0.5582372</td></tr>
      <tr><th>58</th><td>1.635469</td><td>0.7852473</td><td>1.297036</td></tr>
      <tr><th>59</th><td>0.4405988</td><td>-0.3616502</td><td>1.31954</td></tr>
      <tr><th>60</th><td>0.4562168</td><td>-1.106397</td><td>0.09388249</td></tr>
      <tr><th>61</th><td>0.9648171</td><td>0.5286218</td><td>0.6474249</td></tr>
      <tr><th>62</th><td>0.6171914</td><td>1.220562</td><td>1.562308</td></tr>
      <tr><th>63</th><td>-1.101324</td><td>1.974644</td><td>-1.099506</td></tr>
      <tr><th>64</th><td>1.156804</td><td>-0.3539532</td><td>0.2332994</td></tr>
      <tr><th>65</th><td>-0.09270029</td><td>0.1517434</td><td>-1.40427</td></tr>
      <tr><th>66</th><td>0.2518957</td><td>0.2989822</td><td>1.252278</td></tr>
      <tr><th>67</th><td>-0.04297526</td><td>-1.072822</td><td>0.31593</td></tr>
      <tr><th>68</th><td>-0.3157422</td><td>1.185975</td><td>-0.6544564</td></tr>
      <tr><th>69</th><td>1.714237</td><td>-0.9662048</td><td>0.2122922</td></tr>
      <tr><th>70</th><td>-0.834022</td><td>0.8574476</td><td>-1.01667</td></tr>
      <tr><th>71</th><td>1.762517</td><td>-0.7333322</td><td>-0.4066032</td></tr>
      <tr><th>72</th><td>0.01679586</td><td>0.5059629</td><td>0.1331061</td></tr>
      <tr><th>73</th><td>2.062358</td><td>0.9836194</td><td>-0.8272659</td></tr>
      <tr><th>74</th><td>-0.3864762</td><td>0.3121512</td><td>-1.523378</td></tr>
      <tr><th>75</th><td>1.156058</td><td>-1.065794</td><td>-1.141514</td></tr>
      <tr><th>76</th><td>1.211029</td><td>0.5332905</td><td>-1.259764</td></tr>
      <tr><th>77</th><td>0.7889693</td><td>0.1229396</td><td>0.1937505</td></tr>
      <tr><th>78</th><td>-2.129502</td><td>1.640193</td><td>1.876874</td></tr>
      <tr><th>79</th><td>-1.352123</td><td>1.02795</td><td>-0.5944415</td></tr>
      <tr><th>80</th><td>-0.1230234</td><td>-0.1634205</td><td>-0.2050259</td></tr>
      <tr><th>81</th><td>1.958815</td><td>2.466994</td><td>1.032221</td></tr>
      <tr><th>82</th><td>-2.467122</td><td>0.1030582</td><td>-0.6605482</td></tr>
      <tr><th>83</th><td>0.4599256</td><td>-0.368771</td><td>0.15772</td></tr>
      <tr><th>84</th><td>1.142946</td><td>0.321961</td><td>-1.083891</td></tr>
      <tr><th>85</th><td>-0.6882542</td><td>0.5713381</td><td>3.235598</td></tr>
      <tr><th>86</th><td>-0.4959345</td><td>-0.2795772</td><td>-0.8753492</td></tr>
      <tr><th>87</th><td>0.3574766</td><td>-0.1559608</td><td>-1.815787</td></tr>
      <tr><th>88</th><td>-0.6161008</td><td>-1.488053</td><td>-1.050782</td></tr>
      <tr><th>89</th><td>0.02222137</td><td>-0.6117372</td><td>1.956348</td></tr>
      <tr><th>90</th><td>0.9696569</td><td>-0.6897973</td><td>0.08835142</td></tr>
      <tr><th>91</th><td>0.9135547</td><td>1.342008</td><td>1.467114</td></tr>
      <tr><th>92</th><td>1.446935</td><td>0.1741823</td><td>1.851451</td></tr>
      <tr><th>93</th><td>-1.367474</td><td>-0.9665619</td><td>-1.261037</td></tr>
      <tr><th>94</th><td>0.1913024</td><td>0.5807729</td><td>-0.7817479</td></tr>
      <tr><th>95</th><td>-0.09469871</td><td>-0.5618084</td><td>0.2861001</td></tr>
      <tr><th>96</th><td>0.6146113</td><td>-0.4153574</td><td>-2.524295</td></tr>
      <tr><th>97</th><td>2.338784</td><td>0.3551591</td><td>0.3705984</td></tr>
      <tr><th>98</th><td>0.5967012</td><td>-1.096908</td><td>-1.276912</td></tr>
      <tr><th>99</th><td>0.2047859</td><td>-0.3665033</td><td>0.4642822</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.0499021,0.121913,0.0492722]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
