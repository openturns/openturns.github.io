
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[0.738816,-1.72027,0.498668],[0.787712,-1.45356,-2.2656],[1.29145,-0.470497,0.0566099],[0.600454,-0.510486,0.861801],[-0.300679,1.62293,1.11999],[1.65654,-0.985737,0.797896],[-0.897166,1.20668,0.690707],[-0.0194693,0.996666,0.583083],[-0.407336,-0.755022,1.36454],[0.104824,-0.272055,0.490731],[-0.911018,0.406076,-0.145068],[-0.845668,0.133899,2.15776],[-0.195309,0.434269,-0.512869],[-1.54064,-1.32928,-0.0334085],[-0.179575,2.13318,0.831473],[0.969579,0.550544,-0.548627],[1.49175,-0.388466,0.816997],[-0.778286,-0.995935,-0.657785],[-0.744012,-1.57844,-0.466864],[0.704571,-0.730873,0.048552],[1.41126,1.29623,0.511211],[-0.237233,0.0127259,-0.0538024],[0.228666,0.607757,-0.526498],[-1.20428,0.274421,-1.71968],[-0.0833581,0.81204,1.04922],[-2.47396,0.54683,-2.45959],[1.11233,0.361903,-0.829273],[1.05185,0.41615,0.290765],[0.151534,0.818558,-0.619803],[-0.408977,-0.571858,1.18256],[0.00162808,-1.23866,-0.0019813],[-0.687016,-0.20284,-0.274351],[-0.239353,2.62784,-0.790205],[0.327369,-0.884618,0.472894],[-0.355371,-1.57062,1.24378],[0.784722,-0.529348,-1.34233],[-0.693289,-0.933192,0.0239632],[-0.525721,0.23743,-0.132707],[0.657203,0.465502,1.33517],[0.076273,-0.763914,0.388561],[-0.680238,0.075879,0.233282],[-1.49054,-0.691414,-0.671711],[0.234524,-0.729635,-1.58315],[0.659363,-2.33462,2.13742],[-0.352858,-0.149914,-0.656816],[0.656449,-0.346116,0.374642],[-0.269531,-0.102915,0.107059],[0.38641,0.949324,-0.585208],[-0.00881161,0.630244,0.614259],[-0.633978,0.136747,0.419774],[0.322531,0.781058,-0.954198],[-0.673645,-0.847734,-0.0261588],[-0.724938,-1.40745,0.0222604],[0.524838,-0.873574,0.746231],[-0.465171,-1.23656,-2.1786],[-0.828384,-1.41374,-0.626627],[1.37543,-0.262785,1.36241],[-0.842442,-1.14829,-0.624536],[-0.499374,-0.391233,-0.313933],[-1.60604,0.62653,-0.504263],[1.39226,1.44314,0.440584],[-1.46188,0.874951,-0.401544],[-0.0273196,-0.248345,-0.360819],[0.755434,-0.585549,-0.899999],[1.292,-2.15887,0.872702],[0.145913,2.23697,-1.44246],[-0.783791,-1.72456,-0.359099],[0.4225,-1.0183,-0.795622],[-0.440542,-0.906441,-0.410916],[-0.0403102,-1.3594,2.02174],[-0.240129,0.498917,-0.828816],[0.434514,-0.715003,-1.36852],[1.37933,0.350312,0.190049],[-0.427114,-0.732555,1.1123],[0.883392,0.153813,0.171658],[0.298447,2.05941,0.920816],[-0.519868,-1.79793,2.23111],[1.75917,0.813807,0.0908436],[-0.172279,1.51176,0.170963],[-0.943452,0.0723582,-0.987991],[-0.104124,-0.230918,-3.25454],[-0.0764593,-0.258422,-0.231554],[-0.0485726,-0.919095,0.640724],[0.400799,0.446214,-0.563507],[-0.398174,-0.287073,-0.779331],[2.00044,-1.18974,-0.828088],[0.778826,2.5661,1.7862],[-1.07031,0.0403758,-1.16121],[1.50363,2.19276,-0.998858],[-0.0632028,0.173135,-1.19649],[-0.147424,0.0693879,0.236731],[-1.41534,1.00367,0.431388],[0.0845256,0.272548,0.977741],[1.72426,-0.0452626,0.899656],[-0.404458,0.780787,-0.899546],[0.16482,1.07326,-0.801689],[-1.22104,1.49862,1.4486],[-0.779919,-1.24745,1.1203],[-1.12585,0.477889,0.932268],[-0.12869,0.737285,1.02913]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>1.051774</td><td>0.1525864</td><td>-0.2558827</td></tr>
      <tr><th>1</th><td>0.1</td><td>-0.7862053</td><td>-0.2001584</td><td>-1.36144</td></tr>
      <tr><th>2</th><td>0.2</td><td>0.2164988</td><td>0.6230709</td><td>1.110431</td></tr>
      <tr><th>3</th><td>0.3</td><td>0.9649308</td><td>0.06826154</td><td>-0.2211697</td></tr>
      <tr><th>4</th><td>0.4</td><td>0.7482627</td><td>0.1595218</td><td>0.8066721</td></tr>
      <tr><th>5</th><td>0.5</td><td>-0.05059484</td><td>0.2901834</td><td>-1.282218</td></tr>
      <tr><th>6</th><td>0.6</td><td>-1.026473</td><td>-1.53422</td><td>-0.7077882</td></tr>
      <tr><th>7</th><td>0.7</td><td>1.533711</td><td>-0.9129643</td><td>-3.045394</td></tr>
      <tr><th>8</th><td>0.8</td><td>-0.3531449</td><td>-1.49114</td><td>-0.3031981</td></tr>
      <tr><th>9</th><td>0.9</td><td>0.1907778</td><td>-2.250406</td><td>-0.1619942</td></tr>
      <tr><th>10</th><td>1</td><td>0.691326</td><td>-0.9356558</td><td>-0.2111466</td></tr>
      <tr><th>11</th><td>1.1</td><td>1.404035</td><td>1.406124</td><td>-1.39106</td></tr>
      <tr><th>12</th><td>1.2</td><td>1.934574</td><td>0.5793746</td><td>-0.02549613</td></tr>
      <tr><th>13</th><td>1.3</td><td>-1.647993</td><td>1.192292</td><td>-1.223617</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.3098032</td><td>-0.6708279</td><td>-1.325579</td></tr>
      <tr><th>15</th><td>1.5</td><td>-0.09257809</td><td>-0.4587709</td><td>0.1701092</td></tr>
      <tr><th>16</th><td>1.6</td><td>1.993731</td><td>0.1443795</td><td>-1.31192</td></tr>
      <tr><th>17</th><td>1.7</td><td>-1.570015</td><td>-1.686601</td><td>0.9728306</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.6677369</td><td>-0.3516017</td><td>-0.4452727</td></tr>
      <tr><th>19</th><td>1.9</td><td>-0.4452095</td><td>-0.3563792</td><td>-0.2276159</td></tr>
      <tr><th>20</th><td>2</td><td>0.5964077</td><td>0.45558</td><td>-0.3015324</td></tr>
      <tr><th>21</th><td>2.1</td><td>1.588955</td><td>-0.8235562</td><td>1.650237</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.6002425</td><td>-0.3802206</td><td>1.619908</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.4555775</td><td>-0.7999639</td><td>-1.089401</td></tr>
      <tr><th>24</th><td>2.4</td><td>0.7924111</td><td>-1.052806</td><td>0.8629686</td></tr>
      <tr><th>25</th><td>2.5</td><td>1.745567</td><td>-0.6025404</td><td>-1.823294</td></tr>
      <tr><th>26</th><td>2.6</td><td>1.080224</td><td>1.292969</td><td>1.390305</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.1396057</td><td>-1.389202</td><td>-1.025638</td></tr>
      <tr><th>28</th><td>2.8</td><td>-1.713572</td><td>-0.4219916</td><td>1.19031</td></tr>
      <tr><th>29</th><td>2.9</td><td>-1.007249</td><td>2.229139</td><td>0.6818759</td></tr>
      <tr><th>30</th><td>3</td><td>0.5174775</td><td>2.732452</td><td>-0.3495939</td></tr>
      <tr><th>31</th><td>3.1</td><td>0.4089004</td><td>-0.8907698</td><td>-1.961165</td></tr>
      <tr><th>32</th><td>3.2</td><td>0.4195578</td><td>0.531106</td><td>-0.6870479</td></tr>
      <tr><th>33</th><td>3.3</td><td>-0.6963231</td><td>1.764301</td><td>-0.4517889</td></tr>
      <tr><th>34</th><td>3.4</td><td>-1.472178</td><td>-1.076033</td><td>-0.3644964</td></tr>
      <tr><th>35</th><td>3.5</td><td>2.006137</td><td>-1.518601</td><td>0.5020352</td></tr>
      <tr><th>36</th><td>3.6</td><td>1.080156</td><td>0.4472064</td><td>-1.748127</td></tr>
      <tr><th>37</th><td>3.7</td><td>1.202653</td><td>-0.8204984</td><td>-0.4047192</td></tr>
      <tr><th>38</th><td>3.8</td><td>-0.1434079</td><td>-0.2524323</td><td>-2.027478</td></tr>
      <tr><th>39</th><td>3.9</td><td>0.06366895</td><td>0.8697225</td><td>-0.626582</td></tr>
      <tr><th>40</th><td>4</td><td>-0.3616409</td><td>0.3437971</td><td>0.3073757</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.2106943</td><td>0.5598708</td><td>0.8827834</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.9893548</td><td>0.4290915</td><td>-0.724032</td></tr>
      <tr><th>43</th><td>4.3</td><td>1.343126</td><td>0.4300464</td><td>0.5753863</td></tr>
      <tr><th>44</th><td>4.4</td><td>-1.088317</td><td>-1.013893</td><td>-0.9087582</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.5208781</td><td>0.2681437</td><td>-0.9993253</td></tr>
      <tr><th>46</th><td>4.6</td><td>-0.1780319</td><td>0.9038675</td><td>-0.6036926</td></tr>
      <tr><th>47</th><td>4.7</td><td>0.4555179</td><td>0.4330455</td><td>-0.5642285</td></tr>
      <tr><th>48</th><td>4.8</td><td>1.526655</td><td>1.166605</td><td>-0.7379079</td></tr>
      <tr><th>49</th><td>4.9</td><td>0.4229983</td><td>-0.3192795</td><td>-1.583796</td></tr>
      <tr><th>50</th><td>5</td><td>-0.1748036</td><td>0.6426626</td><td>1.108138</td></tr>
      <tr><th>51</th><td>5.1</td><td>-0.08855662</td><td>-0.8454277</td><td>1.50193</td></tr>
      <tr><th>52</th><td>5.2</td><td>-0.9350283</td><td>1.214667</td><td>1.497456</td></tr>
      <tr><th>53</th><td>5.3</td><td>3.203026</td><td>1.414456</td><td>-1.128454</td></tr>
      <tr><th>54</th><td>5.4</td><td>1.154131</td><td>-0.946655</td><td>1.320685</td></tr>
      <tr><th>55</th><td>5.5</td><td>-0.3347348</td><td>2.552047</td><td>0.8786241</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.09729082</td><td>1.002564</td><td>-0.4075146</td></tr>
      <tr><th>57</th><td>5.7</td><td>-1.719313</td><td>-0.5136125</td><td>0.6579631</td></tr>
      <tr><th>58</th><td>5.8</td><td>0.02527694</td><td>-0.4737289</td><td>-0.5350885</td></tr>
      <tr><th>59</th><td>5.9</td><td>1.315179</td><td>-1.618419</td><td>-0.6397787</td></tr>
      <tr><th>60</th><td>6</td><td>-0.6183302</td><td>1.178405</td><td>-0.8455306</td></tr>
      <tr><th>61</th><td>6.1</td><td>-1.683244</td><td>1.183358</td><td>-0.5199556</td></tr>
      <tr><th>62</th><td>6.2</td><td>-0.0266112</td><td>-0.4096993</td><td>-1.277238</td></tr>
      <tr><th>63</th><td>6.3</td><td>0.7188881</td><td>-0.3826099</td><td>-0.5288221</td></tr>
      <tr><th>64</th><td>6.4</td><td>0.4429203</td><td>-1.54794</td><td>0.883202</td></tr>
      <tr><th>65</th><td>6.5</td><td>1.591351</td><td>0.7506501</td><td>1.112904</td></tr>
      <tr><th>66</th><td>6.6</td><td>1.118832</td><td>-0.5645139</td><td>-1.233854</td></tr>
      <tr><th>67</th><td>6.7</td><td>-0.5610978</td><td>0.1367196</td><td>-0.3640687</td></tr>
      <tr><th>68</th><td>6.8</td><td>0.9185897</td><td>-0.7576516</td><td>-0.7862732</td></tr>
      <tr><th>69</th><td>6.9</td><td>0.7966951</td><td>1.274039</td><td>0.8637222</td></tr>
      <tr><th>70</th><td>7</td><td>-1.793724</td><td>1.066735</td><td>-1.488053</td></tr>
      <tr><th>71</th><td>7.1</td><td>0.3485988</td><td>0.2232556</td><td>-1.110193</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.3643589</td><td>-0.4540067</td><td>-1.460368</td></tr>
      <tr><th>73</th><td>7.3</td><td>0.5657892</td><td>-0.06897118</td><td>-0.512222</td></tr>
      <tr><th>74</th><td>7.4</td><td>-0.1768409</td><td>-1.363146</td><td>0.3122381</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.3611228</td><td>1.914671</td><td>-0.6861472</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.3582412</td><td>0.2103116</td><td>-0.3580654</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.243316</td><td>-0.3454245</td><td>-1.36688</td></tr>
      <tr><th>78</th><td>7.8</td><td>1.721331</td><td>0.1693123</td><td>-0.442628</td></tr>
      <tr><th>79</th><td>7.9</td><td>0.04286397</td><td>-0.2801392</td><td>0.03253233</td></tr>
      <tr><th>80</th><td>8</td><td>0.1334863</td><td>-0.673294</td><td>0.9150505</td></tr>
      <tr><th>81</th><td>8.1</td><td>-0.9224162</td><td>-0.5460582</td><td>-0.3194489</td></tr>
      <tr><th>82</th><td>8.2</td><td>-0.5212265</td><td>0.4783715</td><td>1.177144</td></tr>
      <tr><th>83</th><td>8.3</td><td>-0.4164243</td><td>-0.4671297</td><td>-1.211754</td></tr>
      <tr><th>84</th><td>8.4</td><td>-2.104293</td><td>-1.749905</td><td>0.06356998</td></tr>
      <tr><th>85</th><td>8.5</td><td>-0.2733526</td><td>0.2848705</td><td>-0.3504124</td></tr>
      <tr><th>86</th><td>8.6</td><td>-1.047761</td><td>-1.260286</td><td>0.5262738</td></tr>
      <tr><th>87</th><td>8.7</td><td>1.202859</td><td>0.2208703</td><td>-1.611502</td></tr>
      <tr><th>88</th><td>8.8</td><td>-0.6240565</td><td>0.9794446</td><td>0.09672741</td></tr>
      <tr><th>89</th><td>8.9</td><td>-0.6527078</td><td>-0.9390892</td><td>-0.2039636</td></tr>
      <tr><th>90</th><td>9</td><td>-0.05111422</td><td>-0.5939604</td><td>-0.8656888</td></tr>
      <tr><th>91</th><td>9.1</td><td>-2.158414</td><td>0.3668534</td><td>-0.5890667</td></tr>
      <tr><th>92</th><td>9.2</td><td>1.043369</td><td>0.2029446</td><td>-0.9790161</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.8527255</td><td>-1.22418</td><td>-1.504376</td></tr>
      <tr><th>94</th><td>9.4</td><td>0.2812066</td><td>-0.6732791</td><td>0.9001927</td></tr>
      <tr><th>95</th><td>9.5</td><td>1.541643</td><td>-0.8547368</td><td>-0.6011024</td></tr>
      <tr><th>96</th><td>9.6</td><td>-0.1283919</td><td>-0.174949</td><td>-1.225049</td></tr>
      <tr><th>97</th><td>9.7</td><td>-0.7160159</td><td>-0.3654714</td><td>0.9867702</td></tr>
      <tr><th>98</th><td>9.8</td><td>-0.678675</td><td>-0.6729533</td><td>0.3221019</td></tr>
      <tr><th>99</th><td>9.9</td><td>-1.927398</td><td>-1.673029</td><td>-0.1193566</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.525721,0.23743,-0.132707]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.525721,0.23743,-0.132707]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.5257205279044835




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0.7388159</td><td>-1.720274</td><td>0.498668</td></tr>
      <tr><th>1</th><td>0.787712</td><td>-1.453556</td><td>-2.265602</td></tr>
      <tr><th>2</th><td>1.291452</td><td>-0.470497</td><td>0.05660992</td></tr>
      <tr><th>3</th><td>0.6004544</td><td>-0.5104861</td><td>0.8618011</td></tr>
      <tr><th>4</th><td>-0.300679</td><td>1.622925</td><td>1.11999</td></tr>
      <tr><th>5</th><td>1.656544</td><td>-0.9857372</td><td>0.7978959</td></tr>
      <tr><th>6</th><td>-0.897166</td><td>1.206682</td><td>0.6907065</td></tr>
      <tr><th>7</th><td>-0.01946934</td><td>0.9966655</td><td>0.5830826</td></tr>
      <tr><th>8</th><td>-0.4073363</td><td>-0.755022</td><td>1.36454</td></tr>
      <tr><th>9</th><td>0.1048236</td><td>-0.2720549</td><td>0.4907307</td></tr>
      <tr><th>10</th><td>-0.9110181</td><td>0.4060762</td><td>-0.1450682</td></tr>
      <tr><th>11</th><td>-0.8456679</td><td>0.133899</td><td>2.157763</td></tr>
      <tr><th>12</th><td>-0.195309</td><td>0.4342688</td><td>-0.5128689</td></tr>
      <tr><th>13</th><td>-1.540639</td><td>-1.329284</td><td>-0.03340847</td></tr>
      <tr><th>14</th><td>-0.1795752</td><td>2.133181</td><td>0.831473</td></tr>
      <tr><th>15</th><td>0.9695787</td><td>0.5505443</td><td>-0.5486273</td></tr>
      <tr><th>16</th><td>1.491749</td><td>-0.3884662</td><td>0.8169971</td></tr>
      <tr><th>17</th><td>-0.7782865</td><td>-0.9959353</td><td>-0.6577847</td></tr>
      <tr><th>18</th><td>-0.7440124</td><td>-1.578439</td><td>-0.4668638</td></tr>
      <tr><th>19</th><td>0.7045707</td><td>-0.730873</td><td>0.04855204</td></tr>
      <tr><th>20</th><td>1.411264</td><td>1.296229</td><td>0.5112113</td></tr>
      <tr><th>21</th><td>-0.2372327</td><td>0.01272592</td><td>-0.05380239</td></tr>
      <tr><th>22</th><td>0.2286664</td><td>0.6077574</td><td>-0.5264981</td></tr>
      <tr><th>23</th><td>-1.204281</td><td>0.2744213</td><td>-1.719675</td></tr>
      <tr><th>24</th><td>-0.08335812</td><td>0.81204</td><td>1.049216</td></tr>
      <tr><th>25</th><td>-2.473959</td><td>0.5468303</td><td>-2.459595</td></tr>
      <tr><th>26</th><td>1.112327</td><td>0.3619026</td><td>-0.829273</td></tr>
      <tr><th>27</th><td>1.051853</td><td>0.41615</td><td>0.2907655</td></tr>
      <tr><th>28</th><td>0.1515341</td><td>0.8185579</td><td>-0.6198034</td></tr>
      <tr><th>29</th><td>-0.4089773</td><td>-0.5718581</td><td>1.182563</td></tr>
      <tr><th>30</th><td>0.001628077</td><td>-1.238657</td><td>-0.001981304</td></tr>
      <tr><th>31</th><td>-0.6870157</td><td>-0.2028402</td><td>-0.2743511</td></tr>
      <tr><th>32</th><td>-0.2393532</td><td>2.627842</td><td>-0.7902051</td></tr>
      <tr><th>33</th><td>0.3273687</td><td>-0.8846184</td><td>0.4728943</td></tr>
      <tr><th>34</th><td>-0.3553711</td><td>-1.570621</td><td>1.243784</td></tr>
      <tr><th>35</th><td>0.7847218</td><td>-0.529348</td><td>-1.342331</td></tr>
      <tr><th>36</th><td>-0.6932885</td><td>-0.9331922</td><td>0.02396322</td></tr>
      <tr><th>37</th><td>-0.5257205</td><td>0.23743</td><td>-0.1327072</td></tr>
      <tr><th>38</th><td>0.6572031</td><td>0.4655023</td><td>1.335173</td></tr>
      <tr><th>39</th><td>0.076273</td><td>-0.7639137</td><td>0.3885612</td></tr>
      <tr><th>40</th><td>-0.6802381</td><td>0.07587895</td><td>0.2332822</td></tr>
      <tr><th>41</th><td>-1.490538</td><td>-0.6914136</td><td>-0.6717109</td></tr>
      <tr><th>42</th><td>0.2345238</td><td>-0.7296347</td><td>-1.583149</td></tr>
      <tr><th>43</th><td>0.6593634</td><td>-2.334618</td><td>2.137421</td></tr>
      <tr><th>44</th><td>-0.3528584</td><td>-0.1499137</td><td>-0.6568159</td></tr>
      <tr><th>45</th><td>0.656449</td><td>-0.3461161</td><td>0.3746421</td></tr>
      <tr><th>46</th><td>-0.2695312</td><td>-0.1029154</td><td>0.1070592</td></tr>
      <tr><th>47</th><td>0.3864104</td><td>0.949324</td><td>-0.585208</td></tr>
      <tr><th>48</th><td>-0.008811606</td><td>0.6302443</td><td>0.6142591</td></tr>
      <tr><th>49</th><td>-0.6339778</td><td>0.1367468</td><td>0.4197737</td></tr>
      <tr><th>50</th><td>0.3225312</td><td>0.7810584</td><td>-0.9541983</td></tr>
      <tr><th>51</th><td>-0.673645</td><td>-0.8477335</td><td>-0.02615876</td></tr>
      <tr><th>52</th><td>-0.7249383</td><td>-1.407451</td><td>0.0222604</td></tr>
      <tr><th>53</th><td>0.5248376</td><td>-0.8735739</td><td>0.7462308</td></tr>
      <tr><th>54</th><td>-0.4651709</td><td>-1.236561</td><td>-2.178598</td></tr>
      <tr><th>55</th><td>-0.8283844</td><td>-1.413743</td><td>-0.626627</td></tr>
      <tr><th>56</th><td>1.375426</td><td>-0.2627852</td><td>1.362412</td></tr>
      <tr><th>57</th><td>-0.8424421</td><td>-1.148293</td><td>-0.6245365</td></tr>
      <tr><th>58</th><td>-0.4993743</td><td>-0.3912332</td><td>-0.3139332</td></tr>
      <tr><th>59</th><td>-1.606045</td><td>0.6265297</td><td>-0.5042629</td></tr>
      <tr><th>60</th><td>1.392257</td><td>1.443137</td><td>0.4405842</td></tr>
      <tr><th>61</th><td>-1.461877</td><td>0.8749511</td><td>-0.4015443</td></tr>
      <tr><th>62</th><td>-0.02731962</td><td>-0.2483447</td><td>-0.3608194</td></tr>
      <tr><th>63</th><td>0.7554337</td><td>-0.5855491</td><td>-0.8999992</td></tr>
      <tr><th>64</th><td>1.292003</td><td>-2.158871</td><td>0.8727021</td></tr>
      <tr><th>65</th><td>0.1459127</td><td>2.236973</td><td>-1.442462</td></tr>
      <tr><th>66</th><td>-0.783791</td><td>-1.724559</td><td>-0.3590995</td></tr>
      <tr><th>67</th><td>0.4224997</td><td>-1.018297</td><td>-0.7956222</td></tr>
      <tr><th>68</th><td>-0.4405417</td><td>-0.9064415</td><td>-0.4109155</td></tr>
      <tr><th>69</th><td>-0.04031023</td><td>-1.359395</td><td>2.021743</td></tr>
      <tr><th>70</th><td>-0.2401285</td><td>0.4989175</td><td>-0.828816</td></tr>
      <tr><th>71</th><td>0.434514</td><td>-0.7150026</td><td>-1.368524</td></tr>
      <tr><th>72</th><td>1.37933</td><td>0.3503117</td><td>0.190049</td></tr>
      <tr><th>73</th><td>-0.4271143</td><td>-0.7325545</td><td>1.112302</td></tr>
      <tr><th>74</th><td>0.8833916</td><td>0.153813</td><td>0.171658</td></tr>
      <tr><th>75</th><td>0.2984471</td><td>2.059409</td><td>0.9208155</td></tr>
      <tr><th>76</th><td>-0.5198678</td><td>-1.797928</td><td>2.231115</td></tr>
      <tr><th>77</th><td>1.759172</td><td>0.8138067</td><td>0.09084359</td></tr>
      <tr><th>78</th><td>-0.1722794</td><td>1.511757</td><td>0.170963</td></tr>
      <tr><th>79</th><td>-0.9434523</td><td>0.07235818</td><td>-0.9879913</td></tr>
      <tr><th>80</th><td>-0.1041242</td><td>-0.2309181</td><td>-3.254542</td></tr>
      <tr><th>81</th><td>-0.07645926</td><td>-0.2584222</td><td>-0.231554</td></tr>
      <tr><th>82</th><td>-0.04857257</td><td>-0.9190952</td><td>0.640724</td></tr>
      <tr><th>83</th><td>0.4007986</td><td>0.4462137</td><td>-0.5635067</td></tr>
      <tr><th>84</th><td>-0.3981737</td><td>-0.2870729</td><td>-0.7793315</td></tr>
      <tr><th>85</th><td>2.000443</td><td>-1.189745</td><td>-0.8280883</td></tr>
      <tr><th>86</th><td>0.7788256</td><td>2.566099</td><td>1.786202</td></tr>
      <tr><th>87</th><td>-1.070309</td><td>0.0403758</td><td>-1.161206</td></tr>
      <tr><th>88</th><td>1.503634</td><td>2.192763</td><td>-0.9988579</td></tr>
      <tr><th>89</th><td>-0.06320278</td><td>0.1731352</td><td>-1.196487</td></tr>
      <tr><th>90</th><td>-0.1474244</td><td>0.06938791</td><td>0.2367311</td></tr>
      <tr><th>91</th><td>-1.415336</td><td>1.00367</td><td>0.4313884</td></tr>
      <tr><th>92</th><td>0.08452559</td><td>0.2725478</td><td>0.9777406</td></tr>
      <tr><th>93</th><td>1.724261</td><td>-0.04526256</td><td>0.8996555</td></tr>
      <tr><th>94</th><td>-0.4044576</td><td>0.7807871</td><td>-0.8995465</td></tr>
      <tr><th>95</th><td>0.1648201</td><td>1.073263</td><td>-0.8016894</td></tr>
      <tr><th>96</th><td>-1.221037</td><td>1.498623</td><td>1.448604</td></tr>
      <tr><th>97</th><td>-0.7799191</td><td>-1.247451</td><td>1.120298</td></tr>
      <tr><th>98</th><td>-1.125852</td><td>0.4778895</td><td>0.9322679</td></tr>
      <tr><th>99</th><td>-0.1286903</td><td>0.737285</td><td>1.029131</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[-0.0095665,-0.0285938,-0.00592827]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
