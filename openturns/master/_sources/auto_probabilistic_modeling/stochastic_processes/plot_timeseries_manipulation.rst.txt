
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-0.1894,-0.807938,-1.40961],[-0.526234,-1.0884,-0.338086],[1.64734,1.03687,0.363981],[0.153382,-1.60786,-0.732343],[-1.50005,-0.307755,0.41265],[0.648338,-1.86932,0.364976],[-0.494638,-0.236643,0.858841],[1.06685,-0.805863,2.06743],[-0.218221,2.58206,0.831006],[0.0368086,-2.05998,0.577864],[0.783897,-0.910303,1.52102],[-0.13661,-0.109999,-0.539851],[-0.856901,-0.111127,-0.59253],[-0.295556,-1.43463,0.805658],[-0.0568387,-0.257414,-0.968486],[-0.935875,-0.380905,0.672656],[-0.942756,0.724649,0.157712],[0.667764,0.00771578,-0.28503],[-0.824128,-2.19609,0.967989],[-1.22856,-1.3286,-1.46962],[0.845421,0.690174,0.225878],[-0.364324,1.003,0.857502],[-1.84897,-0.825958,-0.651779],[2.02194,0.736005,-0.388469],[-0.0216801,0.120307,0.765665],[-0.415855,-1.95342,-0.85499],[-0.533663,-0.0476785,-0.538882],[0.673544,-0.904665,-0.288577],[-0.258818,-0.0461197,-1.31345],[0.475207,0.752475,-1.37565],[-0.399591,1.08977,-0.285257],[0.497501,0.470856,0.512432],[1.82032,0.336426,0.483756],[1.28074,0.994983,0.752002],[0.799258,-0.599141,-0.319012],[0.566493,1.02543,-0.282905],[0.343202,-0.852071,-0.905157],[-0.469666,-1.3204,-0.144586],[-0.455962,0.991427,-1.01316],[-1.39414,-0.0396787,1.33109],[0.108463,0.0560834,0.0546714],[-1.81068,-1.98035,0.25579],[-1.87986,0.0653334,-1.40627],[-0.796194,1.23741,-1.1686],[2.31522,0.875826,-0.0602904],[-0.697992,-0.796035,0.195373],[-1.74767,0.240778,-1.04231],[0.545534,-0.75544,-0.615277],[0.729961,-0.702884,0.0998597],[-0.254625,-0.565536,-1.13294],[-0.352689,-1.28638,0.669456],[-0.228325,-0.433838,1.2322],[0.894635,-0.332339,0.698198],[1.84794,0.329985,-0.0675729],[-0.465857,-0.958612,-0.0798187],[-0.352433,-0.532724,0.349765],[0.828796,-0.4159,-0.866678],[0.364092,2.00181,0.353937],[-0.936046,-0.47581,0.607115],[-0.475504,-1.45728,-1.28559],[1.23849,-0.0366164,1.53052],[-2.22699,-0.619506,0.459289],[-0.731622,0.437132,-2.33937],[-1.15089,-1.32639,0.178269],[-2.61133,-0.854169,-0.823766],[-0.00473544,-0.767126,-0.879805],[0.543342,-0.396484,1.1145],[0.997349,2.21182,0.160362],[-0.609379,0.185319,1.05095],[-1.65196,-0.147278,-0.220981],[-1.91824,-0.434135,1.19305],[0.886322,0.100263,-1.38829],[2.18356,2.31894,1.17222],[-0.767466,-0.390166,-0.989064],[0.930553,1.43965,-0.619269],[-0.840463,-0.149236,-0.385982],[-0.01029,-0.335964,0.370185],[0.150754,1.11642,-0.0317432],[-0.617713,1.87347,0.452436],[0.330908,0.290611,-1.43244],[1.70222,-0.420618,-1.52482],[-1.08401,-2.41485,1.59056],[-0.494062,0.734348,-0.254817],[-0.21581,-0.701022,-1.05612],[-0.214404,-0.591039,0.0114826],[-0.626712,-0.544676,0.463916],[-1.32522,1.70635,0.276642],[0.14508,-1.10399,1.19983],[-1.35407,-1.90242,0.33981],[-0.321276,0.359074,-0.635212],[-0.808309,-0.936623,-0.26112],[1.17166,-0.373612,0.28385],[1.03979,1.59141,0.298502],[0.790976,0.19863,-1.80713],[-0.0986745,-0.380228,0.828761],[1.08968,1.27352,-0.772144],[0.492896,-0.829221,-0.393977],[-2.11095,-0.25092,-0.667917],[0.506948,0.354874,0.272802],[0.837733,1.30338,1.24829]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-2.469182</td><td>-0.4702851</td><td>-0.1711053</td></tr>
      <tr><th>1</th><td>0.1</td><td>0.2727938</td><td>0.4682686</td><td>-1.130715</td></tr>
      <tr><th>2</th><td>0.2</td><td>1.386279</td><td>0.6062945</td><td>0.8362549</td></tr>
      <tr><th>3</th><td>0.3</td><td>-0.05351202</td><td>0.4571322</td><td>-1.052253</td></tr>
      <tr><th>4</th><td>0.4</td><td>0.6726822</td><td>0.6818984</td><td>0.823018</td></tr>
      <tr><th>5</th><td>0.5</td><td>-1.245254</td><td>-0.066165</td><td>-0.4278933</td></tr>
      <tr><th>6</th><td>0.6</td><td>-2.265854</td><td>-0.1736837</td><td>-1.260204</td></tr>
      <tr><th>7</th><td>0.7</td><td>-0.269612</td><td>-1.243342</td><td>0.8420366</td></tr>
      <tr><th>8</th><td>0.8</td><td>-0.1836222</td><td>0.6597144</td><td>0.8998779</td></tr>
      <tr><th>9</th><td>0.9</td><td>-0.352616</td><td>-1.163818</td><td>0.9594859</td></tr>
      <tr><th>10</th><td>1</td><td>0.5235308</td><td>-0.1529475</td><td>-0.1149902</td></tr>
      <tr><th>11</th><td>1.1</td><td>-1.243064</td><td>1.218159</td><td>0.8050684</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.1809558</td><td>0.2569546</td><td>1.531014</td></tr>
      <tr><th>13</th><td>1.3</td><td>1.222496</td><td>0.007301774</td><td>0.1530435</td></tr>
      <tr><th>14</th><td>1.4</td><td>-1.269348</td><td>1.374573</td><td>0.06713916</td></tr>
      <tr><th>15</th><td>1.5</td><td>1.423569</td><td>0.6520628</td><td>-0.1329328</td></tr>
      <tr><th>16</th><td>1.6</td><td>-0.7268616</td><td>1.705006</td><td>0.6555349</td></tr>
      <tr><th>17</th><td>1.7</td><td>-0.05335498</td><td>0.4921676</td><td>-0.1553467</td></tr>
      <tr><th>18</th><td>1.8</td><td>-1.41695</td><td>-0.622271</td><td>-0.8238248</td></tr>
      <tr><th>19</th><td>1.9</td><td>-1.862952</td><td>0.5907397</td><td>-1.140484</td></tr>
      <tr><th>20</th><td>2</td><td>-0.8102172</td><td>0.1149608</td><td>1.294364</td></tr>
      <tr><th>21</th><td>2.1</td><td>1.371308</td><td>1.031047</td><td>-1.163462</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.4287558</td><td>0.5585505</td><td>0.222329</td></tr>
      <tr><th>23</th><td>2.3</td><td>-1.186561</td><td>-0.9077275</td><td>-1.303783</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.2304992</td><td>0.00182711</td><td>0.7687658</td></tr>
      <tr><th>25</th><td>2.5</td><td>-0.3307863</td><td>-1.023037</td><td>-0.3098169</td></tr>
      <tr><th>26</th><td>2.6</td><td>0.5829196</td><td>1.535077</td><td>0.1337596</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.2537403</td><td>-0.4680414</td><td>-0.1462798</td></tr>
      <tr><th>28</th><td>2.8</td><td>-0.5586218</td><td>-1.055067</td><td>-0.1182328</td></tr>
      <tr><th>29</th><td>2.9</td><td>1.029786</td><td>-1.57459</td><td>2.512504</td></tr>
      <tr><th>30</th><td>3</td><td>1.469159</td><td>0.132525</td><td>-0.00629323</td></tr>
      <tr><th>31</th><td>3.1</td><td>0.1888802</td><td>0.9647431</td><td>1.018447</td></tr>
      <tr><th>32</th><td>3.2</td><td>-0.8112791</td><td>-1.596547</td><td>1.438251</td></tr>
      <tr><th>33</th><td>3.3</td><td>-0.6991718</td><td>-1.395785</td><td>0.8204908</td></tr>
      <tr><th>34</th><td>3.4</td><td>0.8354338</td><td>0.7653145</td><td>1.542047</td></tr>
      <tr><th>35</th><td>3.5</td><td>-1.346348</td><td>-0.4207628</td><td>-0.7370225</td></tr>
      <tr><th>36</th><td>3.6</td><td>-1.521234</td><td>0.8476277</td><td>-1.156568</td></tr>
      <tr><th>37</th><td>3.7</td><td>-0.300165</td><td>-0.2982539</td><td>-0.1113741</td></tr>
      <tr><th>38</th><td>3.8</td><td>-0.6883246</td><td>-0.5966035</td><td>0.4877418</td></tr>
      <tr><th>39</th><td>3.9</td><td>-0.8952045</td><td>-1.191747</td><td>0.3328453</td></tr>
      <tr><th>40</th><td>4</td><td>-0.4850225</td><td>0.5199299</td><td>-0.387289</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.3813602</td><td>1.851997</td><td>0.1165161</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.3573496</td><td>-0.7421597</td><td>-1.462106</td></tr>
      <tr><th>43</th><td>4.3</td><td>0.8816674</td><td>-0.5278185</td><td>-1.666218</td></tr>
      <tr><th>44</th><td>4.4</td><td>-0.2326106</td><td>0.5890244</td><td>-0.7788431</td></tr>
      <tr><th>45</th><td>4.5</td><td>-1.925197</td><td>2.11256</td><td>0.5710228</td></tr>
      <tr><th>46</th><td>4.6</td><td>0.2414795</td><td>0.0217046</td><td>1.577581</td></tr>
      <tr><th>47</th><td>4.7</td><td>-1.104032</td><td>-0.2122165</td><td>-0.4255422</td></tr>
      <tr><th>48</th><td>4.8</td><td>0.239598</td><td>0.7400033</td><td>0.2249666</td></tr>
      <tr><th>49</th><td>4.9</td><td>-0.205165</td><td>-0.5543701</td><td>0.5310482</td></tr>
      <tr><th>50</th><td>5</td><td>0.393097</td><td>2.116038</td><td>-1.060303</td></tr>
      <tr><th>51</th><td>5.1</td><td>0.9554614</td><td>0.08734816</td><td>0.7471211</td></tr>
      <tr><th>52</th><td>5.2</td><td>-0.3712186</td><td>0.2023715</td><td>0.29901</td></tr>
      <tr><th>53</th><td>5.3</td><td>-0.6585368</td><td>1.094551</td><td>1.326391</td></tr>
      <tr><th>54</th><td>5.4</td><td>-1.334107</td><td>-0.346036</td><td>1.079393</td></tr>
      <tr><th>55</th><td>5.5</td><td>-0.2667209</td><td>-0.405247</td><td>-0.1960113</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.8821046</td><td>-1.108578</td><td>1.213357</td></tr>
      <tr><th>57</th><td>5.7</td><td>-0.7054334</td><td>0.8315456</td><td>-1.527519</td></tr>
      <tr><th>58</th><td>5.8</td><td>-0.534931</td><td>0.003468028</td><td>2.700252</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.760816</td><td>-0.06315419</td><td>-1.767038</td></tr>
      <tr><th>60</th><td>6</td><td>-0.4958161</td><td>-0.3416405</td><td>-1.688742</td></tr>
      <tr><th>61</th><td>6.1</td><td>-0.5679838</td><td>1.188488</td><td>1.086428</td></tr>
      <tr><th>62</th><td>6.2</td><td>0.4861351</td><td>0.05085105</td><td>1.978288</td></tr>
      <tr><th>63</th><td>6.3</td><td>1.502221</td><td>-0.008628869</td><td>0.5163891</td></tr>
      <tr><th>64</th><td>6.4</td><td>0.6260434</td><td>-1.212983</td><td>-1.603579</td></tr>
      <tr><th>65</th><td>6.5</td><td>-0.5664501</td><td>1.428047</td><td>-0.4449388</td></tr>
      <tr><th>66</th><td>6.6</td><td>0.253903</td><td>1.211506</td><td>0.924149</td></tr>
      <tr><th>67</th><td>6.7</td><td>-0.1107266</td><td>-0.4725074</td><td>0.9800537</td></tr>
      <tr><th>68</th><td>6.8</td><td>0.5678527</td><td>0.9941121</td><td>0.2945583</td></tr>
      <tr><th>69</th><td>6.9</td><td>0.8705716</td><td>0.4373264</td><td>0.6015606</td></tr>
      <tr><th>70</th><td>7</td><td>1.236342</td><td>-0.8114573</td><td>-0.7454628</td></tr>
      <tr><th>71</th><td>7.1</td><td>2.233819</td><td>1.716294</td><td>-0.5671674</td></tr>
      <tr><th>72</th><td>7.2</td><td>-1.738088</td><td>0.3731368</td><td>0.8400736</td></tr>
      <tr><th>73</th><td>7.3</td><td>1.089571</td><td>-2.33833</td><td>-0.1882688</td></tr>
      <tr><th>74</th><td>7.4</td><td>-0.9087351</td><td>0.4671193</td><td>0.08840301</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.6562936</td><td>2.02153</td><td>1.12911</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.7550528</td><td>-1.607796</td><td>-1.292827</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.08106676</td><td>-0.1761881</td><td>-0.3833724</td></tr>
      <tr><th>78</th><td>7.8</td><td>-2.393924</td><td>-0.5150604</td><td>0.4093334</td></tr>
      <tr><th>79</th><td>7.9</td><td>-0.6438586</td><td>0.7349327</td><td>-1.933289</td></tr>
      <tr><th>80</th><td>8</td><td>-0.5202822</td><td>-1.177342</td><td>-2.093654</td></tr>
      <tr><th>81</th><td>8.1</td><td>-0.4977646</td><td>0.3470177</td><td>0.728069</td></tr>
      <tr><th>82</th><td>8.2</td><td>-0.1196585</td><td>-1.245379</td><td>-0.01865858</td></tr>
      <tr><th>83</th><td>8.3</td><td>-1.010637</td><td>1.72301</td><td>1.043613</td></tr>
      <tr><th>84</th><td>8.4</td><td>-0.3871864</td><td>-1.737879</td><td>-1.701048</td></tr>
      <tr><th>85</th><td>8.5</td><td>-0.8533459</td><td>0.8520286</td><td>-0.1749409</td></tr>
      <tr><th>86</th><td>8.6</td><td>-1.808712</td><td>-0.08981578</td><td>0.7748617</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.1588013</td><td>-0.4449489</td><td>1.134377</td></tr>
      <tr><th>88</th><td>8.8</td><td>0.4721863</td><td>-0.4531177</td><td>0.6430207</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.5387471</td><td>-0.7029377</td><td>-0.7730869</td></tr>
      <tr><th>90</th><td>9</td><td>-0.9529119</td><td>0.193283</td><td>-1.519118</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.5284979</td><td>-1.851702</td><td>-1.20852</td></tr>
      <tr><th>92</th><td>9.2</td><td>0.3496173</td><td>0.07975969</td><td>0.1623213</td></tr>
      <tr><th>93</th><td>9.3</td><td>1.154663</td><td>0.6485338</td><td>0.2659266</td></tr>
      <tr><th>94</th><td>9.4</td><td>0.003500361</td><td>0.4298196</td><td>-0.5983183</td></tr>
      <tr><th>95</th><td>9.5</td><td>0.9813236</td><td>0.1418687</td><td>0.923143</td></tr>
      <tr><th>96</th><td>9.6</td><td>-1.011114</td><td>0.4029188</td><td>-0.4933402</td></tr>
      <tr><th>97</th><td>9.7</td><td>0.3487065</td><td>-0.3542104</td><td>-0.7072419</td></tr>
      <tr><th>98</th><td>9.8</td><td>0.703968</td><td>-0.8589822</td><td>-1.610722</td></tr>
      <tr><th>99</th><td>9.9</td><td>0.2842609</td><td>-0.520093</td><td>-0.1541493</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.469666,-1.3204,-0.144586]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.469666,-1.3204,-0.144586]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.4696659868950215




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-0.1894004</td><td>-0.8079376</td><td>-1.409605</td></tr>
      <tr><th>1</th><td>-0.526234</td><td>-1.088404</td><td>-0.3380862</td></tr>
      <tr><th>2</th><td>1.647344</td><td>1.036872</td><td>0.3639811</td></tr>
      <tr><th>3</th><td>0.153382</td><td>-1.607859</td><td>-0.7323429</td></tr>
      <tr><th>4</th><td>-1.500049</td><td>-0.3077548</td><td>0.4126496</td></tr>
      <tr><th>5</th><td>0.6483376</td><td>-1.86932</td><td>0.3649758</td></tr>
      <tr><th>6</th><td>-0.4946383</td><td>-0.2366425</td><td>0.8588414</td></tr>
      <tr><th>7</th><td>1.066848</td><td>-0.8058632</td><td>2.067428</td></tr>
      <tr><th>8</th><td>-0.2182213</td><td>2.582057</td><td>0.831006</td></tr>
      <tr><th>9</th><td>0.03680862</td><td>-2.059983</td><td>0.5778637</td></tr>
      <tr><th>10</th><td>0.7838969</td><td>-0.9103035</td><td>1.521021</td></tr>
      <tr><th>11</th><td>-0.1366099</td><td>-0.1099991</td><td>-0.5398515</td></tr>
      <tr><th>12</th><td>-0.8569013</td><td>-0.1111269</td><td>-0.5925298</td></tr>
      <tr><th>13</th><td>-0.2955557</td><td>-1.434633</td><td>0.8056583</td></tr>
      <tr><th>14</th><td>-0.05683871</td><td>-0.2574137</td><td>-0.9684861</td></tr>
      <tr><th>15</th><td>-0.9358754</td><td>-0.3809046</td><td>0.6726558</td></tr>
      <tr><th>16</th><td>-0.9427561</td><td>0.7246495</td><td>0.1577125</td></tr>
      <tr><th>17</th><td>0.667764</td><td>0.007715776</td><td>-0.2850301</td></tr>
      <tr><th>18</th><td>-0.8241279</td><td>-2.19609</td><td>0.9679893</td></tr>
      <tr><th>19</th><td>-1.228565</td><td>-1.328598</td><td>-1.469616</td></tr>
      <tr><th>20</th><td>0.8454208</td><td>0.6901739</td><td>0.225878</td></tr>
      <tr><th>21</th><td>-0.3643236</td><td>1.003001</td><td>0.8575024</td></tr>
      <tr><th>22</th><td>-1.848971</td><td>-0.8259581</td><td>-0.6517791</td></tr>
      <tr><th>23</th><td>2.021945</td><td>0.7360051</td><td>-0.3884689</td></tr>
      <tr><th>24</th><td>-0.02168013</td><td>0.1203068</td><td>0.7656652</td></tr>
      <tr><th>25</th><td>-0.4158549</td><td>-1.953416</td><td>-0.8549903</td></tr>
      <tr><th>26</th><td>-0.533663</td><td>-0.04767846</td><td>-0.5388824</td></tr>
      <tr><th>27</th><td>0.6735437</td><td>-0.9046648</td><td>-0.2885771</td></tr>
      <tr><th>28</th><td>-0.2588179</td><td>-0.04611971</td><td>-1.313449</td></tr>
      <tr><th>29</th><td>0.4752072</td><td>0.7524751</td><td>-1.375645</td></tr>
      <tr><th>30</th><td>-0.3995914</td><td>1.089774</td><td>-0.2852567</td></tr>
      <tr><th>31</th><td>0.4975007</td><td>0.4708564</td><td>0.5124318</td></tr>
      <tr><th>32</th><td>1.820323</td><td>0.3364256</td><td>0.4837562</td></tr>
      <tr><th>33</th><td>1.280744</td><td>0.9949825</td><td>0.7520017</td></tr>
      <tr><th>34</th><td>0.7992584</td><td>-0.5991412</td><td>-0.3190123</td></tr>
      <tr><th>35</th><td>0.5664928</td><td>1.025433</td><td>-0.2829049</td></tr>
      <tr><th>36</th><td>0.343202</td><td>-0.8520712</td><td>-0.9051567</td></tr>
      <tr><th>37</th><td>-0.469666</td><td>-1.320402</td><td>-0.1445857</td></tr>
      <tr><th>38</th><td>-0.4559623</td><td>0.9914272</td><td>-1.013162</td></tr>
      <tr><th>39</th><td>-1.394142</td><td>-0.03967875</td><td>1.331092</td></tr>
      <tr><th>40</th><td>0.1084629</td><td>0.05608335</td><td>0.0546714</td></tr>
      <tr><th>41</th><td>-1.810679</td><td>-1.980352</td><td>0.2557902</td></tr>
      <tr><th>42</th><td>-1.879865</td><td>0.06533344</td><td>-1.406268</td></tr>
      <tr><th>43</th><td>-0.7961942</td><td>1.237406</td><td>-1.1686</td></tr>
      <tr><th>44</th><td>2.315222</td><td>0.8758255</td><td>-0.06029044</td></tr>
      <tr><th>45</th><td>-0.6979924</td><td>-0.7960347</td><td>0.1953726</td></tr>
      <tr><th>46</th><td>-1.747672</td><td>0.2407781</td><td>-1.042312</td></tr>
      <tr><th>47</th><td>0.5455335</td><td>-0.7554402</td><td>-0.6152769</td></tr>
      <tr><th>48</th><td>0.7299608</td><td>-0.7028842</td><td>0.09985971</td></tr>
      <tr><th>49</th><td>-0.2546255</td><td>-0.5655356</td><td>-1.132942</td></tr>
      <tr><th>50</th><td>-0.3526892</td><td>-1.286376</td><td>0.6694563</td></tr>
      <tr><th>51</th><td>-0.2283254</td><td>-0.4338377</td><td>1.232204</td></tr>
      <tr><th>52</th><td>0.8946345</td><td>-0.3323393</td><td>0.6981981</td></tr>
      <tr><th>53</th><td>1.847937</td><td>0.3299855</td><td>-0.06757291</td></tr>
      <tr><th>54</th><td>-0.4658574</td><td>-0.9586117</td><td>-0.07981871</td></tr>
      <tr><th>55</th><td>-0.3524329</td><td>-0.5327237</td><td>0.3497652</td></tr>
      <tr><th>56</th><td>0.8287962</td><td>-0.4158999</td><td>-0.8666782</td></tr>
      <tr><th>57</th><td>0.3640916</td><td>2.001813</td><td>0.3539374</td></tr>
      <tr><th>58</th><td>-0.9360459</td><td>-0.4758104</td><td>0.6071147</td></tr>
      <tr><th>59</th><td>-0.4755039</td><td>-1.457276</td><td>-1.285594</td></tr>
      <tr><th>60</th><td>1.238488</td><td>-0.0366164</td><td>1.530521</td></tr>
      <tr><th>61</th><td>-2.226987</td><td>-0.6195059</td><td>0.4592889</td></tr>
      <tr><th>62</th><td>-0.7316217</td><td>0.4371316</td><td>-2.339374</td></tr>
      <tr><th>63</th><td>-1.150894</td><td>-1.326394</td><td>0.1782689</td></tr>
      <tr><th>64</th><td>-2.611327</td><td>-0.8541686</td><td>-0.823766</td></tr>
      <tr><th>65</th><td>-0.004735437</td><td>-0.767126</td><td>-0.8798048</td></tr>
      <tr><th>66</th><td>0.543342</td><td>-0.3964843</td><td>1.114503</td></tr>
      <tr><th>67</th><td>0.9973493</td><td>2.211817</td><td>0.1603616</td></tr>
      <tr><th>68</th><td>-0.6093786</td><td>0.1853194</td><td>1.050954</td></tr>
      <tr><th>69</th><td>-1.651956</td><td>-0.1472779</td><td>-0.2209807</td></tr>
      <tr><th>70</th><td>-1.91824</td><td>-0.4341351</td><td>1.193047</td></tr>
      <tr><th>71</th><td>0.886322</td><td>0.1002634</td><td>-1.388292</td></tr>
      <tr><th>72</th><td>2.183555</td><td>2.318935</td><td>1.172217</td></tr>
      <tr><th>73</th><td>-0.7674656</td><td>-0.3901664</td><td>-0.9890643</td></tr>
      <tr><th>74</th><td>0.9305527</td><td>1.439647</td><td>-0.6192688</td></tr>
      <tr><th>75</th><td>-0.8404628</td><td>-0.1492362</td><td>-0.3859816</td></tr>
      <tr><th>76</th><td>-0.01029002</td><td>-0.335964</td><td>0.3701854</td></tr>
      <tr><th>77</th><td>0.1507542</td><td>1.116417</td><td>-0.03174319</td></tr>
      <tr><th>78</th><td>-0.6177129</td><td>1.873469</td><td>0.452436</td></tr>
      <tr><th>79</th><td>0.3309084</td><td>0.2906105</td><td>-1.432438</td></tr>
      <tr><th>80</th><td>1.702218</td><td>-0.4206181</td><td>-1.524822</td></tr>
      <tr><th>81</th><td>-1.084007</td><td>-2.414853</td><td>1.590556</td></tr>
      <tr><th>82</th><td>-0.4940616</td><td>0.7343481</td><td>-0.2548175</td></tr>
      <tr><th>83</th><td>-0.2158104</td><td>-0.7010224</td><td>-1.056121</td></tr>
      <tr><th>84</th><td>-0.2144044</td><td>-0.5910387</td><td>0.01148255</td></tr>
      <tr><th>85</th><td>-0.6267119</td><td>-0.544676</td><td>0.4639159</td></tr>
      <tr><th>86</th><td>-1.325216</td><td>1.706352</td><td>0.2766417</td></tr>
      <tr><th>87</th><td>0.1450797</td><td>-1.10399</td><td>1.199834</td></tr>
      <tr><th>88</th><td>-1.354073</td><td>-1.902422</td><td>0.3398096</td></tr>
      <tr><th>89</th><td>-0.321276</td><td>0.3590742</td><td>-0.6352125</td></tr>
      <tr><th>90</th><td>-0.8083088</td><td>-0.9366235</td><td>-0.2611204</td></tr>
      <tr><th>91</th><td>1.171656</td><td>-0.3736125</td><td>0.2838503</td></tr>
      <tr><th>92</th><td>1.039792</td><td>1.591411</td><td>0.2985021</td></tr>
      <tr><th>93</th><td>0.7909756</td><td>0.1986298</td><td>-1.807135</td></tr>
      <tr><th>94</th><td>-0.09867448</td><td>-0.3802275</td><td>0.8287609</td></tr>
      <tr><th>95</th><td>1.089675</td><td>1.273518</td><td>-0.7721436</td></tr>
      <tr><th>96</th><td>0.4928957</td><td>-0.8292212</td><td>-0.3939767</td></tr>
      <tr><th>97</th><td>-2.110947</td><td>-0.2509195</td><td>-0.6679166</td></tr>
      <tr><th>98</th><td>0.5069485</td><td>0.354874</td><td>0.2728023</td></tr>
      <tr><th>99</th><td>0.8377334</td><td>1.303384</td><td>1.248293</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[-0.0638664,-0.0948453,-0.0355783]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
