
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 7-22

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 24-30

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[0.67699,-0.317136,-2.08214],[1.15624,1.22691,-1.16914],[1.26534,-0.650539,-1.19931],[0.0469885,-0.201533,1.65852],[-0.811157,-1.52216,-0.891171],[0.32691,0.356975,0.537589],[0.873739,0.54677,0.639558],[1.8251,0.741653,0.166408],[-1.35131,-0.185778,0.841253],[0.111894,0.143393,-2.416],[0.567402,0.650087,0.0550855],[-0.525304,0.0403845,-1.08827],[0.24982,0.53854,-0.668047],[1.27274,0.406302,0.573963],[-0.183334,0.280323,-0.133106],[-0.538717,-0.901347,0.379434],[-0.0374317,1.70928,-0.420083],[-0.491199,-0.645767,-0.698445],[-0.319251,0.168153,0.0956622],[0.84477,-1.32766,-0.787654],[-0.254742,-0.112783,0.323206],[-1.4536,-0.0763748,-0.325862],[-0.640572,1.86878,0.854793],[-0.254388,1.85305,1.02714],[1.59119,-0.459821,1.71057],[-1.70223,-1.09332,0.151505],[0.335206,-0.490996,1.34952],[-1.54457,1.45414,1.15988],[0.696275,-0.286768,0.821412],[-2.5664,-0.128076,-0.686222],[1.33484,-0.291472,0.958411],[-0.790022,1.10988,1.20406],[0.106632,0.678852,0.178671],[0.2549,0.346157,0.960052],[0.823296,0.400756,0.142398],[0.0144589,-0.232685,-0.587005],[-0.704178,-0.578957,0.59087],[0.196591,1.29249,2.7046],[-1.3507,0.805299,-1.26727],[0.154514,-0.325244,1.28455],[1.26806,1.977,0.924094],[-0.0114715,-0.636022,0.419985],[-0.201226,0.226125,0.736777],[0.175987,0.745783,-1.70788],[-0.061427,-0.023476,-0.428995],[0.257619,0.493894,1.28124],[-0.567533,0.788753,-1.297],[-0.720433,-0.401375,0.085706],[-2.05213,0.476627,-1.93092],[-0.338734,1.32355,0.649127],[0.0220989,-0.785359,0.590065],[0.822046,-0.624952,-0.459946],[0.0801878,1.14372,0.606825],[-0.195572,-0.20117,-1.38756],[0.593038,0.578694,0.10349],[-0.230719,0.963956,-0.133649],[0.0452025,-1.61829,-0.396382],[-1.48834,-0.464037,-0.0551509],[-0.810587,0.45857,2.37474],[0.300319,1.24003,-1.6792],[1.45225,-0.121034,1.32143],[-0.380161,0.625416,-0.754281],[-0.367068,-1.80988,-0.641659],[-0.0726123,1.22794,2.02647],[0.208344,0.998377,0.500019],[-0.369902,2.1265,-0.433498],[-0.803701,0.0434342,-0.0638528],[-0.352826,0.409855,0.221295],[0.0878602,0.401658,1.36757],[-0.21636,0.340515,1.91037],[-1.13658,-0.227377,-1.37034],[-0.493435,-0.0415033,0.651457],[0.929308,-0.646221,-1.14464],[-1.72684,0.672601,0.833965],[0.633733,1.09962,0.296268],[-1.07302,-0.0517962,-0.40112],[1.36678,-1.66485,0.918639],[0.46741,0.555457,0.0740357],[-1.17616,0.204193,1.48931],[0.374116,-0.327382,0.58185],[-1.27738,0.543626,0.463726],[1.20925,0.744002,-0.16627],[-0.381857,0.119884,0.376244],[1.3502,0.772912,-1.10367],[0.990136,2.21976,-0.890209],[-0.775668,1.93067,-0.280088],[1.3137,-0.198469,0.124551],[0.0383578,0.351205,-0.372177],[1.21541,0.0401868,-0.725795],[0.943344,0.0817711,0.915509],[-0.912797,0.0731365,0.493824],[1.08734,1.08237,0.672151],[-0.588752,0.128682,-0.314884],[-1.41284,0.0869925,-1.19129],[1.45537,-2.06291,-0.300056],[0.369686,-0.246082,0.734844],[0.273355,-0.432866,1.31085],[0.515006,0.744038,-2.62539],[-0.444249,-0.402785,0.434418],[-0.564939,-1.14047,0.0532995]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-46

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>0.7838355</td><td>-0.281519</td><td>0.2880216</td></tr>
      <tr><th>1</th><td>0.1</td><td>1.391305</td><td>-0.2994003</td><td>2.621092</td></tr>
      <tr><th>2</th><td>0.2</td><td>1.159983</td><td>2.259119</td><td>-0.4070898</td></tr>
      <tr><th>3</th><td>0.3</td><td>-1.149085</td><td>2.166956</td><td>-1.36408</td></tr>
      <tr><th>4</th><td>0.4</td><td>-1.639649</td><td>-0.899316</td><td>0.9011945</td></tr>
      <tr><th>5</th><td>0.5</td><td>-0.3348301</td><td>0.3933665</td><td>-1.578994</td></tr>
      <tr><th>6</th><td>0.6</td><td>-0.2393607</td><td>-0.736182</td><td>0.9203561</td></tr>
      <tr><th>7</th><td>0.7</td><td>-0.9249912</td><td>-1.216478</td><td>-0.0159551</td></tr>
      <tr><th>8</th><td>0.8</td><td>-1.768588</td><td>-1.276377</td><td>0.75759</td></tr>
      <tr><th>9</th><td>0.9</td><td>1.044084</td><td>-0.1277777</td><td>0.4298325</td></tr>
      <tr><th>10</th><td>1</td><td>-1.817363</td><td>0.1154932</td><td>-1.029911</td></tr>
      <tr><th>11</th><td>1.1</td><td>0.4542978</td><td>1.049545</td><td>-1.748498</td></tr>
      <tr><th>12</th><td>1.2</td><td>-1.338898</td><td>-0.6387833</td><td>0.8969615</td></tr>
      <tr><th>13</th><td>1.3</td><td>-0.1694004</td><td>0.07875663</td><td>1.541123</td></tr>
      <tr><th>14</th><td>1.4</td><td>-1.186115</td><td>-0.08968757</td><td>1.188141</td></tr>
      <tr><th>15</th><td>1.5</td><td>0.8507868</td><td>-0.1626431</td><td>3.533213</td></tr>
      <tr><th>16</th><td>1.6</td><td>-2.174009</td><td>-0.6429147</td><td>0.5802093</td></tr>
      <tr><th>17</th><td>1.7</td><td>0.02153424</td><td>0.7074914</td><td>-0.02446273</td></tr>
      <tr><th>18</th><td>1.8</td><td>-2.23158</td><td>-1.502069</td><td>0.252128</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.1169463</td><td>-0.6303374</td><td>1.096556</td></tr>
      <tr><th>20</th><td>2</td><td>0.4682505</td><td>0.6047321</td><td>0.2343101</td></tr>
      <tr><th>21</th><td>2.1</td><td>-0.7543467</td><td>-0.1403324</td><td>1.264616</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.9703519</td><td>-1.766859</td><td>-2.294458</td></tr>
      <tr><th>23</th><td>2.3</td><td>1.091594</td><td>0.7281</td><td>0.9705452</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.8820395</td><td>-0.3948802</td><td>1.06745</td></tr>
      <tr><th>25</th><td>2.5</td><td>-0.2010872</td><td>-1.567087</td><td>1.26668</td></tr>
      <tr><th>26</th><td>2.6</td><td>-0.2915968</td><td>0.1258141</td><td>0.9317145</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.15627</td><td>-0.8401915</td><td>0.7588908</td></tr>
      <tr><th>28</th><td>2.8</td><td>1.076627</td><td>2.203664</td><td>0.5640482</td></tr>
      <tr><th>29</th><td>2.9</td><td>1.707746</td><td>-1.929574</td><td>-0.4207267</td></tr>
      <tr><th>30</th><td>3</td><td>-0.9883293</td><td>-1.137256</td><td>1.317139</td></tr>
      <tr><th>31</th><td>3.1</td><td>0.7970732</td><td>0.6606186</td><td>-0.7706373</td></tr>
      <tr><th>32</th><td>3.2</td><td>0.1709833</td><td>1.005804</td><td>1.572812</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.2223246</td><td>0.1858207</td><td>-0.4227352</td></tr>
      <tr><th>34</th><td>3.4</td><td>1.508802</td><td>0.3048863</td><td>0.3694064</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.1257998</td><td>-0.9805194</td><td>-0.6717362</td></tr>
      <tr><th>36</th><td>3.6</td><td>0.1262025</td><td>-0.01983165</td><td>-1.530418</td></tr>
      <tr><th>37</th><td>3.7</td><td>-0.8615001</td><td>-0.03355329</td><td>0.1102024</td></tr>
      <tr><th>38</th><td>3.8</td><td>-0.6724048</td><td>1.022583</td><td>-2.131013</td></tr>
      <tr><th>39</th><td>3.9</td><td>-1.225114</td><td>-0.4340948</td><td>-1.319039</td></tr>
      <tr><th>40</th><td>4</td><td>-0.2222151</td><td>1.491421</td><td>-0.8219947</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.05343959</td><td>2.458175</td><td>-0.5896708</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.6279063</td><td>0.7305989</td><td>1.066735</td></tr>
      <tr><th>43</th><td>4.3</td><td>-0.47033</td><td>0.1293365</td><td>-0.09758254</td></tr>
      <tr><th>44</th><td>4.4</td><td>0.1808659</td><td>-0.3186806</td><td>-1.169395</td></tr>
      <tr><th>45</th><td>4.5</td><td>0.6146196</td><td>-1.060424</td><td>-0.3260324</td></tr>
      <tr><th>46</th><td>4.6</td><td>-2.719886</td><td>-2.087592</td><td>0.6821177</td></tr>
      <tr><th>47</th><td>4.7</td><td>-0.8204974</td><td>0.7679251</td><td>-0.3630877</td></tr>
      <tr><th>48</th><td>4.8</td><td>0.1923549</td><td>0.4880638</td><td>1.565572</td></tr>
      <tr><th>49</th><td>4.9</td><td>-1.718008</td><td>-0.2218311</td><td>-1.462331</td></tr>
      <tr><th>50</th><td>5</td><td>-1.215706</td><td>-1.337842</td><td>0.370234</td></tr>
      <tr><th>51</th><td>5.1</td><td>-0.2920881</td><td>-0.1571766</td><td>0.8628552</td></tr>
      <tr><th>52</th><td>5.2</td><td>-1.017989</td><td>-0.5226936</td><td>0.05923222</td></tr>
      <tr><th>53</th><td>5.3</td><td>0.359442</td><td>0.6747761</td><td>-1.643779</td></tr>
      <tr><th>54</th><td>5.4</td><td>-0.3043717</td><td>-0.5544896</td><td>0.8033048</td></tr>
      <tr><th>55</th><td>5.5</td><td>0.1417491</td><td>-0.03919586</td><td>-1.29929</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.4579584</td><td>-0.3860992</td><td>-1.358204</td></tr>
      <tr><th>57</th><td>5.7</td><td>0.7386544</td><td>0.8648287</td><td>0.2255869</td></tr>
      <tr><th>58</th><td>5.8</td><td>0.7124182</td><td>1.628735</td><td>0.872419</td></tr>
      <tr><th>59</th><td>5.9</td><td>0.741781</td><td>-1.334434</td><td>0.2146011</td></tr>
      <tr><th>60</th><td>6</td><td>0.07028539</td><td>0.2864975</td><td>-0.5531098</td></tr>
      <tr><th>61</th><td>6.1</td><td>1.616778</td><td>-0.4126381</td><td>0.4420391</td></tr>
      <tr><th>62</th><td>6.2</td><td>-0.4355561</td><td>-0.7303831</td><td>1.54069</td></tr>
      <tr><th>63</th><td>6.3</td><td>-0.1590648</td><td>1.279013</td><td>-1.653528</td></tr>
      <tr><th>64</th><td>6.4</td><td>0.6450384</td><td>1.218161</td><td>0.3799625</td></tr>
      <tr><th>65</th><td>6.5</td><td>-1.521424</td><td>0.5252653</td><td>-0.3869994</td></tr>
      <tr><th>66</th><td>6.6</td><td>1.702716</td><td>-1.460909</td><td>0.9650493</td></tr>
      <tr><th>67</th><td>6.7</td><td>-0.6335739</td><td>1.942606</td><td>1.821497</td></tr>
      <tr><th>68</th><td>6.8</td><td>-0.1215069</td><td>-0.1738951</td><td>-0.3238153</td></tr>
      <tr><th>69</th><td>6.9</td><td>0.4718876</td><td>-0.4099684</td><td>-1.040932</td></tr>
      <tr><th>70</th><td>7</td><td>-2.200068</td><td>-0.1645597</td><td>-1.198949</td></tr>
      <tr><th>71</th><td>7.1</td><td>0.2180164</td><td>1.942876</td><td>0.09431387</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.4762708</td><td>-0.2764329</td><td>1.660337</td></tr>
      <tr><th>73</th><td>7.3</td><td>-1.143607</td><td>0.1123462</td><td>0.8888094</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.7803999</td><td>-0.9469387</td><td>0.3815036</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.08736198</td><td>-0.3226116</td><td>1.120634</td></tr>
      <tr><th>76</th><td>7.6</td><td>0.2718085</td><td>0.1027932</td><td>-0.9007988</td></tr>
      <tr><th>77</th><td>7.7</td><td>-1.338059</td><td>0.3534333</td><td>1.009132</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.1104342</td><td>-0.6500863</td><td>1.382194</td></tr>
      <tr><th>79</th><td>7.9</td><td>-0.5921112</td><td>-1.220026</td><td>1.301498</td></tr>
      <tr><th>80</th><td>8</td><td>-0.991476</td><td>0.6529824</td><td>0.6838003</td></tr>
      <tr><th>81</th><td>8.1</td><td>-0.8452123</td><td>0.853683</td><td>-0.8345424</td></tr>
      <tr><th>82</th><td>8.2</td><td>1.023693</td><td>0.8106331</td><td>-2.164056</td></tr>
      <tr><th>83</th><td>8.3</td><td>-1.35877</td><td>-1.226366</td><td>0.601424</td></tr>
      <tr><th>84</th><td>8.4</td><td>-0.7019603</td><td>-0.1629835</td><td>1.442046</td></tr>
      <tr><th>85</th><td>8.5</td><td>0.07711097</td><td>-0.7521795</td><td>0.7174651</td></tr>
      <tr><th>86</th><td>8.6</td><td>0.5225289</td><td>-0.7276524</td><td>0.09605399</td></tr>
      <tr><th>87</th><td>8.7</td><td>-1.115482</td><td>0.9588536</td><td>0.8186262</td></tr>
      <tr><th>88</th><td>8.8</td><td>0.007597727</td><td>1.374348</td><td>2.767789</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.2650608</td><td>2.657863</td><td>-0.1059285</td></tr>
      <tr><th>90</th><td>9</td><td>0.17057</td><td>0.1464613</td><td>0.4509676</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.5454659</td><td>-1.29141</td><td>-0.1840367</td></tr>
      <tr><th>92</th><td>9.2</td><td>-0.588668</td><td>0.8513837</td><td>-0.8499314</td></tr>
      <tr><th>93</th><td>9.3</td><td>-1.14055</td><td>0.6202687</td><td>0.3591777</td></tr>
      <tr><th>94</th><td>9.4</td><td>-0.5171619</td><td>-1.825648</td><td>0.2629407</td></tr>
      <tr><th>95</th><td>9.5</td><td>1.090971</td><td>-0.1546122</td><td>1.919206</td></tr>
      <tr><th>96</th><td>9.6</td><td>1.115602</td><td>-0.3535149</td><td>0.02157806</td></tr>
      <tr><th>97</th><td>9.7</td><td>1.343004</td><td>-1.086443</td><td>-0.1741891</td></tr>
      <tr><th>98</th><td>9.8</td><td>2.780612</td><td>2.012813</td><td>-0.4041221</td></tr>
      <tr><th>99</th><td>9.9</td><td>1.947008</td><td>-0.7789461</td><td>0.5548482</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-52

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 55-56

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 59-60

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.196591,1.29249,2.7046]




.. GENERATED FROM PYTHON SOURCE LINES 64-65

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.196591,1.29249,2.7046]




.. GENERATED FROM PYTHON SOURCE LINES 69-70

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 70-76

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  0.19659142825936662




.. GENERATED FROM PYTHON SOURCE LINES 77-78

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0.6769902</td><td>-0.3171357</td><td>-2.082136</td></tr>
      <tr><th>1</th><td>1.156238</td><td>1.226912</td><td>-1.16914</td></tr>
      <tr><th>2</th><td>1.265339</td><td>-0.6505386</td><td>-1.199313</td></tr>
      <tr><th>3</th><td>0.04698851</td><td>-0.201533</td><td>1.658519</td></tr>
      <tr><th>4</th><td>-0.8111565</td><td>-1.522158</td><td>-0.8911708</td></tr>
      <tr><th>5</th><td>0.32691</td><td>0.3569753</td><td>0.5375886</td></tr>
      <tr><th>6</th><td>0.8737387</td><td>0.5467702</td><td>0.639558</td></tr>
      <tr><th>7</th><td>1.825102</td><td>0.7416528</td><td>0.1664076</td></tr>
      <tr><th>8</th><td>-1.351306</td><td>-0.1857778</td><td>0.841253</td></tr>
      <tr><th>9</th><td>0.1118938</td><td>0.1433932</td><td>-2.415996</td></tr>
      <tr><th>10</th><td>0.5674017</td><td>0.6500869</td><td>0.0550855</td></tr>
      <tr><th>11</th><td>-0.5253038</td><td>0.04038455</td><td>-1.088266</td></tr>
      <tr><th>12</th><td>0.2498201</td><td>0.5385399</td><td>-0.6680468</td></tr>
      <tr><th>13</th><td>1.272737</td><td>0.4063023</td><td>0.573963</td></tr>
      <tr><th>14</th><td>-0.1833343</td><td>0.280323</td><td>-0.1331064</td></tr>
      <tr><th>15</th><td>-0.538717</td><td>-0.9013472</td><td>0.3794344</td></tr>
      <tr><th>16</th><td>-0.03743165</td><td>1.709283</td><td>-0.4200832</td></tr>
      <tr><th>17</th><td>-0.4911992</td><td>-0.6457668</td><td>-0.6984449</td></tr>
      <tr><th>18</th><td>-0.3192506</td><td>0.1681528</td><td>0.09566224</td></tr>
      <tr><th>19</th><td>0.8447698</td><td>-1.327658</td><td>-0.7876539</td></tr>
      <tr><th>20</th><td>-0.2547418</td><td>-0.1127833</td><td>0.3232059</td></tr>
      <tr><th>21</th><td>-1.453603</td><td>-0.07637485</td><td>-0.3258619</td></tr>
      <tr><th>22</th><td>-0.6405721</td><td>1.868779</td><td>0.8547931</td></tr>
      <tr><th>23</th><td>-0.2543876</td><td>1.853047</td><td>1.027139</td></tr>
      <tr><th>24</th><td>1.591194</td><td>-0.459821</td><td>1.710567</td></tr>
      <tr><th>25</th><td>-1.702233</td><td>-1.09332</td><td>0.1515051</td></tr>
      <tr><th>26</th><td>0.3352062</td><td>-0.490996</td><td>1.34952</td></tr>
      <tr><th>27</th><td>-1.54457</td><td>1.454135</td><td>1.159881</td></tr>
      <tr><th>28</th><td>0.6962751</td><td>-0.2867684</td><td>0.8214124</td></tr>
      <tr><th>29</th><td>-2.566399</td><td>-0.1280765</td><td>-0.6862217</td></tr>
      <tr><th>30</th><td>1.334845</td><td>-0.2914715</td><td>0.9584114</td></tr>
      <tr><th>31</th><td>-0.7900225</td><td>1.109884</td><td>1.204058</td></tr>
      <tr><th>32</th><td>0.1066316</td><td>0.6788516</td><td>0.1786708</td></tr>
      <tr><th>33</th><td>0.2549004</td><td>0.3461568</td><td>0.9600524</td></tr>
      <tr><th>34</th><td>0.8232956</td><td>0.4007559</td><td>0.1423978</td></tr>
      <tr><th>35</th><td>0.01445893</td><td>-0.2326847</td><td>-0.5870053</td></tr>
      <tr><th>36</th><td>-0.7041781</td><td>-0.5789573</td><td>0.5908696</td></tr>
      <tr><th>37</th><td>0.1965914</td><td>1.292486</td><td>2.704602</td></tr>
      <tr><th>38</th><td>-1.350704</td><td>0.8052988</td><td>-1.267267</td></tr>
      <tr><th>39</th><td>0.1545139</td><td>-0.3252443</td><td>1.284547</td></tr>
      <tr><th>40</th><td>1.26806</td><td>1.976998</td><td>0.9240945</td></tr>
      <tr><th>41</th><td>-0.01147148</td><td>-0.6360216</td><td>0.4199854</td></tr>
      <tr><th>42</th><td>-0.2012256</td><td>0.226125</td><td>0.7367774</td></tr>
      <tr><th>43</th><td>0.1759868</td><td>0.7457832</td><td>-1.707878</td></tr>
      <tr><th>44</th><td>-0.06142704</td><td>-0.02347603</td><td>-0.4289954</td></tr>
      <tr><th>45</th><td>0.2576188</td><td>0.4938945</td><td>1.281239</td></tr>
      <tr><th>46</th><td>-0.5675327</td><td>0.7887527</td><td>-1.296997</td></tr>
      <tr><th>47</th><td>-0.7204328</td><td>-0.4013747</td><td>0.08570603</td></tr>
      <tr><th>48</th><td>-2.052126</td><td>0.4766274</td><td>-1.930916</td></tr>
      <tr><th>49</th><td>-0.3387342</td><td>1.323553</td><td>0.6491266</td></tr>
      <tr><th>50</th><td>0.0220989</td><td>-0.7853592</td><td>0.5900651</td></tr>
      <tr><th>51</th><td>0.8220459</td><td>-0.6249517</td><td>-0.4599456</td></tr>
      <tr><th>52</th><td>0.08018781</td><td>1.143717</td><td>0.6068254</td></tr>
      <tr><th>53</th><td>-0.1955718</td><td>-0.2011704</td><td>-1.387558</td></tr>
      <tr><th>54</th><td>0.593038</td><td>0.578694</td><td>0.1034902</td></tr>
      <tr><th>55</th><td>-0.2307189</td><td>0.9639559</td><td>-0.1336488</td></tr>
      <tr><th>56</th><td>0.04520248</td><td>-1.618295</td><td>-0.3963823</td></tr>
      <tr><th>57</th><td>-1.488339</td><td>-0.4640367</td><td>-0.05515089</td></tr>
      <tr><th>58</th><td>-0.810587</td><td>0.4585699</td><td>2.374744</td></tr>
      <tr><th>59</th><td>0.300319</td><td>1.240029</td><td>-1.679199</td></tr>
      <tr><th>60</th><td>1.452252</td><td>-0.1210341</td><td>1.321428</td></tr>
      <tr><th>61</th><td>-0.3801607</td><td>0.6254165</td><td>-0.7542815</td></tr>
      <tr><th>62</th><td>-0.3670678</td><td>-1.809877</td><td>-0.6416589</td></tr>
      <tr><th>63</th><td>-0.07261228</td><td>1.227935</td><td>2.026471</td></tr>
      <tr><th>64</th><td>0.2083443</td><td>0.9983771</td><td>0.5000193</td></tr>
      <tr><th>65</th><td>-0.3699024</td><td>2.126496</td><td>-0.4334975</td></tr>
      <tr><th>66</th><td>-0.803701</td><td>0.04343421</td><td>-0.06385276</td></tr>
      <tr><th>67</th><td>-0.3528261</td><td>0.4098546</td><td>0.2212951</td></tr>
      <tr><th>68</th><td>0.08786019</td><td>0.4016576</td><td>1.367572</td></tr>
      <tr><th>69</th><td>-0.2163601</td><td>0.3405146</td><td>1.910371</td></tr>
      <tr><th>70</th><td>-1.136579</td><td>-0.2273771</td><td>-1.37034</td></tr>
      <tr><th>71</th><td>-0.4934348</td><td>-0.04150328</td><td>0.6514567</td></tr>
      <tr><th>72</th><td>0.9293081</td><td>-0.6462209</td><td>-1.144643</td></tr>
      <tr><th>73</th><td>-1.726837</td><td>0.6726011</td><td>0.8339645</td></tr>
      <tr><th>74</th><td>0.6337326</td><td>1.099619</td><td>0.2962679</td></tr>
      <tr><th>75</th><td>-1.073021</td><td>-0.05179621</td><td>-0.4011199</td></tr>
      <tr><th>76</th><td>1.366778</td><td>-1.66485</td><td>0.9186391</td></tr>
      <tr><th>77</th><td>0.4674103</td><td>0.5554571</td><td>0.0740357</td></tr>
      <tr><th>78</th><td>-1.176162</td><td>0.2041929</td><td>1.489313</td></tr>
      <tr><th>79</th><td>0.3741159</td><td>-0.3273816</td><td>0.5818502</td></tr>
      <tr><th>80</th><td>-1.277384</td><td>0.5436261</td><td>0.463726</td></tr>
      <tr><th>81</th><td>1.209247</td><td>0.7440021</td><td>-0.1662701</td></tr>
      <tr><th>82</th><td>-0.3818566</td><td>0.1198838</td><td>0.3762441</td></tr>
      <tr><th>83</th><td>1.350201</td><td>0.7729118</td><td>-1.103665</td></tr>
      <tr><th>84</th><td>0.9901356</td><td>2.219757</td><td>-0.8902095</td></tr>
      <tr><th>85</th><td>-0.7756684</td><td>1.930673</td><td>-0.2800881</td></tr>
      <tr><th>86</th><td>1.313703</td><td>-0.1984687</td><td>0.1245508</td></tr>
      <tr><th>87</th><td>0.03835782</td><td>0.351205</td><td>-0.3721774</td></tr>
      <tr><th>88</th><td>1.215408</td><td>0.04018684</td><td>-0.7257949</td></tr>
      <tr><th>89</th><td>0.9433445</td><td>0.08177112</td><td>0.9155089</td></tr>
      <tr><th>90</th><td>-0.912797</td><td>0.07313654</td><td>0.4938244</td></tr>
      <tr><th>91</th><td>1.087338</td><td>1.082365</td><td>0.6721512</td></tr>
      <tr><th>92</th><td>-0.5887518</td><td>0.1286818</td><td>-0.3148836</td></tr>
      <tr><th>93</th><td>-1.412837</td><td>0.08699253</td><td>-1.191289</td></tr>
      <tr><th>94</th><td>1.455368</td><td>-2.062912</td><td>-0.3000556</td></tr>
      <tr><th>95</th><td>0.3696858</td><td>-0.2460821</td><td>0.7348437</td></tr>
      <tr><th>96</th><td>0.2733552</td><td>-0.432866</td><td>1.310845</td></tr>
      <tr><th>97</th><td>0.5150065</td><td>0.7440379</td><td>-2.625387</td></tr>
      <tr><th>98</th><td>-0.4442493</td><td>-0.402785</td><td>0.4344177</td></tr>
      <tr><th>99</th><td>-0.564939</td><td>-1.140466</td><td>0.05329953</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[-0.0148761,0.144321,0.0690375]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 86-87

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-92

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 92-95

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
