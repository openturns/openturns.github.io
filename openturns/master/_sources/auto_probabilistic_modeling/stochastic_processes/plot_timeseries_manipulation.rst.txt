
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 7-22

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 24-30

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[0.737357,-1.00229,0.413403],[1.11625,1.85314,-0.653163],[-0.282953,-1.10484,0.00609159],[-2.38693,1.50769,1.15991],[-1.50116,-0.929182,-0.983568],[-0.519709,-0.0278032,0.12598],[-0.53605,0.0485312,1.75562],[-1.03007,0.0874542,1.26468],[-0.283255,0.352262,0.020714],[-2.34109,-0.0695516,0.187582],[0.324572,-0.354604,-0.227798],[0.318047,1.00732,2.23977],[0.158727,0.410016,-0.200024],[-1.34763,-0.980738,1.17336],[0.43076,-0.0383051,0.759414],[2.16576,-0.196013,-1.40103],[-1.8407,-1.37855,0.584005],[0.163657,1.77192,1.45414],[1.95283,-2.22899,1.21592],[-0.509126,-0.0233086,-0.0219551],[-0.884954,-1.36397,-1.06071],[-0.998915,0.105399,1.8202],[1.27832,-0.29032,-0.772712],[1.4977,-1.06893,1.37197],[-0.20045,1.02071,-0.632924],[0.356709,0.55709,-0.406752],[-0.567674,-0.421078,0.266295],[-0.794693,-0.572254,-1.04838],[0.474448,1.28704,-0.413147],[0.589293,-0.0901701,0.825084],[0.160446,-0.413222,-1.78177],[0.435624,-0.218335,0.47899],[0.726674,-0.179012,-0.296968],[-0.0215445,-0.338176,-0.318642],[-0.675305,-0.170984,0.704758],[-0.201091,-0.813399,-0.933991],[-0.115538,-0.173166,1.48905],[1.16889,0.682971,-0.0430803],[1.04437,0.301288,0.220403],[0.238673,-0.236756,-0.444365],[-0.919359,-1.12624,0.508763],[2.34922,-0.850738,-0.678302],[-0.189264,1.38977,1.10732],[-0.683641,-0.669304,-0.157095],[0.209263,-1.21951,1.10247],[-0.111667,-1.88187,0.85376],[0.2458,-0.245027,1.34517],[0.625976,-1.34642,0.0477802],[-0.305476,-0.388392,-1.11835],[-1.22083,1.3049,0.207341],[-0.141103,-0.240722,-0.411445],[-0.186036,0.811762,-0.636079],[1.61735,-0.345563,-0.889185],[-1.53558,-1.2958,-0.403224],[1.11524,0.64805,-0.502408],[1.08441,0.732471,2.02443],[0.521534,-0.312432,-0.887024],[-0.0710526,2.38034,-1.20205],[2.88249,1.01977,-0.218751],[0.117727,-0.32249,0.465068],[0.838782,-0.958064,0.179385],[1.13769,0.162154,-0.203596],[0.561651,-0.670257,0.51524],[1.33805,0.343553,1.73434],[0.0508584,0.320591,-0.112795],[-0.618753,2.23199,-0.610742],[0.555964,0.419176,0.292208],[0.420758,-0.00148605,-1.32746],[1.11758,0.0335059,-0.16936],[2.32553,1.78309,0.336961],[-0.607485,-1.12062,0.636682],[-0.84623,2.19752,1.34272],[0.788967,-1.18654,-0.174432],[0.241904,0.828424,0.0317106],[1.39789,-0.0192176,-2.18282],[-0.154217,-0.962825,-1.63907],[-1.44314,0.0157417,1.14293],[0.345331,1.51173,0.353941],[0.484185,-0.229749,-0.616049],[1.27654,1.06845,1.70604],[-0.908102,0.23619,1.08708],[0.246448,-0.899719,0.553108],[1.18472,2.1153,-0.14322],[-0.0278582,-0.193563,-0.747633],[-0.292044,0.100875,0.194714],[-0.429523,1.13276,0.67374],[-1.30836,-0.0418875,-0.585532],[0.633419,0.039965,1.21004],[0.739478,0.526745,1.88646],[1.35526,1.28189,2.89181],[-0.739851,1.11303,0.306606],[0.365672,-0.542415,0.49447],[0.628598,0.431494,-1.14206],[-0.852721,0.815869,-0.538155],[0.376805,0.0507703,-1.2441],[-0.921803,-0.995471,-1.55859],[2.62858,1.09704,-0.125527],[0.537277,0.335365,-0.174798],[0.964125,0.966126,-0.175601],[0.19297,1.30723,0.405213]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-46

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-1.047718</td><td>0.2833436</td><td>0.6623692</td></tr>
      <tr><th>1</th><td>0.1</td><td>0.04173189</td><td>-0.628864</td><td>0.9300587</td></tr>
      <tr><th>2</th><td>0.2</td><td>0.4387527</td><td>0.3526968</td><td>-0.3012512</td></tr>
      <tr><th>3</th><td>0.3</td><td>-1.326926</td><td>0.09364487</td><td>-0.1358008</td></tr>
      <tr><th>4</th><td>0.4</td><td>-0.9791216</td><td>-1.101349</td><td>1.767423</td></tr>
      <tr><th>5</th><td>0.5</td><td>-1.374413</td><td>0.2673067</td><td>0.8383842</td></tr>
      <tr><th>6</th><td>0.6</td><td>1.167807</td><td>0.273336</td><td>1.57296</td></tr>
      <tr><th>7</th><td>0.7</td><td>0.3654719</td><td>-1.371194</td><td>0.6444216</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.03591601</td><td>3.159399</td><td>0.3948064</td></tr>
      <tr><th>9</th><td>0.9</td><td>1.068544</td><td>-0.3457165</td><td>0.9817214</td></tr>
      <tr><th>10</th><td>1</td><td>0.2315286</td><td>0.5027529</td><td>0.1125763</td></tr>
      <tr><th>11</th><td>1.1</td><td>-0.3757606</td><td>-0.9509507</td><td>0.2072015</td></tr>
      <tr><th>12</th><td>1.2</td><td>1.877932</td><td>2.120773</td><td>0.8353134</td></tr>
      <tr><th>13</th><td>1.3</td><td>0.3830159</td><td>-1.043258</td><td>0.5636735</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.5370507</td><td>-0.9135739</td><td>1.604618</td></tr>
      <tr><th>15</th><td>1.5</td><td>0.7126714</td><td>-1.914081</td><td>0.5864993</td></tr>
      <tr><th>16</th><td>1.6</td><td>-1.565213</td><td>0.4227273</td><td>-0.2526499</td></tr>
      <tr><th>17</th><td>1.7</td><td>1.555328</td><td>-0.1724637</td><td>0.01774371</td></tr>
      <tr><th>18</th><td>1.8</td><td>0.6042006</td><td>-0.1551996</td><td>-1.401436</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.3041909</td><td>-0.433359</td><td>-0.9388876</td></tr>
      <tr><th>20</th><td>2</td><td>1.428705</td><td>-1.83578</td><td>0.3211852</td></tr>
      <tr><th>21</th><td>2.1</td><td>-0.8400957</td><td>2.006649</td><td>-0.8651168</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.03005334</td><td>-0.7662443</td><td>-0.1386313</td></tr>
      <tr><th>23</th><td>2.3</td><td>-0.7123887</td><td>0.3576368</td><td>0.1268682</td></tr>
      <tr><th>24</th><td>2.4</td><td>1.027753</td><td>0.2593493</td><td>-0.7364987</td></tr>
      <tr><th>25</th><td>2.5</td><td>0.5737787</td><td>-0.8039933</td><td>0.2562425</td></tr>
      <tr><th>26</th><td>2.6</td><td>0.7692352</td><td>0.9212347</td><td>-0.5210323</td></tr>
      <tr><th>27</th><td>2.7</td><td>0.8899971</td><td>-1.759769</td><td>-0.1290022</td></tr>
      <tr><th>28</th><td>2.8</td><td>-1.152138</td><td>-0.8567209</td><td>1.233404</td></tr>
      <tr><th>29</th><td>2.9</td><td>0.1030464</td><td>-0.0350928</td><td>0.6449082</td></tr>
      <tr><th>30</th><td>3</td><td>-0.2839457</td><td>-0.5958095</td><td>0.2280835</td></tr>
      <tr><th>31</th><td>3.1</td><td>-1.546301</td><td>-0.1684117</td><td>-1.061874</td></tr>
      <tr><th>32</th><td>3.2</td><td>1.620179</td><td>0.6417536</td><td>-0.7715221</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.8713245</td><td>0.2113895</td><td>0.02350119</td></tr>
      <tr><th>34</th><td>3.4</td><td>-1.786587</td><td>0.3187497</td><td>-0.5485087</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.1227418</td><td>-0.8518721</td><td>0.5582942</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.3820423</td><td>-0.8564533</td><td>0.2395295</td></tr>
      <tr><th>37</th><td>3.7</td><td>1.3414</td><td>-0.07828004</td><td>-0.4420789</td></tr>
      <tr><th>38</th><td>3.8</td><td>1.092413</td><td>0.723852</td><td>1.27333</td></tr>
      <tr><th>39</th><td>3.9</td><td>0.7541295</td><td>0.1196705</td><td>0.9861947</td></tr>
      <tr><th>40</th><td>4</td><td>-1.740101</td><td>-0.386859</td><td>0.7145597</td></tr>
      <tr><th>41</th><td>4.1</td><td>-0.5206627</td><td>-1.055798</td><td>0.5553</td></tr>
      <tr><th>42</th><td>4.2</td><td>1.210169</td><td>-0.7504903</td><td>1.075639</td></tr>
      <tr><th>43</th><td>4.3</td><td>-0.7069479</td><td>0.5159184</td><td>0.4892149</td></tr>
      <tr><th>44</th><td>4.4</td><td>0.07089598</td><td>1.211739</td><td>-0.2072901</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.2112647</td><td>0.8264449</td><td>0.9568782</td></tr>
      <tr><th>46</th><td>4.6</td><td>-0.7820076</td><td>-0.163055</td><td>1.636585</td></tr>
      <tr><th>47</th><td>4.7</td><td>1.106682</td><td>-0.7211954</td><td>0.3279026</td></tr>
      <tr><th>48</th><td>4.8</td><td>0.4356269</td><td>1.40741</td><td>-1.530741</td></tr>
      <tr><th>49</th><td>4.9</td><td>-0.5050836</td><td>0.1264287</td><td>0.544244</td></tr>
      <tr><th>50</th><td>5</td><td>-1.114868</td><td>0.5095355</td><td>-0.9904513</td></tr>
      <tr><th>51</th><td>5.1</td><td>0.0996158</td><td>1.492795</td><td>-0.8592432</td></tr>
      <tr><th>52</th><td>5.2</td><td>-2.068416</td><td>0.663988</td><td>1.287419</td></tr>
      <tr><th>53</th><td>5.3</td><td>-1.04342</td><td>-1.459528</td><td>-0.3787095</td></tr>
      <tr><th>54</th><td>5.4</td><td>1.12903</td><td>0.6844416</td><td>-0.7338538</td></tr>
      <tr><th>55</th><td>5.5</td><td>0.7183015</td><td>-0.2727504</td><td>1.374484</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.5544702</td><td>-0.1394062</td><td>0.9152264</td></tr>
      <tr><th>57</th><td>5.7</td><td>0.2894622</td><td>-0.3690268</td><td>-1.465524</td></tr>
      <tr><th>58</th><td>5.8</td><td>-0.2701842</td><td>1.425122</td><td>0.7627007</td></tr>
      <tr><th>59</th><td>5.9</td><td>0.2172337</td><td>-2.165532</td><td>-0.504424</td></tr>
      <tr><th>60</th><td>6</td><td>-0.9923405</td><td>1.483642</td><td>1.779123</td></tr>
      <tr><th>61</th><td>6.1</td><td>0.02816902</td><td>0.4323588</td><td>0.5980481</td></tr>
      <tr><th>62</th><td>6.2</td><td>0.4263412</td><td>0.5971082</td><td>-0.1175906</td></tr>
      <tr><th>63</th><td>6.3</td><td>-0.3038621</td><td>0.9995702</td><td>-1.078008</td></tr>
      <tr><th>64</th><td>6.4</td><td>0.1723381</td><td>1.385637</td><td>0.03793544</td></tr>
      <tr><th>65</th><td>6.5</td><td>-0.2928015</td><td>1.381903</td><td>0.0761017</td></tr>
      <tr><th>66</th><td>6.6</td><td>-0.5350806</td><td>-0.3056812</td><td>0.8961715</td></tr>
      <tr><th>67</th><td>6.7</td><td>0.1005534</td><td>-0.2247743</td><td>0.3913697</td></tr>
      <tr><th>68</th><td>6.8</td><td>-0.5118007</td><td>0.6644267</td><td>-0.06673861</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.02694304</td><td>1.375275</td><td>-0.384151</td></tr>
      <tr><th>70</th><td>7</td><td>-0.2251742</td><td>0.8856431</td><td>-1.83719</td></tr>
      <tr><th>71</th><td>7.1</td><td>-0.6064325</td><td>-0.28849</td><td>-1.007031</td></tr>
      <tr><th>72</th><td>7.2</td><td>-1.067247</td><td>-1.339009</td><td>-0.9680115</td></tr>
      <tr><th>73</th><td>7.3</td><td>-1.584601</td><td>2.034826</td><td>-0.005451104</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.2783862</td><td>-2.717687</td><td>2.167685</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.2396034</td><td>-2.078044</td><td>-1.551318</td></tr>
      <tr><th>76</th><td>7.6</td><td>-1.0716</td><td>0.2084818</td><td>0.4047121</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.09137292</td><td>1.212096</td><td>0.6703745</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.4551394</td><td>-0.3537544</td><td>0.3632327</td></tr>
      <tr><th>79</th><td>7.9</td><td>0.2778237</td><td>0.01380851</td><td>-0.4968485</td></tr>
      <tr><th>80</th><td>8</td><td>-0.9125761</td><td>1.694868</td><td>0.7261986</td></tr>
      <tr><th>81</th><td>8.1</td><td>-0.1402434</td><td>-1.91619</td><td>0.9121992</td></tr>
      <tr><th>82</th><td>8.2</td><td>-1.099181</td><td>0.6888041</td><td>-0.7380119</td></tr>
      <tr><th>83</th><td>8.3</td><td>-0.5112881</td><td>0.09202752</td><td>2.566748</td></tr>
      <tr><th>84</th><td>8.4</td><td>-0.8147057</td><td>1.807138</td><td>-0.2090437</td></tr>
      <tr><th>85</th><td>8.5</td><td>-1.449927</td><td>-1.793716</td><td>-0.108515</td></tr>
      <tr><th>86</th><td>8.6</td><td>0.6184354</td><td>-2.44824</td><td>0.6056714</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.1383139</td><td>-0.6537353</td><td>-2.500676</td></tr>
      <tr><th>88</th><td>8.8</td><td>-0.002888848</td><td>-1.14056</td><td>-1.063581</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.6852841</td><td>1.673422</td><td>0.2072996</td></tr>
      <tr><th>90</th><td>9</td><td>-0.744073</td><td>0.3636739</td><td>0.4242254</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.1616091</td><td>1.383918</td><td>0.5877344</td></tr>
      <tr><th>92</th><td>9.2</td><td>1.822589</td><td>0.6830839</td><td>0.2475657</td></tr>
      <tr><th>93</th><td>9.3</td><td>1.739578</td><td>-0.3331651</td><td>1.691243</td></tr>
      <tr><th>94</th><td>9.4</td><td>1.277709</td><td>0.4770116</td><td>1.196081</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.6017219</td><td>0.3592865</td><td>-0.7597777</td></tr>
      <tr><th>96</th><td>9.6</td><td>0.4669166</td><td>0.602076</td><td>-0.5237202</td></tr>
      <tr><th>97</th><td>9.7</td><td>1.271594</td><td>0.3968025</td><td>0.0229941</td></tr>
      <tr><th>98</th><td>9.8</td><td>0.9715755</td><td>0.2581263</td><td>-0.04059118</td></tr>
      <tr><th>99</th><td>9.9</td><td>0.01796609</td><td>-0.3721649</td><td>-1.415744</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-52

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 55-56

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 59-60

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [1.16889,0.682971,-0.0430803]




.. GENERATED FROM PYTHON SOURCE LINES 64-65

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [1.16889,0.682971,-0.0430803]




.. GENERATED FROM PYTHON SOURCE LINES 69-70

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 70-76

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  1.1688919851742559




.. GENERATED FROM PYTHON SOURCE LINES 77-78

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0.7373573</td><td>-1.002287</td><td>0.4134034</td></tr>
      <tr><th>1</th><td>1.11625</td><td>1.853142</td><td>-0.6531631</td></tr>
      <tr><th>2</th><td>-0.2829529</td><td>-1.104838</td><td>0.006091594</td></tr>
      <tr><th>3</th><td>-2.38693</td><td>1.507693</td><td>1.159908</td></tr>
      <tr><th>4</th><td>-1.501157</td><td>-0.9291819</td><td>-0.9835685</td></tr>
      <tr><th>5</th><td>-0.5197094</td><td>-0.02780322</td><td>0.1259798</td></tr>
      <tr><th>6</th><td>-0.5360501</td><td>0.04853125</td><td>1.755619</td></tr>
      <tr><th>7</th><td>-1.030074</td><td>0.08745421</td><td>1.264679</td></tr>
      <tr><th>8</th><td>-0.2832554</td><td>0.3522617</td><td>0.02071397</td></tr>
      <tr><th>9</th><td>-2.341091</td><td>-0.06955157</td><td>0.187582</td></tr>
      <tr><th>10</th><td>0.324572</td><td>-0.3546043</td><td>-0.2277978</td></tr>
      <tr><th>11</th><td>0.3180472</td><td>1.007324</td><td>2.239771</td></tr>
      <tr><th>12</th><td>0.1587266</td><td>0.4100159</td><td>-0.200024</td></tr>
      <tr><th>13</th><td>-1.347635</td><td>-0.9807382</td><td>1.173362</td></tr>
      <tr><th>14</th><td>0.4307597</td><td>-0.03830514</td><td>0.7594143</td></tr>
      <tr><th>15</th><td>2.165763</td><td>-0.1960134</td><td>-1.401033</td></tr>
      <tr><th>16</th><td>-1.840696</td><td>-1.378549</td><td>0.5840053</td></tr>
      <tr><th>17</th><td>0.1636574</td><td>1.771921</td><td>1.454139</td></tr>
      <tr><th>18</th><td>1.952835</td><td>-2.228991</td><td>1.215922</td></tr>
      <tr><th>19</th><td>-0.509126</td><td>-0.02330857</td><td>-0.02195514</td></tr>
      <tr><th>20</th><td>-0.8849536</td><td>-1.363966</td><td>-1.060706</td></tr>
      <tr><th>21</th><td>-0.9989146</td><td>0.1053989</td><td>1.8202</td></tr>
      <tr><th>22</th><td>1.278319</td><td>-0.2903198</td><td>-0.7727116</td></tr>
      <tr><th>23</th><td>1.497702</td><td>-1.068935</td><td>1.371972</td></tr>
      <tr><th>24</th><td>-0.2004498</td><td>1.020712</td><td>-0.6329241</td></tr>
      <tr><th>25</th><td>0.3567094</td><td>0.5570897</td><td>-0.406752</td></tr>
      <tr><th>26</th><td>-0.567674</td><td>-0.4210779</td><td>0.2662947</td></tr>
      <tr><th>27</th><td>-0.7946933</td><td>-0.5722537</td><td>-1.048377</td></tr>
      <tr><th>28</th><td>0.4744485</td><td>1.287043</td><td>-0.413147</td></tr>
      <tr><th>29</th><td>0.5892934</td><td>-0.09017015</td><td>0.8250843</td></tr>
      <tr><th>30</th><td>0.1604459</td><td>-0.4132216</td><td>-1.781768</td></tr>
      <tr><th>31</th><td>0.4356244</td><td>-0.218335</td><td>0.4789905</td></tr>
      <tr><th>32</th><td>0.7266736</td><td>-0.1790123</td><td>-0.2969681</td></tr>
      <tr><th>33</th><td>-0.02154449</td><td>-0.3381762</td><td>-0.318642</td></tr>
      <tr><th>34</th><td>-0.6753052</td><td>-0.1709841</td><td>0.7047576</td></tr>
      <tr><th>35</th><td>-0.2010913</td><td>-0.8133986</td><td>-0.9339912</td></tr>
      <tr><th>36</th><td>-0.115538</td><td>-0.1731657</td><td>1.489047</td></tr>
      <tr><th>37</th><td>1.168892</td><td>0.6829707</td><td>-0.04308034</td></tr>
      <tr><th>38</th><td>1.044367</td><td>0.3012883</td><td>0.2204027</td></tr>
      <tr><th>39</th><td>0.2386732</td><td>-0.2367563</td><td>-0.4443648</td></tr>
      <tr><th>40</th><td>-0.9193585</td><td>-1.126239</td><td>0.508763</td></tr>
      <tr><th>41</th><td>2.349217</td><td>-0.8507378</td><td>-0.678302</td></tr>
      <tr><th>42</th><td>-0.1892639</td><td>1.389768</td><td>1.107324</td></tr>
      <tr><th>43</th><td>-0.683641</td><td>-0.6693035</td><td>-0.1570955</td></tr>
      <tr><th>44</th><td>0.2092629</td><td>-1.219514</td><td>1.102467</td></tr>
      <tr><th>45</th><td>-0.1116671</td><td>-1.88187</td><td>0.8537603</td></tr>
      <tr><th>46</th><td>0.2458</td><td>-0.2450265</td><td>1.345166</td></tr>
      <tr><th>47</th><td>0.6259756</td><td>-1.346419</td><td>0.04778018</td></tr>
      <tr><th>48</th><td>-0.3054757</td><td>-0.3883921</td><td>-1.118354</td></tr>
      <tr><th>49</th><td>-1.220832</td><td>1.304904</td><td>0.2073405</td></tr>
      <tr><th>50</th><td>-0.1411032</td><td>-0.2407215</td><td>-0.4114452</td></tr>
      <tr><th>51</th><td>-0.1860359</td><td>0.8117616</td><td>-0.6360795</td></tr>
      <tr><th>52</th><td>1.617351</td><td>-0.3455632</td><td>-0.8891849</td></tr>
      <tr><th>53</th><td>-1.53558</td><td>-1.295796</td><td>-0.4032237</td></tr>
      <tr><th>54</th><td>1.115244</td><td>0.6480505</td><td>-0.5024081</td></tr>
      <tr><th>55</th><td>1.084408</td><td>0.7324707</td><td>2.024431</td></tr>
      <tr><th>56</th><td>0.5215343</td><td>-0.3124325</td><td>-0.887024</td></tr>
      <tr><th>57</th><td>-0.07105261</td><td>2.380342</td><td>-1.202054</td></tr>
      <tr><th>58</th><td>2.882492</td><td>1.019771</td><td>-0.2187508</td></tr>
      <tr><th>59</th><td>0.1177266</td><td>-0.3224904</td><td>0.4650675</td></tr>
      <tr><th>60</th><td>0.8387816</td><td>-0.9580643</td><td>0.1793853</td></tr>
      <tr><th>61</th><td>1.137688</td><td>0.1621538</td><td>-0.2035957</td></tr>
      <tr><th>62</th><td>0.5616512</td><td>-0.6702565</td><td>0.51524</td></tr>
      <tr><th>63</th><td>1.33805</td><td>0.3435529</td><td>1.734335</td></tr>
      <tr><th>64</th><td>0.05085839</td><td>0.3205912</td><td>-0.1127952</td></tr>
      <tr><th>65</th><td>-0.6187535</td><td>2.231989</td><td>-0.6107423</td></tr>
      <tr><th>66</th><td>0.5559636</td><td>0.419176</td><td>0.2922081</td></tr>
      <tr><th>67</th><td>0.420758</td><td>-0.001486049</td><td>-1.327459</td></tr>
      <tr><th>68</th><td>1.117576</td><td>0.03350594</td><td>-0.1693602</td></tr>
      <tr><th>69</th><td>2.325528</td><td>1.783086</td><td>0.3369608</td></tr>
      <tr><th>70</th><td>-0.6074849</td><td>-1.120618</td><td>0.6366818</td></tr>
      <tr><th>71</th><td>-0.8462296</td><td>2.197525</td><td>1.342718</td></tr>
      <tr><th>72</th><td>0.7889671</td><td>-1.186537</td><td>-0.1744324</td></tr>
      <tr><th>73</th><td>0.2419037</td><td>0.8284236</td><td>0.03171061</td></tr>
      <tr><th>74</th><td>1.397892</td><td>-0.01921761</td><td>-2.182818</td></tr>
      <tr><th>75</th><td>-0.1542165</td><td>-0.9628254</td><td>-1.639066</td></tr>
      <tr><th>76</th><td>-1.443138</td><td>0.01574165</td><td>1.14293</td></tr>
      <tr><th>77</th><td>0.3453313</td><td>1.511727</td><td>0.3539413</td></tr>
      <tr><th>78</th><td>0.4841848</td><td>-0.2297494</td><td>-0.6160494</td></tr>
      <tr><th>79</th><td>1.276542</td><td>1.06845</td><td>1.706036</td></tr>
      <tr><th>80</th><td>-0.9081023</td><td>0.2361897</td><td>1.087082</td></tr>
      <tr><th>81</th><td>0.2464483</td><td>-0.8997186</td><td>0.5531084</td></tr>
      <tr><th>82</th><td>1.184723</td><td>2.115304</td><td>-0.14322</td></tr>
      <tr><th>83</th><td>-0.02785817</td><td>-0.1935633</td><td>-0.7476334</td></tr>
      <tr><th>84</th><td>-0.2920438</td><td>0.1008747</td><td>0.1947143</td></tr>
      <tr><th>85</th><td>-0.4295228</td><td>1.132761</td><td>0.67374</td></tr>
      <tr><th>86</th><td>-1.308363</td><td>-0.04188746</td><td>-0.5855319</td></tr>
      <tr><th>87</th><td>0.6334185</td><td>0.03996498</td><td>1.210038</td></tr>
      <tr><th>88</th><td>0.7394777</td><td>0.5267451</td><td>1.886457</td></tr>
      <tr><th>89</th><td>1.355264</td><td>1.281889</td><td>2.891805</td></tr>
      <tr><th>90</th><td>-0.7398513</td><td>1.113032</td><td>0.3066063</td></tr>
      <tr><th>91</th><td>0.3656721</td><td>-0.5424152</td><td>0.4944704</td></tr>
      <tr><th>92</th><td>0.6285983</td><td>0.431494</td><td>-1.142064</td></tr>
      <tr><th>93</th><td>-0.8527207</td><td>0.8158686</td><td>-0.5381547</td></tr>
      <tr><th>94</th><td>0.376805</td><td>0.05077027</td><td>-1.244104</td></tr>
      <tr><th>95</th><td>-0.9218032</td><td>-0.9954713</td><td>-1.558586</td></tr>
      <tr><th>96</th><td>2.628579</td><td>1.09704</td><td>-0.1255266</td></tr>
      <tr><th>97</th><td>0.5372768</td><td>0.3353646</td><td>-0.1747983</td></tr>
      <tr><th>98</th><td>0.9641253</td><td>0.9661262</td><td>-0.175601</td></tr>
      <tr><th>99</th><td>0.1929696</td><td>1.307232</td><td>0.4052132</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.1133,0.0595539,0.0845056]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 86-87

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-92

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 92-95

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
