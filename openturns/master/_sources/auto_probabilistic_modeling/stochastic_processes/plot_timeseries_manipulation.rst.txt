
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 7-22

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 24-30

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[1.53753,0.541337,-0.843256],[0.255464,-2.10745,-2.54664],[0.784725,1.72996,-0.496168],[-1.30811,-0.604727,0.0108145],[-0.111595,0.199696,0.226456],[0.0696043,0.360328,-1.31433],[0.520107,-0.335765,0.850182],[0.123631,1.9876,1.21501],[-0.296454,-1.40296,-0.376116],[0.818331,2.04059,0.134013],[-0.746759,1.21781,-0.758908],[0.172421,-1.29713,-0.416328],[-0.974373,-1.15205,-0.635654],[0.000441045,-0.281625,-0.377148],[-0.367822,-0.71278,-1.31674],[-0.560201,0.35087,0.613889],[0.253197,0.778249,-1.32787],[-0.473545,0.844754,-2.37615],[0.995413,0.529457,-0.406393],[0.00634026,-0.744929,0.363626],[-1.52764,-1.7725,0.624767],[0.817133,-0.456885,0.691311],[0.707272,-0.401825,-0.109415],[0.738796,0.216003,1.6675],[-1.18149,-0.564009,0.0858139],[0.124897,-1.37805,-0.353083],[0.156414,0.208294,-0.337804],[-3.02949,0.319362,-2.0027],[-0.521027,-0.587729,0.97456],[-1.28922,-0.0412697,1.90573],[-0.835408,1.33137,1.14545],[0.365005,-1.14493,0.054288],[-0.414033,-1.69075,1.02164],[0.416352,-0.503575,-0.944633],[-0.308064,0.892401,-1.39678],[0.819334,-0.164823,1.39768],[0.759911,1.85726,0.900652],[-0.224959,0.425307,0.340763],[-0.941886,0.110368,1.90629],[1.95595,1.49738,-0.183964],[-1.12781,1.01099,0.618204],[0.424091,-0.128287,-1.93771],[1.53623,-0.0479124,1.82465],[1.06585,0.512592,-0.339772],[0.461466,0.25134,0.0437991],[-2.39887,-0.0718925,-0.704914],[-0.225665,-0.0973838,0.0565679],[-0.896946,0.102257,0.338042],[-0.514493,0.514251,0.901377],[0.433901,0.341092,0.174611],[-0.37036,0.227026,0.929561],[1.23006,-1.95679,-0.412062],[-0.731214,-0.274978,0.244933],[-1.14993,-1.03861,0.448237],[-0.95994,-0.626971,0.546144],[1.18882,0.272791,1.4223],[-1.45064,-0.563502,0.4675],[-0.683475,0.650844,-0.427464],[-0.635639,-0.725211,-0.0919901],[1.54745,-1.38781,-0.218801],[0.336161,0.510745,2.22514],[0.845875,0.504589,-0.0801923],[-0.0804612,0.10813,-0.572793],[-0.585903,-1.03783,-0.0373922],[0.624182,-0.277018,0.29777],[-0.238672,-0.0338855,0.502313],[0.61764,0.588433,0.644824],[0.404258,-0.35044,0.523622],[-0.373214,-1.02847,0.162838],[0.355579,1.12481,-2.09961],[0.171769,0.438819,-0.761871],[-0.354868,1.25766,0.583077],[0.0462778,0.295748,-1.52611],[0.629792,-0.258888,0.0035813],[-0.799068,-1.91545,-0.241079],[1.01412,-0.55175,1.43036],[0.317724,-1.23876,0.164794],[0.612909,1.07587,-0.226576],[-1.92543,-0.196891,-1.34345],[0.80617,2.35372,-0.0505648],[0.677255,-1.35948,0.0604788],[-1.28515,-0.623902,-0.981875],[-1.74681,-0.331958,0.708593],[0.535773,0.123469,0.600788],[-0.549313,-1.5316,1.77766],[0.0885291,-0.467221,0.604555],[1.29802,0.310699,0.800148],[-0.0688947,-0.432096,0.0499592],[-0.655441,1.18289,-0.533935],[1.25127,1.05118,-0.131489],[-0.430012,1.92855,0.151181],[1.11804,0.132024,0.468395],[-0.0933072,-0.532883,-0.51669],[-0.600225,-0.510462,0.436706],[2.47899,-1.29269,-1.24187],[-0.127109,-0.7754,-0.54365],[1.2954,1.92023,-1.39721],[1.30688,-0.751708,-1.42922],[0.0691211,-0.604285,-0.103803],[-1.23728,0.0854945,1.09013]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-46

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.8754581</td><td>-0.5122798</td><td>-0.8134658</td></tr>
      <tr><th>1</th><td>0.1</td><td>-1.124871</td><td>-1.876791</td><td>-0.207583</td></tr>
      <tr><th>2</th><td>0.2</td><td>0.4376987</td><td>1.714553</td><td>0.7302954</td></tr>
      <tr><th>3</th><td>0.3</td><td>-0.4113652</td><td>-0.04510839</td><td>1.1601</td></tr>
      <tr><th>4</th><td>0.4</td><td>-0.6675766</td><td>-0.4630369</td><td>-0.4675828</td></tr>
      <tr><th>5</th><td>0.5</td><td>0.3824688</td><td>-0.6304477</td><td>2.128613</td></tr>
      <tr><th>6</th><td>0.6</td><td>1.147443</td><td>-0.2400434</td><td>0.9712624</td></tr>
      <tr><th>7</th><td>0.7</td><td>-0.22986</td><td>-0.8342442</td><td>0.1969496</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.8385166</td><td>-1.058253</td><td>1.215961</td></tr>
      <tr><th>9</th><td>0.9</td><td>-0.1359712</td><td>-0.1200569</td><td>-0.01278147</td></tr>
      <tr><th>10</th><td>1</td><td>1.254702</td><td>-0.080265</td><td>-0.5975585</td></tr>
      <tr><th>11</th><td>1.1</td><td>0.3849484</td><td>-1.312305</td><td>1.166381</td></tr>
      <tr><th>12</th><td>1.2</td><td>-0.00563342</td><td>0.752111</td><td>-0.4862261</td></tr>
      <tr><th>13</th><td>1.3</td><td>0.2123445</td><td>0.9121251</td><td>1.145629</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.631994</td><td>0.6704524</td><td>0.04975264</td></tr>
      <tr><th>15</th><td>1.5</td><td>-0.9248774</td><td>-2.142642</td><td>0.07390045</td></tr>
      <tr><th>16</th><td>1.6</td><td>0.04107867</td><td>-2.744774</td><td>-0.7618675</td></tr>
      <tr><th>17</th><td>1.7</td><td>-0.2204721</td><td>-0.4378284</td><td>-2.209772</td></tr>
      <tr><th>18</th><td>1.8</td><td>1.55452</td><td>-0.4367312</td><td>0.121784</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.0618096</td><td>0.3335454</td><td>-0.6371403</td></tr>
      <tr><th>20</th><td>2</td><td>-2.369757</td><td>-0.2246563</td><td>-1.24901</td></tr>
      <tr><th>21</th><td>2.1</td><td>0.7498899</td><td>0.8336246</td><td>-0.07030526</td></tr>
      <tr><th>22</th><td>2.2</td><td>0.2985337</td><td>-0.147996</td><td>-0.3370309</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.8639956</td><td>0.2577901</td><td>0.07400893</td></tr>
      <tr><th>24</th><td>2.4</td><td>1.140533</td><td>-0.4312647</td><td>-0.4114337</td></tr>
      <tr><th>25</th><td>2.5</td><td>0.4445871</td><td>-0.2453721</td><td>-0.9057857</td></tr>
      <tr><th>26</th><td>2.6</td><td>1.76737</td><td>-0.1135686</td><td>1.356882</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.1993552</td><td>-1.09601</td><td>-0.08793028</td></tr>
      <tr><th>28</th><td>2.8</td><td>-0.4282209</td><td>-0.1699464</td><td>0.497947</td></tr>
      <tr><th>29</th><td>2.9</td><td>-0.04832096</td><td>-0.340143</td><td>1.34224</td></tr>
      <tr><th>30</th><td>3</td><td>-0.4926236</td><td>-1.18342</td><td>-0.766234</td></tr>
      <tr><th>31</th><td>3.1</td><td>-0.8382289</td><td>-0.06918445</td><td>-0.04299608</td></tr>
      <tr><th>32</th><td>3.2</td><td>0.884434</td><td>-0.6527645</td><td>-1.283948</td></tr>
      <tr><th>33</th><td>3.3</td><td>1.36818</td><td>0.02102987</td><td>-0.4301333</td></tr>
      <tr><th>34</th><td>3.4</td><td>-2.061091</td><td>1.447329</td><td>0.465923</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.642243</td><td>-0.3108743</td><td>1.988038</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.956891</td><td>-0.739496</td><td>0.2712842</td></tr>
      <tr><th>37</th><td>3.7</td><td>-0.9333619</td><td>1.638922</td><td>1.115642</td></tr>
      <tr><th>38</th><td>3.8</td><td>-1.983968</td><td>-0.2352814</td><td>-1.13038</td></tr>
      <tr><th>39</th><td>3.9</td><td>0.3823401</td><td>0.5198956</td><td>-1.435754</td></tr>
      <tr><th>40</th><td>4</td><td>0.6101129</td><td>0.2565697</td><td>0.8573576</td></tr>
      <tr><th>41</th><td>4.1</td><td>-1.178044</td><td>1.879842</td><td>1.610065</td></tr>
      <tr><th>42</th><td>4.2</td><td>-1.782247</td><td>-2.535424</td><td>0.8140785</td></tr>
      <tr><th>43</th><td>4.3</td><td>0.02768376</td><td>0.2849274</td><td>-0.2743224</td></tr>
      <tr><th>44</th><td>4.4</td><td>0.6308421</td><td>1.601221</td><td>0.5200696</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.5127414</td><td>0.3935741</td><td>0.9102447</td></tr>
      <tr><th>46</th><td>4.6</td><td>0.8050808</td><td>0.3601897</td><td>0.8185265</td></tr>
      <tr><th>47</th><td>4.7</td><td>-0.1299283</td><td>-0.8033989</td><td>-0.2476381</td></tr>
      <tr><th>48</th><td>4.8</td><td>0.4473595</td><td>-0.1355828</td><td>-1.006293</td></tr>
      <tr><th>49</th><td>4.9</td><td>-2.206028</td><td>-0.6297582</td><td>-0.3806214</td></tr>
      <tr><th>50</th><td>5</td><td>-0.9490279</td><td>-0.4022759</td><td>1.045239</td></tr>
      <tr><th>51</th><td>5.1</td><td>-2.102563</td><td>-0.5563819</td><td>0.1106236</td></tr>
      <tr><th>52</th><td>5.2</td><td>-0.3635654</td><td>-1.416454</td><td>-0.2362735</td></tr>
      <tr><th>53</th><td>5.3</td><td>0.3668667</td><td>2.007901</td><td>-0.07390729</td></tr>
      <tr><th>54</th><td>5.4</td><td>1.581977</td><td>0.1249756</td><td>-0.5717956</td></tr>
      <tr><th>55</th><td>5.5</td><td>0.752711</td><td>0.6636984</td><td>-1.054661</td></tr>
      <tr><th>56</th><td>5.6</td><td>2.07773</td><td>0.895966</td><td>1.394047</td></tr>
      <tr><th>57</th><td>5.7</td><td>-2.200137</td><td>0.8159975</td><td>1.461507</td></tr>
      <tr><th>58</th><td>5.8</td><td>-0.782874</td><td>-0.5371874</td><td>1.990637</td></tr>
      <tr><th>59</th><td>5.9</td><td>0.1327489</td><td>-0.9289891</td><td>2.012848</td></tr>
      <tr><th>60</th><td>6</td><td>-1.126206</td><td>-0.8622021</td><td>-0.02696673</td></tr>
      <tr><th>61</th><td>6.1</td><td>0.6058621</td><td>1.47897</td><td>1.566586</td></tr>
      <tr><th>62</th><td>6.2</td><td>-0.9017296</td><td>-0.3173458</td><td>0.9287239</td></tr>
      <tr><th>63</th><td>6.3</td><td>0.5515051</td><td>0.2765293</td><td>-1.509025</td></tr>
      <tr><th>64</th><td>6.4</td><td>0.6073381</td><td>0.4441416</td><td>1.099138</td></tr>
      <tr><th>65</th><td>6.5</td><td>-0.5242312</td><td>2.468057</td><td>0.1780923</td></tr>
      <tr><th>66</th><td>6.6</td><td>1.082029</td><td>0.3078323</td><td>0.4474624</td></tr>
      <tr><th>67</th><td>6.7</td><td>0.02633311</td><td>-0.8627061</td><td>-1.302719</td></tr>
      <tr><th>68</th><td>6.8</td><td>-0.8437512</td><td>1.165237</td><td>-0.9401874</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.3768176</td><td>0.4989696</td><td>1.284679</td></tr>
      <tr><th>70</th><td>7</td><td>-0.5479933</td><td>-0.9299735</td><td>0.2350976</td></tr>
      <tr><th>71</th><td>7.1</td><td>0.05719118</td><td>-0.1189762</td><td>0.3613259</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.9958854</td><td>0.5176243</td><td>-0.6069826</td></tr>
      <tr><th>73</th><td>7.3</td><td>0.4386879</td><td>-0.04186084</td><td>0.05453011</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.3539044</td><td>0.1852776</td><td>1.595432</td></tr>
      <tr><th>75</th><td>7.5</td><td>-1.310574</td><td>-1.420315</td><td>0.8154006</td></tr>
      <tr><th>76</th><td>7.6</td><td>0.8370005</td><td>-0.2722743</td><td>-0.2877999</td></tr>
      <tr><th>77</th><td>7.7</td><td>-1.5105</td><td>-0.6717936</td><td>0.9040705</td></tr>
      <tr><th>78</th><td>7.8</td><td>-1.181814</td><td>2.115154</td><td>0.7097007</td></tr>
      <tr><th>79</th><td>7.9</td><td>1.43698</td><td>-1.072473</td><td>0.07374594</td></tr>
      <tr><th>80</th><td>8</td><td>-1.16931</td><td>-1.130743</td><td>-1.230705</td></tr>
      <tr><th>81</th><td>8.1</td><td>0.3049825</td><td>-0.2504786</td><td>0.3684208</td></tr>
      <tr><th>82</th><td>8.2</td><td>-1.749257</td><td>0.6883187</td><td>1.754909</td></tr>
      <tr><th>83</th><td>8.3</td><td>0.364895</td><td>0.9378603</td><td>-0.7688537</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.9575721</td><td>-0.9691672</td><td>0.5804133</td></tr>
      <tr><th>85</th><td>8.5</td><td>-0.07951129</td><td>0.2251385</td><td>1.555776</td></tr>
      <tr><th>86</th><td>8.6</td><td>-0.3501472</td><td>0.6596267</td><td>-0.423518</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.1067879</td><td>0.6201891</td><td>-1.441517</td></tr>
      <tr><th>88</th><td>8.8</td><td>0.7621755</td><td>-0.6626542</td><td>0.9212291</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.366212</td><td>0.7399574</td><td>-1.584456</td></tr>
      <tr><th>90</th><td>9</td><td>1.27184</td><td>-0.7652459</td><td>-1.10122</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.07584014</td><td>-0.5129133</td><td>0.1188419</td></tr>
      <tr><th>92</th><td>9.2</td><td>-0.3762357</td><td>0.3772683</td><td>0.6963444</td></tr>
      <tr><th>93</th><td>9.3</td><td>-0.863203</td><td>0.6435657</td><td>-1.390758</td></tr>
      <tr><th>94</th><td>9.4</td><td>-0.5049195</td><td>0.5004093</td><td>0.1356278</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.05498123</td><td>-0.7136883</td><td>1.368873</td></tr>
      <tr><th>96</th><td>9.6</td><td>0.8083668</td><td>-1.515956</td><td>1.250776</td></tr>
      <tr><th>97</th><td>9.7</td><td>-0.3069448</td><td>0.2080092</td><td>-0.5728779</td></tr>
      <tr><th>98</th><td>9.8</td><td>0.5267116</td><td>-0.06434839</td><td>0.5320585</td></tr>
      <tr><th>99</th><td>9.9</td><td>-0.4281997</td><td>0.3099006</td><td>-0.77278</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-52

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 55-56

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 59-60

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.224959,0.425307,0.340763]




.. GENERATED FROM PYTHON SOURCE LINES 64-65

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.224959,0.425307,0.340763]




.. GENERATED FROM PYTHON SOURCE LINES 69-70

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 70-76

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.22495936388622922




.. GENERATED FROM PYTHON SOURCE LINES 77-78

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>1.537533</td><td>0.5413366</td><td>-0.8432564</td></tr>
      <tr><th>1</th><td>0.2554645</td><td>-2.10745</td><td>-2.546644</td></tr>
      <tr><th>2</th><td>0.7847247</td><td>1.729955</td><td>-0.4961679</td></tr>
      <tr><th>3</th><td>-1.30811</td><td>-0.6047274</td><td>0.01081447</td></tr>
      <tr><th>4</th><td>-0.1115954</td><td>0.1996965</td><td>0.2264558</td></tr>
      <tr><th>5</th><td>0.06960427</td><td>0.3603276</td><td>-1.314333</td></tr>
      <tr><th>6</th><td>0.5201068</td><td>-0.3357649</td><td>0.8501818</td></tr>
      <tr><th>7</th><td>0.1236307</td><td>1.987596</td><td>1.215015</td></tr>
      <tr><th>8</th><td>-0.2964538</td><td>-1.402962</td><td>-0.3761165</td></tr>
      <tr><th>9</th><td>0.8183312</td><td>2.040587</td><td>0.1340129</td></tr>
      <tr><th>10</th><td>-0.7467594</td><td>1.217811</td><td>-0.7589079</td></tr>
      <tr><th>11</th><td>0.1724214</td><td>-1.297129</td><td>-0.4163275</td></tr>
      <tr><th>12</th><td>-0.9743725</td><td>-1.152047</td><td>-0.6356537</td></tr>
      <tr><th>13</th><td>0.0004410453</td><td>-0.2816245</td><td>-0.3771481</td></tr>
      <tr><th>14</th><td>-0.3678222</td><td>-0.7127798</td><td>-1.316742</td></tr>
      <tr><th>15</th><td>-0.5602006</td><td>0.3508703</td><td>0.6138888</td></tr>
      <tr><th>16</th><td>0.2531969</td><td>0.7782487</td><td>-1.327868</td></tr>
      <tr><th>17</th><td>-0.4735452</td><td>0.8447543</td><td>-2.376146</td></tr>
      <tr><th>18</th><td>0.9954131</td><td>0.5294573</td><td>-0.4063933</td></tr>
      <tr><th>19</th><td>0.006340264</td><td>-0.7449294</td><td>0.3636262</td></tr>
      <tr><th>20</th><td>-1.527642</td><td>-1.772498</td><td>0.6247669</td></tr>
      <tr><th>21</th><td>0.8171326</td><td>-0.4568847</td><td>0.6913109</td></tr>
      <tr><th>22</th><td>0.7072721</td><td>-0.4018248</td><td>-0.1094146</td></tr>
      <tr><th>23</th><td>0.7387961</td><td>0.2160029</td><td>1.667503</td></tr>
      <tr><th>24</th><td>-1.181492</td><td>-0.5640092</td><td>0.08581388</td></tr>
      <tr><th>25</th><td>0.1248972</td><td>-1.378054</td><td>-0.3530831</td></tr>
      <tr><th>26</th><td>0.1564137</td><td>0.2082943</td><td>-0.3378042</td></tr>
      <tr><th>27</th><td>-3.029489</td><td>0.3193623</td><td>-2.0027</td></tr>
      <tr><th>28</th><td>-0.5210267</td><td>-0.5877294</td><td>0.9745599</td></tr>
      <tr><th>29</th><td>-1.289224</td><td>-0.04126969</td><td>1.905734</td></tr>
      <tr><th>30</th><td>-0.8354076</td><td>1.331372</td><td>1.145451</td></tr>
      <tr><th>31</th><td>0.3650049</td><td>-1.144929</td><td>0.05428802</td></tr>
      <tr><th>32</th><td>-0.4140331</td><td>-1.690751</td><td>1.021642</td></tr>
      <tr><th>33</th><td>0.4163518</td><td>-0.5035749</td><td>-0.9446327</td></tr>
      <tr><th>34</th><td>-0.3080639</td><td>0.892401</td><td>-1.396784</td></tr>
      <tr><th>35</th><td>0.819334</td><td>-0.164823</td><td>1.39768</td></tr>
      <tr><th>36</th><td>0.7599108</td><td>1.857258</td><td>0.9006515</td></tr>
      <tr><th>37</th><td>-0.2249594</td><td>0.4253072</td><td>0.3407628</td></tr>
      <tr><th>38</th><td>-0.9418859</td><td>0.110368</td><td>1.906293</td></tr>
      <tr><th>39</th><td>1.955952</td><td>1.497377</td><td>-0.183964</td></tr>
      <tr><th>40</th><td>-1.127806</td><td>1.01099</td><td>0.6182036</td></tr>
      <tr><th>41</th><td>0.424091</td><td>-0.1282866</td><td>-1.937714</td></tr>
      <tr><th>42</th><td>1.536234</td><td>-0.0479124</td><td>1.824653</td></tr>
      <tr><th>43</th><td>1.065854</td><td>0.5125924</td><td>-0.3397721</td></tr>
      <tr><th>44</th><td>0.4614663</td><td>0.2513398</td><td>0.0437991</td></tr>
      <tr><th>45</th><td>-2.398869</td><td>-0.07189249</td><td>-0.7049141</td></tr>
      <tr><th>46</th><td>-0.2256653</td><td>-0.09738381</td><td>0.05656786</td></tr>
      <tr><th>47</th><td>-0.8969458</td><td>0.1022567</td><td>0.3380424</td></tr>
      <tr><th>48</th><td>-0.5144931</td><td>0.5142514</td><td>0.9013772</td></tr>
      <tr><th>49</th><td>0.433901</td><td>0.3410922</td><td>0.1746113</td></tr>
      <tr><th>50</th><td>-0.3703599</td><td>0.2270263</td><td>0.9295615</td></tr>
      <tr><th>51</th><td>1.23006</td><td>-1.956789</td><td>-0.4120623</td></tr>
      <tr><th>52</th><td>-0.731214</td><td>-0.2749782</td><td>0.2449329</td></tr>
      <tr><th>53</th><td>-1.14993</td><td>-1.038611</td><td>0.4482367</td></tr>
      <tr><th>54</th><td>-0.9599402</td><td>-0.6269707</td><td>0.5461435</td></tr>
      <tr><th>55</th><td>1.188819</td><td>0.2727908</td><td>1.422305</td></tr>
      <tr><th>56</th><td>-1.450644</td><td>-0.5635024</td><td>0.4675002</td></tr>
      <tr><th>57</th><td>-0.6834745</td><td>0.6508437</td><td>-0.4274636</td></tr>
      <tr><th>58</th><td>-0.6356385</td><td>-0.725211</td><td>-0.09199013</td></tr>
      <tr><th>59</th><td>1.547447</td><td>-1.387813</td><td>-0.2188008</td></tr>
      <tr><th>60</th><td>0.3361606</td><td>0.5107449</td><td>2.225137</td></tr>
      <tr><th>61</th><td>0.8458747</td><td>0.5045891</td><td>-0.08019232</td></tr>
      <tr><th>62</th><td>-0.0804612</td><td>0.1081302</td><td>-0.5727934</td></tr>
      <tr><th>63</th><td>-0.5859034</td><td>-1.037827</td><td>-0.03739221</td></tr>
      <tr><th>64</th><td>0.624182</td><td>-0.2770179</td><td>0.2977696</td></tr>
      <tr><th>65</th><td>-0.2386718</td><td>-0.03388547</td><td>0.5023131</td></tr>
      <tr><th>66</th><td>0.6176403</td><td>0.5884327</td><td>0.6448243</td></tr>
      <tr><th>67</th><td>0.4042581</td><td>-0.35044</td><td>0.523622</td></tr>
      <tr><th>68</th><td>-0.373214</td><td>-1.028472</td><td>0.1628384</td></tr>
      <tr><th>69</th><td>0.3555795</td><td>1.124814</td><td>-2.09961</td></tr>
      <tr><th>70</th><td>0.1717692</td><td>0.4388187</td><td>-0.7618713</td></tr>
      <tr><th>71</th><td>-0.3548676</td><td>1.257664</td><td>0.5830774</td></tr>
      <tr><th>72</th><td>0.04627777</td><td>0.2957483</td><td>-1.526114</td></tr>
      <tr><th>73</th><td>0.6297916</td><td>-0.2588877</td><td>0.003581295</td></tr>
      <tr><th>74</th><td>-0.7990682</td><td>-1.915453</td><td>-0.2410786</td></tr>
      <tr><th>75</th><td>1.014122</td><td>-0.5517497</td><td>1.430361</td></tr>
      <tr><th>76</th><td>0.3177245</td><td>-1.238761</td><td>0.1647945</td></tr>
      <tr><th>77</th><td>0.6129092</td><td>1.075865</td><td>-0.2265759</td></tr>
      <tr><th>78</th><td>-1.925428</td><td>-0.1968911</td><td>-1.343452</td></tr>
      <tr><th>79</th><td>0.8061698</td><td>2.353722</td><td>-0.05056483</td></tr>
      <tr><th>80</th><td>0.6772546</td><td>-1.359478</td><td>0.06047879</td></tr>
      <tr><th>81</th><td>-1.285154</td><td>-0.6239022</td><td>-0.981875</td></tr>
      <tr><th>82</th><td>-1.746813</td><td>-0.3319578</td><td>0.7085932</td></tr>
      <tr><th>83</th><td>0.5357726</td><td>0.1234693</td><td>0.600788</td></tr>
      <tr><th>84</th><td>-0.5493134</td><td>-1.531597</td><td>1.77766</td></tr>
      <tr><th>85</th><td>0.08852908</td><td>-0.4672211</td><td>0.6045547</td></tr>
      <tr><th>86</th><td>1.298021</td><td>0.3106985</td><td>0.8001483</td></tr>
      <tr><th>87</th><td>-0.06889468</td><td>-0.4320963</td><td>0.04995922</td></tr>
      <tr><th>88</th><td>-0.6554405</td><td>1.182886</td><td>-0.5339351</td></tr>
      <tr><th>89</th><td>1.251271</td><td>1.051178</td><td>-0.1314891</td></tr>
      <tr><th>90</th><td>-0.4300122</td><td>1.928553</td><td>0.151181</td></tr>
      <tr><th>91</th><td>1.11804</td><td>0.1320243</td><td>0.4683949</td></tr>
      <tr><th>92</th><td>-0.09330725</td><td>-0.5328829</td><td>-0.5166904</td></tr>
      <tr><th>93</th><td>-0.6002245</td><td>-0.5104617</td><td>0.4367062</td></tr>
      <tr><th>94</th><td>2.478988</td><td>-1.292693</td><td>-1.241867</td></tr>
      <tr><th>95</th><td>-0.127109</td><td>-0.7754003</td><td>-0.5436502</td></tr>
      <tr><th>96</th><td>1.295404</td><td>1.920226</td><td>-1.397206</td></tr>
      <tr><th>97</th><td>1.30688</td><td>-0.7517083</td><td>-1.429216</td></tr>
      <tr><th>98</th><td>0.06912108</td><td>-0.6042846</td><td>-0.1038033</td></tr>
      <tr><th>99</th><td>-1.23728</td><td>0.08549451</td><td>1.090134</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[-0.00249472,-0.0294072,0.00564095]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 86-87

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-92

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 92-95

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
