
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-0.290413,-1.46123,-0.768977],[-0.0169222,-0.457064,-0.277164],[1.72205,-0.4336,1.45325],[-0.729247,-1.78229,0.267759],[-0.070868,0.53216,1.39422],[-1.1703,-1.55535,0.232185],[-0.0205345,-0.248548,-1.12437],[1.47138,-1.37257,-1.29522],[1.01103,-0.771526,-1.17413],[-0.688061,-1.7124,-0.710316],[-2.01041,0.262012,1.44818],[0.618348,-0.480805,0.285778],[-0.199022,1.73531,1.64642],[-1.73585,0.26693,0.211172],[-1.68012,-0.00201747,2.12245],[-0.744233,0.733055,-0.912372],[-1.16518,-2.52284,0.334491],[-1.69593,0.169578,-2.69077],[0.333995,2.92562,1.7819],[1.32399,-1.24277,-0.565013],[2.16921,-0.338987,1.10881],[-0.0989506,0.605458,-0.820045],[0.0453714,-0.165741,1.50375],[-2.2185,-0.740203,-2.77729],[-1.42062,0.102114,-2.34682],[1.09107,-2.73103,-0.648944],[0.16475,0.580521,-0.984716],[-0.898393,-0.091748,-0.432769],[0.95867,-1.03521,-0.940552],[-0.841729,0.240762,-0.889377],[0.724524,-0.106668,-0.962409],[0.476724,-0.867147,-0.897619],[0.0929359,0.670433,-0.0625844],[-0.32486,0.94492,-0.224337],[-0.672415,-0.145752,1.26357],[2.33477,0.508845,-2.34677],[-1.21672,-0.780718,0.772499],[-0.678587,0.170492,-1.32215],[-1.33494,-1.04584,-0.930733],[-0.0195331,-0.257713,0.0330479],[0.732326,-0.424634,1.85703],[-1.09089,1.36553,1.59432],[-1.2139,-1.20946,1.1045],[-0.127761,0.509213,-1.4428],[-0.0971576,0.122046,1.16876],[0.713238,1.02299,1.21528],[1.46228,0.364406,-1.3045],[-0.444406,-0.759892,-0.38515],[0.607985,0.264184,0.957196],[0.639581,-1.3833,-0.73742],[0.534447,0.0402134,-0.620431],[-0.0597421,-0.527099,-0.452003],[0.230184,0.221209,-0.503054],[0.180323,-2.19014,1.53515],[0.909591,-0.350559,-2.18526],[-0.49978,1.17705,-0.212668],[-1.11577,-2.14423,-1.26041],[-0.28228,0.669229,-0.673631],[-0.850404,2.65565,-1.12974],[1.62975,-0.373116,-0.47803],[-1.82345,0.229025,-1.13365],[-0.868939,-0.984113,-0.0141399],[-0.313026,0.0360765,0.726386],[-1.08025,-1.08525,0.506197],[-0.310365,0.00599892,-1.05676],[-0.952283,-0.622538,0.343644],[-1.49214,-0.483943,-0.225654],[0.497155,-0.122464,0.927967],[2.98719,-1.21127,0.649729],[1.75766,-0.430168,-2.14448],[-0.0445396,-0.126488,1.17628],[0.378299,-1.27094,0.541786],[0.413785,0.00678211,-0.0751541],[0.559849,1.45772,0.0208425],[-1.28828,-0.57692,0.391693],[-0.720206,0.636001,-0.0661626],[1.33211,-1.43143,-1.00864],[0.721371,1.12633,-1.02144],[-0.318036,0.121308,1.74899],[1.66426,0.239242,0.525841],[0.071418,-0.870312,-0.995203],[0.0858411,-0.521722,-0.753257],[-1.13347,-0.208651,-1.41424],[0.772228,0.211249,-0.417104],[-0.217864,1.33967,-1.35001],[0.604987,-2.432,-0.0846144],[-0.858211,-0.83109,1.0888],[-0.464364,0.670847,0.268381],[1.07066,1.14788,-0.565546],[1.55625,-0.948339,-0.0296882],[-1.18879,-0.403071,-0.599575],[0.31483,-0.100197,0.48956],[1.69717,-0.621599,0.720307],[-0.620772,0.10016,0.345146],[-1.19476,0.51985,0.542013],[-0.602167,-0.847253,-0.344588],[-0.865759,0.842309,-0.731271],[-1.07013,-0.844648,-0.861351],[0.105234,-1.63122,2.52518],[0.379314,-0.411186,-0.207432]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.413154</td><td>0.1215452</td><td>-0.3015963</td></tr>
      <tr><th>1</th><td>0.1</td><td>-1.1106</td><td>-0.8661544</td><td>0.1014118</td></tr>
      <tr><th>2</th><td>0.2</td><td>-0.6704583</td><td>-0.2076204</td><td>-0.7311988</td></tr>
      <tr><th>3</th><td>0.3</td><td>2.303529</td><td>-0.1343776</td><td>0.2545219</td></tr>
      <tr><th>4</th><td>0.4</td><td>0.8078866</td><td>-0.5455217</td><td>1.026452</td></tr>
      <tr><th>5</th><td>0.5</td><td>0.1862644</td><td>-0.9785221</td><td>-1.068637</td></tr>
      <tr><th>6</th><td>0.6</td><td>0.4554838</td><td>0.5560582</td><td>-0.7452197</td></tr>
      <tr><th>7</th><td>0.7</td><td>2.636234</td><td>1.595283</td><td>0.3891779</td></tr>
      <tr><th>8</th><td>0.8</td><td>-1.043482</td><td>1.680076</td><td>-0.8841888</td></tr>
      <tr><th>9</th><td>0.9</td><td>-0.1290608</td><td>-0.4549551</td><td>1.093147</td></tr>
      <tr><th>10</th><td>1</td><td>1.276701</td><td>-0.1191992</td><td>1.745895</td></tr>
      <tr><th>11</th><td>1.1</td><td>-1.170343</td><td>-2.300882</td><td>1.914447</td></tr>
      <tr><th>12</th><td>1.2</td><td>-2.149539</td><td>-0.4427142</td><td>-1.141889</td></tr>
      <tr><th>13</th><td>1.3</td><td>-1.001706</td><td>-0.8932547</td><td>1.147274</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.7012482</td><td>0.4902853</td><td>1.030969</td></tr>
      <tr><th>15</th><td>1.5</td><td>-0.2996956</td><td>-0.9792731</td><td>1.526515</td></tr>
      <tr><th>16</th><td>1.6</td><td>0.06952195</td><td>1.312442</td><td>0.8330707</td></tr>
      <tr><th>17</th><td>1.7</td><td>-0.1047494</td><td>0.8925512</td><td>0.7786841</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.3203534</td><td>0.9531775</td><td>1.044365</td></tr>
      <tr><th>19</th><td>1.9</td><td>1.435945</td><td>0.6978609</td><td>-0.6909303</td></tr>
      <tr><th>20</th><td>2</td><td>0.02341637</td><td>-0.3952929</td><td>-0.8908839</td></tr>
      <tr><th>21</th><td>2.1</td><td>1.369024</td><td>0.08375382</td><td>-1.064231</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.6648069</td><td>0.3317671</td><td>-0.5373703</td></tr>
      <tr><th>23</th><td>2.3</td><td>-0.4144806</td><td>0.9186002</td><td>2.448286</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.8199483</td><td>0.06627359</td><td>0.8612197</td></tr>
      <tr><th>25</th><td>2.5</td><td>0.03934022</td><td>-0.308804</td><td>-1.37873</td></tr>
      <tr><th>26</th><td>2.6</td><td>1.89943</td><td>0.4217136</td><td>1.296414</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.7940002</td><td>-2.154005</td><td>-0.04224926</td></tr>
      <tr><th>28</th><td>2.8</td><td>-0.7000487</td><td>-1.561501</td><td>-0.9933075</td></tr>
      <tr><th>29</th><td>2.9</td><td>-0.5907143</td><td>0.01283382</td><td>0.1416661</td></tr>
      <tr><th>30</th><td>3</td><td>1.852506</td><td>-0.5933123</td><td>1.858907</td></tr>
      <tr><th>31</th><td>3.1</td><td>1.501705</td><td>1.319024</td><td>0.8837067</td></tr>
      <tr><th>32</th><td>3.2</td><td>-0.01980519</td><td>-0.2646443</td><td>1.082681</td></tr>
      <tr><th>33</th><td>3.3</td><td>-0.5557101</td><td>-0.3672942</td><td>-0.1619971</td></tr>
      <tr><th>34</th><td>3.4</td><td>-0.6140992</td><td>-0.8046131</td><td>-0.3050816</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.01668144</td><td>-0.2126848</td><td>0.948644</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.3444105</td><td>0.9357874</td><td>-0.0531046</td></tr>
      <tr><th>37</th><td>3.7</td><td>0.1855577</td><td>-0.1409302</td><td>-1.747891</td></tr>
      <tr><th>38</th><td>3.8</td><td>0.2016023</td><td>1.898729</td><td>-0.9968568</td></tr>
      <tr><th>39</th><td>3.9</td><td>0.7620461</td><td>-1.723379</td><td>0.3334234</td></tr>
      <tr><th>40</th><td>4</td><td>0.5156361</td><td>0.3607555</td><td>-1.115416</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.5072835</td><td>-1.512366</td><td>-0.5762774</td></tr>
      <tr><th>42</th><td>4.2</td><td>0.8307307</td><td>-0.1504941</td><td>-0.623645</td></tr>
      <tr><th>43</th><td>4.3</td><td>-0.04723635</td><td>0.8816583</td><td>-0.08228552</td></tr>
      <tr><th>44</th><td>4.4</td><td>-1.228023</td><td>-0.6142896</td><td>0.5151391</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.4763062</td><td>-0.5785671</td><td>2.085125</td></tr>
      <tr><th>46</th><td>4.6</td><td>1.5973</td><td>0.4473893</td><td>0.6779942</td></tr>
      <tr><th>47</th><td>4.7</td><td>0.90996</td><td>-0.6098015</td><td>0.5629582</td></tr>
      <tr><th>48</th><td>4.8</td><td>-1.341669</td><td>1.263762</td><td>-0.3833395</td></tr>
      <tr><th>49</th><td>4.9</td><td>1.215245</td><td>-1.640761</td><td>-0.5377322</td></tr>
      <tr><th>50</th><td>5</td><td>0.9705309</td><td>-1.578822</td><td>1.030869</td></tr>
      <tr><th>51</th><td>5.1</td><td>-0.3417385</td><td>-0.02820062</td><td>-1.373966</td></tr>
      <tr><th>52</th><td>5.2</td><td>0.1687916</td><td>-0.7338312</td><td>-0.3115902</td></tr>
      <tr><th>53</th><td>5.3</td><td>-1.406806</td><td>-0.4164191</td><td>2.45696</td></tr>
      <tr><th>54</th><td>5.4</td><td>-0.247196</td><td>0.1155845</td><td>-0.2355882</td></tr>
      <tr><th>55</th><td>5.5</td><td>-0.1450351</td><td>0.1921401</td><td>0.002383487</td></tr>
      <tr><th>56</th><td>5.6</td><td>0.6616028</td><td>-2.565795</td><td>-0.7673506</td></tr>
      <tr><th>57</th><td>5.7</td><td>0.308869</td><td>-1.555183</td><td>0.1054982</td></tr>
      <tr><th>58</th><td>5.8</td><td>1.469908</td><td>1.144452</td><td>0.4890094</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.006711523</td><td>1.301356</td><td>-0.6605093</td></tr>
      <tr><th>60</th><td>6</td><td>-0.06156391</td><td>0.8345628</td><td>0.02516375</td></tr>
      <tr><th>61</th><td>6.1</td><td>1.346442</td><td>-0.006724385</td><td>-1.624603</td></tr>
      <tr><th>62</th><td>6.2</td><td>-0.3877807</td><td>0.5214889</td><td>0.6558709</td></tr>
      <tr><th>63</th><td>6.3</td><td>-1.190359</td><td>-0.07209884</td><td>-1.305088</td></tr>
      <tr><th>64</th><td>6.4</td><td>-1.52512</td><td>0.979338</td><td>-0.02437705</td></tr>
      <tr><th>65</th><td>6.5</td><td>0.9630037</td><td>1.019484</td><td>0.3513793</td></tr>
      <tr><th>66</th><td>6.6</td><td>-1.960322</td><td>1.238504</td><td>0.5142441</td></tr>
      <tr><th>67</th><td>6.7</td><td>-0.1867585</td><td>-0.9101564</td><td>-0.2136082</td></tr>
      <tr><th>68</th><td>6.8</td><td>0.9159729</td><td>-0.06675403</td><td>0.4446068</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.1287894</td><td>-0.9547217</td><td>-1.426708</td></tr>
      <tr><th>70</th><td>7</td><td>-0.03579313</td><td>-1.96757</td><td>-0.129576</td></tr>
      <tr><th>71</th><td>7.1</td><td>-0.5707565</td><td>-1.99069</td><td>-0.4027643</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.369022</td><td>1.284365</td><td>-0.2978336</td></tr>
      <tr><th>73</th><td>7.3</td><td>-0.3699541</td><td>-0.02540791</td><td>0.02323491</td></tr>
      <tr><th>74</th><td>7.4</td><td>1.610776</td><td>-0.1577591</td><td>-1.010202</td></tr>
      <tr><th>75</th><td>7.5</td><td>1.099786</td><td>0.6117798</td><td>0.8339433</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.2250766</td><td>0.0136654</td><td>-0.9914845</td></tr>
      <tr><th>77</th><td>7.7</td><td>-0.7657316</td><td>0.171168</td><td>-0.7744697</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.1333375</td><td>-1.379402</td><td>-1.474439</td></tr>
      <tr><th>79</th><td>7.9</td><td>0.09684826</td><td>-0.9460987</td><td>-1.086231</td></tr>
      <tr><th>80</th><td>8</td><td>-1.713459</td><td>-1.234103</td><td>-0.4830016</td></tr>
      <tr><th>81</th><td>8.1</td><td>-0.1326392</td><td>-0.5212894</td><td>-0.2040559</td></tr>
      <tr><th>82</th><td>8.2</td><td>0.2546493</td><td>-0.4390261</td><td>-0.3478557</td></tr>
      <tr><th>83</th><td>8.3</td><td>-0.6422488</td><td>0.4827122</td><td>0.08632802</td></tr>
      <tr><th>84</th><td>8.4</td><td>-0.6328736</td><td>0.7736543</td><td>-0.2739794</td></tr>
      <tr><th>85</th><td>8.5</td><td>0.4458058</td><td>0.3909238</td><td>-0.5536447</td></tr>
      <tr><th>86</th><td>8.6</td><td>0.3941429</td><td>-0.668834</td><td>-0.334642</td></tr>
      <tr><th>87</th><td>8.7</td><td>1.265939</td><td>0.0352763</td><td>-0.6928823</td></tr>
      <tr><th>88</th><td>8.8</td><td>1.722448</td><td>0.9979543</td><td>-0.90196</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.5067498</td><td>1.181278</td><td>1.127368</td></tr>
      <tr><th>90</th><td>9</td><td>-1.486055</td><td>-0.7157073</td><td>1.911385</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.1893656</td><td>-0.4643749</td><td>0.3941153</td></tr>
      <tr><th>92</th><td>9.2</td><td>1.12513</td><td>-1.475739</td><td>-0.9961905</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.2276061</td><td>0.8264142</td><td>-0.8141025</td></tr>
      <tr><th>94</th><td>9.4</td><td>2.284183</td><td>-0.8362538</td><td>-0.7605718</td></tr>
      <tr><th>95</th><td>9.5</td><td>0.5667212</td><td>-1.759233</td><td>0.45007</td></tr>
      <tr><th>96</th><td>9.6</td><td>-1.209103</td><td>-0.08286816</td><td>0.5555037</td></tr>
      <tr><th>97</th><td>9.7</td><td>0.3329605</td><td>0.6262493</td><td>0.1946711</td></tr>
      <tr><th>98</th><td>9.8</td><td>-2.122671</td><td>1.096469</td><td>0.4716139</td></tr>
      <tr><th>99</th><td>9.9</td><td>-0.03639634</td><td>-0.08753184</td><td>0.6484352</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.678587,0.170492,-1.32215]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.678587,0.170492,-1.32215]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.6785865225274985




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-0.2904131</td><td>-1.461231</td><td>-0.7689766</td></tr>
      <tr><th>1</th><td>-0.01692223</td><td>-0.4570636</td><td>-0.2771644</td></tr>
      <tr><th>2</th><td>1.722046</td><td>-0.4336005</td><td>1.453245</td></tr>
      <tr><th>3</th><td>-0.729247</td><td>-1.782287</td><td>0.267759</td></tr>
      <tr><th>4</th><td>-0.07086797</td><td>0.5321602</td><td>1.394219</td></tr>
      <tr><th>5</th><td>-1.170295</td><td>-1.555352</td><td>0.2321851</td></tr>
      <tr><th>6</th><td>-0.02053448</td><td>-0.2485484</td><td>-1.12437</td></tr>
      <tr><th>7</th><td>1.471384</td><td>-1.372565</td><td>-1.295222</td></tr>
      <tr><th>8</th><td>1.011034</td><td>-0.7715256</td><td>-1.174129</td></tr>
      <tr><th>9</th><td>-0.6880613</td><td>-1.712398</td><td>-0.7103164</td></tr>
      <tr><th>10</th><td>-2.010411</td><td>0.2620117</td><td>1.448181</td></tr>
      <tr><th>11</th><td>0.6183483</td><td>-0.480805</td><td>0.2857777</td></tr>
      <tr><th>12</th><td>-0.1990224</td><td>1.735308</td><td>1.646416</td></tr>
      <tr><th>13</th><td>-1.735848</td><td>0.2669303</td><td>0.2111717</td></tr>
      <tr><th>14</th><td>-1.680118</td><td>-0.002017474</td><td>2.122446</td></tr>
      <tr><th>15</th><td>-0.7442334</td><td>0.7330552</td><td>-0.9123718</td></tr>
      <tr><th>16</th><td>-1.16518</td><td>-2.522836</td><td>0.3344908</td></tr>
      <tr><th>17</th><td>-1.695934</td><td>0.1695775</td><td>-2.690773</td></tr>
      <tr><th>18</th><td>0.3339951</td><td>2.925615</td><td>1.781902</td></tr>
      <tr><th>19</th><td>1.323987</td><td>-1.242768</td><td>-0.5650129</td></tr>
      <tr><th>20</th><td>2.169214</td><td>-0.3389871</td><td>1.108806</td></tr>
      <tr><th>21</th><td>-0.09895058</td><td>0.6054577</td><td>-0.8200453</td></tr>
      <tr><th>22</th><td>0.04537143</td><td>-0.1657406</td><td>1.503746</td></tr>
      <tr><th>23</th><td>-2.218504</td><td>-0.7402032</td><td>-2.777289</td></tr>
      <tr><th>24</th><td>-1.420621</td><td>0.1021144</td><td>-2.346816</td></tr>
      <tr><th>25</th><td>1.091066</td><td>-2.73103</td><td>-0.6489443</td></tr>
      <tr><th>26</th><td>0.1647503</td><td>0.5805209</td><td>-0.9847159</td></tr>
      <tr><th>27</th><td>-0.898393</td><td>-0.09174799</td><td>-0.4327692</td></tr>
      <tr><th>28</th><td>0.9586701</td><td>-1.035211</td><td>-0.9405519</td></tr>
      <tr><th>29</th><td>-0.8417292</td><td>0.2407616</td><td>-0.8893775</td></tr>
      <tr><th>30</th><td>0.7245241</td><td>-0.1066684</td><td>-0.9624088</td></tr>
      <tr><th>31</th><td>0.4767245</td><td>-0.8671472</td><td>-0.8976192</td></tr>
      <tr><th>32</th><td>0.09293592</td><td>0.6704327</td><td>-0.06258436</td></tr>
      <tr><th>33</th><td>-0.3248601</td><td>0.9449204</td><td>-0.2243367</td></tr>
      <tr><th>34</th><td>-0.6724153</td><td>-0.1457524</td><td>1.263574</td></tr>
      <tr><th>35</th><td>2.334766</td><td>0.5088449</td><td>-2.346774</td></tr>
      <tr><th>36</th><td>-1.216716</td><td>-0.7807184</td><td>0.7724993</td></tr>
      <tr><th>37</th><td>-0.6785865</td><td>0.1704921</td><td>-1.32215</td></tr>
      <tr><th>38</th><td>-1.334942</td><td>-1.04584</td><td>-0.930733</td></tr>
      <tr><th>39</th><td>-0.01953307</td><td>-0.2577126</td><td>0.03304787</td></tr>
      <tr><th>40</th><td>0.7323265</td><td>-0.4246345</td><td>1.857028</td></tr>
      <tr><th>41</th><td>-1.090895</td><td>1.365533</td><td>1.594324</td></tr>
      <tr><th>42</th><td>-1.213904</td><td>-1.209463</td><td>1.1045</td></tr>
      <tr><th>43</th><td>-0.127761</td><td>0.5092133</td><td>-1.442804</td></tr>
      <tr><th>44</th><td>-0.09715761</td><td>0.1220455</td><td>1.168761</td></tr>
      <tr><th>45</th><td>0.7132382</td><td>1.022989</td><td>1.215278</td></tr>
      <tr><th>46</th><td>1.462279</td><td>0.3644061</td><td>-1.304497</td></tr>
      <tr><th>47</th><td>-0.4444057</td><td>-0.7598916</td><td>-0.38515</td></tr>
      <tr><th>48</th><td>0.6079855</td><td>0.2641844</td><td>0.9571964</td></tr>
      <tr><th>49</th><td>0.6395806</td><td>-1.383302</td><td>-0.7374195</td></tr>
      <tr><th>50</th><td>0.5344467</td><td>0.04021339</td><td>-0.620431</td></tr>
      <tr><th>51</th><td>-0.05974213</td><td>-0.527099</td><td>-0.4520034</td></tr>
      <tr><th>52</th><td>0.2301836</td><td>0.2212089</td><td>-0.5030543</td></tr>
      <tr><th>53</th><td>0.180323</td><td>-2.190135</td><td>1.535149</td></tr>
      <tr><th>54</th><td>0.9095906</td><td>-0.3505591</td><td>-2.185258</td></tr>
      <tr><th>55</th><td>-0.4997804</td><td>1.17705</td><td>-0.2126679</td></tr>
      <tr><th>56</th><td>-1.115772</td><td>-2.14423</td><td>-1.26041</td></tr>
      <tr><th>57</th><td>-0.2822798</td><td>0.6692295</td><td>-0.673631</td></tr>
      <tr><th>58</th><td>-0.850404</td><td>2.655649</td><td>-1.129742</td></tr>
      <tr><th>59</th><td>1.629751</td><td>-0.3731164</td><td>-0.4780295</td></tr>
      <tr><th>60</th><td>-1.823453</td><td>0.2290251</td><td>-1.133652</td></tr>
      <tr><th>61</th><td>-0.8689394</td><td>-0.9841131</td><td>-0.01413991</td></tr>
      <tr><th>62</th><td>-0.3130259</td><td>0.03607648</td><td>0.7263856</td></tr>
      <tr><th>63</th><td>-1.080252</td><td>-1.08525</td><td>0.5061967</td></tr>
      <tr><th>64</th><td>-0.3103645</td><td>0.00599892</td><td>-1.056762</td></tr>
      <tr><th>65</th><td>-0.9522829</td><td>-0.6225383</td><td>0.3436444</td></tr>
      <tr><th>66</th><td>-1.492139</td><td>-0.4839427</td><td>-0.2256544</td></tr>
      <tr><th>67</th><td>0.4971553</td><td>-0.1224642</td><td>0.9279674</td></tr>
      <tr><th>68</th><td>2.987191</td><td>-1.211272</td><td>0.6497292</td></tr>
      <tr><th>69</th><td>1.757657</td><td>-0.4301682</td><td>-2.144477</td></tr>
      <tr><th>70</th><td>-0.04453961</td><td>-0.1264882</td><td>1.176277</td></tr>
      <tr><th>71</th><td>0.378299</td><td>-1.270945</td><td>0.5417862</td></tr>
      <tr><th>72</th><td>0.413785</td><td>0.006782108</td><td>-0.07515409</td></tr>
      <tr><th>73</th><td>0.5598494</td><td>1.457721</td><td>0.02084248</td></tr>
      <tr><th>74</th><td>-1.288275</td><td>-0.5769202</td><td>0.3916931</td></tr>
      <tr><th>75</th><td>-0.720206</td><td>0.6360013</td><td>-0.06616259</td></tr>
      <tr><th>76</th><td>1.332106</td><td>-1.431425</td><td>-1.008645</td></tr>
      <tr><th>77</th><td>0.7213714</td><td>1.126331</td><td>-1.021443</td></tr>
      <tr><th>78</th><td>-0.3180361</td><td>0.1213078</td><td>1.748989</td></tr>
      <tr><th>79</th><td>1.664255</td><td>0.2392422</td><td>0.525841</td></tr>
      <tr><th>80</th><td>0.07141804</td><td>-0.870312</td><td>-0.9952027</td></tr>
      <tr><th>81</th><td>0.08584105</td><td>-0.5217215</td><td>-0.7532575</td></tr>
      <tr><th>82</th><td>-1.133473</td><td>-0.2086514</td><td>-1.41424</td></tr>
      <tr><th>83</th><td>0.7722281</td><td>0.211249</td><td>-0.4171038</td></tr>
      <tr><th>84</th><td>-0.2178643</td><td>1.339669</td><td>-1.350014</td></tr>
      <tr><th>85</th><td>0.6049867</td><td>-2.431997</td><td>-0.0846144</td></tr>
      <tr><th>86</th><td>-0.8582108</td><td>-0.8310902</td><td>1.088799</td></tr>
      <tr><th>87</th><td>-0.4643638</td><td>0.6708466</td><td>0.268381</td></tr>
      <tr><th>88</th><td>1.070658</td><td>1.14788</td><td>-0.5655462</td></tr>
      <tr><th>89</th><td>1.556247</td><td>-0.9483393</td><td>-0.02968818</td></tr>
      <tr><th>90</th><td>-1.188793</td><td>-0.4030706</td><td>-0.5995747</td></tr>
      <tr><th>91</th><td>0.3148296</td><td>-0.1001971</td><td>0.4895596</td></tr>
      <tr><th>92</th><td>1.697166</td><td>-0.6215991</td><td>0.7203073</td></tr>
      <tr><th>93</th><td>-0.620772</td><td>0.10016</td><td>0.345146</td></tr>
      <tr><th>94</th><td>-1.194759</td><td>0.5198505</td><td>0.5420135</td></tr>
      <tr><th>95</th><td>-0.6021667</td><td>-0.8472532</td><td>-0.3445882</td></tr>
      <tr><th>96</th><td>-0.865759</td><td>0.8423085</td><td>-0.7312709</td></tr>
      <tr><th>97</th><td>-1.070132</td><td>-0.8446476</td><td>-0.8613511</td></tr>
      <tr><th>98</th><td>0.1052342</td><td>-1.631218</td><td>2.52518</td></tr>
      <tr><th>99</th><td>0.379314</td><td>-0.4111865</td><td>-0.2074319</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[-0.0407312,-0.149781,-0.0893729]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`
