
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[0.966075,-0.175686,-1.4934],[-1.05633,-0.466626,-0.737128],[0.449453,0.797244,-0.155304],[-1.16516,-1.36842,-0.488591],[-0.689034,0.000120018,-0.810945],[0.150981,0.0314872,0.377069],[1.37215,-1.59854,-0.62137],[-2.0545,-0.679427,-0.902204],[1.30802,1.30693,0.285034],[0.311596,-1.07763,-0.554838],[1.18393,0.559656,0.230043],[-0.183548,-1.24823,-0.657538],[-0.16557,2.04466,2.4103],[-0.254311,0.452125,1.45015],[-2.09182,0.728031,-0.646305],[-0.582351,1.32463,0.752853],[-0.0106665,-1.27263,-0.0231187],[-0.699306,2.03918,-1.43869],[-1.45178,-1.52337,-0.65248],[-0.964162,-1.27,0.487216],[-0.640895,-0.501942,0.110772],[-0.532138,-0.804085,-1.93032],[0.26429,-0.947767,1.64797],[0.667211,-0.475878,-1.70048],[-1.19467,-0.316868,0.520234],[1.06644,1.80254,-0.278758],[1.85951,-0.355281,-0.406892],[-0.885576,0.186172,-0.774425],[0.946157,-0.453685,-0.316072],[0.110518,-1.1047,1.20069],[-1.64219,-0.647404,-0.218648],[-1.09879,-0.158586,-0.0790151],[-1.97913,-0.6956,0.275293],[0.706511,1.21269,0.522666],[-1.60314,0.736455,-0.369761],[0.930087,-1.48864,0.133651],[0.587575,-0.446198,0.300074],[0.608941,0.161333,0.0762171],[-0.781601,-0.214998,-0.0517975],[-0.0952562,0.466007,0.0502429],[1.0723,0.76499,-0.33683],[0.136359,-0.560849,2.64516],[0.751,0.986381,0.676705],[-0.365832,-0.193536,1.29865],[1.2055,0.506393,-1.18397],[1.51716,-0.278971,1.68729],[-0.112232,-0.921031,-1.30027],[-0.433389,0.611519,-0.23726],[-0.0495303,0.556285,0.372852],[-0.791964,-0.546273,-0.449531],[0.142427,-1.78746,-2.14231],[-1.34532,1.13346,-0.56987],[-1.15302,-1.04052,0.127375],[-0.617908,-0.123962,1.71216],[0.239915,-1.31835,-0.507648],[0.674171,0.846522,1.90329],[-0.397944,0.880799,-0.326006],[-0.447584,-0.411417,0.527631],[-0.134165,-0.140237,0.977335],[0.315613,-0.0297598,0.587989],[-0.123606,0.241965,-0.448532],[-0.873267,-0.448822,-0.488192],[-0.23601,-1.11131,1.30297],[-1.13679,1.31258,-0.127872],[0.365295,-1.27451,0.216304],[-1.35341,0.644508,-1.01125],[-0.299256,0.384774,-0.395113],[-0.203219,0.0781238,-1.00988],[1.00636,-1.02331,-0.33385],[0.152111,-0.213272,1.05859],[-2.17519,-0.0680101,-0.24553],[0.476337,0.0463627,0.0749092],[-1.43233,0.0474396,-0.0463907],[-0.884409,0.778459,-0.247649],[-0.717305,-0.544745,0.170911],[-0.839129,-0.903924,-1.63615],[-0.315298,-1.19078,-1.01502],[0.736007,-0.76826,-0.765424],[-0.00138917,-0.869161,-1.3288],[-2.167,1.92521,0.125453],[0.787913,-0.418785,0.827949],[0.341221,0.526765,-1.63179],[-0.013852,-0.452788,0.457541],[-0.495508,-0.419579,2.09714],[0.228778,1.10528,-0.322766],[0.277603,0.31425,-0.408263],[0.044561,-0.667258,1.18788],[-1.31217,1.39421,1.03645],[0.800574,-0.162131,-0.460646],[0.728334,-0.662808,1.67751],[-0.59829,-0.770997,-0.708635],[0.414455,-0.819676,1.35659],[0.967201,-0.0265877,0.273858],[0.627336,-1.0828,-0.17961],[1.65812,0.0717319,-0.593509],[-0.540504,-0.331126,0.143957],[-1.14923,-0.38847,0.976334],[-1.36596,0.633759,0.594278],[0.845728,-0.428138,-0.00147831],[2.55242,-1.45981,-1.15959]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>0.5483168</td><td>0.9506814</td><td>-0.3253036</td></tr>
      <tr><th>1</th><td>0.1</td><td>0.8665933</td><td>0.2259392</td><td>-1.270215</td></tr>
      <tr><th>2</th><td>0.2</td><td>1.130566</td><td>-0.2951395</td><td>-0.5119845</td></tr>
      <tr><th>3</th><td>0.3</td><td>-1.933539</td><td>-0.942413</td><td>0.6909434</td></tr>
      <tr><th>4</th><td>0.4</td><td>1.209672</td><td>0.3290906</td><td>-1.814413</td></tr>
      <tr><th>5</th><td>0.5</td><td>-0.5100929</td><td>-1.166841</td><td>-0.2907335</td></tr>
      <tr><th>6</th><td>0.6</td><td>0.217614</td><td>0.515275</td><td>0.4601432</td></tr>
      <tr><th>7</th><td>0.7</td><td>-0.3637751</td><td>0.3628824</td><td>-0.1844803</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.2342779</td><td>-0.3426584</td><td>-0.3478832</td></tr>
      <tr><th>9</th><td>0.9</td><td>-1.478169</td><td>1.669502</td><td>-0.7683878</td></tr>
      <tr><th>10</th><td>1</td><td>-1.023174</td><td>0.6866711</td><td>-0.3307243</td></tr>
      <tr><th>11</th><td>1.1</td><td>1.240397</td><td>1.649568</td><td>-0.3686033</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.4946003</td><td>0.08999847</td><td>-0.1145082</td></tr>
      <tr><th>13</th><td>1.3</td><td>-1.137577</td><td>-0.7010004</td><td>0.5786068</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.4341384</td><td>0.7651923</td><td>-0.05044864</td></tr>
      <tr><th>15</th><td>1.5</td><td>-0.2028432</td><td>0.4678909</td><td>0.2567024</td></tr>
      <tr><th>16</th><td>1.6</td><td>0.2317306</td><td>-0.9054177</td><td>0.5726116</td></tr>
      <tr><th>17</th><td>1.7</td><td>0.05759438</td><td>-0.5857445</td><td>-0.6024424</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.7550486</td><td>0.1557596</td><td>0.2925546</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.3222438</td><td>-1.312099</td><td>-0.4327952</td></tr>
      <tr><th>20</th><td>2</td><td>-0.6059861</td><td>0.03553362</td><td>-0.7529079</td></tr>
      <tr><th>21</th><td>2.1</td><td>-2.256563</td><td>-0.85791</td><td>1.020799</td></tr>
      <tr><th>22</th><td>2.2</td><td>0.3520748</td><td>0.1950003</td><td>-0.5838167</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.5972268</td><td>0.3563096</td><td>-1.344452</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.9153328</td><td>2.282171</td><td>0.1279461</td></tr>
      <tr><th>25</th><td>2.5</td><td>-0.2148221</td><td>-0.3876755</td><td>-0.2604078</td></tr>
      <tr><th>26</th><td>2.6</td><td>-0.759821</td><td>-0.8507447</td><td>0.8263729</td></tr>
      <tr><th>27</th><td>2.7</td><td>0.5797059</td><td>-0.5070997</td><td>1.565452</td></tr>
      <tr><th>28</th><td>2.8</td><td>-1.052771</td><td>0.7773691</td><td>-1.557959</td></tr>
      <tr><th>29</th><td>2.9</td><td>-0.9100949</td><td>0.215039</td><td>2.482765</td></tr>
      <tr><th>30</th><td>3</td><td>-0.5305866</td><td>0.5914132</td><td>0.6365713</td></tr>
      <tr><th>31</th><td>3.1</td><td>-0.6157303</td><td>1.101101</td><td>-1.388331</td></tr>
      <tr><th>32</th><td>3.2</td><td>-1.805086</td><td>0.7767863</td><td>0.8679652</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.8518076</td><td>-0.4032358</td><td>-0.3634698</td></tr>
      <tr><th>34</th><td>3.4</td><td>-0.2493091</td><td>0.2815651</td><td>-0.9164717</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.0595968</td><td>-0.8393768</td><td>1.630475</td></tr>
      <tr><th>36</th><td>3.6</td><td>0.6136018</td><td>-0.2139182</td><td>0.1916133</td></tr>
      <tr><th>37</th><td>3.7</td><td>1.214758</td><td>-1.025816</td><td>-0.7822182</td></tr>
      <tr><th>38</th><td>3.8</td><td>-1.209413</td><td>1.65486</td><td>-0.1758367</td></tr>
      <tr><th>39</th><td>3.9</td><td>-0.04107106</td><td>-1.293497</td><td>-0.2135694</td></tr>
      <tr><th>40</th><td>4</td><td>-1.062006</td><td>0.3788944</td><td>0.1320225</td></tr>
      <tr><th>41</th><td>4.1</td><td>-1.240103</td><td>1.032251</td><td>-1.334886</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.466199</td><td>0.9245178</td><td>0.8622705</td></tr>
      <tr><th>43</th><td>4.3</td><td>2.741477</td><td>-1.908022</td><td>-0.5524035</td></tr>
      <tr><th>44</th><td>4.4</td><td>-1.865171</td><td>-1.100504</td><td>0.1737267</td></tr>
      <tr><th>45</th><td>4.5</td><td>-1.311208</td><td>-0.579777</td><td>1.347316</td></tr>
      <tr><th>46</th><td>4.6</td><td>0.7853631</td><td>-0.4624194</td><td>-1.793537</td></tr>
      <tr><th>47</th><td>4.7</td><td>-1.326704</td><td>-0.9989482</td><td>-1.30253</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.2382259</td><td>-2.642851</td><td>-0.01933239</td></tr>
      <tr><th>49</th><td>4.9</td><td>1.415598</td><td>1.116889</td><td>1.87298</td></tr>
      <tr><th>50</th><td>5</td><td>0.1088388</td><td>0.7060925</td><td>-0.667537</td></tr>
      <tr><th>51</th><td>5.1</td><td>-0.6890461</td><td>-1.598998</td><td>0.9812514</td></tr>
      <tr><th>52</th><td>5.2</td><td>-0.1147378</td><td>-0.212116</td><td>-0.9882972</td></tr>
      <tr><th>53</th><td>5.3</td><td>1.666218</td><td>-1.341669</td><td>0.8594067</td></tr>
      <tr><th>54</th><td>5.4</td><td>0.6164522</td><td>0.7375227</td><td>0.7553055</td></tr>
      <tr><th>55</th><td>5.5</td><td>-0.5642598</td><td>-1.256486</td><td>0.9333483</td></tr>
      <tr><th>56</th><td>5.6</td><td>1.332151</td><td>-0.08266607</td><td>0.2330681</td></tr>
      <tr><th>57</th><td>5.7</td><td>-1.269484</td><td>-0.2898269</td><td>0.2438281</td></tr>
      <tr><th>58</th><td>5.8</td><td>-0.3847584</td><td>0.4484342</td><td>-0.6099688</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.7084072</td><td>-0.491809</td><td>-1.290011</td></tr>
      <tr><th>60</th><td>6</td><td>-0.07451337</td><td>1.053135</td><td>-0.05651026</td></tr>
      <tr><th>61</th><td>6.1</td><td>0.5096812</td><td>-0.443672</td><td>-1.101022</td></tr>
      <tr><th>62</th><td>6.2</td><td>0.7888908</td><td>1.050351</td><td>1.290053</td></tr>
      <tr><th>63</th><td>6.3</td><td>0.5590615</td><td>-1.711678</td><td>-0.3937605</td></tr>
      <tr><th>64</th><td>6.4</td><td>0.2465338</td><td>0.9396946</td><td>1.931583</td></tr>
      <tr><th>65</th><td>6.5</td><td>1.712601</td><td>-0.3382995</td><td>0.2978116</td></tr>
      <tr><th>66</th><td>6.6</td><td>-0.09938849</td><td>0.7429942</td><td>1.25201</td></tr>
      <tr><th>67</th><td>6.7</td><td>-1.449998</td><td>-0.09685778</td><td>0.04241547</td></tr>
      <tr><th>68</th><td>6.8</td><td>0.1431086</td><td>-0.06105303</td><td>0.7163993</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.576003</td><td>0.5207931</td><td>-1.456672</td></tr>
      <tr><th>70</th><td>7</td><td>0.283443</td><td>0.212322</td><td>0.7661192</td></tr>
      <tr><th>71</th><td>7.1</td><td>1.562399</td><td>1.220261</td><td>0.3302751</td></tr>
      <tr><th>72</th><td>7.2</td><td>1.34204</td><td>0.8522296</td><td>2.021174</td></tr>
      <tr><th>73</th><td>7.3</td><td>0.5698719</td><td>-1.053149</td><td>0.9057278</td></tr>
      <tr><th>74</th><td>7.4</td><td>-1.402318</td><td>-0.6923101</td><td>-0.3419224</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.3663647</td><td>-1.134591</td><td>1.274438</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.17469</td><td>0.5527949</td><td>-1.710988</td></tr>
      <tr><th>77</th><td>7.7</td><td>-0.3988541</td><td>0.7387348</td><td>2.170068</td></tr>
      <tr><th>78</th><td>7.8</td><td>0.3017411</td><td>-0.5072604</td><td>-1.253597</td></tr>
      <tr><th>79</th><td>7.9</td><td>-1.178709</td><td>1.432122</td><td>0.01114509</td></tr>
      <tr><th>80</th><td>8</td><td>1.126008</td><td>0.04634777</td><td>0.3142113</td></tr>
      <tr><th>81</th><td>8.1</td><td>-0.1121167</td><td>1.179616</td><td>-0.1735174</td></tr>
      <tr><th>82</th><td>8.2</td><td>0.1407131</td><td>-1.473645</td><td>-0.1460205</td></tr>
      <tr><th>83</th><td>8.3</td><td>0.6640014</td><td>0.02478255</td><td>0.9101065</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.8403606</td><td>0.8198854</td><td>-1.057158</td></tr>
      <tr><th>85</th><td>8.5</td><td>-1.734545</td><td>-0.8592394</td><td>1.875382</td></tr>
      <tr><th>86</th><td>8.6</td><td>0.05250847</td><td>-1.491878</td><td>0.9489209</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.4547122</td><td>0.9861237</td><td>-0.2048</td></tr>
      <tr><th>88</th><td>8.8</td><td>-0.02890473</td><td>-0.4636572</td><td>-1.704662</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.5974623</td><td>-0.1839597</td><td>0.6208909</td></tr>
      <tr><th>90</th><td>9</td><td>-0.8172414</td><td>-0.9551088</td><td>0.7745821</td></tr>
      <tr><th>91</th><td>9.1</td><td>0.2890706</td><td>0.9215247</td><td>-0.3800723</td></tr>
      <tr><th>92</th><td>9.2</td><td>-0.9981101</td><td>1.065334</td><td>1.379305</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.5542963</td><td>0.2650959</td><td>0.09439113</td></tr>
      <tr><th>94</th><td>9.4</td><td>-0.2486977</td><td>-0.1511792</td><td>-1.002135</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.8976918</td><td>1.109288</td><td>-1.493476</td></tr>
      <tr><th>96</th><td>9.6</td><td>-1.233252</td><td>0.9685065</td><td>1.159425</td></tr>
      <tr><th>97</th><td>9.7</td><td>1.56789</td><td>-0.5652529</td><td>-0.3199642</td></tr>
      <tr><th>98</th><td>9.8</td><td>-0.8728978</td><td>-2.703259</td><td>0.5802187</td></tr>
      <tr><th>99</th><td>9.9</td><td>1.047585</td><td>1.78212</td><td>0.2911724</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.608941,0.161333,0.0762171]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.608941,0.161333,0.0762171]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  0.6089413094791001




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0.9660746</td><td>-0.1756857</td><td>-1.493404</td></tr>
      <tr><th>1</th><td>-1.05633</td><td>-0.4666261</td><td>-0.7371283</td></tr>
      <tr><th>2</th><td>0.4494531</td><td>0.7972442</td><td>-0.1553045</td></tr>
      <tr><th>3</th><td>-1.165156</td><td>-1.368424</td><td>-0.4885906</td></tr>
      <tr><th>4</th><td>-0.6890341</td><td>0.0001200179</td><td>-0.8109448</td></tr>
      <tr><th>5</th><td>0.1509806</td><td>0.03148722</td><td>0.3770687</td></tr>
      <tr><th>6</th><td>1.372149</td><td>-1.598535</td><td>-0.6213698</td></tr>
      <tr><th>7</th><td>-2.054499</td><td>-0.6794271</td><td>-0.9022044</td></tr>
      <tr><th>8</th><td>1.308015</td><td>1.306934</td><td>0.2850344</td></tr>
      <tr><th>9</th><td>0.3115964</td><td>-1.077632</td><td>-0.5548377</td></tr>
      <tr><th>10</th><td>1.183931</td><td>0.5596565</td><td>0.2300427</td></tr>
      <tr><th>11</th><td>-0.1835483</td><td>-1.24823</td><td>-0.6575378</td></tr>
      <tr><th>12</th><td>-0.1655696</td><td>2.044658</td><td>2.410304</td></tr>
      <tr><th>13</th><td>-0.2543111</td><td>0.452125</td><td>1.450151</td></tr>
      <tr><th>14</th><td>-2.09182</td><td>0.7280308</td><td>-0.646305</td></tr>
      <tr><th>15</th><td>-0.582351</td><td>1.324634</td><td>0.7528534</td></tr>
      <tr><th>16</th><td>-0.01066647</td><td>-1.27263</td><td>-0.02311871</td></tr>
      <tr><th>17</th><td>-0.6993056</td><td>2.03918</td><td>-1.438691</td></tr>
      <tr><th>18</th><td>-1.451775</td><td>-1.523371</td><td>-0.6524805</td></tr>
      <tr><th>19</th><td>-0.9641621</td><td>-1.270004</td><td>0.4872155</td></tr>
      <tr><th>20</th><td>-0.6408954</td><td>-0.5019423</td><td>0.1107716</td></tr>
      <tr><th>21</th><td>-0.5321381</td><td>-0.8040849</td><td>-1.930325</td></tr>
      <tr><th>22</th><td>0.2642902</td><td>-0.947767</td><td>1.64797</td></tr>
      <tr><th>23</th><td>0.6672112</td><td>-0.4758777</td><td>-1.700479</td></tr>
      <tr><th>24</th><td>-1.194667</td><td>-0.3168681</td><td>0.5202344</td></tr>
      <tr><th>25</th><td>1.066445</td><td>1.802543</td><td>-0.2787583</td></tr>
      <tr><th>26</th><td>1.859507</td><td>-0.3552806</td><td>-0.4068917</td></tr>
      <tr><th>27</th><td>-0.8855758</td><td>0.1861722</td><td>-0.7744249</td></tr>
      <tr><th>28</th><td>0.9461567</td><td>-0.4536851</td><td>-0.3160719</td></tr>
      <tr><th>29</th><td>0.1105178</td><td>-1.104698</td><td>1.200687</td></tr>
      <tr><th>30</th><td>-1.642188</td><td>-0.647404</td><td>-0.2186479</td></tr>
      <tr><th>31</th><td>-1.098787</td><td>-0.1585861</td><td>-0.0790151</td></tr>
      <tr><th>32</th><td>-1.979133</td><td>-0.6956003</td><td>0.2752926</td></tr>
      <tr><th>33</th><td>0.7065113</td><td>1.212693</td><td>0.5226665</td></tr>
      <tr><th>34</th><td>-1.603139</td><td>0.7364547</td><td>-0.369761</td></tr>
      <tr><th>35</th><td>0.9300869</td><td>-1.488642</td><td>0.1336511</td></tr>
      <tr><th>36</th><td>0.5875747</td><td>-0.446198</td><td>0.3000742</td></tr>
      <tr><th>37</th><td>0.6089413</td><td>0.1613333</td><td>0.07621709</td></tr>
      <tr><th>38</th><td>-0.7816014</td><td>-0.2149977</td><td>-0.05179745</td></tr>
      <tr><th>39</th><td>-0.09525622</td><td>0.4660068</td><td>0.05024291</td></tr>
      <tr><th>40</th><td>1.072298</td><td>0.7649896</td><td>-0.3368299</td></tr>
      <tr><th>41</th><td>0.1363592</td><td>-0.5608488</td><td>2.645159</td></tr>
      <tr><th>42</th><td>0.7509999</td><td>0.9863813</td><td>0.6767052</td></tr>
      <tr><th>43</th><td>-0.3658325</td><td>-0.1935364</td><td>1.298653</td></tr>
      <tr><th>44</th><td>1.2055</td><td>0.5063934</td><td>-1.183971</td></tr>
      <tr><th>45</th><td>1.517159</td><td>-0.2789715</td><td>1.687286</td></tr>
      <tr><th>46</th><td>-0.1122317</td><td>-0.9210307</td><td>-1.30027</td></tr>
      <tr><th>47</th><td>-0.4333892</td><td>0.6115192</td><td>-0.2372601</td></tr>
      <tr><th>48</th><td>-0.04953031</td><td>0.5562845</td><td>0.3728515</td></tr>
      <tr><th>49</th><td>-0.7919642</td><td>-0.5462729</td><td>-0.4495314</td></tr>
      <tr><th>50</th><td>0.1424266</td><td>-1.787463</td><td>-2.142309</td></tr>
      <tr><th>51</th><td>-1.345315</td><td>1.133459</td><td>-0.5698699</td></tr>
      <tr><th>52</th><td>-1.15302</td><td>-1.040523</td><td>0.1273755</td></tr>
      <tr><th>53</th><td>-0.6179084</td><td>-0.1239621</td><td>1.712156</td></tr>
      <tr><th>54</th><td>0.2399149</td><td>-1.318354</td><td>-0.5076481</td></tr>
      <tr><th>55</th><td>0.6741711</td><td>0.8465225</td><td>1.903293</td></tr>
      <tr><th>56</th><td>-0.3979439</td><td>0.8807986</td><td>-0.3260058</td></tr>
      <tr><th>57</th><td>-0.4475837</td><td>-0.4114168</td><td>0.5276306</td></tr>
      <tr><th>58</th><td>-0.134165</td><td>-0.1402372</td><td>0.9773347</td></tr>
      <tr><th>59</th><td>0.3156125</td><td>-0.0297598</td><td>0.5879893</td></tr>
      <tr><th>60</th><td>-0.1236064</td><td>0.2419654</td><td>-0.448532</td></tr>
      <tr><th>61</th><td>-0.8732666</td><td>-0.4488219</td><td>-0.4881922</td></tr>
      <tr><th>62</th><td>-0.2360105</td><td>-1.111307</td><td>1.30297</td></tr>
      <tr><th>63</th><td>-1.136793</td><td>1.312581</td><td>-0.1278715</td></tr>
      <tr><th>64</th><td>0.3652955</td><td>-1.274515</td><td>0.2163037</td></tr>
      <tr><th>65</th><td>-1.353411</td><td>0.6445081</td><td>-1.011245</td></tr>
      <tr><th>66</th><td>-0.2992561</td><td>0.3847735</td><td>-0.3951133</td></tr>
      <tr><th>67</th><td>-0.2032188</td><td>0.07812379</td><td>-1.009877</td></tr>
      <tr><th>68</th><td>1.006356</td><td>-1.023309</td><td>-0.3338505</td></tr>
      <tr><th>69</th><td>0.1521111</td><td>-0.2132725</td><td>1.058586</td></tr>
      <tr><th>70</th><td>-2.175189</td><td>-0.06801013</td><td>-0.2455302</td></tr>
      <tr><th>71</th><td>0.4763369</td><td>0.0463627</td><td>0.07490919</td></tr>
      <tr><th>72</th><td>-1.432333</td><td>0.04743962</td><td>-0.04639074</td></tr>
      <tr><th>73</th><td>-0.8844089</td><td>0.7784589</td><td>-0.2476494</td></tr>
      <tr><th>74</th><td>-0.7173052</td><td>-0.5447453</td><td>0.1709113</td></tr>
      <tr><th>75</th><td>-0.8391288</td><td>-0.9039238</td><td>-1.636148</td></tr>
      <tr><th>76</th><td>-0.3152979</td><td>-1.190777</td><td>-1.015025</td></tr>
      <tr><th>77</th><td>0.7360074</td><td>-0.7682604</td><td>-0.7654242</td></tr>
      <tr><th>78</th><td>-0.001389172</td><td>-0.8691606</td><td>-1.328795</td></tr>
      <tr><th>79</th><td>-2.166999</td><td>1.925211</td><td>0.1254534</td></tr>
      <tr><th>80</th><td>0.7879129</td><td>-0.4187847</td><td>0.8279489</td></tr>
      <tr><th>81</th><td>0.3412213</td><td>0.5267648</td><td>-1.631787</td></tr>
      <tr><th>82</th><td>-0.01385199</td><td>-0.4527878</td><td>0.4575406</td></tr>
      <tr><th>83</th><td>-0.4955079</td><td>-0.4195789</td><td>2.097141</td></tr>
      <tr><th>84</th><td>0.2287778</td><td>1.105279</td><td>-0.3227663</td></tr>
      <tr><th>85</th><td>0.2776026</td><td>0.31425</td><td>-0.4082627</td></tr>
      <tr><th>86</th><td>0.04456104</td><td>-0.6672576</td><td>1.187875</td></tr>
      <tr><th>87</th><td>-1.31217</td><td>1.394208</td><td>1.036452</td></tr>
      <tr><th>88</th><td>0.8005745</td><td>-0.1621308</td><td>-0.4606464</td></tr>
      <tr><th>89</th><td>0.7283341</td><td>-0.6628085</td><td>1.67751</td></tr>
      <tr><th>90</th><td>-0.59829</td><td>-0.7709965</td><td>-0.7086349</td></tr>
      <tr><th>91</th><td>0.4144554</td><td>-0.8196756</td><td>1.356592</td></tr>
      <tr><th>92</th><td>0.9672014</td><td>-0.02658773</td><td>0.2738579</td></tr>
      <tr><th>93</th><td>0.6273357</td><td>-1.082803</td><td>-0.1796101</td></tr>
      <tr><th>94</th><td>1.658119</td><td>0.07173193</td><td>-0.593509</td></tr>
      <tr><th>95</th><td>-0.5405037</td><td>-0.3311255</td><td>0.1439566</td></tr>
      <tr><th>96</th><td>-1.149235</td><td>-0.3884699</td><td>0.976334</td></tr>
      <tr><th>97</th><td>-1.365956</td><td>0.6337592</td><td>0.5942781</td></tr>
      <tr><th>98</th><td>0.8457285</td><td>-0.4281378</td><td>-0.001478307</td></tr>
      <tr><th>99</th><td>2.552423</td><td>-1.459813</td><td>-1.159589</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[-0.101744,-0.0854737,0.00891795]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
