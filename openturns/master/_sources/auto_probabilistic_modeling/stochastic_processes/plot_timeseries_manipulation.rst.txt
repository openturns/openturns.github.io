
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[0.0698682,0.0475825,1.21932],[-1.8055,-0.792201,0.656306],[-1.38157,0.144213,2.00886],[-0.999093,0.569877,0.436318],[-1.91341,-0.779951,-1.62317],[-1.19348,1.2531,-0.782909],[-1.45905,-1.6201,0.768127],[-1.55804,0.997767,-1.63963],[-0.467775,0.753965,-0.081722],[-1.09895,0.755012,-0.496507],[0.675778,0.088244,-0.989054],[0.833923,0.139417,-1.9788],[-2.00081,-0.577693,0.538948],[-0.597617,-1.16697,0.143372],[-2.35373,-0.402331,-0.546262],[1.03159,0.986547,0.319162],[1.86394,2.1247,0.955382],[0.544017,0.923809,1.89273],[-0.247029,1.25634,0.969197],[0.939155,0.854623,0.454872],[1.2019,-0.133983,-0.0862664],[0.640456,0.754748,-0.879104],[0.849593,-1.15509,-0.881983],[-0.487148,0.629592,-0.815945],[-0.32018,-0.297109,0.344795],[-0.249759,-1.58021,-0.683981],[0.813039,1.07515,-0.907169],[0.997758,-0.16828,0.724476],[0.00946154,-1.99136,1.21986],[1.62892,-0.70475,-0.662289],[-0.739388,-0.450482,-1.43102],[0.635121,-1.75565,-0.535727],[-0.165159,1.2577,0.111638],[0.441436,-0.392827,-0.171927],[-0.33053,0.489004,2.57647],[0.294864,0.550336,0.534914],[-1.33405,-1.3649,-1.45286],[0.311356,-0.2726,-2.13307],[0.0374845,0.127195,-1.34462],[-0.0856181,1.27064,-0.795144],[-1.66043,-0.437389,-1.1203],[0.358886,1.8158,0.0017175],[0.92472,0.19754,0.501503],[-1.33911,-0.132595,-2.57545],[-0.872176,-1.00265,-1.60641],[-0.642905,-0.810354,0.30402],[0.496646,0.696505,0.61966],[1.23167,-0.87487,-1.23469],[-0.151628,-1.99692,0.764638],[-0.152291,-2.2098,-1.50629],[0.00234249,-0.0936058,0.548978],[1.09867,-0.400542,0.682331],[-0.711512,-0.140283,0.880217],[-0.905998,-0.735596,-0.0493934],[-1.44488,0.21392,-1.50348],[-0.129868,1.28659,0.115708],[-1.29813,-0.0604211,0.0622763],[-0.516641,2.55435,1.6444],[0.273529,-0.164768,-0.978912],[0.993318,1.35006,0.46406],[-0.467536,-0.728841,0.485962],[0.254166,0.820872,-0.0363044],[-1.99538,1.92379,0.249427],[0.506967,1.30903,0.336008],[-0.129093,0.172339,-0.31016],[1.1029,-0.222039,-1.46894],[-1.86237,-0.324477,0.923524],[-0.282013,0.00628971,1.36708],[0.638503,0.0157646,-0.579809],[-1.87957,0.138687,-1.7243],[1.00718,-0.0409869,-1.06717],[-0.524832,-0.212099,0.468946],[1.57742,1.40407,-0.190068],[0.392714,0.443197,-0.162975],[1.41466,1.04102,0.762352],[0.810561,-0.0352033,-1.60252],[0.62575,0.356107,-1.42526],[-0.00875051,-0.199733,-1.75644],[0.523153,-1.81099,0.605576],[0.759269,1.19803,1.67388],[2.14731,0.783423,1.41676],[-0.361591,-1.82511,0.973128],[-1.26596,0.177004,0.897691],[0.711658,-0.728899,-0.771174],[0.424445,-1.31423,0.272953],[-0.583888,-0.133954,-0.137855],[-0.140962,-1.4407,-0.715714],[0.188693,0.316234,-0.718496],[-1.45557,0.240483,1.46514],[-0.470475,0.889826,0.97107],[-1.13583,1.31705,-0.618053],[-0.52257,0.127056,1.20468],[-0.716111,1.63028,-1.8929],[1.15511,-1.50062,1.03994],[0.484362,1.35028,-0.500284],[0.708362,0.186143,0.324958],[-1.94202,0.164388,0.991319],[-0.678916,-0.287967,0.506493],[0.180533,0.337176,1.6466],[0.00726968,0.296417,-0.95298]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>0.1023116</td><td>-0.9975413</td><td>1.316829</td></tr>
      <tr><th>1</th><td>0.1</td><td>-1.408158</td><td>-0.9708523</td><td>-0.7316619</td></tr>
      <tr><th>2</th><td>0.2</td><td>1.202914</td><td>-0.6762155</td><td>0.04954202</td></tr>
      <tr><th>3</th><td>0.3</td><td>-0.4044247</td><td>-0.02105901</td><td>1.438087</td></tr>
      <tr><th>4</th><td>0.4</td><td>-0.07033952</td><td>-0.2001906</td><td>2.265532</td></tr>
      <tr><th>5</th><td>0.5</td><td>-1.88787</td><td>-0.8622039</td><td>-0.2908465</td></tr>
      <tr><th>6</th><td>0.6</td><td>0.9940129</td><td>0.2413947</td><td>-0.0716306</td></tr>
      <tr><th>7</th><td>0.7</td><td>-0.7246492</td><td>1.754143</td><td>-1.536285</td></tr>
      <tr><th>8</th><td>0.8</td><td>-0.1017091</td><td>-0.8737792</td><td>1.025931</td></tr>
      <tr><th>9</th><td>0.9</td><td>-0.2613824</td><td>-1.376029</td><td>-1.079113</td></tr>
      <tr><th>10</th><td>1</td><td>0.1537114</td><td>1.058306</td><td>-1.422422</td></tr>
      <tr><th>11</th><td>1.1</td><td>-0.2301788</td><td>0.2620212</td><td>-0.1444597</td></tr>
      <tr><th>12</th><td>1.2</td><td>-1.897862</td><td>-0.6863148</td><td>1.234203</td></tr>
      <tr><th>13</th><td>1.3</td><td>-0.3162145</td><td>-0.01847229</td><td>-0.896629</td></tr>
      <tr><th>14</th><td>1.4</td><td>-0.5779769</td><td>-0.2261279</td><td>0.4445098</td></tr>
      <tr><th>15</th><td>1.5</td><td>1.110886</td><td>-0.4985516</td><td>-0.8887799</td></tr>
      <tr><th>16</th><td>1.6</td><td>0.5168625</td><td>-1.048041</td><td>-1.568592</td></tr>
      <tr><th>17</th><td>1.7</td><td>1.098546</td><td>0.1196164</td><td>1.284032</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.4013398</td><td>0.7463852</td><td>-2.45561</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.1259478</td><td>0.7581021</td><td>1.254809</td></tr>
      <tr><th>20</th><td>2</td><td>-1.198302</td><td>-0.02043968</td><td>0.4061175</td></tr>
      <tr><th>21</th><td>2.1</td><td>-0.2630751</td><td>2.144572</td><td>0.1345676</td></tr>
      <tr><th>22</th><td>2.2</td><td>1.367209</td><td>0.8389603</td><td>0.9371567</td></tr>
      <tr><th>23</th><td>2.3</td><td>-0.5078426</td><td>-1.021314</td><td>-0.5635989</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.605063</td><td>0.5043914</td><td>-1.243882</td></tr>
      <tr><th>25</th><td>2.5</td><td>-0.06844849</td><td>-0.4621792</td><td>0.3101991</td></tr>
      <tr><th>26</th><td>2.6</td><td>-0.02724707</td><td>-0.4032843</td><td>-1.138541</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.8762111</td><td>-0.009783863</td><td>-0.1976536</td></tr>
      <tr><th>28</th><td>2.8</td><td>-0.3772388</td><td>-1.004182</td><td>-0.6302218</td></tr>
      <tr><th>29</th><td>2.9</td><td>0.4877369</td><td>-0.1834903</td><td>-0.8678992</td></tr>
      <tr><th>30</th><td>3</td><td>-2.114016</td><td>-0.4727745</td><td>0.04650716</td></tr>
      <tr><th>31</th><td>3.1</td><td>0.5406865</td><td>0.2239241</td><td>0.09876121</td></tr>
      <tr><th>32</th><td>3.2</td><td>-1.016725</td><td>0.004137849</td><td>0.1789896</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.6274116</td><td>1.592704</td><td>-0.1892951</td></tr>
      <tr><th>34</th><td>3.4</td><td>-2.300591</td><td>0.07200515</td><td>-1.946706</td></tr>
      <tr><th>35</th><td>3.5</td><td>1.053996</td><td>1.146165</td><td>1.454349</td></tr>
      <tr><th>36</th><td>3.6</td><td>1.556758</td><td>-0.8026614</td><td>0.4940406</td></tr>
      <tr><th>37</th><td>3.7</td><td>0.08826724</td><td>-0.4947876</td><td>-0.01881878</td></tr>
      <tr><th>38</th><td>3.8</td><td>-0.2835807</td><td>2.060317</td><td>-0.1027294</td></tr>
      <tr><th>39</th><td>3.9</td><td>-1.049064</td><td>-0.2926993</td><td>-1.921088</td></tr>
      <tr><th>40</th><td>4</td><td>0.2854102</td><td>1.040765</td><td>-1.333043</td></tr>
      <tr><th>41</th><td>4.1</td><td>-0.8025365</td><td>0.5204031</td><td>-2.096674</td></tr>
      <tr><th>42</th><td>4.2</td><td>-1.291902</td><td>-0.6792496</td><td>0.5774987</td></tr>
      <tr><th>43</th><td>4.3</td><td>-1.524863</td><td>0.01701916</td><td>-1.483973</td></tr>
      <tr><th>44</th><td>4.4</td><td>1.838307</td><td>-0.06182316</td><td>0.6765237</td></tr>
      <tr><th>45</th><td>4.5</td><td>-1.312164</td><td>0.4000902</td><td>1.038645</td></tr>
      <tr><th>46</th><td>4.6</td><td>-0.1848742</td><td>0.3046401</td><td>-0.7751185</td></tr>
      <tr><th>47</th><td>4.7</td><td>-0.4789901</td><td>0.07501829</td><td>1.084141</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.9368981</td><td>-1.13308</td><td>-0.3347787</td></tr>
      <tr><th>49</th><td>4.9</td><td>-0.7530707</td><td>-0.3738817</td><td>-0.4643153</td></tr>
      <tr><th>50</th><td>5</td><td>0.8547531</td><td>0.7684746</td><td>-0.2643745</td></tr>
      <tr><th>51</th><td>5.1</td><td>-0.3459404</td><td>1.268632</td><td>-1.279488</td></tr>
      <tr><th>52</th><td>5.2</td><td>-0.7384016</td><td>-1.475457</td><td>0.2878074</td></tr>
      <tr><th>53</th><td>5.3</td><td>2.784965</td><td>0.8269676</td><td>-1.417568</td></tr>
      <tr><th>54</th><td>5.4</td><td>-1.436862</td><td>-1.254981</td><td>-1.460765</td></tr>
      <tr><th>55</th><td>5.5</td><td>1.017453</td><td>0.2471409</td><td>-0.8771543</td></tr>
      <tr><th>56</th><td>5.6</td><td>1.503735</td><td>0.4153598</td><td>0.2837436</td></tr>
      <tr><th>57</th><td>5.7</td><td>1.496648</td><td>-1.082597</td><td>0.946887</td></tr>
      <tr><th>58</th><td>5.8</td><td>-0.3571779</td><td>0.5998458</td><td>0.8423036</td></tr>
      <tr><th>59</th><td>5.9</td><td>-1.110956</td><td>-0.4651775</td><td>0.6298723</td></tr>
      <tr><th>60</th><td>6</td><td>-1.41691</td><td>1.378516</td><td>0.08048945</td></tr>
      <tr><th>61</th><td>6.1</td><td>-0.9268704</td><td>0.6447792</td><td>-0.7894453</td></tr>
      <tr><th>62</th><td>6.2</td><td>1.264428</td><td>-0.8762567</td><td>1.707679</td></tr>
      <tr><th>63</th><td>6.3</td><td>0.1670195</td><td>1.792789</td><td>-0.7106285</td></tr>
      <tr><th>64</th><td>6.4</td><td>-1.199845</td><td>-0.2799014</td><td>0.1800664</td></tr>
      <tr><th>65</th><td>6.5</td><td>1.129847</td><td>0.4461061</td><td>-0.5255033</td></tr>
      <tr><th>66</th><td>6.6</td><td>-1.135398</td><td>-0.2065516</td><td>0.3929824</td></tr>
      <tr><th>67</th><td>6.7</td><td>0.5004717</td><td>0.3175954</td><td>-0.2181171</td></tr>
      <tr><th>68</th><td>6.8</td><td>-0.2956639</td><td>0.2126544</td><td>1.193296</td></tr>
      <tr><th>69</th><td>6.9</td><td>0.9191852</td><td>-0.7742445</td><td>-0.7405749</td></tr>
      <tr><th>70</th><td>7</td><td>-0.06620338</td><td>0.5500795</td><td>-1.031504</td></tr>
      <tr><th>71</th><td>7.1</td><td>1.477589</td><td>0.9061035</td><td>-0.2853623</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.4400622</td><td>-0.2651917</td><td>-0.4932062</td></tr>
      <tr><th>73</th><td>7.3</td><td>-0.2373292</td><td>0.3229914</td><td>-0.5937136</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.2634701</td><td>-1.425269</td><td>0.6346264</td></tr>
      <tr><th>75</th><td>7.5</td><td>-1.923656</td><td>-0.6951166</td><td>-0.9674492</td></tr>
      <tr><th>76</th><td>7.6</td><td>1.328297</td><td>-0.1690442</td><td>-0.3100564</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.6143692</td><td>2.454312</td><td>-0.469002</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.7540148</td><td>-0.3382444</td><td>-0.7915194</td></tr>
      <tr><th>79</th><td>7.9</td><td>-0.9537212</td><td>-0.1104288</td><td>-0.9598736</td></tr>
      <tr><th>80</th><td>8</td><td>0.9116693</td><td>0.4871994</td><td>0.4067856</td></tr>
      <tr><th>81</th><td>8.1</td><td>0.3540459</td><td>-0.4101149</td><td>0.8792565</td></tr>
      <tr><th>82</th><td>8.2</td><td>1.145735</td><td>2.270279</td><td>1.247617</td></tr>
      <tr><th>83</th><td>8.3</td><td>0.6797858</td><td>-0.1373896</td><td>-0.6335561</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.3501031</td><td>0.5790414</td><td>0.5572518</td></tr>
      <tr><th>85</th><td>8.5</td><td>-1.076809</td><td>1.150905</td><td>-0.5739419</td></tr>
      <tr><th>86</th><td>8.6</td><td>-0.1157924</td><td>0.01883379</td><td>1.706282</td></tr>
      <tr><th>87</th><td>8.7</td><td>0.3789277</td><td>0.3550466</td><td>-0.09207188</td></tr>
      <tr><th>88</th><td>8.8</td><td>0.7454006</td><td>0.6471162</td><td>-0.5562904</td></tr>
      <tr><th>89</th><td>8.9</td><td>1.520873</td><td>0.7663128</td><td>-2.691342</td></tr>
      <tr><th>90</th><td>9</td><td>0.01570154</td><td>0.006452432</td><td>0.6015399</td></tr>
      <tr><th>91</th><td>9.1</td><td>1.438274</td><td>-1.025873</td><td>0.7692977</td></tr>
      <tr><th>92</th><td>9.2</td><td>-1.051357</td><td>-0.701312</td><td>1.420509</td></tr>
      <tr><th>93</th><td>9.3</td><td>-0.4422292</td><td>0.002170503</td><td>0.9106675</td></tr>
      <tr><th>94</th><td>9.4</td><td>-0.3675102</td><td>-0.04338074</td><td>0.5893385</td></tr>
      <tr><th>95</th><td>9.5</td><td>0.2229053</td><td>2.178103</td><td>-0.4684821</td></tr>
      <tr><th>96</th><td>9.6</td><td>0.1968474</td><td>-1.961925</td><td>0.005301432</td></tr>
      <tr><th>97</th><td>9.7</td><td>0.07521444</td><td>-2.095691</td><td>0.3423048</td></tr>
      <tr><th>98</th><td>9.8</td><td>-0.4311405</td><td>-0.03047232</td><td>1.033171</td></tr>
      <tr><th>99</th><td>9.9</td><td>0.237167</td><td>-3.217599</td><td>-0.3367774</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.311356,-0.2726,-2.13307]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.311356,-0.2726,-2.13307]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  0.311356313246449




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0.06986822</td><td>0.04758247</td><td>1.219319</td></tr>
      <tr><th>1</th><td>-1.805502</td><td>-0.7922008</td><td>0.6563058</td></tr>
      <tr><th>2</th><td>-1.381571</td><td>0.1442134</td><td>2.008858</td></tr>
      <tr><th>3</th><td>-0.9990928</td><td>0.5698768</td><td>0.4363176</td></tr>
      <tr><th>4</th><td>-1.913411</td><td>-0.7799508</td><td>-1.623165</td></tr>
      <tr><th>5</th><td>-1.193484</td><td>1.2531</td><td>-0.7829088</td></tr>
      <tr><th>6</th><td>-1.459054</td><td>-1.620104</td><td>0.7681269</td></tr>
      <tr><th>7</th><td>-1.558045</td><td>0.997767</td><td>-1.639631</td></tr>
      <tr><th>8</th><td>-0.4677749</td><td>0.7539648</td><td>-0.081722</td></tr>
      <tr><th>9</th><td>-1.098946</td><td>0.7550119</td><td>-0.4965067</td></tr>
      <tr><th>10</th><td>0.6757783</td><td>0.088244</td><td>-0.9890539</td></tr>
      <tr><th>11</th><td>0.8339235</td><td>0.139417</td><td>-1.978802</td></tr>
      <tr><th>12</th><td>-2.000807</td><td>-0.5776935</td><td>0.5389481</td></tr>
      <tr><th>13</th><td>-0.5976172</td><td>-1.166974</td><td>0.143372</td></tr>
      <tr><th>14</th><td>-2.353726</td><td>-0.4023311</td><td>-0.5462624</td></tr>
      <tr><th>15</th><td>1.031589</td><td>0.9865467</td><td>0.3191621</td></tr>
      <tr><th>16</th><td>1.863941</td><td>2.124699</td><td>0.9553822</td></tr>
      <tr><th>17</th><td>0.5440172</td><td>0.9238093</td><td>1.89273</td></tr>
      <tr><th>18</th><td>-0.2470291</td><td>1.256343</td><td>0.9691975</td></tr>
      <tr><th>19</th><td>0.9391547</td><td>0.8546225</td><td>0.4548719</td></tr>
      <tr><th>20</th><td>1.201895</td><td>-0.1339829</td><td>-0.08626643</td></tr>
      <tr><th>21</th><td>0.6404558</td><td>0.7547482</td><td>-0.8791039</td></tr>
      <tr><th>22</th><td>0.8495927</td><td>-1.15509</td><td>-0.881983</td></tr>
      <tr><th>23</th><td>-0.4871482</td><td>0.6295915</td><td>-0.8159445</td></tr>
      <tr><th>24</th><td>-0.3201797</td><td>-0.2971087</td><td>0.3447948</td></tr>
      <tr><th>25</th><td>-0.2497585</td><td>-1.580214</td><td>-0.6839806</td></tr>
      <tr><th>26</th><td>0.8130393</td><td>1.075153</td><td>-0.9071691</td></tr>
      <tr><th>27</th><td>0.9977577</td><td>-0.1682795</td><td>0.7244756</td></tr>
      <tr><th>28</th><td>0.00946154</td><td>-1.991362</td><td>1.219863</td></tr>
      <tr><th>29</th><td>1.62892</td><td>-0.7047496</td><td>-0.6622895</td></tr>
      <tr><th>30</th><td>-0.739388</td><td>-0.4504823</td><td>-1.431019</td></tr>
      <tr><th>31</th><td>0.6351209</td><td>-1.755652</td><td>-0.5357266</td></tr>
      <tr><th>32</th><td>-0.1651593</td><td>1.257705</td><td>0.1116382</td></tr>
      <tr><th>33</th><td>0.4414357</td><td>-0.3928275</td><td>-0.1719267</td></tr>
      <tr><th>34</th><td>-0.3305299</td><td>0.4890039</td><td>2.576468</td></tr>
      <tr><th>35</th><td>0.2948637</td><td>0.5503355</td><td>0.5349136</td></tr>
      <tr><th>36</th><td>-1.33405</td><td>-1.364899</td><td>-1.452863</td></tr>
      <tr><th>37</th><td>0.3113563</td><td>-0.2725999</td><td>-2.133072</td></tr>
      <tr><th>38</th><td>0.03748454</td><td>0.1271947</td><td>-1.344615</td></tr>
      <tr><th>39</th><td>-0.08561808</td><td>1.270636</td><td>-0.7951445</td></tr>
      <tr><th>40</th><td>-1.660431</td><td>-0.4373889</td><td>-1.120298</td></tr>
      <tr><th>41</th><td>0.3588862</td><td>1.815803</td><td>0.001717497</td></tr>
      <tr><th>42</th><td>0.9247197</td><td>0.1975395</td><td>0.501503</td></tr>
      <tr><th>43</th><td>-1.339107</td><td>-0.1325953</td><td>-2.575451</td></tr>
      <tr><th>44</th><td>-0.8721759</td><td>-1.002653</td><td>-1.606413</td></tr>
      <tr><th>45</th><td>-0.6429049</td><td>-0.810354</td><td>0.3040203</td></tr>
      <tr><th>46</th><td>0.4966458</td><td>0.696505</td><td>0.6196596</td></tr>
      <tr><th>47</th><td>1.231666</td><td>-0.8748696</td><td>-1.234691</td></tr>
      <tr><th>48</th><td>-0.1516279</td><td>-1.996924</td><td>0.7646381</td></tr>
      <tr><th>49</th><td>-0.152291</td><td>-2.209802</td><td>-1.506287</td></tr>
      <tr><th>50</th><td>0.002342486</td><td>-0.0936058</td><td>0.5489776</td></tr>
      <tr><th>51</th><td>1.098665</td><td>-0.4005418</td><td>0.6823312</td></tr>
      <tr><th>52</th><td>-0.711512</td><td>-0.1402829</td><td>0.8802174</td></tr>
      <tr><th>53</th><td>-0.9059984</td><td>-0.7355958</td><td>-0.04939343</td></tr>
      <tr><th>54</th><td>-1.444876</td><td>0.2139197</td><td>-1.503478</td></tr>
      <tr><th>55</th><td>-0.1298679</td><td>1.28659</td><td>0.1157078</td></tr>
      <tr><th>56</th><td>-1.298128</td><td>-0.06042107</td><td>0.06227633</td></tr>
      <tr><th>57</th><td>-0.5166412</td><td>2.554352</td><td>1.644396</td></tr>
      <tr><th>58</th><td>0.273529</td><td>-0.1647684</td><td>-0.9789117</td></tr>
      <tr><th>59</th><td>0.9933184</td><td>1.350065</td><td>0.4640596</td></tr>
      <tr><th>60</th><td>-0.4675365</td><td>-0.728841</td><td>0.4859621</td></tr>
      <tr><th>61</th><td>0.2541659</td><td>0.820872</td><td>-0.0363044</td></tr>
      <tr><th>62</th><td>-1.995383</td><td>1.923793</td><td>0.2494272</td></tr>
      <tr><th>63</th><td>0.5069666</td><td>1.309033</td><td>0.3360077</td></tr>
      <tr><th>64</th><td>-0.1290929</td><td>0.1723392</td><td>-0.3101596</td></tr>
      <tr><th>65</th><td>1.102904</td><td>-0.2220386</td><td>-1.46894</td></tr>
      <tr><th>66</th><td>-1.862375</td><td>-0.3244768</td><td>0.9235241</td></tr>
      <tr><th>67</th><td>-0.2820128</td><td>0.006289706</td><td>1.367083</td></tr>
      <tr><th>68</th><td>0.6385026</td><td>0.0157646</td><td>-0.5798093</td></tr>
      <tr><th>69</th><td>-1.879574</td><td>0.1386874</td><td>-1.724297</td></tr>
      <tr><th>70</th><td>1.007176</td><td>-0.04098692</td><td>-1.067174</td></tr>
      <tr><th>71</th><td>-0.5248316</td><td>-0.2120992</td><td>0.4689456</td></tr>
      <tr><th>72</th><td>1.577422</td><td>1.404065</td><td>-0.1900681</td></tr>
      <tr><th>73</th><td>0.3927139</td><td>0.4431969</td><td>-0.1629749</td></tr>
      <tr><th>74</th><td>1.414659</td><td>1.041024</td><td>0.7623521</td></tr>
      <tr><th>75</th><td>0.8105606</td><td>-0.03520332</td><td>-1.602521</td></tr>
      <tr><th>76</th><td>0.6257502</td><td>0.3561071</td><td>-1.425263</td></tr>
      <tr><th>77</th><td>-0.008750515</td><td>-0.1997328</td><td>-1.756435</td></tr>
      <tr><th>78</th><td>0.5231528</td><td>-1.810991</td><td>0.6055761</td></tr>
      <tr><th>79</th><td>0.7592686</td><td>1.198033</td><td>1.673884</td></tr>
      <tr><th>80</th><td>2.147314</td><td>0.7834227</td><td>1.416759</td></tr>
      <tr><th>81</th><td>-0.3615906</td><td>-1.825106</td><td>0.9731284</td></tr>
      <tr><th>82</th><td>-1.265956</td><td>0.1770043</td><td>0.8976907</td></tr>
      <tr><th>83</th><td>0.7116577</td><td>-0.7288995</td><td>-0.7711737</td></tr>
      <tr><th>84</th><td>0.4244448</td><td>-1.314232</td><td>0.2729527</td></tr>
      <tr><th>85</th><td>-0.5838881</td><td>-0.1339539</td><td>-0.1378554</td></tr>
      <tr><th>86</th><td>-0.140962</td><td>-1.440702</td><td>-0.7157135</td></tr>
      <tr><th>87</th><td>0.1886926</td><td>0.3162343</td><td>-0.7184958</td></tr>
      <tr><th>88</th><td>-1.455574</td><td>0.2404829</td><td>1.465144</td></tr>
      <tr><th>89</th><td>-0.4704749</td><td>0.8898257</td><td>0.9710696</td></tr>
      <tr><th>90</th><td>-1.135833</td><td>1.317048</td><td>-0.6180526</td></tr>
      <tr><th>91</th><td>-0.5225697</td><td>0.1270564</td><td>1.204684</td></tr>
      <tr><th>92</th><td>-0.7161111</td><td>1.630281</td><td>-1.892895</td></tr>
      <tr><th>93</th><td>1.155107</td><td>-1.500616</td><td>1.03994</td></tr>
      <tr><th>94</th><td>0.4843625</td><td>1.350284</td><td>-0.5002835</td></tr>
      <tr><th>95</th><td>0.7083617</td><td>0.1861434</td><td>0.3249578</td></tr>
      <tr><th>96</th><td>-1.942018</td><td>0.1643876</td><td>0.9913185</td></tr>
      <tr><th>97</th><td>-0.6789159</td><td>-0.2879671</td><td>0.5064934</td></tr>
      <tr><th>98</th><td>0.1805333</td><td>0.3371765</td><td>1.646603</td></tr>
      <tr><th>99</th><td>0.007269679</td><td>0.2964174</td><td>-0.9529796</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[-0.0825256,0.0415162,-0.0485582]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
