
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 7-22

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 24-30

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[1.32712,-0.870445,-1.22914],[-0.507935,0.983093,-0.130525],[0.793346,-0.184455,0.167784],[0.0725034,0.841601,-0.558173],[0.472925,2.34854,1.07591],[-0.216235,0.235797,-1.60883],[0.194621,0.477074,0.313679],[0.726312,0.0657238,1.16158],[-1.33737,-1.72616,1.82599],[0.930512,-0.182075,0.612924],[1.6034,1.3555,-0.341478],[0.421489,1.53117,-0.416304],[0.116548,-0.540999,0.234584],[-1.35208,0.683673,-1.50081],[-0.170854,0.332328,-0.363658],[-0.694512,1.35654,-0.652237],[0.450069,0.321283,1.50634],[1.10533,-0.165048,0.773663],[0.737968,-1.67447,0.308809],[-1.76111,0.663431,0.205302],[-0.0732175,-1.04178,1.18804],[1.41563,-0.226939,2.35632],[-0.138382,1.36173,-0.134257],[1.12967,-1.02906,-0.561499],[0.28193,-2.21474,1.07367],[-0.378391,-0.0150406,-1.03544],[1.03923,1.27475,-0.501031],[2.77866,-0.572302,0.439075],[-0.415987,-0.475069,-0.961929],[0.559112,-1.12605,0.54433],[-0.0134803,-1.19857,1.12334],[1.27929,-0.295415,-0.100441],[1.03447,1.24867,0.377509],[1.23901,0.398736,1.4726],[-1.59376,-0.348656,-2.05676],[-0.749451,-0.538232,-1.02465],[1.65962,-1.26488,-0.438497],[0.623356,0.408917,0.507405],[1.64449,-1.39234,-1.48098],[-0.658776,0.881166,0.652976],[0.947321,0.0390463,-0.203963],[0.518381,-1.40232,-1.18459],[0.13584,0.885432,1.2292],[-1.04847,-0.687361,0.366485],[0.622702,0.623661,-0.262154],[-0.305642,-0.00676309,0.197149],[0.053481,-0.0206069,0.509305],[-2.31317,-0.714369,-1.20921],[-0.13261,1.65196,-0.269937],[0.65465,0.708654,0.72656],[0.954053,0.248365,-0.902585],[-1.28126,-0.00802994,-1.1632],[-0.447517,0.552197,-2.13743],[0.764258,0.557102,0.904113],[0.16344,1.72272,0.571615],[-1.75137,0.589749,-0.876763],[1.54711,0.166073,-0.800995],[0.281298,0.975416,-2.03378],[0.422447,-0.0174183,2.87215],[-0.916417,-0.809113,1.27532],[-1.12545,1.26042,0.353764],[0.017594,0.829971,-0.311295],[-0.235503,0.0251371,-0.121595],[-1.44649,2.8756,-0.220178],[-0.732853,-0.483708,-0.747795],[-1.44797,-0.436692,0.423699],[0.177214,1.33647,0.537462],[-0.274499,1.39707,0.176471],[0.129742,0.0551752,0.526542],[0.896547,1.28365,-1.14989],[1.11804,-0.166619,-0.154291],[-0.0939723,-1.04248,0.786518],[0.75592,-1.17671,0.20297],[0.67284,2.21474,1.04147],[0.699698,-0.0162059,-1.91313],[1.61811,-1.14959,0.903328],[-0.42308,0.014848,-1.7679],[-0.660836,-0.679611,-0.602488],[1.1806,0.416837,0.787146],[1.5395,1.64017,0.41949],[0.745737,0.65832,-0.188135],[-2.07985,0.426461,0.376999],[-0.140954,1.39311,-0.0683164],[-1.59188,1.89578,-0.0800898],[-0.813512,-1.14769,0.0382173],[2.58802,-1.43794,0.481281],[0.565979,0.393374,-1.68577],[0.223058,1.64808,0.938132],[0.0842516,0.82531,1.10153],[-1.1558,1.73866,0.668651],[-1.14752,-1.94314,0.910897],[-0.531219,0.721555,-1.2781],[-1.15676,1.67032,-0.113362],[0.553675,-0.488362,0.24458],[-0.970441,1.35777,0.185291],[0.625773,0.324798,0.467652],[-1.50002,-0.140314,0.342723],[0.73008,-2.16946,0.98901],[0.417706,-0.0798679,1.71556],[0.849223,-0.675342,0.686999]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-46

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>0.8446794</td><td>-0.3665046</td><td>1.100684</td></tr>
      <tr><th>1</th><td>0.1</td><td>1.083577</td><td>0.3449235</td><td>1.030375</td></tr>
      <tr><th>2</th><td>0.2</td><td>-0.3709322</td><td>-0.897982</td><td>-1.348827</td></tr>
      <tr><th>3</th><td>0.3</td><td>1.353261</td><td>-0.1572387</td><td>-0.04165737</td></tr>
      <tr><th>4</th><td>0.4</td><td>0.2786851</td><td>1.221155</td><td>0.6035937</td></tr>
      <tr><th>5</th><td>0.5</td><td>0.9119994</td><td>0.9177351</td><td>-0.1793762</td></tr>
      <tr><th>6</th><td>0.6</td><td>0.3592777</td><td>0.2869551</td><td>-0.5062299</td></tr>
      <tr><th>7</th><td>0.7</td><td>1.422943</td><td>1.94673</td><td>0.07834718</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.2014216</td><td>0.1965617</td><td>0.9212984</td></tr>
      <tr><th>9</th><td>0.9</td><td>0.6175802</td><td>-0.04170108</td><td>-0.04018458</td></tr>
      <tr><th>10</th><td>1</td><td>0.3557163</td><td>0.5153072</td><td>0.0641215</td></tr>
      <tr><th>11</th><td>1.1</td><td>0.219103</td><td>-0.8583425</td><td>1.737434</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.5107207</td><td>0.2840732</td><td>-0.004865551</td></tr>
      <tr><th>13</th><td>1.3</td><td>-0.4816453</td><td>-0.9140934</td><td>0.616322</td></tr>
      <tr><th>14</th><td>1.4</td><td>1.604454</td><td>0.9181919</td><td>0.5231595</td></tr>
      <tr><th>15</th><td>1.5</td><td>1.812381</td><td>0.9996683</td><td>-0.9457056</td></tr>
      <tr><th>16</th><td>1.6</td><td>-0.6647263</td><td>-0.7574546</td><td>0.675699</td></tr>
      <tr><th>17</th><td>1.7</td><td>0.07294335</td><td>1.062239</td><td>-1.733126</td></tr>
      <tr><th>18</th><td>1.8</td><td>-1.668891</td><td>1.503153</td><td>-0.8242028</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.929453</td><td>1.067554</td><td>0.5308838</td></tr>
      <tr><th>20</th><td>2</td><td>0.2412952</td><td>0.2120827</td><td>-0.006536567</td></tr>
      <tr><th>21</th><td>2.1</td><td>-0.344812</td><td>-1.126722</td><td>1.104851</td></tr>
      <tr><th>22</th><td>2.2</td><td>0.628976</td><td>1.011479</td><td>-0.6582865</td></tr>
      <tr><th>23</th><td>2.3</td><td>-1.310303</td><td>0.266313</td><td>-0.846137</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.8792499</td><td>0.03275281</td><td>-0.9833606</td></tr>
      <tr><th>25</th><td>2.5</td><td>-1.276139</td><td>-1.784336</td><td>1.13842</td></tr>
      <tr><th>26</th><td>2.6</td><td>-0.2369665</td><td>1.616928</td><td>2.017551</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.369685</td><td>0.6387561</td><td>-0.9708507</td></tr>
      <tr><th>28</th><td>2.8</td><td>1.144399</td><td>-0.3551921</td><td>-1.423539</td></tr>
      <tr><th>29</th><td>2.9</td><td>0.09523122</td><td>1.898044</td><td>-0.9710395</td></tr>
      <tr><th>30</th><td>3</td><td>-0.8071453</td><td>-0.2622886</td><td>-1.753804</td></tr>
      <tr><th>31</th><td>3.1</td><td>0.6001432</td><td>1.537739</td><td>0.4574746</td></tr>
      <tr><th>32</th><td>3.2</td><td>-0.8933515</td><td>0.3025395</td><td>-0.4622951</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.07983375</td><td>0.5672412</td><td>1.535338</td></tr>
      <tr><th>34</th><td>3.4</td><td>-1.153354</td><td>-1.322365</td><td>2.653959</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.2760885</td><td>1.610943</td><td>-0.2927052</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.6777196</td><td>-0.4406913</td><td>-2.991506</td></tr>
      <tr><th>37</th><td>3.7</td><td>-0.4118463</td><td>0.1964912</td><td>0.59363</td></tr>
      <tr><th>38</th><td>3.8</td><td>-1.2158</td><td>0.8091567</td><td>-0.9241602</td></tr>
      <tr><th>39</th><td>3.9</td><td>-1.270501</td><td>0.0734044</td><td>0.3811663</td></tr>
      <tr><th>40</th><td>4</td><td>-1.479599</td><td>-0.5729555</td><td>0.9887196</td></tr>
      <tr><th>41</th><td>4.1</td><td>-0.5937324</td><td>-0.5713052</td><td>0.3955643</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.08104589</td><td>0.0070836</td><td>0.2546559</td></tr>
      <tr><th>43</th><td>4.3</td><td>-0.660081</td><td>-1.255937</td><td>-0.6817006</td></tr>
      <tr><th>44</th><td>4.4</td><td>0.9867186</td><td>0.2872536</td><td>-0.8680852</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.2823449</td><td>-0.4248107</td><td>-1.569</td></tr>
      <tr><th>46</th><td>4.6</td><td>1.579853</td><td>2.024304</td><td>1.139352</td></tr>
      <tr><th>47</th><td>4.7</td><td>0.2965602</td><td>0.1770432</td><td>0.3381459</td></tr>
      <tr><th>48</th><td>4.8</td><td>-1.417408</td><td>-0.5858534</td><td>1.036629</td></tr>
      <tr><th>49</th><td>4.9</td><td>-0.7945643</td><td>-0.6392473</td><td>-0.7306695</td></tr>
      <tr><th>50</th><td>5</td><td>-0.6678211</td><td>-0.2609551</td><td>0.5842071</td></tr>
      <tr><th>51</th><td>5.1</td><td>1.137845</td><td>0.5217026</td><td>1.151985</td></tr>
      <tr><th>52</th><td>5.2</td><td>0.9845299</td><td>-0.9531217</td><td>1.246024</td></tr>
      <tr><th>53</th><td>5.3</td><td>0.6431399</td><td>-0.6869943</td><td>1.092722</td></tr>
      <tr><th>54</th><td>5.4</td><td>-0.161812</td><td>-2.166399</td><td>1.720602</td></tr>
      <tr><th>55</th><td>5.5</td><td>0.3254938</td><td>0.107246</td><td>0.2470312</td></tr>
      <tr><th>56</th><td>5.6</td><td>-1.170859</td><td>-1.401205</td><td>-1.133086</td></tr>
      <tr><th>57</th><td>5.7</td><td>1.290957</td><td>0.01404408</td><td>-0.9651648</td></tr>
      <tr><th>58</th><td>5.8</td><td>1.109694</td><td>-0.5501427</td><td>-0.1802357</td></tr>
      <tr><th>59</th><td>5.9</td><td>0.16062</td><td>-0.1399698</td><td>0.2972728</td></tr>
      <tr><th>60</th><td>6</td><td>1.236084</td><td>1.819181</td><td>0.2741232</td></tr>
      <tr><th>61</th><td>6.1</td><td>1.371719</td><td>-0.4032286</td><td>-0.498732</td></tr>
      <tr><th>62</th><td>6.2</td><td>0.06226264</td><td>0.2123095</td><td>-0.1520736</td></tr>
      <tr><th>63</th><td>6.3</td><td>-0.457271</td><td>1.350807</td><td>0.2632071</td></tr>
      <tr><th>64</th><td>6.4</td><td>1.115438</td><td>-0.1284937</td><td>0.5797465</td></tr>
      <tr><th>65</th><td>6.5</td><td>0.3415733</td><td>-0.143352</td><td>0.8384659</td></tr>
      <tr><th>66</th><td>6.6</td><td>-0.7352802</td><td>-0.6900734</td><td>-0.1692686</td></tr>
      <tr><th>67</th><td>6.7</td><td>-0.4035508</td><td>-1.192487</td><td>-1.218379</td></tr>
      <tr><th>68</th><td>6.8</td><td>1.104686</td><td>-1.569281</td><td>-0.2456523</td></tr>
      <tr><th>69</th><td>6.9</td><td>2.565213</td><td>-0.7641102</td><td>0.8430097</td></tr>
      <tr><th>70</th><td>7</td><td>0.4395372</td><td>-2.337652</td><td>0.825948</td></tr>
      <tr><th>71</th><td>7.1</td><td>1.019246</td><td>0.08884404</td><td>-2.09862</td></tr>
      <tr><th>72</th><td>7.2</td><td>0.9784148</td><td>-0.2911665</td><td>-2.710328</td></tr>
      <tr><th>73</th><td>7.3</td><td>1.755367</td><td>0.4152885</td><td>0.481757</td></tr>
      <tr><th>74</th><td>7.4</td><td>-0.5568114</td><td>0.8394932</td><td>-2.104349</td></tr>
      <tr><th>75</th><td>7.5</td><td>-0.4533512</td><td>0.215398</td><td>-0.571445</td></tr>
      <tr><th>76</th><td>7.6</td><td>0.8649394</td><td>-1.818309</td><td>-2.133363</td></tr>
      <tr><th>77</th><td>7.7</td><td>1.909875</td><td>-1.591871</td><td>-0.9438199</td></tr>
      <tr><th>78</th><td>7.8</td><td>-1.754051</td><td>-0.3239054</td><td>0.756544</td></tr>
      <tr><th>79</th><td>7.9</td><td>0.1139187</td><td>-0.3400796</td><td>-0.7516475</td></tr>
      <tr><th>80</th><td>8</td><td>-0.01442488</td><td>-1.260323</td><td>-1.373798</td></tr>
      <tr><th>81</th><td>8.1</td><td>2.090345</td><td>-1.01716</td><td>-0.1228072</td></tr>
      <tr><th>82</th><td>8.2</td><td>0.6100111</td><td>0.6635646</td><td>-0.4541218</td></tr>
      <tr><th>83</th><td>8.3</td><td>0.5150051</td><td>-1.607948</td><td>-1.538646</td></tr>
      <tr><th>84</th><td>8.4</td><td>-0.5719637</td><td>-1.817829</td><td>1.759169</td></tr>
      <tr><th>85</th><td>8.5</td><td>-0.7192399</td><td>0.623234</td><td>-0.7360448</td></tr>
      <tr><th>86</th><td>8.6</td><td>0.3810316</td><td>-0.3207302</td><td>-0.8336421</td></tr>
      <tr><th>87</th><td>8.7</td><td>1.493577</td><td>1.121382</td><td>0.963546</td></tr>
      <tr><th>88</th><td>8.8</td><td>-1.97348</td><td>-0.06698954</td><td>-0.6739489</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.5927495</td><td>1.821019</td><td>1.106675</td></tr>
      <tr><th>90</th><td>9</td><td>1.308876</td><td>0.6412677</td><td>0.1148331</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.5149644</td><td>1.212527</td><td>0.6641178</td></tr>
      <tr><th>92</th><td>9.2</td><td>-1.019766</td><td>1.005593</td><td>-0.4296901</td></tr>
      <tr><th>93</th><td>9.3</td><td>-0.03012025</td><td>-0.1787287</td><td>0.6813202</td></tr>
      <tr><th>94</th><td>9.4</td><td>-0.16112</td><td>1.106126</td><td>-0.8704514</td></tr>
      <tr><th>95</th><td>9.5</td><td>-1.294142</td><td>0.1721824</td><td>-1.121393</td></tr>
      <tr><th>96</th><td>9.6</td><td>-0.8497381</td><td>-0.4592838</td><td>1.563704</td></tr>
      <tr><th>97</th><td>9.7</td><td>-0.4351874</td><td>0.4974543</td><td>0.03852374</td></tr>
      <tr><th>98</th><td>9.8</td><td>-0.03214093</td><td>0.3594044</td><td>-0.8594893</td></tr>
      <tr><th>99</th><td>9.9</td><td>-0.4048673</td><td>1.193832</td><td>1.945781</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-52

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 55-56

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 59-60

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.623356,0.408917,0.507405]




.. GENERATED FROM PYTHON SOURCE LINES 64-65

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.623356,0.408917,0.507405]




.. GENERATED FROM PYTHON SOURCE LINES 69-70

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 70-76

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  0.6233556376232523




.. GENERATED FROM PYTHON SOURCE LINES 77-78

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>1.327123</td><td>-0.8704455</td><td>-1.229136</td></tr>
      <tr><th>1</th><td>-0.5079348</td><td>0.9830933</td><td>-0.1305248</td></tr>
      <tr><th>2</th><td>0.7933461</td><td>-0.1844552</td><td>0.1677844</td></tr>
      <tr><th>3</th><td>0.07250342</td><td>0.841601</td><td>-0.5581732</td></tr>
      <tr><th>4</th><td>0.4729253</td><td>2.348539</td><td>1.075913</td></tr>
      <tr><th>5</th><td>-0.2162346</td><td>0.2357966</td><td>-1.608825</td></tr>
      <tr><th>6</th><td>0.1946209</td><td>0.4770735</td><td>0.3136787</td></tr>
      <tr><th>7</th><td>0.7263119</td><td>0.06572378</td><td>1.161578</td></tr>
      <tr><th>8</th><td>-1.337375</td><td>-1.72616</td><td>1.825986</td></tr>
      <tr><th>9</th><td>0.930512</td><td>-0.1820748</td><td>0.6129236</td></tr>
      <tr><th>10</th><td>1.603399</td><td>1.355502</td><td>-0.3414779</td></tr>
      <tr><th>11</th><td>0.4214895</td><td>1.53117</td><td>-0.4163039</td></tr>
      <tr><th>12</th><td>0.1165476</td><td>-0.5409992</td><td>0.2345836</td></tr>
      <tr><th>13</th><td>-1.35208</td><td>0.6836734</td><td>-1.500806</td></tr>
      <tr><th>14</th><td>-0.1708544</td><td>0.3323277</td><td>-0.3636584</td></tr>
      <tr><th>15</th><td>-0.6945116</td><td>1.35654</td><td>-0.6522374</td></tr>
      <tr><th>16</th><td>0.4500687</td><td>0.321283</td><td>1.506342</td></tr>
      <tr><th>17</th><td>1.105334</td><td>-0.1650477</td><td>0.7736633</td></tr>
      <tr><th>18</th><td>0.7379684</td><td>-1.674465</td><td>0.3088089</td></tr>
      <tr><th>19</th><td>-1.76111</td><td>0.6634306</td><td>0.2053023</td></tr>
      <tr><th>20</th><td>-0.07321753</td><td>-1.04178</td><td>1.188037</td></tr>
      <tr><th>21</th><td>1.415631</td><td>-0.2269392</td><td>2.356316</td></tr>
      <tr><th>22</th><td>-0.138382</td><td>1.361733</td><td>-0.1342566</td></tr>
      <tr><th>23</th><td>1.129667</td><td>-1.029061</td><td>-0.5614986</td></tr>
      <tr><th>24</th><td>0.2819298</td><td>-2.214738</td><td>1.073668</td></tr>
      <tr><th>25</th><td>-0.3783907</td><td>-0.01504061</td><td>-1.035441</td></tr>
      <tr><th>26</th><td>1.039234</td><td>1.274755</td><td>-0.5010306</td></tr>
      <tr><th>27</th><td>2.778661</td><td>-0.5723017</td><td>0.4390751</td></tr>
      <tr><th>28</th><td>-0.4159869</td><td>-0.4750688</td><td>-0.9619287</td></tr>
      <tr><th>29</th><td>0.5591116</td><td>-1.126052</td><td>0.5443298</td></tr>
      <tr><th>30</th><td>-0.01348025</td><td>-1.198569</td><td>1.123339</td></tr>
      <tr><th>31</th><td>1.279287</td><td>-0.2954154</td><td>-0.1004408</td></tr>
      <tr><th>32</th><td>1.034468</td><td>1.248672</td><td>0.3775092</td></tr>
      <tr><th>33</th><td>1.239013</td><td>0.3987362</td><td>1.472604</td></tr>
      <tr><th>34</th><td>-1.593763</td><td>-0.3486564</td><td>-2.056757</td></tr>
      <tr><th>35</th><td>-0.749451</td><td>-0.5382315</td><td>-1.024651</td></tr>
      <tr><th>36</th><td>1.659624</td><td>-1.264878</td><td>-0.4384975</td></tr>
      <tr><th>37</th><td>0.6233556</td><td>0.4089169</td><td>0.5074052</td></tr>
      <tr><th>38</th><td>1.644488</td><td>-1.392337</td><td>-1.480975</td></tr>
      <tr><th>39</th><td>-0.6587758</td><td>0.8811658</td><td>0.6529756</td></tr>
      <tr><th>40</th><td>0.9473212</td><td>0.03904627</td><td>-0.2039633</td></tr>
      <tr><th>41</th><td>0.5183808</td><td>-1.402324</td><td>-1.184595</td></tr>
      <tr><th>42</th><td>0.1358402</td><td>0.8854322</td><td>1.229201</td></tr>
      <tr><th>43</th><td>-1.048472</td><td>-0.6873605</td><td>0.3664852</td></tr>
      <tr><th>44</th><td>0.6227024</td><td>0.6236605</td><td>-0.2621541</td></tr>
      <tr><th>45</th><td>-0.3056418</td><td>-0.006763088</td><td>0.1971493</td></tr>
      <tr><th>46</th><td>0.05348096</td><td>-0.02060689</td><td>0.5093048</td></tr>
      <tr><th>47</th><td>-2.313175</td><td>-0.7143689</td><td>-1.209208</td></tr>
      <tr><th>48</th><td>-0.13261</td><td>1.651963</td><td>-0.2699369</td></tr>
      <tr><th>49</th><td>0.65465</td><td>0.7086545</td><td>0.7265599</td></tr>
      <tr><th>50</th><td>0.9540532</td><td>0.2483646</td><td>-0.9025851</td></tr>
      <tr><th>51</th><td>-1.281258</td><td>-0.008029944</td><td>-1.163201</td></tr>
      <tr><th>52</th><td>-0.4475173</td><td>0.5521971</td><td>-2.137428</td></tr>
      <tr><th>53</th><td>0.7642583</td><td>0.5571023</td><td>0.9041133</td></tr>
      <tr><th>54</th><td>0.1634398</td><td>1.722718</td><td>0.5716153</td></tr>
      <tr><th>55</th><td>-1.751371</td><td>0.5897494</td><td>-0.8767633</td></tr>
      <tr><th>56</th><td>1.547106</td><td>0.1660734</td><td>-0.8009955</td></tr>
      <tr><th>57</th><td>0.2812977</td><td>0.9754156</td><td>-2.033784</td></tr>
      <tr><th>58</th><td>0.4224473</td><td>-0.01741828</td><td>2.872152</td></tr>
      <tr><th>59</th><td>-0.9164168</td><td>-0.8091128</td><td>1.275315</td></tr>
      <tr><th>60</th><td>-1.125448</td><td>1.260415</td><td>0.3537636</td></tr>
      <tr><th>61</th><td>0.01759401</td><td>0.8299712</td><td>-0.3112948</td></tr>
      <tr><th>62</th><td>-0.2355027</td><td>0.0251371</td><td>-0.121595</td></tr>
      <tr><th>63</th><td>-1.446485</td><td>2.875605</td><td>-0.2201784</td></tr>
      <tr><th>64</th><td>-0.732853</td><td>-0.4837084</td><td>-0.7477955</td></tr>
      <tr><th>65</th><td>-1.44797</td><td>-0.4366917</td><td>0.4236992</td></tr>
      <tr><th>66</th><td>0.1772144</td><td>1.33647</td><td>0.5374623</td></tr>
      <tr><th>67</th><td>-0.274499</td><td>1.397073</td><td>0.1764715</td></tr>
      <tr><th>68</th><td>0.1297418</td><td>0.05517516</td><td>0.5265425</td></tr>
      <tr><th>69</th><td>0.8965474</td><td>1.283645</td><td>-1.149888</td></tr>
      <tr><th>70</th><td>1.11804</td><td>-0.1666186</td><td>-0.1542909</td></tr>
      <tr><th>71</th><td>-0.09397234</td><td>-1.042475</td><td>0.7865185</td></tr>
      <tr><th>72</th><td>0.7559203</td><td>-1.176713</td><td>0.2029702</td></tr>
      <tr><th>73</th><td>0.6728398</td><td>2.214743</td><td>1.041468</td></tr>
      <tr><th>74</th><td>0.6996981</td><td>-0.01620593</td><td>-1.913133</td></tr>
      <tr><th>75</th><td>1.618107</td><td>-1.149592</td><td>0.9033281</td></tr>
      <tr><th>76</th><td>-0.4230796</td><td>0.01484804</td><td>-1.767901</td></tr>
      <tr><th>77</th><td>-0.6608361</td><td>-0.6796112</td><td>-0.6024876</td></tr>
      <tr><th>78</th><td>1.180596</td><td>0.4168373</td><td>0.787146</td></tr>
      <tr><th>79</th><td>1.539503</td><td>1.64017</td><td>0.4194896</td></tr>
      <tr><th>80</th><td>0.7457368</td><td>0.6583203</td><td>-0.1881354</td></tr>
      <tr><th>81</th><td>-2.079853</td><td>0.4264613</td><td>0.3769987</td></tr>
      <tr><th>82</th><td>-0.1409536</td><td>1.393106</td><td>-0.06831636</td></tr>
      <tr><th>83</th><td>-1.591881</td><td>1.895783</td><td>-0.08008976</td></tr>
      <tr><th>84</th><td>-0.8135122</td><td>-1.14769</td><td>0.03821734</td></tr>
      <tr><th>85</th><td>2.588022</td><td>-1.437943</td><td>0.4812813</td></tr>
      <tr><th>86</th><td>0.5659787</td><td>0.3933739</td><td>-1.685768</td></tr>
      <tr><th>87</th><td>0.2230579</td><td>1.648078</td><td>0.9381317</td></tr>
      <tr><th>88</th><td>0.0842516</td><td>0.8253103</td><td>1.101534</td></tr>
      <tr><th>89</th><td>-1.1558</td><td>1.738661</td><td>0.6686513</td></tr>
      <tr><th>90</th><td>-1.147518</td><td>-1.943139</td><td>0.9108974</td></tr>
      <tr><th>91</th><td>-0.531219</td><td>0.7215548</td><td>-1.278099</td></tr>
      <tr><th>92</th><td>-1.156755</td><td>1.670323</td><td>-0.1133624</td></tr>
      <tr><th>93</th><td>0.5536751</td><td>-0.4883621</td><td>0.2445798</td></tr>
      <tr><th>94</th><td>-0.9704412</td><td>1.357768</td><td>0.1852907</td></tr>
      <tr><th>95</th><td>0.6257733</td><td>0.3247975</td><td>0.4676523</td></tr>
      <tr><th>96</th><td>-1.500022</td><td>-0.1403138</td><td>0.3427226</td></tr>
      <tr><th>97</th><td>0.7300804</td><td>-2.169456</td><td>0.9890097</td></tr>
      <tr><th>98</th><td>0.4177056</td><td>-0.07986785</td><td>1.715559</td></tr>
      <tr><th>99</th><td>0.8492235</td><td>-0.6753423</td><td>0.6869987</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.0674486,0.12582,0.0377616]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 86-87

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-92

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 92-95

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
