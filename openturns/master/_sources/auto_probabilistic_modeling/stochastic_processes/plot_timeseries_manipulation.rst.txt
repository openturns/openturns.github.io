
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 7-22

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 24-30

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-0.424038,0.582252,-0.643024],[1.40416,0.458659,-1.30043],[0.881959,-1.15164,1.1455],[0.497514,-0.620822,0.756235],[-0.023763,-1.29699,1.9191],[1.08572,-1.45856,1.41512],[0.775003,1.24058,-0.0947653],[-0.369058,0.44761,-0.850039],[-1.04964,-0.348445,0.565865],[0.060429,0.242381,1.31142],[1.12844,-0.121275,-1.54164],[-2.33813,-0.497578,0.223286],[1.55461,0.960037,-0.639925],[0.268283,0.997083,-1.00868],[1.34463,0.0634878,-1.92739],[-1.29042,-1.6846,-0.99992],[-1.67828,1.22667,1.70037],[0.4341,-1.62823,-1.71614],[-0.945816,-0.618464,0.549249],[-0.802262,-0.360539,-0.124453],[-1.08209,0.372924,1.79033],[-0.931983,0.85017,0.497575],[-1.15024,-0.237371,-1.26996],[1.92288,-1.37685,0.527924],[1.79561,0.478153,-0.72492],[0.27117,-1.36809,0.445979],[-0.209551,1.72432,0.246573],[0.222205,0.381481,0.583119],[-0.301038,-0.671407,1.48165],[-2.30542,-0.549839,-1.24987],[0.344908,-1.20063,2.20362],[1.24311,-0.897439,0.493893],[-0.675848,0.243252,1.15617],[-0.363498,1.02484,-0.229491],[-0.0665466,-0.389661,2.06896],[-0.197643,-1.69975,0.0889302],[1.5061,-1.63375,1.20125],[-0.48403,0.187944,-1.23828],[-1.28562,-0.0610758,-1.40932],[0.379468,0.0634646,-1.2489],[2.00637,-1.41222,-1.3601],[-1.11938,0.817684,0.109967],[1.73533,-0.0713889,0.628571],[-0.0427905,0.43914,-0.61918],[0.283131,0.220923,0.915527],[1.53652,0.372614,0.923356],[0.942051,-0.929533,1.20806],[-1.97551,0.393114,0.906371],[-1.32652,0.134249,-0.175372],[-1.07751,0.377805,-1.9496],[1.68164,0.721598,-1.36438],[-1.13258,0.327473,0.86862],[0.78588,0.0959191,-0.0292676],[1.49441,-0.0788501,0.275066],[-0.585919,-1.02104,2.40823],[-0.409001,-0.944687,-0.061765],[0.717997,-0.0341824,-1.38053],[0.734309,-1.10264,1.992],[-1.05622,1.47633,0.566808],[0.0567745,-0.0137988,-0.633159],[-0.26309,1.359,-1.0134],[1.0414,-2.03856,-0.258784],[0.975261,1.78133,-0.497054],[-0.341525,-1.04706,0.288553],[-1.46685,0.355994,2.04805],[1.24802,-0.470703,0.757835],[1.60058,0.375556,0.215417],[0.349581,1.07088,-0.645453],[0.626999,-0.652313,1.49909],[0.579358,1.1554,-1.78096],[-0.128933,-0.16967,-0.528121],[1.4412,1.171,0.145341],[-0.366762,0.307728,-0.648179],[-0.844008,-1.0464,-0.967807],[-1.71804,0.430345,-0.619234],[0.343636,-0.80403,0.063719],[0.36554,-1.21692,0.120461],[-0.299811,-1.02557,-1.07606],[-0.348019,-0.613063,0.305437],[0.265386,1.35823,0.530252],[-2.78326,0.820911,-1.29449],[0.654031,1.145,0.603513],[-0.955682,-0.350459,-0.311357],[-0.690045,0.442591,-0.0923005],[-1.2488,0.166869,-0.205486],[-0.156194,-1.00267,1.00566],[-0.767615,-1.24531,-0.315304],[2.06475,1.52816,1.0989],[-0.602489,0.152845,-1.99944],[1.17822,-0.0813325,-2.12772],[-1.06051,1.75243,0.209264],[0.511973,-1.46639,-1.91894],[-0.286706,-0.475905,0.48466],[0.0116513,0.0345154,-0.847433],[2.57042,0.861757,-0.162599],[2.25867,-0.200178,-0.395035],[-1.20849,0.343547,0.0992848],[2.29483,0.0647808,-1.22703],[0.774704,-0.473335,-0.769071],[0.258908,-1.01598,-0.0956669]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-46

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.670462</td><td>1.552264</td><td>0.655497</td></tr>
      <tr><th>1</th><td>0.1</td><td>0.4323518</td><td>-1.361974</td><td>0.4575305</td></tr>
      <tr><th>2</th><td>0.2</td><td>1.22375</td><td>-2.35614</td><td>0.1593809</td></tr>
      <tr><th>3</th><td>0.3</td><td>-0.2079975</td><td>0.723607</td><td>-0.9576294</td></tr>
      <tr><th>4</th><td>0.4</td><td>-0.1988824</td><td>0.08202613</td><td>-0.9984678</td></tr>
      <tr><th>5</th><td>0.5</td><td>0.3744405</td><td>2.097264</td><td>0.9048236</td></tr>
      <tr><th>6</th><td>0.6</td><td>-0.5318566</td><td>0.09851706</td><td>0.1899918</td></tr>
      <tr><th>7</th><td>0.7</td><td>0.03311347</td><td>0.7837173</td><td>0.3359566</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.8827874</td><td>-0.8066191</td><td>-0.5407962</td></tr>
      <tr><th>9</th><td>0.9</td><td>-0.3518224</td><td>0.4159332</td><td>1.077904</td></tr>
      <tr><th>10</th><td>1</td><td>-0.0974445</td><td>-0.2869201</td><td>2.155656</td></tr>
      <tr><th>11</th><td>1.1</td><td>-0.5178525</td><td>-1.549314</td><td>-0.8063981</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.6045594</td><td>0.8899072</td><td>-0.8333816</td></tr>
      <tr><th>13</th><td>1.3</td><td>-1.100775</td><td>0.9287072</td><td>1.323917</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.1961974</td><td>-1.603771</td><td>1.544507</td></tr>
      <tr><th>15</th><td>1.5</td><td>0.6170416</td><td>0.07369871</td><td>-0.2251255</td></tr>
      <tr><th>16</th><td>1.6</td><td>0.2047789</td><td>0.2557125</td><td>0.8125243</td></tr>
      <tr><th>17</th><td>1.7</td><td>-0.954517</td><td>0.1920683</td><td>-1.613397</td></tr>
      <tr><th>18</th><td>1.8</td><td>0.1101541</td><td>-2.42465</td><td>0.3646151</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.06866865</td><td>-0.8869588</td><td>-0.8920528</td></tr>
      <tr><th>20</th><td>2</td><td>0.2147604</td><td>0.4131457</td><td>2.437951</td></tr>
      <tr><th>21</th><td>2.1</td><td>-0.5986968</td><td>-0.7676578</td><td>0.8878634</td></tr>
      <tr><th>22</th><td>2.2</td><td>-1.22461</td><td>-1.005347</td><td>-2.181899</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.546323</td><td>0.3804257</td><td>-1.906319</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.5655713</td><td>1.567048</td><td>0.3499143</td></tr>
      <tr><th>25</th><td>2.5</td><td>0.4612357</td><td>1.829628</td><td>-1.179691</td></tr>
      <tr><th>26</th><td>2.6</td><td>0.3477898</td><td>3.108279</td><td>0.1861576</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.6618132</td><td>1.894513</td><td>1.00594</td></tr>
      <tr><th>28</th><td>2.8</td><td>0.5481152</td><td>0.6036646</td><td>-0.9213499</td></tr>
      <tr><th>29</th><td>2.9</td><td>-0.08097863</td><td>1.10576</td><td>0.05754911</td></tr>
      <tr><th>30</th><td>3</td><td>0.3635713</td><td>-1.478295</td><td>-0.2315717</td></tr>
      <tr><th>31</th><td>3.1</td><td>-0.2124998</td><td>-0.09309565</td><td>-0.9650457</td></tr>
      <tr><th>32</th><td>3.2</td><td>1.336845</td><td>-0.7257901</td><td>1.037399</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.4790477</td><td>0.6267366</td><td>0.08767963</td></tr>
      <tr><th>34</th><td>3.4</td><td>2.336825</td><td>1.509108</td><td>0.1507398</td></tr>
      <tr><th>35</th><td>3.5</td><td>0.1649107</td><td>-0.5832202</td><td>1.305687</td></tr>
      <tr><th>36</th><td>3.6</td><td>0.6250691</td><td>0.4441453</td><td>1.09279</td></tr>
      <tr><th>37</th><td>3.7</td><td>1.06289</td><td>0.7587921</td><td>-1.57033</td></tr>
      <tr><th>38</th><td>3.8</td><td>-0.08521241</td><td>-0.5897706</td><td>0.6631808</td></tr>
      <tr><th>39</th><td>3.9</td><td>-0.9607199</td><td>-0.4255128</td><td>-0.09737291</td></tr>
      <tr><th>40</th><td>4</td><td>-1.382942</td><td>-1.291259</td><td>1.255174</td></tr>
      <tr><th>41</th><td>4.1</td><td>-0.07004125</td><td>0.5651078</td><td>-0.7026784</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.4358332</td><td>-0.1311353</td><td>-1.44618</td></tr>
      <tr><th>43</th><td>4.3</td><td>0.1051563</td><td>-0.2454283</td><td>0.1042846</td></tr>
      <tr><th>44</th><td>4.4</td><td>-0.2876865</td><td>0.1652497</td><td>2.019155</td></tr>
      <tr><th>45</th><td>4.5</td><td>3.349333</td><td>-1.660135</td><td>-0.03965386</td></tr>
      <tr><th>46</th><td>4.6</td><td>-1.427987</td><td>0.8647859</td><td>-1.114602</td></tr>
      <tr><th>47</th><td>4.7</td><td>-1.600976</td><td>-0.2751548</td><td>-0.913145</td></tr>
      <tr><th>48</th><td>4.8</td><td>2.205601</td><td>-0.7488391</td><td>-0.4772446</td></tr>
      <tr><th>49</th><td>4.9</td><td>-0.5660207</td><td>1.222092</td><td>-1.186126</td></tr>
      <tr><th>50</th><td>5</td><td>-1.190024</td><td>-1.299397</td><td>0.2596152</td></tr>
      <tr><th>51</th><td>5.1</td><td>1.820027</td><td>-0.7251176</td><td>0.2978715</td></tr>
      <tr><th>52</th><td>5.2</td><td>0.2863283</td><td>-0.9335143</td><td>0.5561021</td></tr>
      <tr><th>53</th><td>5.3</td><td>-1.428913</td><td>1.23319</td><td>0.109118</td></tr>
      <tr><th>54</th><td>5.4</td><td>0.4944691</td><td>-0.0011963</td><td>1.688238</td></tr>
      <tr><th>55</th><td>5.5</td><td>0.8782858</td><td>0.744697</td><td>-1.462288</td></tr>
      <tr><th>56</th><td>5.6</td><td>2.939491</td><td>0.4590925</td><td>-1.157146</td></tr>
      <tr><th>57</th><td>5.7</td><td>0.794853</td><td>1.037844</td><td>0.4887138</td></tr>
      <tr><th>58</th><td>5.8</td><td>-0.8458777</td><td>-0.01193308</td><td>-1.62566</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.4796873</td><td>0.02635256</td><td>0.4607732</td></tr>
      <tr><th>60</th><td>6</td><td>-0.79236</td><td>0.2779957</td><td>1.127869</td></tr>
      <tr><th>61</th><td>6.1</td><td>0.03713725</td><td>-0.07417214</td><td>1.822057</td></tr>
      <tr><th>62</th><td>6.2</td><td>-0.2922425</td><td>-1.398449</td><td>1.110546</td></tr>
      <tr><th>63</th><td>6.3</td><td>-0.5399916</td><td>-1.201526</td><td>0.009991884</td></tr>
      <tr><th>64</th><td>6.4</td><td>1.19235</td><td>-0.08817278</td><td>-0.3227872</td></tr>
      <tr><th>65</th><td>6.5</td><td>-0.122819</td><td>-0.6048739</td><td>-0.8188707</td></tr>
      <tr><th>66</th><td>6.6</td><td>-0.4027716</td><td>1.181396</td><td>-0.09946286</td></tr>
      <tr><th>67</th><td>6.7</td><td>-1.005573</td><td>1.514291</td><td>-1.0663</td></tr>
      <tr><th>68</th><td>6.8</td><td>0.4900552</td><td>-0.6164454</td><td>-0.9333535</td></tr>
      <tr><th>69</th><td>6.9</td><td>0.5810225</td><td>1.63913</td><td>0.7672965</td></tr>
      <tr><th>70</th><td>7</td><td>1.457049</td><td>-0.9686572</td><td>0.9864912</td></tr>
      <tr><th>71</th><td>7.1</td><td>-0.9542297</td><td>0.9365307</td><td>1.249382</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.4863357</td><td>1.070951</td><td>0.03661349</td></tr>
      <tr><th>73</th><td>7.3</td><td>-0.05664486</td><td>-0.5661359</td><td>1.99357</td></tr>
      <tr><th>74</th><td>7.4</td><td>-1.241508</td><td>0.1382253</td><td>-0.8432228</td></tr>
      <tr><th>75</th><td>7.5</td><td>-0.9358667</td><td>0.08431724</td><td>-0.9283416</td></tr>
      <tr><th>76</th><td>7.6</td><td>2.174636</td><td>-1.743439</td><td>-0.4011171</td></tr>
      <tr><th>77</th><td>7.7</td><td>1.324662</td><td>2.432634</td><td>1.683621</td></tr>
      <tr><th>78</th><td>7.8</td><td>0.3133371</td><td>-1.857689</td><td>0.1737144</td></tr>
      <tr><th>79</th><td>7.9</td><td>-0.8749646</td><td>0.7273248</td><td>1.091073</td></tr>
      <tr><th>80</th><td>8</td><td>-1.247387</td><td>-0.2154051</td><td>-0.2887527</td></tr>
      <tr><th>81</th><td>8.1</td><td>0.04684708</td><td>-0.4268607</td><td>-0.0904156</td></tr>
      <tr><th>82</th><td>8.2</td><td>0.5261701</td><td>-0.8009108</td><td>0.8925943</td></tr>
      <tr><th>83</th><td>8.3</td><td>1.152995</td><td>1.382292</td><td>-0.4354472</td></tr>
      <tr><th>84</th><td>8.4</td><td>2.191938</td><td>0.4796323</td><td>-1.292094</td></tr>
      <tr><th>85</th><td>8.5</td><td>0.2934076</td><td>-0.04113529</td><td>1.434635</td></tr>
      <tr><th>86</th><td>8.6</td><td>0.1690504</td><td>2.804404</td><td>0.966928</td></tr>
      <tr><th>87</th><td>8.7</td><td>1.008943</td><td>1.059471</td><td>-1.58129</td></tr>
      <tr><th>88</th><td>8.8</td><td>1.931221</td><td>0.4923878</td><td>0.1434738</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.02787193</td><td>1.276497</td><td>-0.6083705</td></tr>
      <tr><th>90</th><td>9</td><td>-0.1573271</td><td>-0.9600385</td><td>0.7562795</td></tr>
      <tr><th>91</th><td>9.1</td><td>0.2398565</td><td>-1.136608</td><td>2.27016</td></tr>
      <tr><th>92</th><td>9.2</td><td>0.07345103</td><td>0.09435058</td><td>0.7941671</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.08675321</td><td>-1.97694</td><td>1.251276</td></tr>
      <tr><th>94</th><td>9.4</td><td>0.341863</td><td>-0.2980205</td><td>1.756421</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.09812474</td><td>0.7731821</td><td>1.064616</td></tr>
      <tr><th>96</th><td>9.6</td><td>0.9647847</td><td>-1.128023</td><td>0.5146519</td></tr>
      <tr><th>97</th><td>9.7</td><td>0.6146242</td><td>-1.157498</td><td>1.435806</td></tr>
      <tr><th>98</th><td>9.8</td><td>-0.09144104</td><td>0.988935</td><td>-0.748391</td></tr>
      <tr><th>99</th><td>9.9</td><td>0.1263903</td><td>0.2128699</td><td>2.313292</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-52

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 55-56

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 59-60

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.48403,0.187944,-1.23828]




.. GENERATED FROM PYTHON SOURCE LINES 64-65

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.48403,0.187944,-1.23828]




.. GENERATED FROM PYTHON SOURCE LINES 69-70

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 70-76

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.4840303662215255




.. GENERATED FROM PYTHON SOURCE LINES 77-78

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-0.4240384</td><td>0.5822521</td><td>-0.6430238</td></tr>
      <tr><th>1</th><td>1.404163</td><td>0.4586592</td><td>-1.300427</td></tr>
      <tr><th>2</th><td>0.8819586</td><td>-1.151637</td><td>1.145501</td></tr>
      <tr><th>3</th><td>0.4975145</td><td>-0.6208217</td><td>0.756235</td></tr>
      <tr><th>4</th><td>-0.02376298</td><td>-1.296988</td><td>1.919096</td></tr>
      <tr><th>5</th><td>1.085721</td><td>-1.458556</td><td>1.415124</td></tr>
      <tr><th>6</th><td>0.7750028</td><td>1.24058</td><td>-0.09476533</td></tr>
      <tr><th>7</th><td>-0.3690581</td><td>0.4476103</td><td>-0.8500388</td></tr>
      <tr><th>8</th><td>-1.049635</td><td>-0.3484447</td><td>0.5658648</td></tr>
      <tr><th>9</th><td>0.06042899</td><td>0.242381</td><td>1.311422</td></tr>
      <tr><th>10</th><td>1.128444</td><td>-0.1212749</td><td>-1.541638</td></tr>
      <tr><th>11</th><td>-2.338133</td><td>-0.4975778</td><td>0.2232858</td></tr>
      <tr><th>12</th><td>1.55461</td><td>0.9600371</td><td>-0.6399245</td></tr>
      <tr><th>13</th><td>0.2682831</td><td>0.9970832</td><td>-1.008684</td></tr>
      <tr><th>14</th><td>1.344627</td><td>0.06348782</td><td>-1.92739</td></tr>
      <tr><th>15</th><td>-1.290418</td><td>-1.684597</td><td>-0.9999204</td></tr>
      <tr><th>16</th><td>-1.678278</td><td>1.226673</td><td>1.70037</td></tr>
      <tr><th>17</th><td>0.4340996</td><td>-1.628232</td><td>-1.716137</td></tr>
      <tr><th>18</th><td>-0.9458158</td><td>-0.618464</td><td>0.549249</td></tr>
      <tr><th>19</th><td>-0.8022619</td><td>-0.3605393</td><td>-0.1244534</td></tr>
      <tr><th>20</th><td>-1.082092</td><td>0.3729238</td><td>1.79033</td></tr>
      <tr><th>21</th><td>-0.9319833</td><td>0.8501697</td><td>0.4975747</td></tr>
      <tr><th>22</th><td>-1.150237</td><td>-0.2373707</td><td>-1.26996</td></tr>
      <tr><th>23</th><td>1.922876</td><td>-1.37685</td><td>0.5279245</td></tr>
      <tr><th>24</th><td>1.795607</td><td>0.478153</td><td>-0.7249199</td></tr>
      <tr><th>25</th><td>0.2711696</td><td>-1.368088</td><td>0.4459787</td></tr>
      <tr><th>26</th><td>-0.2095513</td><td>1.724321</td><td>0.2465731</td></tr>
      <tr><th>27</th><td>0.2222046</td><td>0.3814814</td><td>0.583119</td></tr>
      <tr><th>28</th><td>-0.3010381</td><td>-0.6714071</td><td>1.481651</td></tr>
      <tr><th>29</th><td>-2.305423</td><td>-0.5498385</td><td>-1.249869</td></tr>
      <tr><th>30</th><td>0.3449076</td><td>-1.20063</td><td>2.203625</td></tr>
      <tr><th>31</th><td>1.243107</td><td>-0.8974388</td><td>0.4938933</td></tr>
      <tr><th>32</th><td>-0.6758485</td><td>0.2432524</td><td>1.156175</td></tr>
      <tr><th>33</th><td>-0.3634978</td><td>1.024837</td><td>-0.2294905</td></tr>
      <tr><th>34</th><td>-0.06654664</td><td>-0.389661</td><td>2.068964</td></tr>
      <tr><th>35</th><td>-0.1976434</td><td>-1.699753</td><td>0.08893016</td></tr>
      <tr><th>36</th><td>1.506104</td><td>-1.633749</td><td>1.20125</td></tr>
      <tr><th>37</th><td>-0.4840304</td><td>0.1879443</td><td>-1.238276</td></tr>
      <tr><th>38</th><td>-1.285621</td><td>-0.06107584</td><td>-1.409316</td></tr>
      <tr><th>39</th><td>0.3794684</td><td>0.06346463</td><td>-1.2489</td></tr>
      <tr><th>40</th><td>2.006373</td><td>-1.412218</td><td>-1.360099</td></tr>
      <tr><th>41</th><td>-1.119384</td><td>0.8176843</td><td>0.1099674</td></tr>
      <tr><th>42</th><td>1.735334</td><td>-0.07138889</td><td>0.628571</td></tr>
      <tr><th>43</th><td>-0.04279047</td><td>0.4391397</td><td>-0.6191804</td></tr>
      <tr><th>44</th><td>0.2831311</td><td>0.2209234</td><td>0.9155268</td></tr>
      <tr><th>45</th><td>1.536517</td><td>0.3726139</td><td>0.923356</td></tr>
      <tr><th>46</th><td>0.9420511</td><td>-0.9295325</td><td>1.208062</td></tr>
      <tr><th>47</th><td>-1.975509</td><td>0.3931144</td><td>0.9063712</td></tr>
      <tr><th>48</th><td>-1.326523</td><td>0.1342485</td><td>-0.1753723</td></tr>
      <tr><th>49</th><td>-1.077514</td><td>0.3778048</td><td>-1.949603</td></tr>
      <tr><th>50</th><td>1.681638</td><td>0.7215976</td><td>-1.364382</td></tr>
      <tr><th>51</th><td>-1.132583</td><td>0.3274732</td><td>0.86862</td></tr>
      <tr><th>52</th><td>0.7858801</td><td>0.09591913</td><td>-0.0292676</td></tr>
      <tr><th>53</th><td>1.494413</td><td>-0.07885009</td><td>0.2750659</td></tr>
      <tr><th>54</th><td>-0.5859189</td><td>-1.021039</td><td>2.408234</td></tr>
      <tr><th>55</th><td>-0.4090011</td><td>-0.9446871</td><td>-0.06176498</td></tr>
      <tr><th>56</th><td>0.7179973</td><td>-0.0341824</td><td>-1.380533</td></tr>
      <tr><th>57</th><td>0.734309</td><td>-1.102641</td><td>1.992002</td></tr>
      <tr><th>58</th><td>-1.056216</td><td>1.476328</td><td>0.5668082</td></tr>
      <tr><th>59</th><td>0.05677446</td><td>-0.01379876</td><td>-0.6331587</td></tr>
      <tr><th>60</th><td>-0.2630901</td><td>1.359002</td><td>-1.013396</td></tr>
      <tr><th>61</th><td>1.0414</td><td>-2.038563</td><td>-0.2587845</td></tr>
      <tr><th>62</th><td>0.9752611</td><td>1.781333</td><td>-0.4970541</td></tr>
      <tr><th>63</th><td>-0.3415252</td><td>-1.047055</td><td>0.2885533</td></tr>
      <tr><th>64</th><td>-1.466847</td><td>0.3559937</td><td>2.048047</td></tr>
      <tr><th>65</th><td>1.248018</td><td>-0.4707027</td><td>0.7578352</td></tr>
      <tr><th>66</th><td>1.600577</td><td>0.3755559</td><td>0.2154173</td></tr>
      <tr><th>67</th><td>0.3495814</td><td>1.07088</td><td>-0.6454533</td></tr>
      <tr><th>68</th><td>0.6269992</td><td>-0.6523129</td><td>1.499089</td></tr>
      <tr><th>69</th><td>0.5793578</td><td>1.155397</td><td>-1.780959</td></tr>
      <tr><th>70</th><td>-0.1289327</td><td>-0.16967</td><td>-0.528121</td></tr>
      <tr><th>71</th><td>1.4412</td><td>1.170997</td><td>0.1453409</td></tr>
      <tr><th>72</th><td>-0.3667622</td><td>0.3077279</td><td>-0.6481787</td></tr>
      <tr><th>73</th><td>-0.8440077</td><td>-1.046403</td><td>-0.9678066</td></tr>
      <tr><th>74</th><td>-1.718036</td><td>0.4303447</td><td>-0.6192339</td></tr>
      <tr><th>75</th><td>0.3436362</td><td>-0.8040302</td><td>0.06371896</td></tr>
      <tr><th>76</th><td>0.3655399</td><td>-1.216922</td><td>0.1204609</td></tr>
      <tr><th>77</th><td>-0.2998113</td><td>-1.025568</td><td>-1.07606</td></tr>
      <tr><th>78</th><td>-0.3480188</td><td>-0.6130632</td><td>0.3054368</td></tr>
      <tr><th>79</th><td>0.2653862</td><td>1.358232</td><td>0.5302524</td></tr>
      <tr><th>80</th><td>-2.783262</td><td>0.8209105</td><td>-1.294488</td></tr>
      <tr><th>81</th><td>0.6540307</td><td>1.144995</td><td>0.6035133</td></tr>
      <tr><th>82</th><td>-0.9556825</td><td>-0.3504587</td><td>-0.3113566</td></tr>
      <tr><th>83</th><td>-0.6900452</td><td>0.4425911</td><td>-0.09230052</td></tr>
      <tr><th>84</th><td>-1.248795</td><td>0.1668691</td><td>-0.2054856</td></tr>
      <tr><th>85</th><td>-0.1561937</td><td>-1.00267</td><td>1.005655</td></tr>
      <tr><th>86</th><td>-0.7676148</td><td>-1.245308</td><td>-0.3153043</td></tr>
      <tr><th>87</th><td>2.064753</td><td>1.528164</td><td>1.098902</td></tr>
      <tr><th>88</th><td>-0.6024889</td><td>0.1528455</td><td>-1.999439</td></tr>
      <tr><th>89</th><td>1.178216</td><td>-0.08133246</td><td>-2.127717</td></tr>
      <tr><th>90</th><td>-1.060514</td><td>1.752431</td><td>0.2092639</td></tr>
      <tr><th>91</th><td>0.5119733</td><td>-1.466388</td><td>-1.918935</td></tr>
      <tr><th>92</th><td>-0.2867065</td><td>-0.4759047</td><td>0.4846602</td></tr>
      <tr><th>93</th><td>0.0116513</td><td>0.0345154</td><td>-0.847433</td></tr>
      <tr><th>94</th><td>2.570421</td><td>0.8617573</td><td>-0.1625995</td></tr>
      <tr><th>95</th><td>2.258675</td><td>-0.2001783</td><td>-0.3950348</td></tr>
      <tr><th>96</th><td>-1.208494</td><td>0.3435465</td><td>0.09928483</td></tr>
      <tr><th>97</th><td>2.29483</td><td>0.06478082</td><td>-1.227033</td></tr>
      <tr><th>98</th><td>0.774704</td><td>-0.4733353</td><td>-0.7690713</td></tr>
      <tr><th>99</th><td>0.2589076</td><td>-1.015981</td><td>-0.09566685</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.0562641,-0.0475373,-0.0172923]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 86-87

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-92

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 92-95

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
