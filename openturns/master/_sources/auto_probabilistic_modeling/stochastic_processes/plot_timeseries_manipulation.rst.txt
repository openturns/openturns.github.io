
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[0.0328243,-1.76061,-0.199494],[0.0906599,1.37832,0.121141],[0.144555,0.348886,0.397654],[0.632103,-0.272014,2.434],[0.979642,0.367139,0.286468],[-1.77339,-0.793223,0.356418],[0.817825,-0.826974,0.466529],[0.122364,1.14117,-1.16202],[-0.700681,-0.734072,-1.37537],[-0.954958,1.07386,-0.964813],[0.983102,-1.11286,1.13325],[-1.21789,0.766803,-1.48773],[0.720411,-0.258096,-1.21103],[-2.3158,-0.17002,0.257566],[2.29702,0.850899,-1.48527],[1.06709,-2.63991,0.755533],[0.0854374,1.73709,1.03503],[-1.13113,1.07893,1.06464],[-1.99926,0.401202,1.12139],[-1.57871,-0.247438,-0.340935],[-1.14803,0.0641009,1.5217],[0.763685,-1.22035,-1.1612],[0.0597009,-0.0106228,0.432229],[1.00136,-2.1854,0.367805],[0.906504,-1.46384,1.81639],[0.0373187,0.542641,-1.05926],[-0.189687,0.363353,1.94964],[0.230781,0.146472,-1.68086],[-0.0591035,1.02338,-0.166721],[-0.659711,-1.47672,0.0305542],[-0.748912,0.481783,-2.34016],[0.891392,0.656842,0.136501],[-0.423884,-1.414,-1.33467],[1.99586,-0.638325,0.783917],[0.927142,-0.743043,0.440513],[0.642327,0.0808881,-1.69984],[-0.77695,-0.00842591,-0.889408],[0.0462344,0.18017,-1.81775],[-0.188853,1.5534,-1.36294],[-0.474699,0.38955,1.65908],[-1.17801,0.0774478,0.733805],[0.119042,-0.87761,1.85272],[-1.07327,0.141427,1.74565],[-0.72941,2.13459,-0.659381],[1.11657,0.300828,-0.536077],[-0.847462,-1.09362,-0.767469],[0.094122,-0.0518012,1.7393],[1.3789,0.452378,1.62356],[0.820363,-0.664402,0.088143],[0.843293,-1.02337,0.407795],[0.166087,-0.438728,-1.60453],[1.19004,0.313881,0.966191],[0.927748,0.0336362,0.465514],[1.59593,0.164617,1.1089],[0.398923,1.31151,0.765371],[1.34939,-0.754517,-0.691975],[-1.25767,-1.6142,-0.66116],[0.923977,0.900121,-0.753327],[0.944461,0.425241,-0.143945],[0.697805,0.194533,1.40913],[1.54641,0.0877979,-0.938939],[1.37648,-0.842699,-0.948609],[-0.0721536,0.157651,0.76282],[-0.227396,0.310091,-0.730721],[2.20595,0.719942,-1.14135],[0.919121,-0.0970396,-0.0604226],[-0.0130067,-0.142556,1.19815],[0.604577,-0.800377,-0.11108],[-0.107438,-0.310693,0.395365],[0.603366,-2.57187,-1.58964],[-1.46341,1.91914,0.541078],[-0.246806,-0.312718,0.144422],[-0.815813,-0.883355,-0.761024],[-1.49184,1.04157,0.183301],[-0.297127,-1.18729,-1.85657],[-0.933007,0.333857,-1.22904],[1.31102,-0.883159,-1.68735],[0.227067,1.36194,-0.163382],[0.3402,0.275298,0.0807603],[0.915813,0.814401,-0.50742],[0.032065,-0.849587,-0.263907],[0.739981,-0.476252,0.568219],[0.935658,-1.49245,-0.272812],[0.148022,0.571231,-1.91543],[1.30465,1.47861,-0.0944902],[0.629676,-1.6527,0.942319],[0.0212525,0.151721,-0.00478151],[1.05729,1.15838,-0.107579],[-1.15516,-0.783876,-0.210274],[-0.457205,1.53782,-1.40135],[0.75334,0.55009,-0.0367796],[0.257846,0.851621,-0.222421],[0.0149395,0.396737,-0.857703],[2.60424,-1.24302,-1.84117],[-1.27855,0.595113,1.01402],[1.25955,0.993831,-0.371444],[0.491246,-0.235265,1.81184],[-0.634024,-0.293245,0.769133],[-0.446047,-0.13135,0.530385],[0.553343,1.44116,-1.02433]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-1.001006</td><td>0.2486881</td><td>-1.218161</td></tr>
      <tr><th>1</th><td>0.1</td><td>-0.3893987</td><td>0.2515287</td><td>-0.4337214</td></tr>
      <tr><th>2</th><td>0.2</td><td>-1.782616</td><td>-1.416077</td><td>1.938781</td></tr>
      <tr><th>3</th><td>0.3</td><td>-1.046867</td><td>-1.385253</td><td>0.1075085</td></tr>
      <tr><th>4</th><td>0.4</td><td>1.922795</td><td>0.3906383</td><td>-0.1971632</td></tr>
      <tr><th>5</th><td>0.5</td><td>-1.299899</td><td>-0.6955048</td><td>0.6343508</td></tr>
      <tr><th>6</th><td>0.6</td><td>1.106524</td><td>-0.005047934</td><td>-1.324195</td></tr>
      <tr><th>7</th><td>0.7</td><td>-2.207334</td><td>0.743999</td><td>-1.931023</td></tr>
      <tr><th>8</th><td>0.8</td><td>-0.2668714</td><td>-0.166236</td><td>-0.1903747</td></tr>
      <tr><th>9</th><td>0.9</td><td>0.9033383</td><td>-0.1537543</td><td>-1.018416</td></tr>
      <tr><th>10</th><td>1</td><td>-0.8763585</td><td>-0.2311804</td><td>-1.252958</td></tr>
      <tr><th>11</th><td>1.1</td><td>0.967455</td><td>0.4607547</td><td>1.156913</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.7092661</td><td>2.129001</td><td>0.8996543</td></tr>
      <tr><th>13</th><td>1.3</td><td>0.02012852</td><td>-0.5296426</td><td>-2.057306</td></tr>
      <tr><th>14</th><td>1.4</td><td>-1.639028</td><td>1.348739</td><td>-0.1044767</td></tr>
      <tr><th>15</th><td>1.5</td><td>-0.4766882</td><td>0.2536395</td><td>0.8714621</td></tr>
      <tr><th>16</th><td>1.6</td><td>-0.6177092</td><td>0.2445648</td><td>0.9524318</td></tr>
      <tr><th>17</th><td>1.7</td><td>1.425556</td><td>0.8673616</td><td>-0.1744752</td></tr>
      <tr><th>18</th><td>1.8</td><td>0.4041635</td><td>-0.9221754</td><td>-0.6242017</td></tr>
      <tr><th>19</th><td>1.9</td><td>-1.639676</td><td>-1.08098</td><td>1.026774</td></tr>
      <tr><th>20</th><td>2</td><td>-0.4361754</td><td>-1.419312</td><td>0.5559164</td></tr>
      <tr><th>21</th><td>2.1</td><td>-0.1503047</td><td>0.3414698</td><td>-0.7826171</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.9654658</td><td>-0.390343</td><td>0.1764887</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.2885686</td><td>1.569104</td><td>0.08566444</td></tr>
      <tr><th>24</th><td>2.4</td><td>0.2363319</td><td>0.1988766</td><td>-0.2558081</td></tr>
      <tr><th>25</th><td>2.5</td><td>0.638685</td><td>0.8126104</td><td>0.6083488</td></tr>
      <tr><th>26</th><td>2.6</td><td>0.5472369</td><td>1.48313</td><td>-1.015918</td></tr>
      <tr><th>27</th><td>2.7</td><td>0.2512066</td><td>-1.584944</td><td>0.6227918</td></tr>
      <tr><th>28</th><td>2.8</td><td>-1.909077</td><td>-1.207977</td><td>-0.3081506</td></tr>
      <tr><th>29</th><td>2.9</td><td>0.1119499</td><td>0.6556267</td><td>-0.9923127</td></tr>
      <tr><th>30</th><td>3</td><td>0.1662856</td><td>1.395732</td><td>0.7003543</td></tr>
      <tr><th>31</th><td>3.1</td><td>-0.6498586</td><td>0.4790545</td><td>0.4112519</td></tr>
      <tr><th>32</th><td>3.2</td><td>-0.8950764</td><td>1.113239</td><td>-0.07878202</td></tr>
      <tr><th>33</th><td>3.3</td><td>-0.9495356</td><td>0.4342769</td><td>0.6899447</td></tr>
      <tr><th>34</th><td>3.4</td><td>-1.194057</td><td>0.3312471</td><td>0.4167895</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.05564759</td><td>-1.201513</td><td>-2.386529</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.3502214</td><td>0.6105081</td><td>1.6564</td></tr>
      <tr><th>37</th><td>3.7</td><td>0.2164315</td><td>1.018241</td><td>0.7944661</td></tr>
      <tr><th>38</th><td>3.8</td><td>0.7672303</td><td>-0.8891568</td><td>0.9430503</td></tr>
      <tr><th>39</th><td>3.9</td><td>-0.7089686</td><td>0.5181706</td><td>0.1073057</td></tr>
      <tr><th>40</th><td>4</td><td>-1.000302</td><td>-0.4234767</td><td>0.7860771</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.4725794</td><td>0.2760595</td><td>1.985478</td></tr>
      <tr><th>42</th><td>4.2</td><td>-1.535046</td><td>1.436454</td><td>1.466113</td></tr>
      <tr><th>43</th><td>4.3</td><td>1.116856</td><td>-0.2626688</td><td>-0.7098914</td></tr>
      <tr><th>44</th><td>4.4</td><td>-0.9834577</td><td>-0.7082995</td><td>-0.1622652</td></tr>
      <tr><th>45</th><td>4.5</td><td>0.682647</td><td>0.7039083</td><td>2.592779</td></tr>
      <tr><th>46</th><td>4.6</td><td>1.16126</td><td>-0.3629845</td><td>-0.0292523</td></tr>
      <tr><th>47</th><td>4.7</td><td>-0.3483013</td><td>-0.1211396</td><td>-1.034112</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.8596449</td><td>-0.6344449</td><td>-1.649081</td></tr>
      <tr><th>49</th><td>4.9</td><td>-0.6533382</td><td>-0.01916866</td><td>1.470254</td></tr>
      <tr><th>50</th><td>5</td><td>-0.849025</td><td>-0.380601</td><td>0.8615497</td></tr>
      <tr><th>51</th><td>5.1</td><td>0.7936455</td><td>-0.009122541</td><td>-1.609294</td></tr>
      <tr><th>52</th><td>5.2</td><td>-0.1992086</td><td>-3.000991</td><td>-1.441912</td></tr>
      <tr><th>53</th><td>5.3</td><td>0.2663415</td><td>-1.413713</td><td>0.1563708</td></tr>
      <tr><th>54</th><td>5.4</td><td>-0.8572926</td><td>0.9959402</td><td>0.03452224</td></tr>
      <tr><th>55</th><td>5.5</td><td>0.9809132</td><td>0.9327893</td><td>-1.592413</td></tr>
      <tr><th>56</th><td>5.6</td><td>0.8175557</td><td>0.1613957</td><td>-1.047799</td></tr>
      <tr><th>57</th><td>5.7</td><td>-0.8844775</td><td>0.6698369</td><td>0.5161243</td></tr>
      <tr><th>58</th><td>5.8</td><td>1.19563</td><td>0.08293129</td><td>0.9662871</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.6634248</td><td>1.0976</td><td>-0.5098165</td></tr>
      <tr><th>60</th><td>6</td><td>0.6720292</td><td>-1.192964</td><td>-0.2946279</td></tr>
      <tr><th>61</th><td>6.1</td><td>-0.1857614</td><td>-0.1969824</td><td>0.2600317</td></tr>
      <tr><th>62</th><td>6.2</td><td>-0.4084103</td><td>1.423313</td><td>-0.009773588</td></tr>
      <tr><th>63</th><td>6.3</td><td>-0.48018</td><td>-0.13946</td><td>2.045554</td></tr>
      <tr><th>64</th><td>6.4</td><td>1.860726</td><td>1.657605</td><td>-0.1965585</td></tr>
      <tr><th>65</th><td>6.5</td><td>0.5685673</td><td>0.447762</td><td>-0.7424009</td></tr>
      <tr><th>66</th><td>6.6</td><td>-0.3614802</td><td>2.154808</td><td>0.1273736</td></tr>
      <tr><th>67</th><td>6.7</td><td>-1.710843</td><td>-1.402178</td><td>-0.2077746</td></tr>
      <tr><th>68</th><td>6.8</td><td>-0.3822458</td><td>0.3587595</td><td>0.672894</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.2064353</td><td>0.529256</td><td>-0.2356601</td></tr>
      <tr><th>70</th><td>7</td><td>0.3439331</td><td>-0.272344</td><td>0.5199466</td></tr>
      <tr><th>71</th><td>7.1</td><td>-0.8088777</td><td>1.17486</td><td>-0.6520547</td></tr>
      <tr><th>72</th><td>7.2</td><td>1.232046</td><td>-0.4258625</td><td>0.7435381</td></tr>
      <tr><th>73</th><td>7.3</td><td>0.7383978</td><td>-0.7105951</td><td>0.5764129</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.5920124</td><td>0.6441307</td><td>-0.860188</td></tr>
      <tr><th>75</th><td>7.5</td><td>-0.1744069</td><td>-0.6078544</td><td>0.4394777</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.3395173</td><td>0.1658067</td><td>1.07204</td></tr>
      <tr><th>77</th><td>7.7</td><td>-0.2555073</td><td>0.07301777</td><td>-0.1520064</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.542278</td><td>-0.5553631</td><td>0.8108561</td></tr>
      <tr><th>79</th><td>7.9</td><td>0.09328187</td><td>-0.6262623</td><td>0.8390133</td></tr>
      <tr><th>80</th><td>8</td><td>0.2776292</td><td>0.6125624</td><td>-1.694965</td></tr>
      <tr><th>81</th><td>8.1</td><td>0.3077363</td><td>0.2399456</td><td>-0.6928465</td></tr>
      <tr><th>82</th><td>8.2</td><td>-0.808833</td><td>-0.4792192</td><td>0.4141333</td></tr>
      <tr><th>83</th><td>8.3</td><td>0.4802134</td><td>1.206641</td><td>-2.490653</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.5858545</td><td>1.445324</td><td>1.004096</td></tr>
      <tr><th>85</th><td>8.5</td><td>-1.994995</td><td>1.167513</td><td>-0.1818607</td></tr>
      <tr><th>86</th><td>8.6</td><td>0.3019019</td><td>-1.435007</td><td>-0.09408303</td></tr>
      <tr><th>87</th><td>8.7</td><td>0.05739728</td><td>-0.8741507</td><td>-2.276213</td></tr>
      <tr><th>88</th><td>8.8</td><td>-1.709074</td><td>-1.177392</td><td>0.09426162</td></tr>
      <tr><th>89</th><td>8.9</td><td>-0.7384904</td><td>1.174429</td><td>-1.047885</td></tr>
      <tr><th>90</th><td>9</td><td>-0.8977948</td><td>0.1623577</td><td>0.661431</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.9432282</td><td>0.8430309</td><td>1.264395</td></tr>
      <tr><th>92</th><td>9.2</td><td>-1.976644</td><td>-0.2136958</td><td>-1.141235</td></tr>
      <tr><th>93</th><td>9.3</td><td>1.421655</td><td>-1.370898</td><td>0.7915171</td></tr>
      <tr><th>94</th><td>9.4</td><td>2.202751</td><td>0.6083063</td><td>-0.9537229</td></tr>
      <tr><th>95</th><td>9.5</td><td>0.8004699</td><td>1.053958</td><td>0.1609154</td></tr>
      <tr><th>96</th><td>9.6</td><td>-0.6346599</td><td>-1.390305</td><td>-1.312989</td></tr>
      <tr><th>97</th><td>9.7</td><td>-0.3909032</td><td>0.7366933</td><td>-2.908318</td></tr>
      <tr><th>98</th><td>9.8</td><td>-1.448293</td><td>-1.161976</td><td>-0.3180184</td></tr>
      <tr><th>99</th><td>9.9</td><td>-0.819718</td><td>-0.1326537</td><td>-0.6303015</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.0462344,0.18017,-1.81775]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.0462344,0.18017,-1.81775]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  0.046234435460383035




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0.03282432</td><td>-1.760613</td><td>-0.199494</td></tr>
      <tr><th>1</th><td>0.09065995</td><td>1.378324</td><td>0.1211408</td></tr>
      <tr><th>2</th><td>0.1445553</td><td>0.348886</td><td>0.3976543</td></tr>
      <tr><th>3</th><td>0.6321033</td><td>-0.272014</td><td>2.434</td></tr>
      <tr><th>4</th><td>0.979642</td><td>0.367139</td><td>0.2864679</td></tr>
      <tr><th>5</th><td>-1.773392</td><td>-0.7932233</td><td>0.3564178</td></tr>
      <tr><th>6</th><td>0.8178251</td><td>-0.8269743</td><td>0.4665286</td></tr>
      <tr><th>7</th><td>0.1223638</td><td>1.14117</td><td>-1.162021</td></tr>
      <tr><th>8</th><td>-0.7006806</td><td>-0.7340724</td><td>-1.375373</td></tr>
      <tr><th>9</th><td>-0.9549583</td><td>1.073861</td><td>-0.9648128</td></tr>
      <tr><th>10</th><td>0.9831016</td><td>-1.112864</td><td>1.133248</td></tr>
      <tr><th>11</th><td>-1.217893</td><td>0.7668033</td><td>-1.487725</td></tr>
      <tr><th>12</th><td>0.7204114</td><td>-0.2580958</td><td>-1.211033</td></tr>
      <tr><th>13</th><td>-2.315804</td><td>-0.1700201</td><td>0.2575658</td></tr>
      <tr><th>14</th><td>2.297021</td><td>0.8508986</td><td>-1.485267</td></tr>
      <tr><th>15</th><td>1.06709</td><td>-2.639908</td><td>0.7555326</td></tr>
      <tr><th>16</th><td>0.08543736</td><td>1.737089</td><td>1.035026</td></tr>
      <tr><th>17</th><td>-1.131126</td><td>1.078925</td><td>1.064638</td></tr>
      <tr><th>18</th><td>-1.999265</td><td>0.4012022</td><td>1.121391</td></tr>
      <tr><th>19</th><td>-1.578708</td><td>-0.2474383</td><td>-0.3409351</td></tr>
      <tr><th>20</th><td>-1.14803</td><td>0.06410092</td><td>1.5217</td></tr>
      <tr><th>21</th><td>0.7636848</td><td>-1.220351</td><td>-1.161202</td></tr>
      <tr><th>22</th><td>0.05970089</td><td>-0.0106228</td><td>0.4322291</td></tr>
      <tr><th>23</th><td>1.001361</td><td>-2.185398</td><td>0.3678045</td></tr>
      <tr><th>24</th><td>0.9065041</td><td>-1.463844</td><td>1.816389</td></tr>
      <tr><th>25</th><td>0.03731868</td><td>0.5426405</td><td>-1.059259</td></tr>
      <tr><th>26</th><td>-0.1896872</td><td>0.3633526</td><td>1.949641</td></tr>
      <tr><th>27</th><td>0.2307813</td><td>0.1464724</td><td>-1.680861</td></tr>
      <tr><th>28</th><td>-0.05910353</td><td>1.023378</td><td>-0.1667206</td></tr>
      <tr><th>29</th><td>-0.6597111</td><td>-1.476721</td><td>0.0305542</td></tr>
      <tr><th>30</th><td>-0.7489119</td><td>0.4817828</td><td>-2.340159</td></tr>
      <tr><th>31</th><td>0.8913923</td><td>0.6568423</td><td>0.136501</td></tr>
      <tr><th>32</th><td>-0.4238837</td><td>-1.413998</td><td>-1.334672</td></tr>
      <tr><th>33</th><td>1.995861</td><td>-0.6383254</td><td>0.7839167</td></tr>
      <tr><th>34</th><td>0.9271422</td><td>-0.7430426</td><td>0.4405133</td></tr>
      <tr><th>35</th><td>0.6423274</td><td>0.08088806</td><td>-1.699836</td></tr>
      <tr><th>36</th><td>-0.7769498</td><td>-0.008425912</td><td>-0.8894082</td></tr>
      <tr><th>37</th><td>0.04623444</td><td>0.1801702</td><td>-1.817755</td></tr>
      <tr><th>38</th><td>-0.1888527</td><td>1.5534</td><td>-1.362937</td></tr>
      <tr><th>39</th><td>-0.4746989</td><td>0.3895501</td><td>1.659078</td></tr>
      <tr><th>40</th><td>-1.178005</td><td>0.07744777</td><td>0.733805</td></tr>
      <tr><th>41</th><td>0.1190419</td><td>-0.8776105</td><td>1.85272</td></tr>
      <tr><th>42</th><td>-1.073271</td><td>0.141427</td><td>1.745654</td></tr>
      <tr><th>43</th><td>-0.7294098</td><td>2.134591</td><td>-0.6593805</td></tr>
      <tr><th>44</th><td>1.116566</td><td>0.3008282</td><td>-0.5360765</td></tr>
      <tr><th>45</th><td>-0.8474616</td><td>-1.093621</td><td>-0.7674686</td></tr>
      <tr><th>46</th><td>0.09412198</td><td>-0.05180115</td><td>1.739299</td></tr>
      <tr><th>47</th><td>1.378902</td><td>0.4523782</td><td>1.623564</td></tr>
      <tr><th>48</th><td>0.8203626</td><td>-0.6644024</td><td>0.08814304</td></tr>
      <tr><th>49</th><td>0.8432928</td><td>-1.023371</td><td>0.4077951</td></tr>
      <tr><th>50</th><td>0.1660869</td><td>-0.4387282</td><td>-1.604525</td></tr>
      <tr><th>51</th><td>1.190039</td><td>0.313881</td><td>0.9661909</td></tr>
      <tr><th>52</th><td>0.9277478</td><td>0.03363619</td><td>0.465514</td></tr>
      <tr><th>53</th><td>1.595929</td><td>0.1646175</td><td>1.1089</td></tr>
      <tr><th>54</th><td>0.3989232</td><td>1.311506</td><td>0.7653709</td></tr>
      <tr><th>55</th><td>1.349395</td><td>-0.7545167</td><td>-0.6919747</td></tr>
      <tr><th>56</th><td>-1.257673</td><td>-1.614202</td><td>-0.6611602</td></tr>
      <tr><th>57</th><td>0.9239766</td><td>0.9001209</td><td>-0.7533271</td></tr>
      <tr><th>58</th><td>0.944461</td><td>0.4252406</td><td>-0.1439454</td></tr>
      <tr><th>59</th><td>0.6978048</td><td>0.1945327</td><td>1.409126</td></tr>
      <tr><th>60</th><td>1.546405</td><td>0.08779786</td><td>-0.9389395</td></tr>
      <tr><th>61</th><td>1.376481</td><td>-0.842699</td><td>-0.9486085</td></tr>
      <tr><th>62</th><td>-0.07215359</td><td>0.1576511</td><td>0.7628198</td></tr>
      <tr><th>63</th><td>-0.2273957</td><td>0.3100911</td><td>-0.7307205</td></tr>
      <tr><th>64</th><td>2.205946</td><td>0.7199423</td><td>-1.141346</td></tr>
      <tr><th>65</th><td>0.9191209</td><td>-0.09703962</td><td>-0.06042258</td></tr>
      <tr><th>66</th><td>-0.01300672</td><td>-0.1425556</td><td>1.198153</td></tr>
      <tr><th>67</th><td>0.6045771</td><td>-0.8003767</td><td>-0.1110804</td></tr>
      <tr><th>68</th><td>-0.1074385</td><td>-0.3106927</td><td>0.3953653</td></tr>
      <tr><th>69</th><td>0.6033658</td><td>-2.571867</td><td>-1.589638</td></tr>
      <tr><th>70</th><td>-1.463412</td><td>1.919136</td><td>0.5410775</td></tr>
      <tr><th>71</th><td>-0.2468062</td><td>-0.3127179</td><td>0.1444224</td></tr>
      <tr><th>72</th><td>-0.815813</td><td>-0.8833552</td><td>-0.7610243</td></tr>
      <tr><th>73</th><td>-1.491844</td><td>1.041574</td><td>0.1833013</td></tr>
      <tr><th>74</th><td>-0.2971273</td><td>-1.187294</td><td>-1.856572</td></tr>
      <tr><th>75</th><td>-0.9330069</td><td>0.3338572</td><td>-1.229042</td></tr>
      <tr><th>76</th><td>1.311021</td><td>-0.8831588</td><td>-1.687352</td></tr>
      <tr><th>77</th><td>0.2270674</td><td>1.361937</td><td>-0.1633817</td></tr>
      <tr><th>78</th><td>0.3402004</td><td>0.2752984</td><td>0.08076029</td></tr>
      <tr><th>79</th><td>0.9158129</td><td>0.8144012</td><td>-0.5074198</td></tr>
      <tr><th>80</th><td>0.03206502</td><td>-0.8495875</td><td>-0.2639074</td></tr>
      <tr><th>81</th><td>0.7399808</td><td>-0.4762519</td><td>0.568219</td></tr>
      <tr><th>82</th><td>0.9356582</td><td>-1.49245</td><td>-0.2728125</td></tr>
      <tr><th>83</th><td>0.1480225</td><td>0.5712306</td><td>-1.915433</td></tr>
      <tr><th>84</th><td>1.304647</td><td>1.47861</td><td>-0.09449022</td></tr>
      <tr><th>85</th><td>0.6296762</td><td>-1.652703</td><td>0.9423192</td></tr>
      <tr><th>86</th><td>0.02125248</td><td>0.1517208</td><td>-0.004781511</td></tr>
      <tr><th>87</th><td>1.057293</td><td>1.158379</td><td>-0.1075793</td></tr>
      <tr><th>88</th><td>-1.155157</td><td>-0.7838761</td><td>-0.2102744</td></tr>
      <tr><th>89</th><td>-0.4572051</td><td>1.53782</td><td>-1.401352</td></tr>
      <tr><th>90</th><td>0.7533405</td><td>0.55009</td><td>-0.03677957</td></tr>
      <tr><th>91</th><td>0.2578464</td><td>0.8516209</td><td>-0.2224211</td></tr>
      <tr><th>92</th><td>0.01493948</td><td>0.3967369</td><td>-0.8577028</td></tr>
      <tr><th>93</th><td>2.604238</td><td>-1.243017</td><td>-1.841174</td></tr>
      <tr><th>94</th><td>-1.278554</td><td>0.5951131</td><td>1.014022</td></tr>
      <tr><th>95</th><td>1.259545</td><td>0.9938306</td><td>-0.3714443</td></tr>
      <tr><th>96</th><td>0.4912463</td><td>-0.2352655</td><td>1.811838</td></tr>
      <tr><th>97</th><td>-0.6340241</td><td>-0.293245</td><td>0.7691326</td></tr>
      <tr><th>98</th><td>-0.4460468</td><td>-0.1313498</td><td>0.5303854</td></tr>
      <tr><th>99</th><td>0.5533428</td><td>1.441163</td><td>-1.024335</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.118084,-0.0114404,-0.0463274]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
