
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-0.0613121,0.91019,-1.08565],[0.661205,0.587299,0.268284],[-0.132387,1.80946,-1.34922],[0.286402,-1.52756,-1.22144],[0.551925,-1.17332,-0.734906],[1.12426,1.16443,-0.412002],[1.25343,-0.452006,-0.914151],[1.51078,0.957446,-0.586881],[2.43473,-1.00038,-0.318744],[-0.436966,-0.626212,1.20836],[-1.46987,0.3704,-1.5725],[-1.15912,-0.578002,-0.709271],[-0.480054,-1.5082,-0.307218],[1.88278,-0.445201,0.409],[0.445419,0.0702827,-0.112978],[1.82286,-1.47605,-0.885526],[0.67094,-0.477953,0.00312402],[-0.243252,1.00592,-1.17123],[-0.688199,0.105267,1.81845],[0.0147709,0.777729,0.367178],[-0.630745,-1.06394,-0.670144],[1.69527,1.06622,0.68961],[0.182774,-0.573639,0.661154],[0.0990378,-0.370697,0.847158],[0.746678,2.10168,0.508645],[1.38254,-0.997937,0.902506],[0.556635,-0.285475,-1.68729],[1.98061,-0.176747,2.63377],[1.65432,-1.1654,0.0235421],[0.182026,-0.535992,-0.0415815],[-2.03777,0.0536213,-0.732413],[-1.46085,0.251619,1.4077],[0.0221089,-2.32929,0.617752],[0.325153,-0.909031,-0.0501821],[-1.14831,0.418949,0.0759617],[-0.617352,1.47019,-0.729858],[0.582478,0.238613,-0.498743],[-0.273203,-1.15031,-1.37039],[-0.197252,-0.743005,0.492385],[-1.02762,1.13835,0.42857],[0.402159,-0.797421,-0.334574],[-0.27489,-0.293076,-0.441041],[-0.440598,0.320855,-1.54606],[-0.514261,0.646327,1.39259],[-2.02404,-2.42258,-0.394371],[0.384377,0.439283,0.359365],[0.271127,0.0991615,0.386539],[-0.637952,0.444088,-0.259045],[2.31956,0.209463,-1.48823],[-0.177051,-0.904952,-0.201424],[-1.09166,-0.123866,-0.790424],[-1.28137,-1.24181,1.26296],[-0.547564,-2.51008,-0.0411675],[-0.101243,1.30228,0.833631],[-0.0796709,0.719485,-1.08041],[0.26589,-0.220246,0.691573],[0.2237,-1.24803,-1.63613],[0.390455,-0.13467,0.676146],[1.82641,-0.325477,-0.583523],[-0.982855,1.20567,0.914478],[1.51267,1.31295,0.362316],[1.45703,-0.620996,-0.154392],[-0.589846,1.13079,-1.43339],[0.108273,-1.0206,0.824621],[-0.0986038,-2.23902,0.13417],[0.613795,-0.304081,0.799077],[-0.309174,0.841394,-1.33062],[-0.465357,0.176128,0.436171],[0.186211,-0.143996,-0.353386],[0.969212,1.84672,-2.18376],[-0.469822,-1.26444,1.46767],[-0.915415,-0.570442,-0.107154],[-0.592173,-0.785082,-0.132249],[-2.04292,0.133479,-0.226292],[-1.30498,-1.42966,0.765526],[2.16311,0.314318,0.853602],[-0.556772,-2.03945,0.0527715],[-1.35621,-0.697508,2.2314],[-0.747681,2.21473,0.192081],[0.16476,-0.00260757,-0.0337699],[1.24961,-0.946706,-0.0727251],[0.904399,1.33097,-0.731022],[0.717517,-1.00141,-0.316266],[0.285532,0.186574,1.05067],[-0.222147,0.907897,-1.45509],[0.0610754,0.31818,1.89277],[-0.985553,-0.721258,2.39961],[1.49571,0.539776,-0.0359812],[-0.502954,-1.07016,-0.109694],[0.0707337,-1.05097,0.446375],[-0.447453,-0.740141,-0.743724],[0.894015,-0.140292,1.29289],[-1.71663,1.32266,0.508837],[-0.036863,-2.78985,-1.15272],[-0.171283,-0.945402,1.10489],[0.163339,-0.240309,-0.440132],[1.30034,0.338202,0.261629],[-1.32234,0.263794,-1.7466],[1.41201,-0.187651,-0.809141],[-2.15506,-1.51052,0.77486]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>0.07868426</td><td>0.7169703</td><td>0.6424103</td></tr>
      <tr><th>1</th><td>0.1</td><td>0.1440436</td><td>0.001066874</td><td>-0.0003648472</td></tr>
      <tr><th>2</th><td>0.2</td><td>-1.233046</td><td>0.9019329</td><td>1.921221</td></tr>
      <tr><th>3</th><td>0.3</td><td>-0.5188416</td><td>-0.3544047</td><td>-0.05751257</td></tr>
      <tr><th>4</th><td>0.4</td><td>0.9465126</td><td>0.2177327</td><td>0.1599414</td></tr>
      <tr><th>5</th><td>0.5</td><td>2.489859</td><td>-1.246133</td><td>-0.6162581</td></tr>
      <tr><th>6</th><td>0.6</td><td>-0.948957</td><td>-0.2837645</td><td>-0.4025969</td></tr>
      <tr><th>7</th><td>0.7</td><td>0.381811</td><td>0.2849408</td><td>0.8104945</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.8346376</td><td>0.2466528</td><td>1.077356</td></tr>
      <tr><th>9</th><td>0.9</td><td>-0.8811239</td><td>0.3715054</td><td>-0.6373573</td></tr>
      <tr><th>10</th><td>1</td><td>-0.08434365</td><td>0.3144542</td><td>-0.1675935</td></tr>
      <tr><th>11</th><td>1.1</td><td>-0.5844607</td><td>0.9788612</td><td>-1.697548</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.9695048</td><td>1.637696</td><td>2.635594</td></tr>
      <tr><th>13</th><td>1.3</td><td>2.234793</td><td>1.018506</td><td>1.970877</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.1006529</td><td>0.5175343</td><td>-0.7208586</td></tr>
      <tr><th>15</th><td>1.5</td><td>0.1035553</td><td>0.01542735</td><td>-0.6466616</td></tr>
      <tr><th>16</th><td>1.6</td><td>1.007352</td><td>0.2480675</td><td>-1.324438</td></tr>
      <tr><th>17</th><td>1.7</td><td>0.3199805</td><td>0.9315395</td><td>-0.4575023</td></tr>
      <tr><th>18</th><td>1.8</td><td>0.8856339</td><td>-1.056281</td><td>0.6561635</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.1446857</td><td>0.4999844</td><td>0.628825</td></tr>
      <tr><th>20</th><td>2</td><td>-1.968402</td><td>-1.15597</td><td>-0.6148195</td></tr>
      <tr><th>21</th><td>2.1</td><td>0.1975866</td><td>0.5038005</td><td>0.5580187</td></tr>
      <tr><th>22</th><td>2.2</td><td>-1.440987</td><td>0.3767156</td><td>-0.2656158</td></tr>
      <tr><th>23</th><td>2.3</td><td>-0.7122686</td><td>0.0794188</td><td>1.488568</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.9285891</td><td>-0.6823337</td><td>0.4929167</td></tr>
      <tr><th>25</th><td>2.5</td><td>-0.5977638</td><td>-2.276206</td><td>-0.3797373</td></tr>
      <tr><th>26</th><td>2.6</td><td>-0.3858057</td><td>-0.607327</td><td>-0.2240406</td></tr>
      <tr><th>27</th><td>2.7</td><td>0.894273</td><td>0.1847035</td><td>-2.124227</td></tr>
      <tr><th>28</th><td>2.8</td><td>1.058254</td><td>-1.283298</td><td>-0.1265884</td></tr>
      <tr><th>29</th><td>2.9</td><td>0.2448417</td><td>-0.05744642</td><td>0.1996422</td></tr>
      <tr><th>30</th><td>3</td><td>-0.6788771</td><td>0.4948134</td><td>0.8785851</td></tr>
      <tr><th>31</th><td>3.1</td><td>-0.52978</td><td>-1.441205</td><td>0.4829281</td></tr>
      <tr><th>32</th><td>3.2</td><td>-0.8832996</td><td>0.2384584</td><td>-1.395669</td></tr>
      <tr><th>33</th><td>3.3</td><td>1.317473</td><td>2.252408</td><td>-1.472378</td></tr>
      <tr><th>34</th><td>3.4</td><td>0.6015391</td><td>-1.377767</td><td>0.3241693</td></tr>
      <tr><th>35</th><td>3.5</td><td>0.3668498</td><td>-0.2324059</td><td>0.2733834</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.06340752</td><td>1.398676</td><td>-1.009537</td></tr>
      <tr><th>37</th><td>3.7</td><td>-1.522546</td><td>-0.8501915</td><td>0.2188884</td></tr>
      <tr><th>38</th><td>3.8</td><td>-1.4327</td><td>0.1834034</td><td>-1.477686</td></tr>
      <tr><th>39</th><td>3.9</td><td>0.1278825</td><td>1.737163</td><td>-2.131532</td></tr>
      <tr><th>40</th><td>4</td><td>-1.197441</td><td>0.4191243</td><td>0.7041117</td></tr>
      <tr><th>41</th><td>4.1</td><td>-0.7082944</td><td>-1.203063</td><td>-1.018853</td></tr>
      <tr><th>42</th><td>4.2</td><td>0.5856736</td><td>-1.207744</td><td>-0.7730316</td></tr>
      <tr><th>43</th><td>4.3</td><td>0.6444698</td><td>2.066019</td><td>-1.064362</td></tr>
      <tr><th>44</th><td>4.4</td><td>1.229787</td><td>1.40607</td><td>-0.4067466</td></tr>
      <tr><th>45</th><td>4.5</td><td>-1.38212</td><td>-0.579167</td><td>0.305833</td></tr>
      <tr><th>46</th><td>4.6</td><td>1.274425</td><td>-1.252426</td><td>-0.7622344</td></tr>
      <tr><th>47</th><td>4.7</td><td>0.3555319</td><td>-0.3777629</td><td>-1.509626</td></tr>
      <tr><th>48</th><td>4.8</td><td>1.756588</td><td>-0.1217802</td><td>-1.005337</td></tr>
      <tr><th>49</th><td>4.9</td><td>1.495706</td><td>2.254154</td><td>-0.6535983</td></tr>
      <tr><th>50</th><td>5</td><td>-0.4125794</td><td>0.784677</td><td>2.789834</td></tr>
      <tr><th>51</th><td>5.1</td><td>1.376519</td><td>0.2147639</td><td>0.4475176</td></tr>
      <tr><th>52</th><td>5.2</td><td>0.3821017</td><td>0.8696953</td><td>2.010685</td></tr>
      <tr><th>53</th><td>5.3</td><td>0.5047263</td><td>0.2595689</td><td>1.981826</td></tr>
      <tr><th>54</th><td>5.4</td><td>1.527342</td><td>0.9708315</td><td>-0.4579499</td></tr>
      <tr><th>55</th><td>5.5</td><td>3.24252</td><td>1.179137</td><td>0.004140585</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.5199035</td><td>-0.3692695</td><td>-0.7282112</td></tr>
      <tr><th>57</th><td>5.7</td><td>-1.919039</td><td>-0.3867701</td><td>-0.2193647</td></tr>
      <tr><th>58</th><td>5.8</td><td>0.8126015</td><td>-0.02002045</td><td>0.1525734</td></tr>
      <tr><th>59</th><td>5.9</td><td>0.7614044</td><td>0.7308098</td><td>1.904142</td></tr>
      <tr><th>60</th><td>6</td><td>2.855362</td><td>0.5558466</td><td>-1.557271</td></tr>
      <tr><th>61</th><td>6.1</td><td>-0.6333448</td><td>-0.05264227</td><td>0.1260701</td></tr>
      <tr><th>62</th><td>6.2</td><td>1.67747</td><td>1.310249</td><td>0.09613919</td></tr>
      <tr><th>63</th><td>6.3</td><td>0.6210772</td><td>-1.279093</td><td>-1.81995</td></tr>
      <tr><th>64</th><td>6.4</td><td>-0.5359285</td><td>-0.5582372</td><td>1.635469</td></tr>
      <tr><th>65</th><td>6.5</td><td>0.7852473</td><td>1.297036</td><td>0.4405988</td></tr>
      <tr><th>66</th><td>6.6</td><td>-0.3616502</td><td>1.31954</td><td>0.4562168</td></tr>
      <tr><th>67</th><td>6.7</td><td>-1.106397</td><td>0.09388249</td><td>0.9648171</td></tr>
      <tr><th>68</th><td>6.8</td><td>0.5286218</td><td>0.6474249</td><td>0.6171914</td></tr>
      <tr><th>69</th><td>6.9</td><td>1.220562</td><td>1.562308</td><td>-1.101324</td></tr>
      <tr><th>70</th><td>7</td><td>1.974644</td><td>-1.099506</td><td>1.156804</td></tr>
      <tr><th>71</th><td>7.1</td><td>-0.3539532</td><td>0.2332994</td><td>-0.09270029</td></tr>
      <tr><th>72</th><td>7.2</td><td>0.1517434</td><td>-1.40427</td><td>0.2518957</td></tr>
      <tr><th>73</th><td>7.3</td><td>0.2989822</td><td>1.252278</td><td>-0.04297526</td></tr>
      <tr><th>74</th><td>7.4</td><td>-1.072822</td><td>0.31593</td><td>-0.3157422</td></tr>
      <tr><th>75</th><td>7.5</td><td>1.185975</td><td>-0.6544564</td><td>1.714237</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.9662048</td><td>0.2122922</td><td>-0.834022</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.8574476</td><td>-1.01667</td><td>1.762517</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.7333322</td><td>-0.4066032</td><td>0.01679586</td></tr>
      <tr><th>79</th><td>7.9</td><td>0.5059629</td><td>0.1331061</td><td>2.062358</td></tr>
      <tr><th>80</th><td>8</td><td>0.9836194</td><td>-0.8272659</td><td>-0.3864762</td></tr>
      <tr><th>81</th><td>8.1</td><td>0.3121512</td><td>-1.523378</td><td>1.156058</td></tr>
      <tr><th>82</th><td>8.2</td><td>-1.065794</td><td>-1.141514</td><td>1.211029</td></tr>
      <tr><th>83</th><td>8.3</td><td>0.5332905</td><td>-1.259764</td><td>0.7889693</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.1229396</td><td>0.1937505</td><td>-2.129502</td></tr>
      <tr><th>85</th><td>8.5</td><td>1.640193</td><td>1.876874</td><td>-1.352123</td></tr>
      <tr><th>86</th><td>8.6</td><td>1.02795</td><td>-0.5944415</td><td>-0.1230234</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.1634205</td><td>-0.2050259</td><td>1.958815</td></tr>
      <tr><th>88</th><td>8.8</td><td>2.466994</td><td>1.032221</td><td>-2.467122</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.1030582</td><td>-0.6605482</td><td>0.4599256</td></tr>
      <tr><th>90</th><td>9</td><td>-0.368771</td><td>0.15772</td><td>1.142946</td></tr>
      <tr><th>91</th><td>9.1</td><td>0.321961</td><td>-1.083891</td><td>-0.6882542</td></tr>
      <tr><th>92</th><td>9.2</td><td>0.5713381</td><td>3.235598</td><td>-0.4959345</td></tr>
      <tr><th>93</th><td>9.3</td><td>-0.2795772</td><td>-0.8753492</td><td>0.3574766</td></tr>
      <tr><th>94</th><td>9.4</td><td>-0.1559608</td><td>-1.815787</td><td>-0.6161008</td></tr>
      <tr><th>95</th><td>9.5</td><td>-1.488053</td><td>-1.050782</td><td>0.02222137</td></tr>
      <tr><th>96</th><td>9.6</td><td>-0.6117372</td><td>1.956348</td><td>0.9696569</td></tr>
      <tr><th>97</th><td>9.7</td><td>-0.6897973</td><td>0.08835142</td><td>0.9135547</td></tr>
      <tr><th>98</th><td>9.8</td><td>1.342008</td><td>1.467114</td><td>1.446935</td></tr>
      <tr><th>99</th><td>9.9</td><td>0.1741823</td><td>1.851451</td><td>-1.367474</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.273203,-1.15031,-1.37039]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.273203,-1.15031,-1.37039]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.2732025741437005




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-0.06131211</td><td>0.9101896</td><td>-1.085647</td></tr>
      <tr><th>1</th><td>0.6612054</td><td>0.5872992</td><td>0.2682837</td></tr>
      <tr><th>2</th><td>-0.132387</td><td>1.809458</td><td>-1.349216</td></tr>
      <tr><th>3</th><td>0.2864019</td><td>-1.527558</td><td>-1.221442</td></tr>
      <tr><th>4</th><td>0.5519249</td><td>-1.173317</td><td>-0.7349061</td></tr>
      <tr><th>5</th><td>1.124257</td><td>1.164426</td><td>-0.4120018</td></tr>
      <tr><th>6</th><td>1.253428</td><td>-0.4520057</td><td>-0.9141508</td></tr>
      <tr><th>7</th><td>1.510777</td><td>0.9574462</td><td>-0.5868813</td></tr>
      <tr><th>8</th><td>2.434728</td><td>-1.000382</td><td>-0.3187441</td></tr>
      <tr><th>9</th><td>-0.4369663</td><td>-0.6262118</td><td>1.208361</td></tr>
      <tr><th>10</th><td>-1.469867</td><td>0.3703997</td><td>-1.572502</td></tr>
      <tr><th>11</th><td>-1.159116</td><td>-0.578002</td><td>-0.7092705</td></tr>
      <tr><th>12</th><td>-0.4800542</td><td>-1.508203</td><td>-0.3072185</td></tr>
      <tr><th>13</th><td>1.882781</td><td>-0.4452011</td><td>0.4090004</td></tr>
      <tr><th>14</th><td>0.4454191</td><td>0.07028274</td><td>-0.1129779</td></tr>
      <tr><th>15</th><td>1.822864</td><td>-1.476055</td><td>-0.8855261</td></tr>
      <tr><th>16</th><td>0.6709396</td><td>-0.4779533</td><td>0.003124017</td></tr>
      <tr><th>17</th><td>-0.2432523</td><td>1.005919</td><td>-1.171232</td></tr>
      <tr><th>18</th><td>-0.6881989</td><td>0.1052668</td><td>1.818455</td></tr>
      <tr><th>19</th><td>0.01477092</td><td>0.7777286</td><td>0.3671781</td></tr>
      <tr><th>20</th><td>-0.6307449</td><td>-1.063943</td><td>-0.6701441</td></tr>
      <tr><th>21</th><td>1.695271</td><td>1.066215</td><td>0.6896104</td></tr>
      <tr><th>22</th><td>0.1827744</td><td>-0.5736391</td><td>0.6611536</td></tr>
      <tr><th>23</th><td>0.09903785</td><td>-0.3706967</td><td>0.8471577</td></tr>
      <tr><th>24</th><td>0.746678</td><td>2.101684</td><td>0.5086449</td></tr>
      <tr><th>25</th><td>1.382538</td><td>-0.9979375</td><td>0.9025056</td></tr>
      <tr><th>26</th><td>0.5566349</td><td>-0.2854749</td><td>-1.68729</td></tr>
      <tr><th>27</th><td>1.980607</td><td>-0.1767468</td><td>2.633773</td></tr>
      <tr><th>28</th><td>1.654317</td><td>-1.1654</td><td>0.0235421</td></tr>
      <tr><th>29</th><td>0.182026</td><td>-0.5359924</td><td>-0.0415815</td></tr>
      <tr><th>30</th><td>-2.037768</td><td>0.05362126</td><td>-0.7324133</td></tr>
      <tr><th>31</th><td>-1.460853</td><td>0.2516195</td><td>1.407705</td></tr>
      <tr><th>32</th><td>0.02210889</td><td>-2.329292</td><td>0.6177517</td></tr>
      <tr><th>33</th><td>0.325153</td><td>-0.9090306</td><td>-0.05018209</td></tr>
      <tr><th>34</th><td>-1.148312</td><td>0.4189487</td><td>0.07596171</td></tr>
      <tr><th>35</th><td>-0.6173519</td><td>1.470188</td><td>-0.7298584</td></tr>
      <tr><th>36</th><td>0.5824777</td><td>0.2386134</td><td>-0.4987431</td></tr>
      <tr><th>37</th><td>-0.2732026</td><td>-1.150307</td><td>-1.370394</td></tr>
      <tr><th>38</th><td>-0.1972516</td><td>-0.7430052</td><td>0.4923847</td></tr>
      <tr><th>39</th><td>-1.027621</td><td>1.138352</td><td>0.4285697</td></tr>
      <tr><th>40</th><td>0.4021586</td><td>-0.7974208</td><td>-0.3345737</td></tr>
      <tr><th>41</th><td>-0.2748904</td><td>-0.2930755</td><td>-0.4410411</td></tr>
      <tr><th>42</th><td>-0.4405984</td><td>0.3208555</td><td>-1.546055</td></tr>
      <tr><th>43</th><td>-0.5142607</td><td>0.6463268</td><td>1.392589</td></tr>
      <tr><th>44</th><td>-2.024039</td><td>-2.422579</td><td>-0.3943708</td></tr>
      <tr><th>45</th><td>0.3843766</td><td>0.4392828</td><td>0.3593648</td></tr>
      <tr><th>46</th><td>0.2711274</td><td>0.09916154</td><td>0.3865389</td></tr>
      <tr><th>47</th><td>-0.6379517</td><td>0.4440881</td><td>-0.259045</td></tr>
      <tr><th>48</th><td>2.31956</td><td>0.2094626</td><td>-1.48823</td></tr>
      <tr><th>49</th><td>-0.177051</td><td>-0.9049516</td><td>-0.2014242</td></tr>
      <tr><th>50</th><td>-1.091662</td><td>-0.1238661</td><td>-0.7904243</td></tr>
      <tr><th>51</th><td>-1.281368</td><td>-1.241813</td><td>1.26296</td></tr>
      <tr><th>52</th><td>-0.5475641</td><td>-2.51008</td><td>-0.04116753</td></tr>
      <tr><th>53</th><td>-0.101243</td><td>1.302284</td><td>0.8336308</td></tr>
      <tr><th>54</th><td>-0.07967091</td><td>0.7194851</td><td>-1.080414</td></tr>
      <tr><th>55</th><td>0.2658904</td><td>-0.2202462</td><td>0.6915731</td></tr>
      <tr><th>56</th><td>0.2236997</td><td>-1.248033</td><td>-1.636134</td></tr>
      <tr><th>57</th><td>0.3904548</td><td>-0.1346704</td><td>0.6761462</td></tr>
      <tr><th>58</th><td>1.82641</td><td>-0.3254765</td><td>-0.5835228</td></tr>
      <tr><th>59</th><td>-0.9828554</td><td>1.205671</td><td>0.9144782</td></tr>
      <tr><th>60</th><td>1.512672</td><td>1.312955</td><td>0.3623158</td></tr>
      <tr><th>61</th><td>1.457029</td><td>-0.620996</td><td>-0.1543916</td></tr>
      <tr><th>62</th><td>-0.5898458</td><td>1.130786</td><td>-1.433391</td></tr>
      <tr><th>63</th><td>0.1082727</td><td>-1.020598</td><td>0.8246206</td></tr>
      <tr><th>64</th><td>-0.0986038</td><td>-2.239017</td><td>0.1341704</td></tr>
      <tr><th>65</th><td>0.6137954</td><td>-0.3040813</td><td>0.7990768</td></tr>
      <tr><th>66</th><td>-0.3091735</td><td>0.8413943</td><td>-1.33062</td></tr>
      <tr><th>67</th><td>-0.4653569</td><td>0.1761282</td><td>0.4361712</td></tr>
      <tr><th>68</th><td>0.1862113</td><td>-0.1439955</td><td>-0.3533862</td></tr>
      <tr><th>69</th><td>0.9692115</td><td>1.846722</td><td>-2.183763</td></tr>
      <tr><th>70</th><td>-0.4698225</td><td>-1.264437</td><td>1.467667</td></tr>
      <tr><th>71</th><td>-0.9154149</td><td>-0.5704421</td><td>-0.1071537</td></tr>
      <tr><th>72</th><td>-0.5921735</td><td>-0.7850819</td><td>-0.1322488</td></tr>
      <tr><th>73</th><td>-2.042924</td><td>0.1334785</td><td>-0.2262918</td></tr>
      <tr><th>74</th><td>-1.304985</td><td>-1.429657</td><td>0.7655261</td></tr>
      <tr><th>75</th><td>2.163114</td><td>0.3143183</td><td>0.8536021</td></tr>
      <tr><th>76</th><td>-0.5567722</td><td>-2.039449</td><td>0.05277153</td></tr>
      <tr><th>77</th><td>-1.356214</td><td>-0.697508</td><td>2.231395</td></tr>
      <tr><th>78</th><td>-0.747681</td><td>2.214725</td><td>0.1920815</td></tr>
      <tr><th>79</th><td>0.1647597</td><td>-0.002607572</td><td>-0.03376987</td></tr>
      <tr><th>80</th><td>1.249608</td><td>-0.9467058</td><td>-0.07272515</td></tr>
      <tr><th>81</th><td>0.9043993</td><td>1.330969</td><td>-0.7310223</td></tr>
      <tr><th>82</th><td>0.7175169</td><td>-1.001414</td><td>-0.3162655</td></tr>
      <tr><th>83</th><td>0.2855318</td><td>0.1865744</td><td>1.050667</td></tr>
      <tr><th>84</th><td>-0.2221475</td><td>0.9078966</td><td>-1.455092</td></tr>
      <tr><th>85</th><td>0.06107541</td><td>0.3181796</td><td>1.892775</td></tr>
      <tr><th>86</th><td>-0.9855531</td><td>-0.7212578</td><td>2.399609</td></tr>
      <tr><th>87</th><td>1.495705</td><td>0.5397756</td><td>-0.03598116</td></tr>
      <tr><th>88</th><td>-0.502954</td><td>-1.070163</td><td>-0.1096941</td></tr>
      <tr><th>89</th><td>0.07073371</td><td>-1.050969</td><td>0.4463752</td></tr>
      <tr><th>90</th><td>-0.4474525</td><td>-0.7401409</td><td>-0.7437241</td></tr>
      <tr><th>91</th><td>0.8940154</td><td>-0.1402916</td><td>1.292892</td></tr>
      <tr><th>92</th><td>-1.716634</td><td>1.322657</td><td>0.5088374</td></tr>
      <tr><th>93</th><td>-0.03686304</td><td>-2.789846</td><td>-1.152717</td></tr>
      <tr><th>94</th><td>-0.171283</td><td>-0.9454024</td><td>1.104894</td></tr>
      <tr><th>95</th><td>0.1633392</td><td>-0.2403092</td><td>-0.4401324</td></tr>
      <tr><th>96</th><td>1.300341</td><td>0.3382017</td><td>0.2616285</td></tr>
      <tr><th>97</th><td>-1.322339</td><td>0.263794</td><td>-1.746605</td></tr>
      <tr><th>98</th><td>1.412012</td><td>-0.1876506</td><td>-0.8091405</td></tr>
      <tr><th>99</th><td>-2.15506</td><td>-1.510518</td><td>0.7748601</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.0522806,-0.127193,-0.0110375]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
