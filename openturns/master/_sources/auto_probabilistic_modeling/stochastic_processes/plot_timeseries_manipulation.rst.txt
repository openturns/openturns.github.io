
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[0.215267,0.571483,0.0132369],[-0.877273,1.03807,0.0775178],[-1.04032,0.410015,-1.59031],[-0.402606,-0.593921,0.991697],[-0.554281,0.65234,0.196039],[0.645454,-1.02102,1.02021],[0.851022,-1.10972,0.0101172],[1.91475,0.74231,1.94021],[0.958918,0.537723,0.20197],[1.24183,1.3444,-0.728051],[-1.03168,1.87411,-0.683316],[0.54591,1.46836,1.65012],[-0.575217,0.0634026,-0.035329],[-0.615948,0.568247,0.0937883],[-1.18574,-0.378412,0.548082],[0.354684,-0.490023,-1.042],[1.07046,0.763715,-0.890511],[0.164326,0.756402,0.590243],[-0.75342,-0.429749,-1.51772],[-0.201581,1.24436,0.621297],[0.00831444,0.442885,-1.30151],[0.865827,0.0924706,-0.7826],[-1.50554,2.47035,0.723323],[0.343414,-1.26871,0.777498],[-0.807886,0.199785,-0.654125],[0.658831,-1.0854,-0.464706],[-2.66297,-0.374623,-1.23618],[-0.00550379,0.65138,1.86674],[-0.497292,-1.33036,-1.23261],[1.56887,1.14453,2.15697],[-0.184017,0.209076,0.0942322],[-0.415509,-0.767327,1.69611],[0.85445,0.76449,-0.668068],[0.12925,-0.869448,-0.398794],[0.465574,-0.205406,-1.94247],[0.410833,0.266333,0.0545556],[-0.956943,-0.531694,0.279981],[-0.365493,-1.20518,-0.854947],[-0.760663,1.36623,0.25677],[-0.417559,0.424437,0.403163],[0.545161,2.3455,-0.8281],[0.468865,-0.0354301,1.84911],[-0.624911,-0.633688,-0.371238],[-1.73245,-1.42468,0.401785],[0.984415,-0.302718,-1.09424],[0.569542,1.95859,-0.0481515],[-0.496612,-0.0548471,2.5827],[0.199412,-0.39329,-0.394109],[0.331466,0.375641,-1.07664],[1.02613,0.120793,0.368672],[-0.27712,-0.958716,1.17546],[-1.22565,-1.00251,-0.329965],[-0.916671,-2.64779,-1.49628],[0.822241,-0.201419,-0.281524],[0.935736,-1.6129,2.11061],[1.11736,1.40611,-0.0477983],[-0.842586,-0.599046,2.25332],[0.0429952,0.144164,1.67074],[0.399045,0.467137,-2.23178],[-0.628806,-0.484382,-0.499594],[0.377352,-1.24877,-0.114676],[1.02831,-0.400071,-0.996304],[0.0403542,1.28449,1.42863],[-0.336435,0.804133,-1.43017],[0.742827,-0.466738,-0.270206],[1.12497,1.02396,-0.78181],[-0.071077,-1.13204,-0.763308],[0.926912,0.982716,-1.2208],[-0.197797,0.233123,0.804506],[1.09041,-0.163924,-1.31963],[-0.25489,-1.17903,-0.832913],[1.33188,-0.737637,0.299051],[0.655387,-3.82494,0.81825],[1.84336,0.590815,-1.21579],[-0.208515,1.6707,0.619341],[1.93766,0.701332,0.552271],[1.69589,-0.294596,-1.25401],[-0.293104,-0.00303059,0.49117],[1.55755,1.64063,-1.68435],[0.104288,0.054993,-0.692143],[0.405221,-0.758457,-1.59081],[-0.286087,0.215251,-0.552072],[-0.660355,-0.00135966,0.206314],[-0.544882,-1.13202,-0.373881],[-0.501552,-0.397095,-0.186889],[-0.252445,0.142852,0.21426],[-0.0637734,-0.522287,2.25353],[-1.07422,-1.49286,0.199092],[2.8503,0.0358647,-2.09227],[1.22925,-0.452939,0.289581],[-0.252056,-0.292518,-1.20159],[0.624484,0.0869797,0.524581],[1.32952,-0.889159,1.02414],[2.51216,-1.59561,1.35774],[-1.73069,1.0211,0.28809],[-1.87171,0.15825,-0.575872],[-0.78004,-1.20816,-1.83974],[-0.751793,0.10839,1.48963],[-0.247059,-0.156478,-0.818157],[1.71995,1.79177,0.657036]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-1.058506</td><td>-0.3160073</td><td>0.2694213</td></tr>
      <tr><th>1</th><td>0.1</td><td>-0.2448143</td><td>0.09649341</td><td>2.060963</td></tr>
      <tr><th>2</th><td>0.2</td><td>0.3988091</td><td>0.7970901</td><td>-0.2971624</td></tr>
      <tr><th>3</th><td>0.3</td><td>-0.1625201</td><td>-0.3253385</td><td>0.04502397</td></tr>
      <tr><th>4</th><td>0.4</td><td>-0.09748073</td><td>0.103843</td><td>-1.064006</td></tr>
      <tr><th>5</th><td>0.5</td><td>-0.6315809</td><td>-0.4932839</td><td>0.3649248</td></tr>
      <tr><th>6</th><td>0.6</td><td>1.165925</td><td>-2.099338</td><td>-1.205338</td></tr>
      <tr><th>7</th><td>0.7</td><td>-1.065096</td><td>-1.726425</td><td>-0.3919584</td></tr>
      <tr><th>8</th><td>0.8</td><td>1.516585</td><td>0.5574844</td><td>-0.3775669</td></tr>
      <tr><th>9</th><td>0.9</td><td>1.246249</td><td>-0.02463137</td><td>-0.2682055</td></tr>
      <tr><th>10</th><td>1</td><td>0.25966</td><td>0.1916858</td><td>1.260277</td></tr>
      <tr><th>11</th><td>1.1</td><td>-0.5663221</td><td>-2.878908</td><td>-0.7335128</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.1230128</td><td>-1.275747</td><td>-0.7236263</td></tr>
      <tr><th>13</th><td>1.3</td><td>0.1180033</td><td>-0.5797679</td><td>0.5544519</td></tr>
      <tr><th>14</th><td>1.4</td><td>-0.4360408</td><td>0.4863999</td><td>1.221396</td></tr>
      <tr><th>15</th><td>1.5</td><td>2.013444</td><td>-0.2954897</td><td>1.128674</td></tr>
      <tr><th>16</th><td>1.6</td><td>1.205961</td><td>0.4547031</td><td>-0.05387971</td></tr>
      <tr><th>17</th><td>1.7</td><td>-1.408606</td><td>-2.415027</td><td>-0.3454926</td></tr>
      <tr><th>18</th><td>1.8</td><td>0.2244594</td><td>0.2464433</td><td>-0.3780681</td></tr>
      <tr><th>19</th><td>1.9</td><td>-0.5196755</td><td>0.2022213</td><td>0.04975047</td></tr>
      <tr><th>20</th><td>2</td><td>1.07653</td><td>0.2581906</td><td>-0.3369321</td></tr>
      <tr><th>21</th><td>2.1</td><td>1.465979</td><td>-0.2183905</td><td>-0.1125034</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.2076656</td><td>-0.471434</td><td>-0.2122456</td></tr>
      <tr><th>23</th><td>2.3</td><td>-1.002004</td><td>-1.958918</td><td>-0.8352849</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.2829637</td><td>-1.162557</td><td>0.2538049</td></tr>
      <tr><th>25</th><td>2.5</td><td>-0.8751406</td><td>0.2793401</td><td>-1.390493</td></tr>
      <tr><th>26</th><td>2.6</td><td>-0.6718315</td><td>0.9296649</td><td>0.5834451</td></tr>
      <tr><th>27</th><td>2.7</td><td>0.5263575</td><td>1.14396</td><td>-1.383666</td></tr>
      <tr><th>28</th><td>2.8</td><td>-0.6832373</td><td>0.1463524</td><td>-0.1146858</td></tr>
      <tr><th>29</th><td>2.9</td><td>0.6608579</td><td>0.852639</td><td>1.09477</td></tr>
      <tr><th>30</th><td>3</td><td>-1.951988</td><td>0.3572615</td><td>0.01573848</td></tr>
      <tr><th>31</th><td>3.1</td><td>0.01399906</td><td>1.447751</td><td>0.3237593</td></tr>
      <tr><th>32</th><td>3.2</td><td>0.4835919</td><td>0.4137929</td><td>0.7075197</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.02668658</td><td>-2.373465</td><td>1.801269</td></tr>
      <tr><th>34</th><td>3.4</td><td>-0.2068509</td><td>1.243845</td><td>-0.2577394</td></tr>
      <tr><th>35</th><td>3.5</td><td>0.1967585</td><td>0.03536927</td><td>-1.775996</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.7747197</td><td>-0.3722049</td><td>-1.127798</td></tr>
      <tr><th>37</th><td>3.7</td><td>1.330094</td><td>0.2513554</td><td>0.6191113</td></tr>
      <tr><th>38</th><td>3.8</td><td>2.253637</td><td>-0.5955424</td><td>0.3337601</td></tr>
      <tr><th>39</th><td>3.9</td><td>-0.7080706</td><td>-0.7191859</td><td>1.233703</td></tr>
      <tr><th>40</th><td>4</td><td>-0.9976632</td><td>-0.7471829</td><td>2.192018</td></tr>
      <tr><th>41</th><td>4.1</td><td>-1.009482</td><td>-0.7665519</td><td>1.149961</td></tr>
      <tr><th>42</th><td>4.2</td><td>1.189754</td><td>-0.2996554</td><td>-0.7279126</td></tr>
      <tr><th>43</th><td>4.3</td><td>-1.007864</td><td>0.09227226</td><td>-1.631406</td></tr>
      <tr><th>44</th><td>4.4</td><td>-0.674379</td><td>0.2026042</td><td>-0.3878145</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.1277488</td><td>1.261549</td><td>-0.8640733</td></tr>
      <tr><th>46</th><td>4.6</td><td>1.393294</td><td>-1.112961</td><td>-0.7658782</td></tr>
      <tr><th>47</th><td>4.7</td><td>0.8618354</td><td>-1.8066</td><td>-1.366136</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.7610769</td><td>1.96232</td><td>-0.4741792</td></tr>
      <tr><th>49</th><td>4.9</td><td>0.1722438</td><td>0.3720484</td><td>1.292842</td></tr>
      <tr><th>50</th><td>5</td><td>-1.283715</td><td>1.511695</td><td>0.3158852</td></tr>
      <tr><th>51</th><td>5.1</td><td>-0.7964649</td><td>-0.7410487</td><td>0.5903179</td></tr>
      <tr><th>52</th><td>5.2</td><td>0.3666959</td><td>-0.758151</td><td>1.000876</td></tr>
      <tr><th>53</th><td>5.3</td><td>-1.830951</td><td>0.3341386</td><td>1.593477</td></tr>
      <tr><th>54</th><td>5.4</td><td>-1.038632</td><td>1.333375</td><td>-0.3963979</td></tr>
      <tr><th>55</th><td>5.5</td><td>-0.5455004</td><td>-0.5650399</td><td>-0.9170156</td></tr>
      <tr><th>56</th><td>5.6</td><td>1.143375</td><td>-0.1488761</td><td>0.02618161</td></tr>
      <tr><th>57</th><td>5.7</td><td>-1.981503</td><td>-0.5199438</td><td>0.401645</td></tr>
      <tr><th>58</th><td>5.8</td><td>1.796959</td><td>1.235535</td><td>1.169605</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.5528139</td><td>0.8475603</td><td>-1.140626</td></tr>
      <tr><th>60</th><td>6</td><td>1.34368</td><td>-0.01523305</td><td>0.1075532</td></tr>
      <tr><th>61</th><td>6.1</td><td>-2.217622</td><td>0.8221212</td><td>0.2448211</td></tr>
      <tr><th>62</th><td>6.2</td><td>0.05486118</td><td>-0.2648205</td><td>1.110411</td></tr>
      <tr><th>63</th><td>6.3</td><td>0.254856</td><td>-0.7048875</td><td>-2.401498</td></tr>
      <tr><th>64</th><td>6.4</td><td>1.035237</td><td>-1.691135</td><td>0.1805682</td></tr>
      <tr><th>65</th><td>6.5</td><td>-1.466491</td><td>0.3184543</td><td>0.6075719</td></tr>
      <tr><th>66</th><td>6.6</td><td>-1.502805</td><td>-0.2943068</td><td>-1.221878</td></tr>
      <tr><th>67</th><td>6.7</td><td>1.104679</td><td>-0.5167538</td><td>-0.8109591</td></tr>
      <tr><th>68</th><td>6.8</td><td>1.203833</td><td>-0.8919394</td><td>0.9410275</td></tr>
      <tr><th>69</th><td>6.9</td><td>0.6300353</td><td>0.811596</td><td>-0.7586145</td></tr>
      <tr><th>70</th><td>7</td><td>-0.7535054</td><td>0.5701438</td><td>1.731169</td></tr>
      <tr><th>71</th><td>7.1</td><td>0.2833852</td><td>-0.927978</td><td>0.3076523</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.3576748</td><td>0.8690618</td><td>-0.390777</td></tr>
      <tr><th>73</th><td>7.3</td><td>-0.3312553</td><td>-1.053091</td><td>-1.333549</td></tr>
      <tr><th>74</th><td>7.4</td><td>-1.31148</td><td>-0.5767336</td><td>-0.9549886</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.4893661</td><td>-0.5054456</td><td>-0.07607455</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.3021028</td><td>0.09967202</td><td>0.3045215</td></tr>
      <tr><th>77</th><td>7.7</td><td>-0.768383</td><td>0.4571054</td><td>-0.3134325</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.4657621</td><td>-0.8917852</td><td>0.5060349</td></tr>
      <tr><th>79</th><td>7.9</td><td>-0.6144702</td><td>1.66475</td><td>-0.08698161</td></tr>
      <tr><th>80</th><td>8</td><td>0.8710212</td><td>-0.6885688</td><td>-0.1894004</td></tr>
      <tr><th>81</th><td>8.1</td><td>-0.8079376</td><td>-1.409605</td><td>-0.526234</td></tr>
      <tr><th>82</th><td>8.2</td><td>-1.088404</td><td>-0.3380862</td><td>1.647344</td></tr>
      <tr><th>83</th><td>8.3</td><td>1.036872</td><td>0.3639811</td><td>0.153382</td></tr>
      <tr><th>84</th><td>8.4</td><td>-1.607859</td><td>-0.7323429</td><td>-1.500049</td></tr>
      <tr><th>85</th><td>8.5</td><td>-0.3077548</td><td>0.4126496</td><td>0.6483376</td></tr>
      <tr><th>86</th><td>8.6</td><td>-1.86932</td><td>0.3649758</td><td>-0.4946383</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.2366425</td><td>0.8588414</td><td>1.066848</td></tr>
      <tr><th>88</th><td>8.8</td><td>-0.8058632</td><td>2.067428</td><td>-0.2182213</td></tr>
      <tr><th>89</th><td>8.9</td><td>2.582057</td><td>0.831006</td><td>0.03680862</td></tr>
      <tr><th>90</th><td>9</td><td>-2.059983</td><td>0.5778637</td><td>0.7838969</td></tr>
      <tr><th>91</th><td>9.1</td><td>-0.9103035</td><td>1.521021</td><td>-0.1366099</td></tr>
      <tr><th>92</th><td>9.2</td><td>-0.1099991</td><td>-0.5398515</td><td>-0.8569013</td></tr>
      <tr><th>93</th><td>9.3</td><td>-0.1111269</td><td>-0.5925298</td><td>-0.2955557</td></tr>
      <tr><th>94</th><td>9.4</td><td>-1.434633</td><td>0.8056583</td><td>-0.05683871</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.2574137</td><td>-0.9684861</td><td>-0.9358754</td></tr>
      <tr><th>96</th><td>9.6</td><td>-0.3809046</td><td>0.6726558</td><td>-0.9427561</td></tr>
      <tr><th>97</th><td>9.7</td><td>0.7246495</td><td>0.1577125</td><td>0.667764</td></tr>
      <tr><th>98</th><td>9.8</td><td>0.007715776</td><td>-0.2850301</td><td>-0.8241279</td></tr>
      <tr><th>99</th><td>9.9</td><td>-2.19609</td><td>0.9679893</td><td>-1.228565</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.365493,-1.20518,-0.854947]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-0.365493,-1.20518,-0.854947]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -0.36549290173886056




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0.2152671</td><td>0.5714833</td><td>0.01323689</td></tr>
      <tr><th>1</th><td>-0.8772733</td><td>1.038067</td><td>0.07751784</td></tr>
      <tr><th>2</th><td>-1.040324</td><td>0.4100147</td><td>-1.59031</td></tr>
      <tr><th>3</th><td>-0.4026061</td><td>-0.5939212</td><td>0.9916975</td></tr>
      <tr><th>4</th><td>-0.5542806</td><td>0.6523397</td><td>0.1960388</td></tr>
      <tr><th>5</th><td>0.6454544</td><td>-1.021022</td><td>1.020208</td></tr>
      <tr><th>6</th><td>0.8510222</td><td>-1.109718</td><td>0.01011716</td></tr>
      <tr><th>7</th><td>1.914748</td><td>0.7423102</td><td>1.940206</td></tr>
      <tr><th>8</th><td>0.9589178</td><td>0.5377233</td><td>0.20197</td></tr>
      <tr><th>9</th><td>1.241831</td><td>1.344405</td><td>-0.728051</td></tr>
      <tr><th>10</th><td>-1.03168</td><td>1.874114</td><td>-0.6833155</td></tr>
      <tr><th>11</th><td>0.5459096</td><td>1.468363</td><td>1.650123</td></tr>
      <tr><th>12</th><td>-0.5752172</td><td>0.06340258</td><td>-0.03532896</td></tr>
      <tr><th>13</th><td>-0.615948</td><td>0.5682469</td><td>0.09378827</td></tr>
      <tr><th>14</th><td>-1.185742</td><td>-0.3784119</td><td>0.5480821</td></tr>
      <tr><th>15</th><td>0.3546836</td><td>-0.4900233</td><td>-1.042001</td></tr>
      <tr><th>16</th><td>1.070463</td><td>0.7637146</td><td>-0.8905114</td></tr>
      <tr><th>17</th><td>0.1643261</td><td>0.7564015</td><td>0.590243</td></tr>
      <tr><th>18</th><td>-0.7534195</td><td>-0.4297489</td><td>-1.517724</td></tr>
      <tr><th>19</th><td>-0.2015808</td><td>1.244358</td><td>0.6212968</td></tr>
      <tr><th>20</th><td>0.008314443</td><td>0.4428845</td><td>-1.301507</td></tr>
      <tr><th>21</th><td>0.8658269</td><td>0.0924706</td><td>-0.7825996</td></tr>
      <tr><th>22</th><td>-1.505543</td><td>2.470355</td><td>0.7233233</td></tr>
      <tr><th>23</th><td>0.3434141</td><td>-1.268713</td><td>0.7774982</td></tr>
      <tr><th>24</th><td>-0.8078859</td><td>0.199785</td><td>-0.6541253</td></tr>
      <tr><th>25</th><td>0.6588305</td><td>-1.085396</td><td>-0.4647056</td></tr>
      <tr><th>26</th><td>-2.662967</td><td>-0.3746233</td><td>-1.236185</td></tr>
      <tr><th>27</th><td>-0.005503787</td><td>0.6513801</td><td>1.866739</td></tr>
      <tr><th>28</th><td>-0.4972918</td><td>-1.330362</td><td>-1.232606</td></tr>
      <tr><th>29</th><td>1.568873</td><td>1.144528</td><td>2.156972</td></tr>
      <tr><th>30</th><td>-0.1840167</td><td>0.2090757</td><td>0.09423217</td></tr>
      <tr><th>31</th><td>-0.4155089</td><td>-0.767327</td><td>1.696113</td></tr>
      <tr><th>32</th><td>0.8544498</td><td>0.7644897</td><td>-0.6680682</td></tr>
      <tr><th>33</th><td>0.1292498</td><td>-0.8694484</td><td>-0.3987938</td></tr>
      <tr><th>34</th><td>0.465574</td><td>-0.2054064</td><td>-1.942473</td></tr>
      <tr><th>35</th><td>0.4108329</td><td>0.2663329</td><td>0.05455557</td></tr>
      <tr><th>36</th><td>-0.9569428</td><td>-0.5316945</td><td>0.2799807</td></tr>
      <tr><th>37</th><td>-0.3654929</td><td>-1.205182</td><td>-0.8549465</td></tr>
      <tr><th>38</th><td>-0.7606627</td><td>1.366226</td><td>0.2567704</td></tr>
      <tr><th>39</th><td>-0.4175595</td><td>0.4244374</td><td>0.4031633</td></tr>
      <tr><th>40</th><td>0.5451614</td><td>2.345503</td><td>-0.8280996</td></tr>
      <tr><th>41</th><td>0.4688648</td><td>-0.03543014</td><td>1.849114</td></tr>
      <tr><th>42</th><td>-0.6249114</td><td>-0.6336877</td><td>-0.3712384</td></tr>
      <tr><th>43</th><td>-1.732454</td><td>-1.424683</td><td>0.4017845</td></tr>
      <tr><th>44</th><td>0.984415</td><td>-0.3027182</td><td>-1.094245</td></tr>
      <tr><th>45</th><td>0.5695418</td><td>1.958592</td><td>-0.04815152</td></tr>
      <tr><th>46</th><td>-0.4966117</td><td>-0.05484708</td><td>2.582702</td></tr>
      <tr><th>47</th><td>0.1994118</td><td>-0.3932899</td><td>-0.3941093</td></tr>
      <tr><th>48</th><td>0.331466</td><td>0.3756414</td><td>-1.076636</td></tr>
      <tr><th>49</th><td>1.026129</td><td>0.1207927</td><td>0.3686717</td></tr>
      <tr><th>50</th><td>-0.2771204</td><td>-0.9587158</td><td>1.175464</td></tr>
      <tr><th>51</th><td>-1.225646</td><td>-1.002512</td><td>-0.3299648</td></tr>
      <tr><th>52</th><td>-0.9166708</td><td>-2.647794</td><td>-1.496281</td></tr>
      <tr><th>53</th><td>0.8222414</td><td>-0.2014192</td><td>-0.2815237</td></tr>
      <tr><th>54</th><td>0.9357363</td><td>-1.612902</td><td>2.110609</td></tr>
      <tr><th>55</th><td>1.117359</td><td>1.406114</td><td>-0.04779835</td></tr>
      <tr><th>56</th><td>-0.842586</td><td>-0.5990457</td><td>2.253319</td></tr>
      <tr><th>57</th><td>0.04299522</td><td>0.144164</td><td>1.670739</td></tr>
      <tr><th>58</th><td>0.3990447</td><td>0.4671369</td><td>-2.231775</td></tr>
      <tr><th>59</th><td>-0.6288059</td><td>-0.4843818</td><td>-0.4995939</td></tr>
      <tr><th>60</th><td>0.3773524</td><td>-1.248769</td><td>-0.1146757</td></tr>
      <tr><th>61</th><td>1.028307</td><td>-0.4000706</td><td>-0.9963041</td></tr>
      <tr><th>62</th><td>0.04035423</td><td>1.284495</td><td>1.428626</td></tr>
      <tr><th>63</th><td>-0.3364347</td><td>0.8041331</td><td>-1.430173</td></tr>
      <tr><th>64</th><td>0.7428268</td><td>-0.4667376</td><td>-0.2702065</td></tr>
      <tr><th>65</th><td>1.124965</td><td>1.023958</td><td>-0.7818096</td></tr>
      <tr><th>66</th><td>-0.07107701</td><td>-1.132044</td><td>-0.7633084</td></tr>
      <tr><th>67</th><td>0.9269123</td><td>0.9827157</td><td>-1.220799</td></tr>
      <tr><th>68</th><td>-0.1977971</td><td>0.2331228</td><td>0.8045064</td></tr>
      <tr><th>69</th><td>1.090408</td><td>-0.1639237</td><td>-1.319633</td></tr>
      <tr><th>70</th><td>-0.2548898</td><td>-1.179026</td><td>-0.832913</td></tr>
      <tr><th>71</th><td>1.331881</td><td>-0.7376375</td><td>0.2990507</td></tr>
      <tr><th>72</th><td>0.6553869</td><td>-3.824941</td><td>0.8182503</td></tr>
      <tr><th>73</th><td>1.843362</td><td>0.5908152</td><td>-1.215791</td></tr>
      <tr><th>74</th><td>-0.2085154</td><td>1.670705</td><td>0.6193414</td></tr>
      <tr><th>75</th><td>1.937664</td><td>0.7013325</td><td>0.5522709</td></tr>
      <tr><th>76</th><td>1.695888</td><td>-0.2945963</td><td>-1.254009</td></tr>
      <tr><th>77</th><td>-0.2931035</td><td>-0.003030588</td><td>0.4911702</td></tr>
      <tr><th>78</th><td>1.557549</td><td>1.640628</td><td>-1.684346</td></tr>
      <tr><th>79</th><td>0.1042879</td><td>0.054993</td><td>-0.6921433</td></tr>
      <tr><th>80</th><td>0.4052213</td><td>-0.7584573</td><td>-1.590811</td></tr>
      <tr><th>81</th><td>-0.2860874</td><td>0.2152512</td><td>-0.5520719</td></tr>
      <tr><th>82</th><td>-0.6603551</td><td>-0.001359664</td><td>0.2063139</td></tr>
      <tr><th>83</th><td>-0.544882</td><td>-1.132024</td><td>-0.3738806</td></tr>
      <tr><th>84</th><td>-0.5015525</td><td>-0.397095</td><td>-0.1868887</td></tr>
      <tr><th>85</th><td>-0.2524448</td><td>0.1428517</td><td>0.2142603</td></tr>
      <tr><th>86</th><td>-0.06377342</td><td>-0.5222875</td><td>2.253532</td></tr>
      <tr><th>87</th><td>-1.074225</td><td>-1.492857</td><td>0.1990917</td></tr>
      <tr><th>88</th><td>2.850299</td><td>0.03586473</td><td>-2.092267</td></tr>
      <tr><th>89</th><td>1.229253</td><td>-0.4529387</td><td>0.2895814</td></tr>
      <tr><th>90</th><td>-0.2520559</td><td>-0.2925182</td><td>-1.201592</td></tr>
      <tr><th>91</th><td>0.624484</td><td>0.08697972</td><td>0.5245812</td></tr>
      <tr><th>92</th><td>1.329518</td><td>-0.8891593</td><td>1.024142</td></tr>
      <tr><th>93</th><td>2.512156</td><td>-1.595609</td><td>1.357745</td></tr>
      <tr><th>94</th><td>-1.730685</td><td>1.021096</td><td>0.2880901</td></tr>
      <tr><th>95</th><td>-1.871712</td><td>0.1582503</td><td>-0.5758716</td></tr>
      <tr><th>96</th><td>-0.7800403</td><td>-1.20816</td><td>-1.839736</td></tr>
      <tr><th>97</th><td>-0.7517925</td><td>0.1083897</td><td>1.489632</td></tr>
      <tr><th>98</th><td>-0.2470594</td><td>-0.1564782</td><td>-0.8181575</td></tr>
      <tr><th>99</th><td>1.719954</td><td>1.791774</td><td>0.6570362</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.080337,-0.0142193,-0.0314592]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
