
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 7-22

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 24-30

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 38-40

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 40-44

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-0.712544,0.38721,-0.221006],[-0.636669,0.14115,-1.38222],[-0.960035,-0.673238,1.35691],[-1.47251,0.290016,-0.317309],[1.59493,0.427398,0.066735],[0.137792,0.371589,-0.409588],[0.412525,-0.791131,-0.313457],[0.683661,0.243208,1.35115],[-1.57217,0.759164,-0.542819],[0.894484,1.49631,1.49401],[0.0760767,3.03225,-0.0697185],[0.936287,0.0953481,0.554755],[-0.1598,-0.117537,0.851613],[-2.28089,0.415677,0.168619],[-0.476956,-1.24886,0.541194],[-2.16678,1.04714,0.407861],[-1.55476,-0.0455723,1.20322],[0.971123,-0.953376,-0.550257],[0.777423,0.483144,-0.172178],[1.00808,1.21784,-0.404144],[1.79304,-0.832992,1.63619],[0.618838,0.931492,0.370022],[1.65892,-0.758974,-0.123137],[-1.7007,-0.890134,-0.892908],[0.146301,-0.017828,0.199158],[-1.52129,1.87647,-1.65588],[0.0851666,0.402214,-1.74872],[0.555907,-1.22224,1.49398],[1.5127,-0.0715834,0.590277],[1.96161,0.166938,-1.75411],[1.14095,0.663262,1.00617],[-0.299267,-0.732908,-0.543135],[0.416469,0.706928,0.300947],[0.534359,1.48175,0.809457],[-0.694829,-0.614294,1.86063],[0.538876,1.53872,-0.474457],[0.0931395,0.573253,-0.380397],[1.63537,0.894347,0.831554],[1.54469,1.11404,-0.0554691],[-0.181148,-0.27641,-0.0283448],[-2.91701,0.961936,-1.33581],[-0.956835,-0.62363,1.4389],[0.00851459,1.97551,-0.675035],[-0.234543,0.609325,1.7849],[0.395751,-1.11829,0.686376],[1.20374,-0.643287,0.512991],[0.156875,0.329419,-0.0222747],[0.828485,0.445577,-0.0850841],[1.4934,1.6971,0.260529],[0.0265033,-0.427554,0.205959],[0.866787,1.01093,-0.844471],[-0.121139,1.41014,-0.180407],[1.36742,-0.627743,-0.786718],[-0.751271,-0.18019,1.38021],[0.198793,1.52335,-0.101121],[0.193614,0.662837,1.5976],[1.42436,0.0345315,0.240719],[0.38139,-0.0746018,0.508865],[1.52462,-0.0418176,0.833658],[1.29547,0.599147,0.550713],[0.307897,-0.150388,-0.81899],[0.487335,1.15239,0.428557],[1.06055,1.70634,-0.759085],[0.557225,0.411839,0.448902],[0.361718,-0.738498,-0.449473],[-1.93422,1.15356,-0.956095],[-1.23083,-0.0144951,-1.5538],[-2.15043,0.833218,-0.713505],[0.203833,1.29402,-1.80502],[-1.35963,-0.74769,-0.0673783],[-0.851607,0.190829,1.01664],[0.0942154,-1.01968,-0.921899],[-0.383696,0.451186,-0.445408],[0.435583,0.455941,-0.998251],[-0.242477,1.54661,0.115344],[-0.606598,0.996754,0.891593],[1.00142,-2.06777,-1.897],[0.0746721,0.790222,-0.11822],[1.536,-1.50452,-0.827636],[0.862769,1.90082,1.07492],[-1.98982,-1.60659,-1.22608],[0.635569,0.746228,1.08245],[-0.41344,1.52016,-2.20886],[0.239125,0.721624,-0.856005],[-2.11185,0.94891,0.259952],[0.275542,1.31412,0.569651],[0.620987,1.32011,0.17762],[0.544731,0.28486,0.823908],[0.13486,0.346313,0.0501544],[-0.578014,-2.14979,-1.48414],[1.32346,0.542677,-0.321014],[0.433039,-0.0555228,-0.0859225],[0.78954,-1.76227,-1.08862],[0.198998,0.192421,0.349712],[-1.35565,-0.300925,-2.66418],[-0.287174,-0.380611,-1.5639],[-0.461634,0.828255,1.65357],[0.700968,-1.05857,-0.0465612],[-0.153048,-0.730289,-0.670014],[-0.196278,0.0687046,1.62663]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 45-46

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 46-50

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>0.8727057</td><td>0.07214308</td><td>-0.2446234</td></tr>
      <tr><th>1</th><td>0.1</td><td>-1.676436</td><td>0.2125736</td><td>1.449937</td></tr>
      <tr><th>2</th><td>0.2</td><td>2.3173</td><td>1.087936</td><td>0.3227322</td></tr>
      <tr><th>3</th><td>0.3</td><td>2.368325</td><td>-0.05623821</td><td>0.7874831</td></tr>
      <tr><th>4</th><td>0.4</td><td>1.148903</td><td>0.8890015</td><td>-0.4933122</td></tr>
      <tr><th>5</th><td>0.5</td><td>-2.622551</td><td>-0.2484521</td><td>0.4875123</td></tr>
      <tr><th>6</th><td>0.6</td><td>0.1856765</td><td>-1.58156</td><td>0.8181238</td></tr>
      <tr><th>7</th><td>0.7</td><td>0.24947</td><td>1.162153</td><td>-1.694804</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.2807509</td><td>0.5250081</td><td>-0.4906033</td></tr>
      <tr><th>9</th><td>0.9</td><td>-0.3159419</td><td>0.4780675</td><td>-0.320129</td></tr>
      <tr><th>10</th><td>1</td><td>1.591602</td><td>-0.315159</td><td>-2.361727</td></tr>
      <tr><th>11</th><td>1.1</td><td>1.26022</td><td>1.375979</td><td>-1.29826</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.4492633</td><td>-0.653422</td><td>0.564754</td></tr>
      <tr><th>13</th><td>1.3</td><td>0.349325</td><td>0.1357202</td><td>0.2966301</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.2245839</td><td>-1.178727</td><td>-0.2686354</td></tr>
      <tr><th>15</th><td>1.5</td><td>0.7061806</td><td>0.2213576</td><td>0.02363643</td></tr>
      <tr><th>16</th><td>1.6</td><td>-0.1913757</td><td>-0.3355607</td><td>-0.8599597</td></tr>
      <tr><th>17</th><td>1.7</td><td>0.02235554</td><td>-0.06365755</td><td>0.9089127</td></tr>
      <tr><th>18</th><td>1.8</td><td>0.5312588</td><td>0.5916461</td><td>2.220829</td></tr>
      <tr><th>19</th><td>1.9</td><td>-0.1072649</td><td>-0.4220634</td><td>0.6095255</td></tr>
      <tr><th>20</th><td>2</td><td>0.9902217</td><td>0.8643352</td><td>1.227842</td></tr>
      <tr><th>21</th><td>2.1</td><td>-1.747352</td><td>-1.546966</td><td>0.2401377</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.6350466</td><td>-0.2582211</td><td>-0.5503819</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.9313118</td><td>-0.1250524</td><td>-0.7904248</td></tr>
      <tr><th>24</th><td>2.4</td><td>-1.022202</td><td>-1.317426</td><td>-0.3877532</td></tr>
      <tr><th>25</th><td>2.5</td><td>-1.437249</td><td>0.6831854</td><td>0.5635158</td></tr>
      <tr><th>26</th><td>2.6</td><td>1.095656</td><td>-0.5019674</td><td>-1.249199</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.7412379</td><td>-0.367218</td><td>0.6992127</td></tr>
      <tr><th>28</th><td>2.8</td><td>1.195059</td><td>-0.8483791</td><td>1.356595</td></tr>
      <tr><th>29</th><td>2.9</td><td>-0.9255536</td><td>-0.5824207</td><td>0.7082898</td></tr>
      <tr><th>30</th><td>3</td><td>0.03565431</td><td>0.6956416</td><td>-1.454436</td></tr>
      <tr><th>31</th><td>3.1</td><td>-1.072136</td><td>0.06194868</td><td>-0.7474274</td></tr>
      <tr><th>32</th><td>3.2</td><td>0.2006031</td><td>0.559019</td><td>1.524415</td></tr>
      <tr><th>33</th><td>3.3</td><td>-0.2788928</td><td>-0.3381596</td><td>0.3641483</td></tr>
      <tr><th>34</th><td>3.4</td><td>-2.038502</td><td>0.2220997</td><td>1.988583</td></tr>
      <tr><th>35</th><td>3.5</td><td>-1.73065</td><td>0.8422652</td><td>-0.9626389</td></tr>
      <tr><th>36</th><td>3.6</td><td>2.155632</td><td>1.389217</td><td>-1.306987</td></tr>
      <tr><th>37</th><td>3.7</td><td>-0.4251193</td><td>-0.7260239</td><td>-0.03614484</td></tr>
      <tr><th>38</th><td>3.8</td><td>0.06887656</td><td>-0.9711375</td><td>-1.379376</td></tr>
      <tr><th>39</th><td>3.9</td><td>-0.2906349</td><td>-0.7486274</td><td>-0.5868817</td></tr>
      <tr><th>40</th><td>4</td><td>0.8008073</td><td>0.1146251</td><td>-0.3197162</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.1178686</td><td>0.08881809</td><td>0.6187794</td></tr>
      <tr><th>42</th><td>4.2</td><td>1.197697</td><td>0.4349929</td><td>0.6929137</td></tr>
      <tr><th>43</th><td>4.3</td><td>-0.2755527</td><td>-0.1072664</td><td>-0.2695831</td></tr>
      <tr><th>44</th><td>4.4</td><td>1.691179</td><td>-0.5149733</td><td>-1.238712</td></tr>
      <tr><th>45</th><td>4.5</td><td>0.6996136</td><td>0.3111019</td><td>-1.456279</td></tr>
      <tr><th>46</th><td>4.6</td><td>-0.984815</td><td>-0.07395948</td><td>0.5676297</td></tr>
      <tr><th>47</th><td>4.7</td><td>0.2565238</td><td>0.5136171</td><td>-0.146514</td></tr>
      <tr><th>48</th><td>4.8</td><td>-0.4253401</td><td>-0.7360394</td><td>-2.667093</td></tr>
      <tr><th>49</th><td>4.9</td><td>0.3409165</td><td>-0.5430156</td><td>1.613057</td></tr>
      <tr><th>50</th><td>5</td><td>-0.7266993</td><td>0.5947177</td><td>0.4544373</td></tr>
      <tr><th>51</th><td>5.1</td><td>0.4790679</td><td>0.4881534</td><td>0.6914756</td></tr>
      <tr><th>52</th><td>5.2</td><td>0.1419866</td><td>-0.2882319</td><td>1.716843</td></tr>
      <tr><th>53</th><td>5.3</td><td>0.2254331</td><td>0.4483767</td><td>0.6169495</td></tr>
      <tr><th>54</th><td>5.4</td><td>0.3550768</td><td>0.2535895</td><td>-0.8291247</td></tr>
      <tr><th>55</th><td>5.5</td><td>-1.224708</td><td>0.1339492</td><td>0.8085234</td></tr>
      <tr><th>56</th><td>5.6</td><td>-0.5067976</td><td>-1.291923</td><td>-2.216996</td></tr>
      <tr><th>57</th><td>5.7</td><td>1.15308</td><td>-0.0003695386</td><td>0.277299</td></tr>
      <tr><th>58</th><td>5.8</td><td>0.04689666</td><td>-0.0647438</td><td>-0.897966</td></tr>
      <tr><th>59</th><td>5.9</td><td>0.5413863</td><td>0.6603023</td><td>0.06097536</td></tr>
      <tr><th>60</th><td>6</td><td>-0.2592086</td><td>0.4033678</td><td>-0.3042832</td></tr>
      <tr><th>61</th><td>6.1</td><td>0.1978197</td><td>0.3351308</td><td>0.1877462</td></tr>
      <tr><th>62</th><td>6.2</td><td>0.1025754</td><td>0.3226202</td><td>1.163046</td></tr>
      <tr><th>63</th><td>6.3</td><td>-0.1180089</td><td>-0.7171189</td><td>-0.2708925</td></tr>
      <tr><th>64</th><td>6.4</td><td>-0.8952951</td><td>-0.5574924</td><td>0.7670586</td></tr>
      <tr><th>65</th><td>6.5</td><td>-0.6811142</td><td>1.316856</td><td>0.9669396</td></tr>
      <tr><th>66</th><td>6.6</td><td>-0.6653964</td><td>-0.1068041</td><td>0.05490196</td></tr>
      <tr><th>67</th><td>6.7</td><td>0.3628379</td><td>1.306278</td><td>0.4515357</td></tr>
      <tr><th>68</th><td>6.8</td><td>-0.5515377</td><td>-0.8829399</td><td>-0.0375857</td></tr>
      <tr><th>69</th><td>6.9</td><td>-0.3899393</td><td>0.574777</td><td>-0.5569021</td></tr>
      <tr><th>70</th><td>7</td><td>1.316445</td><td>1.769344</td><td>0.5231584</td></tr>
      <tr><th>71</th><td>7.1</td><td>0.2994567</td><td>0.3951749</td><td>-1.500555</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.6782298</td><td>-1.184411</td><td>-0.8945215</td></tr>
      <tr><th>73</th><td>7.3</td><td>-0.6790352</td><td>-0.04617004</td><td>0.3773902</td></tr>
      <tr><th>74</th><td>7.4</td><td>-0.5239723</td><td>-0.8111802</td><td>-1.100801</td></tr>
      <tr><th>75</th><td>7.5</td><td>0.4922026</td><td>-0.09805122</td><td>0.854132</td></tr>
      <tr><th>76</th><td>7.6</td><td>1.168992</td><td>0.9531036</td><td>1.725308</td></tr>
      <tr><th>77</th><td>7.7</td><td>-0.8523086</td><td>-2.086943</td><td>-0.06182329</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.2416892</td><td>0.6361214</td><td>1.738435</td></tr>
      <tr><th>79</th><td>7.9</td><td>0.1813712</td><td>0.5470369</td><td>1.13379</td></tr>
      <tr><th>80</th><td>8</td><td>-0.9275339</td><td>-0.1161078</td><td>0.6329344</td></tr>
      <tr><th>81</th><td>8.1</td><td>-0.5490121</td><td>-0.7408038</td><td>2.313236</td></tr>
      <tr><th>82</th><td>8.2</td><td>-0.8587197</td><td>0.2849741</td><td>-0.4803081</td></tr>
      <tr><th>83</th><td>8.3</td><td>0.8855029</td><td>-1.678568</td><td>-0.6358399</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.2468113</td><td>0.2976153</td><td>-0.2366454</td></tr>
      <tr><th>85</th><td>8.5</td><td>0.3306584</td><td>-1.255295</td><td>-0.2529415</td></tr>
      <tr><th>86</th><td>8.6</td><td>0.1589258</td><td>-0.3809831</td><td>-0.7905513</td></tr>
      <tr><th>87</th><td>8.7</td><td>0.1769355</td><td>0.9566448</td><td>1.115466</td></tr>
      <tr><th>88</th><td>8.8</td><td>0.335339</td><td>1.076132</td><td>1.685355</td></tr>
      <tr><th>89</th><td>8.9</td><td>-0.5515398</td><td>1.312248</td><td>-0.9360923</td></tr>
      <tr><th>90</th><td>9</td><td>1.043822</td><td>0.0318954</td><td>-0.2964977</td></tr>
      <tr><th>91</th><td>9.1</td><td>1.070481</td><td>1.034942</td><td>1.984086</td></tr>
      <tr><th>92</th><td>9.2</td><td>0.9405902</td><td>0.5540774</td><td>2.432641</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.912553</td><td>-1.401953</td><td>-0.9061066</td></tr>
      <tr><th>94</th><td>9.4</td><td>0.3924973</td><td>-0.2129977</td><td>0.5507469</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.8813472</td><td>0.4755592</td><td>-0.05866879</td></tr>
      <tr><th>96</th><td>9.6</td><td>-0.523556</td><td>0.258912</td><td>-0.6132321</td></tr>
      <tr><th>97</th><td>9.7</td><td>0.2176086</td><td>-1.069943</td><td>-1.910197</td></tr>
      <tr><th>98</th><td>9.8</td><td>1.247623</td><td>1.686855</td><td>1.096663</td></tr>
      <tr><th>99</th><td>9.9</td><td>-1.063015</td><td>0.05671909</td><td>1.840422</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-52

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 55-56

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 56-58

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 59-60

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [1.63537,0.894347,0.831554]




.. GENERATED FROM PYTHON SOURCE LINES 64-65

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 65-68

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [1.63537,0.894347,0.831554]




.. GENERATED FROM PYTHON SOURCE LINES 69-70

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 70-76

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  1.6353748561053587




.. GENERATED FROM PYTHON SOURCE LINES 77-78

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 78-80

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-0.7125437</td><td>0.3872097</td><td>-0.221006</td></tr>
      <tr><th>1</th><td>-0.6366688</td><td>0.1411499</td><td>-1.382219</td></tr>
      <tr><th>2</th><td>-0.9600347</td><td>-0.673238</td><td>1.35691</td></tr>
      <tr><th>3</th><td>-1.472505</td><td>0.290016</td><td>-0.3173095</td></tr>
      <tr><th>4</th><td>1.594927</td><td>0.427398</td><td>0.06673495</td></tr>
      <tr><th>5</th><td>0.1377921</td><td>0.3715888</td><td>-0.409588</td></tr>
      <tr><th>6</th><td>0.4125253</td><td>-0.7911313</td><td>-0.3134569</td></tr>
      <tr><th>7</th><td>0.683661</td><td>0.2432084</td><td>1.35115</td></tr>
      <tr><th>8</th><td>-1.572174</td><td>0.7591635</td><td>-0.5428189</td></tr>
      <tr><th>9</th><td>0.894484</td><td>1.496315</td><td>1.494005</td></tr>
      <tr><th>10</th><td>0.07607672</td><td>3.032252</td><td>-0.0697185</td></tr>
      <tr><th>11</th><td>0.9362872</td><td>0.09534806</td><td>0.5547554</td></tr>
      <tr><th>12</th><td>-0.1597999</td><td>-0.117537</td><td>0.8516132</td></tr>
      <tr><th>13</th><td>-2.280891</td><td>0.4156774</td><td>0.1686187</td></tr>
      <tr><th>14</th><td>-0.4769556</td><td>-1.248859</td><td>0.5411939</td></tr>
      <tr><th>15</th><td>-2.166777</td><td>1.047143</td><td>0.4078612</td></tr>
      <tr><th>16</th><td>-1.554764</td><td>-0.04557226</td><td>1.203224</td></tr>
      <tr><th>17</th><td>0.9711234</td><td>-0.9533762</td><td>-0.5502569</td></tr>
      <tr><th>18</th><td>0.7774226</td><td>0.4831444</td><td>-0.1721776</td></tr>
      <tr><th>19</th><td>1.008082</td><td>1.217844</td><td>-0.4041445</td></tr>
      <tr><th>20</th><td>1.793038</td><td>-0.8329919</td><td>1.636185</td></tr>
      <tr><th>21</th><td>0.6188379</td><td>0.9314921</td><td>0.3700222</td></tr>
      <tr><th>22</th><td>1.658918</td><td>-0.7589742</td><td>-0.1231373</td></tr>
      <tr><th>23</th><td>-1.700695</td><td>-0.8901343</td><td>-0.8929079</td></tr>
      <tr><th>24</th><td>0.1463011</td><td>-0.01782797</td><td>0.1991584</td></tr>
      <tr><th>25</th><td>-1.521287</td><td>1.876469</td><td>-1.655881</td></tr>
      <tr><th>26</th><td>0.08516664</td><td>0.4022144</td><td>-1.748718</td></tr>
      <tr><th>27</th><td>0.5559068</td><td>-1.22224</td><td>1.493979</td></tr>
      <tr><th>28</th><td>1.512701</td><td>-0.07158338</td><td>0.5902772</td></tr>
      <tr><th>29</th><td>1.96161</td><td>0.1669381</td><td>-1.754113</td></tr>
      <tr><th>30</th><td>1.140951</td><td>0.6632621</td><td>1.00617</td></tr>
      <tr><th>31</th><td>-0.2992668</td><td>-0.7329082</td><td>-0.5431353</td></tr>
      <tr><th>32</th><td>0.4164685</td><td>0.7069276</td><td>0.3009473</td></tr>
      <tr><th>33</th><td>0.534359</td><td>1.481746</td><td>0.8094574</td></tr>
      <tr><th>34</th><td>-0.6948288</td><td>-0.6142938</td><td>1.860634</td></tr>
      <tr><th>35</th><td>0.5388765</td><td>1.538717</td><td>-0.4744566</td></tr>
      <tr><th>36</th><td>0.09313949</td><td>0.5732531</td><td>-0.3803965</td></tr>
      <tr><th>37</th><td>1.635375</td><td>0.8943467</td><td>0.8315536</td></tr>
      <tr><th>38</th><td>1.544689</td><td>1.114044</td><td>-0.05546915</td></tr>
      <tr><th>39</th><td>-0.1811479</td><td>-0.2764097</td><td>-0.02834484</td></tr>
      <tr><th>40</th><td>-2.917006</td><td>0.9619364</td><td>-1.335808</td></tr>
      <tr><th>41</th><td>-0.9568353</td><td>-0.6236304</td><td>1.438902</td></tr>
      <tr><th>42</th><td>0.008514591</td><td>1.975506</td><td>-0.6750346</td></tr>
      <tr><th>43</th><td>-0.2345428</td><td>0.6093251</td><td>1.784897</td></tr>
      <tr><th>44</th><td>0.3957509</td><td>-1.11829</td><td>0.6863759</td></tr>
      <tr><th>45</th><td>1.203738</td><td>-0.6432875</td><td>0.5129909</td></tr>
      <tr><th>46</th><td>0.1568752</td><td>0.3294192</td><td>-0.02227471</td></tr>
      <tr><th>47</th><td>0.8284851</td><td>0.4455766</td><td>-0.08508407</td></tr>
      <tr><th>48</th><td>1.493398</td><td>1.697095</td><td>0.2605292</td></tr>
      <tr><th>49</th><td>0.02650333</td><td>-0.4275543</td><td>0.2059588</td></tr>
      <tr><th>50</th><td>0.8667867</td><td>1.010934</td><td>-0.8444713</td></tr>
      <tr><th>51</th><td>-0.1211394</td><td>1.410142</td><td>-0.1804069</td></tr>
      <tr><th>52</th><td>1.367418</td><td>-0.6277425</td><td>-0.7867177</td></tr>
      <tr><th>53</th><td>-0.7512711</td><td>-0.1801901</td><td>1.380213</td></tr>
      <tr><th>54</th><td>0.1987927</td><td>1.523351</td><td>-0.1011209</td></tr>
      <tr><th>55</th><td>0.1936136</td><td>0.6628373</td><td>1.597603</td></tr>
      <tr><th>56</th><td>1.424358</td><td>0.03453149</td><td>0.2407194</td></tr>
      <tr><th>57</th><td>0.3813899</td><td>-0.07460176</td><td>0.508865</td></tr>
      <tr><th>58</th><td>1.524623</td><td>-0.04181764</td><td>0.8336578</td></tr>
      <tr><th>59</th><td>1.295469</td><td>0.599147</td><td>0.5507133</td></tr>
      <tr><th>60</th><td>0.307897</td><td>-0.1503882</td><td>-0.8189897</td></tr>
      <tr><th>61</th><td>0.4873353</td><td>1.152386</td><td>0.4285566</td></tr>
      <tr><th>62</th><td>1.06055</td><td>1.70634</td><td>-0.7590851</td></tr>
      <tr><th>63</th><td>0.5572247</td><td>0.411839</td><td>0.4489019</td></tr>
      <tr><th>64</th><td>0.3617175</td><td>-0.7384983</td><td>-0.4494727</td></tr>
      <tr><th>65</th><td>-1.934216</td><td>1.153555</td><td>-0.9560955</td></tr>
      <tr><th>66</th><td>-1.23083</td><td>-0.01449511</td><td>-1.553796</td></tr>
      <tr><th>67</th><td>-2.150434</td><td>0.8332184</td><td>-0.7135047</td></tr>
      <tr><th>68</th><td>0.2038333</td><td>1.29402</td><td>-1.805022</td></tr>
      <tr><th>69</th><td>-1.359631</td><td>-0.74769</td><td>-0.06737826</td></tr>
      <tr><th>70</th><td>-0.851607</td><td>0.1908294</td><td>1.016639</td></tr>
      <tr><th>71</th><td>0.09421545</td><td>-1.019682</td><td>-0.9218988</td></tr>
      <tr><th>72</th><td>-0.3836958</td><td>0.4511862</td><td>-0.4454085</td></tr>
      <tr><th>73</th><td>0.4355831</td><td>0.4559411</td><td>-0.9982511</td></tr>
      <tr><th>74</th><td>-0.2424767</td><td>1.546611</td><td>0.1153437</td></tr>
      <tr><th>75</th><td>-0.6065984</td><td>0.9967537</td><td>0.8915934</td></tr>
      <tr><th>76</th><td>1.001422</td><td>-2.067775</td><td>-1.897003</td></tr>
      <tr><th>77</th><td>0.07467213</td><td>0.7902225</td><td>-0.1182199</td></tr>
      <tr><th>78</th><td>1.536005</td><td>-1.504525</td><td>-0.8276363</td></tr>
      <tr><th>79</th><td>0.8627689</td><td>1.90082</td><td>1.074922</td></tr>
      <tr><th>80</th><td>-1.98982</td><td>-1.606588</td><td>-1.226081</td></tr>
      <tr><th>81</th><td>0.6355694</td><td>0.7462277</td><td>1.082455</td></tr>
      <tr><th>82</th><td>-0.4134398</td><td>1.520163</td><td>-2.208857</td></tr>
      <tr><th>83</th><td>0.2391254</td><td>0.7216243</td><td>-0.8560047</td></tr>
      <tr><th>84</th><td>-2.11185</td><td>0.9489098</td><td>0.2599521</td></tr>
      <tr><th>85</th><td>0.2755421</td><td>1.314124</td><td>0.5696508</td></tr>
      <tr><th>86</th><td>0.6209868</td><td>1.320114</td><td>0.1776203</td></tr>
      <tr><th>87</th><td>0.5447312</td><td>0.2848596</td><td>0.8239084</td></tr>
      <tr><th>88</th><td>0.13486</td><td>0.3463129</td><td>0.05015437</td></tr>
      <tr><th>89</th><td>-0.5780142</td><td>-2.149793</td><td>-1.484139</td></tr>
      <tr><th>90</th><td>1.32346</td><td>0.5426765</td><td>-0.3210143</td></tr>
      <tr><th>91</th><td>0.4330391</td><td>-0.05552278</td><td>-0.08592249</td></tr>
      <tr><th>92</th><td>0.7895397</td><td>-1.762267</td><td>-1.08862</td></tr>
      <tr><th>93</th><td>0.1989975</td><td>0.1924207</td><td>0.3497124</td></tr>
      <tr><th>94</th><td>-1.355646</td><td>-0.3009253</td><td>-2.664176</td></tr>
      <tr><th>95</th><td>-0.2871737</td><td>-0.380611</td><td>-1.563902</td></tr>
      <tr><th>96</th><td>-0.4616341</td><td>0.8282548</td><td>1.653568</td></tr>
      <tr><th>97</th><td>0.7009677</td><td>-1.058566</td><td>-0.04656123</td></tr>
      <tr><th>98</th><td>-0.1530478</td><td>-0.7302887</td><td>-0.6700143</td></tr>
      <tr><th>99</th><td>-0.1962779</td><td>0.06870457</td><td>1.626626</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 81-83

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.0589317,0.176667,-0.0246098]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 86-87

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 87-90

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-92

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 92-95

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
