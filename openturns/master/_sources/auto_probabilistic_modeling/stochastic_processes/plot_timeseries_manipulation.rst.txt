
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[0.391738,0.222325,-0.89243],[0.193713,0.263865,-0.853192],[1.6161,-0.867943,-0.313136],[1.60386,-0.0636404,0.976912],[0.252978,1.03854,0.796062],[0.480373,0.58046,-0.422704],[-1.82708,0.9409,-0.902679],[-1.58518,1.32055,-0.246964],[-1.75767,0.534035,0.970047],[0.550713,1.26671,-1.06849],[0.646438,0.24392,-1.71645],[-2.4499,-0.216491,0.870682],[0.611117,1.17322,0.537277],[-0.713285,-0.691685,0.22507],[1.8162,0.853665,-1.29635],[-0.839066,0.57182,-1.78554],[1.94093,0.664681,-0.794553],[-0.106201,-0.490314,0.728204],[-1.09869,0.254322,1.69778],[-1.25164,-0.119068,-2.24416],[-0.899504,0.700231,-0.413643],[1.76206,-0.839969,0.111259],[-0.169898,1.51282,-0.90512],[0.838981,-0.63131,0.933521],[-0.119797,1.25051,1.56199],[1.18885,1.60268,0.0173576],[1.30183,0.775291,-0.0834538],[1.90858,-1.81607,-0.867663],[0.364262,0.924217,-0.714781],[-0.0331363,-0.995647,-0.685592],[0.0690406,0.268391,0.538539],[-1.44767,1.11948,-1.17151],[-1.87048,-0.762784,1.13625],[0.347712,0.384793,1.10422],[-0.10331,-0.171028,-0.951854],[0.221123,0.651769,0.674887],[0.194042,-1.27193,-0.652922],[-1.0751,0.0885247,0.815441],[1.0321,0.218368,0.901944],[-2.26608,1.05845,-0.18433],[0.879209,0.959957,-0.743382],[1.11119,0.499068,0.0741179],[0.583999,0.660777,-0.241054],[0.412693,-0.796483,1.47809],[-0.398581,-0.218936,1.49798],[0.0303658,0.341086,0.593898],[-0.332464,0.351898,2.12676],[0.598724,-0.37211,-0.240388],[0.717362,1.0066,-0.806442],[1.27582,1.3823,-0.544473],[-0.308263,0.0923423,-2.20254],[-0.134712,-0.24335,-0.599543],[1.02984,0.734759,-0.992647],[-0.0862874,-0.232562,-1.56349],[0.11007,-0.824456,1.46175],[-0.0802582,0.035694,0.0611534],[0.491429,0.193966,-0.494724],[-0.639699,0.486904,-1.47378],[-2.56747,-1.70921,-0.285056],[1.55646,0.0156969,0.758622],[-1.41933,-1.55891,0.494043],[0.951545,1.69796,0.698589],[0.570036,-0.398232,1.58481],[0.388443,-0.828912,-0.890078],[0.175445,0.352199,0.000298067],[-0.153705,0.376792,0.769477],[0.206136,0.791427,-1.68676],[-0.781385,0.990245,-0.560138],[-1.46674,0.417301,0.350109],[-0.717227,1.12949,-0.379088],[-0.251697,1.38432,1.58416],[0.337374,-0.937843,0.242961],[1.29925,-0.555104,1.89306],[-0.32416,-0.83715,-0.329831],[1.19626,0.00126139,0.693957],[0.722478,-0.642324,1.34665],[1.28519,-1.27793,-1.43782],[1.68584,-0.0940207,0.478955],[-0.365599,1.27566,-0.526293],[-2.19942,2.51099,-0.521569],[-0.551178,1.07586,-0.264786],[-1.72698,0.0339527,-0.53693],[-0.876897,-1.79629,-0.770598],[0.0377624,1.7959,-1.15769],[0.848897,-0.487018,-0.552492],[2.63782,-0.655323,0.467157],[0.639224,0.0027024,-0.725392],[-1.35588,0.703497,0.706435],[0.661177,-0.0372836,-1.83047],[0.908941,0.240522,0.402065],[0.948985,-0.0313204,1.97247],[0.425442,-0.579941,-0.721695],[-0.941642,1.21633,0.143773],[-1.28773,0.874162,0.634618],[0.999656,0.767216,0.0493335],[1.85458,0.0451071,-0.786265],[0.358894,-0.150597,-0.40398],[1.0016,0.0940117,-0.0815568],[1.7694,-0.161672,0.568646],[0.269051,0.308485,1.41453]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>-0.5408211</td><td>-1.26899</td><td>0.5621098</td></tr>
      <tr><th>1</th><td>0.1</td><td>1.122265</td><td>-0.2490133</td><td>1.521043</td></tr>
      <tr><th>2</th><td>0.2</td><td>-0.6511548</td><td>-0.5327803</td><td>-2.194774</td></tr>
      <tr><th>3</th><td>0.3</td><td>-0.2784716</td><td>0.282249</td><td>-0.5977951</td></tr>
      <tr><th>4</th><td>0.4</td><td>2.119461</td><td>-0.3659521</td><td>-0.2102955</td></tr>
      <tr><th>5</th><td>0.5</td><td>1.10024</td><td>-0.8530565</td><td>1.129059</td></tr>
      <tr><th>6</th><td>0.6</td><td>-1.258599</td><td>-0.2653599</td><td>-0.5563429</td></tr>
      <tr><th>7</th><td>0.7</td><td>1.336585</td><td>-0.3463133</td><td>-1.005593</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.4691488</td><td>-0.6511607</td><td>0.8336561</td></tr>
      <tr><th>9</th><td>0.9</td><td>1.370119</td><td>-0.3383184</td><td>-0.854389</td></tr>
      <tr><th>10</th><td>1</td><td>-0.9846353</td><td>0.1372393</td><td>-1.208616</td></tr>
      <tr><th>11</th><td>1.1</td><td>-1.532317</td><td>0.7448325</td><td>-1.65893</td></tr>
      <tr><th>12</th><td>1.2</td><td>-0.3290431</td><td>-1.583935</td><td>-0.623234</td></tr>
      <tr><th>13</th><td>1.3</td><td>-0.7175512</td><td>-0.8131032</td><td>0.0002453871</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.03424119</td><td>-0.7368372</td><td>1.204839</td></tr>
      <tr><th>15</th><td>1.5</td><td>-0.6843174</td><td>-0.326066</td><td>0.3898205</td></tr>
      <tr><th>16</th><td>1.6</td><td>-0.6981282</td><td>-0.4863287</td><td>0.0808786</td></tr>
      <tr><th>17</th><td>1.7</td><td>-1.981355</td><td>0.5740902</td><td>-1.159397</td></tr>
      <tr><th>18</th><td>1.8</td><td>0.8361797</td><td>-1.557524</td><td>-1.03</td></tr>
      <tr><th>19</th><td>1.9</td><td>-0.01586981</td><td>-2.106803</td><td>0.1528429</td></tr>
      <tr><th>20</th><td>2</td><td>-0.1855383</td><td>0.4980549</td><td>-0.2767273</td></tr>
      <tr><th>21</th><td>2.1</td><td>0.6018371</td><td>-0.9001568</td><td>1.2556</td></tr>
      <tr><th>22</th><td>2.2</td><td>1.425266</td><td>0.1487843</td><td>0.9436323</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.1580938</td><td>-0.7589152</td><td>-0.5883095</td></tr>
      <tr><th>24</th><td>2.4</td><td>-0.6266564</td><td>-0.09894361</td><td>-0.480588</td></tr>
      <tr><th>25</th><td>2.5</td><td>0.2397517</td><td>0.1110848</td><td>-1.442821</td></tr>
      <tr><th>26</th><td>2.6</td><td>-0.03873686</td><td>1.088557</td><td>-0.6898645</td></tr>
      <tr><th>27</th><td>2.7</td><td>-0.1795066</td><td>1.462903</td><td>-0.4095041</td></tr>
      <tr><th>28</th><td>2.8</td><td>1.306966</td><td>1.547796</td><td>-0.6071905</td></tr>
      <tr><th>29</th><td>2.9</td><td>-0.5082581</td><td>-0.1360725</td><td>-0.2848106</td></tr>
      <tr><th>30</th><td>3</td><td>1.492278</td><td>0.3298112</td><td>0.9085992</td></tr>
      <tr><th>31</th><td>3.1</td><td>-0.3582677</td><td>-0.3484053</td><td>-0.6070251</td></tr>
      <tr><th>32</th><td>3.2</td><td>-0.7927633</td><td>-0.2968245</td><td>0.8484788</td></tr>
      <tr><th>33</th><td>3.3</td><td>-0.1622859</td><td>0.7281467</td><td>0.9912699</td></tr>
      <tr><th>34</th><td>3.4</td><td>0.06633445</td><td>0.361406</td><td>-1.364191</td></tr>
      <tr><th>35</th><td>3.5</td><td>1.243746</td><td>1.45706</td><td>2.11168</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.8792517</td><td>1.094387</td><td>0.8516284</td></tr>
      <tr><th>37</th><td>3.7</td><td>1.245425</td><td>0.1418429</td><td>-1.109756</td></tr>
      <tr><th>38</th><td>3.8</td><td>1.260479</td><td>0.5137838</td><td>0.5113343</td></tr>
      <tr><th>39</th><td>3.9</td><td>0.01762508</td><td>-0.1065074</td><td>-0.7742074</td></tr>
      <tr><th>40</th><td>4</td><td>0.4956218</td><td>0.2440003</td><td>-0.01599257</td></tr>
      <tr><th>41</th><td>4.1</td><td>1.147266</td><td>1.626297</td><td>1.035115</td></tr>
      <tr><th>42</th><td>4.2</td><td>0.8048528</td><td>-0.5190145</td><td>-0.1723074</td></tr>
      <tr><th>43</th><td>4.3</td><td>1.264696</td><td>0.7024925</td><td>0.1668652</td></tr>
      <tr><th>44</th><td>4.4</td><td>0.2779797</td><td>0.4934468</td><td>-1.021968</td></tr>
      <tr><th>45</th><td>4.5</td><td>0.567986</td><td>-1.168729</td><td>-0.8998712</td></tr>
      <tr><th>46</th><td>4.6</td><td>-1.589034</td><td>0.9945189</td><td>-1.403531</td></tr>
      <tr><th>47</th><td>4.7</td><td>-1.009558</td><td>1.432958</td><td>1.016461</td></tr>
      <tr><th>48</th><td>4.8</td><td>-3.152992</td><td>-0.2272522</td><td>-1.187296</td></tr>
      <tr><th>49</th><td>4.9</td><td>0.5830488</td><td>0.8887935</td><td>-1.885486</td></tr>
      <tr><th>50</th><td>5</td><td>-1.458639</td><td>0.2781671</td><td>1.054625</td></tr>
      <tr><th>51</th><td>5.1</td><td>-1.44816</td><td>-0.555448</td><td>-0.9465639</td></tr>
      <tr><th>52</th><td>5.2</td><td>-1.116533</td><td>1.527111</td><td>0.3006965</td></tr>
      <tr><th>53</th><td>5.3</td><td>0.1914186</td><td>-0.772553</td><td>-0.4472645</td></tr>
      <tr><th>54</th><td>5.4</td><td>-2.127798</td><td>0.8256323</td><td>0.3675336</td></tr>
      <tr><th>55</th><td>5.5</td><td>-0.7894113</td><td>0.2420788</td><td>-0.5319127</td></tr>
      <tr><th>56</th><td>5.6</td><td>2.179538</td><td>-0.8803119</td><td>-1.947186</td></tr>
      <tr><th>57</th><td>5.7</td><td>-1.348458</td><td>-1.267527</td><td>-0.7888889</td></tr>
      <tr><th>58</th><td>5.8</td><td>0.5421782</td><td>0.4831361</td><td>-1.552313</td></tr>
      <tr><th>59</th><td>5.9</td><td>-0.4912826</td><td>0.3223476</td><td>0.9445726</td></tr>
      <tr><th>60</th><td>6</td><td>0.05157709</td><td>0.3413873</td><td>-0.3290017</td></tr>
      <tr><th>61</th><td>6.1</td><td>1.189683</td><td>-0.1351312</td><td>-4.068114</td></tr>
      <tr><th>62</th><td>6.2</td><td>0.3801362</td><td>-1.342646</td><td>-0.5333305</td></tr>
      <tr><th>63</th><td>6.3</td><td>-0.5663581</td><td>0.6276766</td><td>0.4885999</td></tr>
      <tr><th>64</th><td>6.4</td><td>1.102816</td><td>-0.3324275</td><td>0.7450428</td></tr>
      <tr><th>65</th><td>6.5</td><td>-0.1136571</td><td>-0.5070222</td><td>-0.5339666</td></tr>
      <tr><th>66</th><td>6.6</td><td>2.220172</td><td>0.9379514</td><td>0.620264</td></tr>
      <tr><th>67</th><td>6.7</td><td>0.5490749</td><td>-0.9468741</td><td>-0.9162422</td></tr>
      <tr><th>68</th><td>6.8</td><td>-0.8867656</td><td>2.060873</td><td>-1.354434</td></tr>
      <tr><th>69</th><td>6.9</td><td>0.3843634</td><td>-1.166874</td><td>-1.263761</td></tr>
      <tr><th>70</th><td>7</td><td>0.3048354</td><td>-0.8517769</td><td>0.1485703</td></tr>
      <tr><th>71</th><td>7.1</td><td>-2.117596</td><td>-0.01060216</td><td>1.416362</td></tr>
      <tr><th>72</th><td>7.2</td><td>1.294454</td><td>-0.8216658</td><td>0.5599416</td></tr>
      <tr><th>73</th><td>7.3</td><td>-0.756188</td><td>0.6789773</td><td>-0.7130732</td></tr>
      <tr><th>74</th><td>7.4</td><td>0.1149665</td><td>-1.189323</td><td>0.6430607</td></tr>
      <tr><th>75</th><td>7.5</td><td>-0.1710019</td><td>-0.7143458</td><td>0.1298103</td></tr>
      <tr><th>76</th><td>7.6</td><td>0.3821411</td><td>1.731742</td><td>0.4222896</td></tr>
      <tr><th>77</th><td>7.7</td><td>0.268316</td><td>-0.6927765</td><td>-0.4574447</td></tr>
      <tr><th>78</th><td>7.8</td><td>-1.605682</td><td>-0.2499563</td><td>0.6902671</td></tr>
      <tr><th>79</th><td>7.9</td><td>-1.031421</td><td>-0.2901024</td><td>-0.9701012</td></tr>
      <tr><th>80</th><td>8</td><td>0.9106192</td><td>-0.6763944</td><td>1.345097</td></tr>
      <tr><th>81</th><td>8.1</td><td>-0.2035851</td><td>-1.110139</td><td>0.3658692</td></tr>
      <tr><th>82</th><td>8.2</td><td>0.2530075</td><td>-0.5654442</td><td>0.3576259</td></tr>
      <tr><th>83</th><td>8.3</td><td>1.094893</td><td>1.661519</td><td>-0.3816343</td></tr>
      <tr><th>84</th><td>8.4</td><td>-0.2532233</td><td>-0.07909199</td><td>1.180844</td></tr>
      <tr><th>85</th><td>8.5</td><td>1.832376</td><td>-0.547998</td><td>-0.5615281</td></tr>
      <tr><th>86</th><td>8.6</td><td>1.101411</td><td>1.668914</td><td>1.159771</td></tr>
      <tr><th>87</th><td>8.7</td><td>0.1180315</td><td>-0.8339926</td><td>-0.8062162</td></tr>
      <tr><th>88</th><td>8.8</td><td>-0.4735835</td><td>-1.145717</td><td>-0.7554767</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.6517478</td><td>0.2510403</td><td>-1.617132</td></tr>
      <tr><th>90</th><td>9</td><td>-0.365782</td><td>-0.5548166</td><td>-1.635426</td></tr>
      <tr><th>91</th><td>9.1</td><td>-1.911454</td><td>1.304144</td><td>-0.2160408</td></tr>
      <tr><th>92</th><td>9.2</td><td>0.5710022</td><td>0.3447999</td><td>-0.9265475</td></tr>
      <tr><th>93</th><td>9.3</td><td>0.2734574</td><td>0.09197257</td><td>0.1741871</td></tr>
      <tr><th>94</th><td>9.4</td><td>0.04736985</td><td>-0.3312607</td><td>-1.199458</td></tr>
      <tr><th>95</th><td>9.5</td><td>1.022738</td><td>-1.844658</td><td>0.1740141</td></tr>
      <tr><th>96</th><td>9.6</td><td>0.3940995</td><td>-0.9700581</td><td>1.729144</td></tr>
      <tr><th>97</th><td>9.7</td><td>-0.9002966</td><td>-0.3022439</td><td>2.193902</td></tr>
      <tr><th>98</th><td>9.8</td><td>-0.6316962</td><td>0.548566</td><td>0.7682769</td></tr>
      <tr><th>99</th><td>9.9</td><td>1.752704</td><td>0.04817813</td><td>-0.326902</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-1.0751,0.0885247,0.815441]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [-1.0751,0.0885247,0.815441]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  -1.0751007808301445




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0.3917376</td><td>0.2223246</td><td>-0.8924296</td></tr>
      <tr><th>1</th><td>0.1937131</td><td>0.2638648</td><td>-0.8531918</td></tr>
      <tr><th>2</th><td>1.616101</td><td>-0.8679429</td><td>-0.3131356</td></tr>
      <tr><th>3</th><td>1.603857</td><td>-0.06364039</td><td>0.9769119</td></tr>
      <tr><th>4</th><td>0.2529777</td><td>1.038536</td><td>0.796062</td></tr>
      <tr><th>5</th><td>0.4803732</td><td>0.5804597</td><td>-0.4227037</td></tr>
      <tr><th>6</th><td>-1.827078</td><td>0.9409</td><td>-0.9026791</td></tr>
      <tr><th>7</th><td>-1.585176</td><td>1.320549</td><td>-0.2469644</td></tr>
      <tr><th>8</th><td>-1.757668</td><td>0.5340352</td><td>0.9700472</td></tr>
      <tr><th>9</th><td>0.5507135</td><td>1.266712</td><td>-1.068494</td></tr>
      <tr><th>10</th><td>0.6464377</td><td>0.2439201</td><td>-1.716452</td></tr>
      <tr><th>11</th><td>-2.449904</td><td>-0.2164911</td><td>0.870682</td></tr>
      <tr><th>12</th><td>0.6111174</td><td>1.173221</td><td>0.5372774</td></tr>
      <tr><th>13</th><td>-0.7132849</td><td>-0.6916852</td><td>0.2250696</td></tr>
      <tr><th>14</th><td>1.8162</td><td>0.8536655</td><td>-1.296346</td></tr>
      <tr><th>15</th><td>-0.8390656</td><td>0.5718202</td><td>-1.785541</td></tr>
      <tr><th>16</th><td>1.940931</td><td>0.6646814</td><td>-0.7945526</td></tr>
      <tr><th>17</th><td>-0.1062011</td><td>-0.4903138</td><td>0.7282044</td></tr>
      <tr><th>18</th><td>-1.098685</td><td>0.2543224</td><td>1.697784</td></tr>
      <tr><th>19</th><td>-1.251639</td><td>-0.1190678</td><td>-2.244164</td></tr>
      <tr><th>20</th><td>-0.8995035</td><td>0.7002311</td><td>-0.4136426</td></tr>
      <tr><th>21</th><td>1.762061</td><td>-0.8399687</td><td>0.1112588</td></tr>
      <tr><th>22</th><td>-0.1698981</td><td>1.512816</td><td>-0.9051199</td></tr>
      <tr><th>23</th><td>0.838981</td><td>-0.63131</td><td>0.9335211</td></tr>
      <tr><th>24</th><td>-0.1197969</td><td>1.25051</td><td>1.56199</td></tr>
      <tr><th>25</th><td>1.18885</td><td>1.602683</td><td>0.0173576</td></tr>
      <tr><th>26</th><td>1.301831</td><td>0.775291</td><td>-0.08345385</td></tr>
      <tr><th>27</th><td>1.908578</td><td>-1.816073</td><td>-0.8676634</td></tr>
      <tr><th>28</th><td>0.3642617</td><td>0.9242174</td><td>-0.7147807</td></tr>
      <tr><th>29</th><td>-0.03313635</td><td>-0.9956472</td><td>-0.6855924</td></tr>
      <tr><th>30</th><td>0.06904062</td><td>0.2683914</td><td>0.5385391</td></tr>
      <tr><th>31</th><td>-1.447673</td><td>1.119482</td><td>-1.171512</td></tr>
      <tr><th>32</th><td>-1.870476</td><td>-0.7627839</td><td>1.136255</td></tr>
      <tr><th>33</th><td>0.3477122</td><td>0.3847933</td><td>1.104222</td></tr>
      <tr><th>34</th><td>-0.1033096</td><td>-0.171028</td><td>-0.951854</td></tr>
      <tr><th>35</th><td>0.2211233</td><td>0.6517689</td><td>0.6748875</td></tr>
      <tr><th>36</th><td>0.1940422</td><td>-1.271931</td><td>-0.652922</td></tr>
      <tr><th>37</th><td>-1.075101</td><td>0.08852467</td><td>0.8154415</td></tr>
      <tr><th>38</th><td>1.032103</td><td>0.2183675</td><td>0.9019439</td></tr>
      <tr><th>39</th><td>-2.266078</td><td>1.058447</td><td>-0.1843297</td></tr>
      <tr><th>40</th><td>0.8792087</td><td>0.9599571</td><td>-0.7433818</td></tr>
      <tr><th>41</th><td>1.111192</td><td>0.4990677</td><td>0.07411789</td></tr>
      <tr><th>42</th><td>0.5839994</td><td>0.6607772</td><td>-0.2410539</td></tr>
      <tr><th>43</th><td>0.412693</td><td>-0.7964832</td><td>1.478088</td></tr>
      <tr><th>44</th><td>-0.3985811</td><td>-0.2189359</td><td>1.49798</td></tr>
      <tr><th>45</th><td>0.03036584</td><td>0.3410858</td><td>0.5938978</td></tr>
      <tr><th>46</th><td>-0.3324644</td><td>0.3518984</td><td>2.126757</td></tr>
      <tr><th>47</th><td>0.5987238</td><td>-0.3721096</td><td>-0.2403884</td></tr>
      <tr><th>48</th><td>0.7173621</td><td>1.006598</td><td>-0.8064418</td></tr>
      <tr><th>49</th><td>1.275821</td><td>1.382304</td><td>-0.5444726</td></tr>
      <tr><th>50</th><td>-0.3082635</td><td>0.09234232</td><td>-2.202542</td></tr>
      <tr><th>51</th><td>-0.1347123</td><td>-0.2433495</td><td>-0.5995432</td></tr>
      <tr><th>52</th><td>1.02984</td><td>0.7347586</td><td>-0.9926474</td></tr>
      <tr><th>53</th><td>-0.08628739</td><td>-0.2325623</td><td>-1.563489</td></tr>
      <tr><th>54</th><td>0.1100701</td><td>-0.8244559</td><td>1.461755</td></tr>
      <tr><th>55</th><td>-0.08025816</td><td>0.03569404</td><td>0.06115341</td></tr>
      <tr><th>56</th><td>0.4914292</td><td>0.1939664</td><td>-0.4947236</td></tr>
      <tr><th>57</th><td>-0.6396992</td><td>0.4869042</td><td>-1.473779</td></tr>
      <tr><th>58</th><td>-2.567465</td><td>-1.709208</td><td>-0.285056</td></tr>
      <tr><th>59</th><td>1.556461</td><td>0.01569691</td><td>0.7586216</td></tr>
      <tr><th>60</th><td>-1.419331</td><td>-1.55891</td><td>0.4940428</td></tr>
      <tr><th>61</th><td>0.9515451</td><td>1.697964</td><td>0.6985887</td></tr>
      <tr><th>62</th><td>0.5700357</td><td>-0.3982319</td><td>1.584807</td></tr>
      <tr><th>63</th><td>0.3884435</td><td>-0.8289115</td><td>-0.8900775</td></tr>
      <tr><th>64</th><td>0.1754445</td><td>0.3521993</td><td>0.0002980668</td></tr>
      <tr><th>65</th><td>-0.1537049</td><td>0.3767917</td><td>0.7694765</td></tr>
      <tr><th>66</th><td>0.206136</td><td>0.791427</td><td>-1.686765</td></tr>
      <tr><th>67</th><td>-0.7813854</td><td>0.9902447</td><td>-0.5601378</td></tr>
      <tr><th>68</th><td>-1.466741</td><td>0.4173012</td><td>0.3501088</td></tr>
      <tr><th>69</th><td>-0.7172265</td><td>1.12949</td><td>-0.3790883</td></tr>
      <tr><th>70</th><td>-0.2516971</td><td>1.384315</td><td>1.584161</td></tr>
      <tr><th>71</th><td>0.3373744</td><td>-0.9378431</td><td>0.2429605</td></tr>
      <tr><th>72</th><td>1.299248</td><td>-0.5551045</td><td>1.893058</td></tr>
      <tr><th>73</th><td>-0.3241605</td><td>-0.8371503</td><td>-0.3298309</td></tr>
      <tr><th>74</th><td>1.196256</td><td>0.001261385</td><td>0.6939573</td></tr>
      <tr><th>75</th><td>0.7224775</td><td>-0.642324</td><td>1.346653</td></tr>
      <tr><th>76</th><td>1.28519</td><td>-1.277933</td><td>-1.437822</td></tr>
      <tr><th>77</th><td>1.685837</td><td>-0.09402068</td><td>0.4789554</td></tr>
      <tr><th>78</th><td>-0.3655991</td><td>1.275662</td><td>-0.5262934</td></tr>
      <tr><th>79</th><td>-2.199416</td><td>2.510988</td><td>-0.5215687</td></tr>
      <tr><th>80</th><td>-0.5511775</td><td>1.075856</td><td>-0.2647857</td></tr>
      <tr><th>81</th><td>-1.726981</td><td>0.03395269</td><td>-0.5369304</td></tr>
      <tr><th>82</th><td>-0.8768969</td><td>-1.796294</td><td>-0.7705979</td></tr>
      <tr><th>83</th><td>0.03776236</td><td>1.7959</td><td>-1.157687</td></tr>
      <tr><th>84</th><td>0.8488975</td><td>-0.4870181</td><td>-0.5524917</td></tr>
      <tr><th>85</th><td>2.637823</td><td>-0.6553232</td><td>0.4671574</td></tr>
      <tr><th>86</th><td>0.6392238</td><td>0.002702401</td><td>-0.7253917</td></tr>
      <tr><th>87</th><td>-1.355876</td><td>0.7034965</td><td>0.706435</td></tr>
      <tr><th>88</th><td>0.6611773</td><td>-0.03728362</td><td>-1.830468</td></tr>
      <tr><th>89</th><td>0.9089414</td><td>0.2405221</td><td>0.4020654</td></tr>
      <tr><th>90</th><td>0.948985</td><td>-0.03132041</td><td>1.972473</td></tr>
      <tr><th>91</th><td>0.4254416</td><td>-0.5799406</td><td>-0.7216949</td></tr>
      <tr><th>92</th><td>-0.9416424</td><td>1.216329</td><td>0.1437728</td></tr>
      <tr><th>93</th><td>-1.287732</td><td>0.8741622</td><td>0.6346176</td></tr>
      <tr><th>94</th><td>0.9996564</td><td>0.7672157</td><td>0.04933348</td></tr>
      <tr><th>95</th><td>1.85458</td><td>0.04510707</td><td>-0.7862651</td></tr>
      <tr><th>96</th><td>0.3588939</td><td>-0.1505973</td><td>-0.4039801</td></tr>
      <tr><th>97</th><td>1.001596</td><td>0.09401168</td><td>-0.08155676</td></tr>
      <tr><th>98</th><td>1.769404</td><td>-0.1616725</td><td>0.5686459</td></tr>
      <tr><th>99</th><td>0.2690507</td><td>0.3084846</td><td>1.414533</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.076754,0.139399,-0.0312027]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
