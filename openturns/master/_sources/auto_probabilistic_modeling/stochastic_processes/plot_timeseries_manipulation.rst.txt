
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_timeseries_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:


Manipulate a time series
========================

.. GENERATED FROM PYTHON SOURCE LINES 6-21

The objective here is to create and manipulate a time series.
A time series is a particular field where the mesh :math:`\mathcal{M}` 1-d and regular, eg a time grid :math:`(t_0, \dots, t_{N-1})`.

It is possible to draw a time series, using interpolation between the values: see the use case on the Field.

A time series can be obtained as a realization of a multivariate stochastic process
:math:`X: \Omega \times [0,T] \rightarrow \mathbb{R}^d` of dimension :math:`d` where :math:`[0,T]`
is discretized according to the regular grid :math:`(t_0, \dots, t_{N-1})`.
The  values :math:`(\vect{x}_0, \dots, \vect{x}_{N-1})` of the  time series are defined by:

.. math::
   \forall i \in [0, N-1],\quad \vect{x}_i= X(\omega)(t_i)


A time series is stored in the :class:`~openturns.TimeSeries` object that stores the regular time grid and the associated values.

.. GENERATED FROM PYTHON SOURCE LINES 23-29

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Create the RegularGrid

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    tMin = 0.0
    timeStep = 0.1
    N = 100
    myTimeGrid = ot.RegularGrid(tMin, timeStep, N)








.. GENERATED FROM PYTHON SOURCE LINES 37-39

Case 1: Create a time series from a time grid and values.
Be careful that the number of steps of the time grid must correspond to the size of the values

.. GENERATED FROM PYTHON SOURCE LINES 39-43

.. code-block:: Python

    myValues = ot.Normal(3).getSample(myTimeGrid.getVertices().getSize())
    myTimeSeries = ot.TimeSeries(myTimeGrid, myValues)
    myTimeSeries






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=TimeSeries name=Unnamed derived from=class=FieldImplementation name=Unnamed mesh=class=Mesh name=Unnamed dimension=1 vertices=class=Sample name=Unnamed implementation=class=SampleImplementation name=Unnamed size=100 dimension=1 description=[t] data=[[0],[0.1],[0.2],[0.3],[0.4],[0.5],[0.6],[0.7],[0.8],[0.9],[1],[1.1],[1.2],[1.3],[1.4],[1.5],[1.6],[1.7],[1.8],[1.9],[2],[2.1],[2.2],[2.3],[2.4],[2.5],[2.6],[2.7],[2.8],[2.9],[3],[3.1],[3.2],[3.3],[3.4],[3.5],[3.6],[3.7],[3.8],[3.9],[4],[4.1],[4.2],[4.3],[4.4],[4.5],[4.6],[4.7],[4.8],[4.9],[5],[5.1],[5.2],[5.3],[5.4],[5.5],[5.6],[5.7],[5.8],[5.9],[6],[6.1],[6.2],[6.3],[6.4],[6.5],[6.6],[6.7],[6.8],[6.9],[7],[7.1],[7.2],[7.3],[7.4],[7.5],[7.6],[7.7],[7.8],[7.9],[8],[8.1],[8.2],[8.3],[8.4],[8.5],[8.6],[8.7],[8.8],[8.9],[9],[9.1],[9.2],[9.3],[9.4],[9.5],[9.6],[9.7],[9.8],[9.9]] simplices=[[0,1],[1,2],[2,3],[3,4],[4,5],[5,6],[6,7],[7,8],[8,9],[9,10],[10,11],[11,12],[12,13],[13,14],[14,15],[15,16],[16,17],[17,18],[18,19],[19,20],[20,21],[21,22],[22,23],[23,24],[24,25],[25,26],[26,27],[27,28],[28,29],[29,30],[30,31],[31,32],[32,33],[33,34],[34,35],[35,36],[36,37],[37,38],[38,39],[39,40],[40,41],[41,42],[42,43],[43,44],[44,45],[45,46],[46,47],[47,48],[48,49],[49,50],[50,51],[51,52],[52,53],[53,54],[54,55],[55,56],[56,57],[57,58],[58,59],[59,60],[60,61],[61,62],[62,63],[63,64],[64,65],[65,66],[66,67],[67,68],[68,69],[69,70],[70,71],[71,72],[72,73],[73,74],[74,75],[75,76],[76,77],[77,78],[78,79],[79,80],[80,81],[81,82],[82,83],[83,84],[84,85],[85,86],[86,87],[87,88],[88,89],[89,90],[90,91],[91,92],[92,93],[93,94],[94,95],[95,96],[96,97],[97,98],[98,99]] values=class=Sample name=Normal implementation=class=SampleImplementation name=Normal size=100 dimension=3 description=[X0,X1,X2] data=[[-1.23024,0.413724,-0.371147],[-1.73768,-0.173193,0.565568],[0.402575,1.52624,-1.0634],[2.21375,0.758452,1.01895],[-0.587911,-0.710817,-1.98657],[1.7664,-1.02395,0.536297],[-1.38912,-0.395696,-0.766735],[-1.45131,0.775973,0.961642],[1.72269,-0.0887482,-1.35451],[0.523233,0.569588,0.199001],[-1.34968,-0.365961,0.367018],[-1.64832,-0.366073,-0.822541],[0.202469,0.259797,1.91411],[-0.507898,-0.380656,0.185459],[-0.934625,1.36558,-1.51106],[0.712309,1.75703,1.51944],[-1.52237,0.414611,-0.691418],[0.574079,1.09558,-1.44589],[-0.765293,0.349234,-1.99831],[-1.01742,0.315415,0.903187],[-0.0592581,-0.37904,0.244055],[0.187459,-0.352587,-0.864932],[-0.0989596,0.527129,-0.964157],[-1.06616,2.23332,1.96386],[0.0736015,0.0417811,-1.57852],[0.555365,-1.48865,0.395233],[1.33862,-0.780955,-0.000552234],[1.06334,0.900197,-0.87688],[-0.0112899,-0.294341,0.382827],[1.07224,-0.516737,0.283627],[0.535483,0.118589,1.12722],[0.299579,1.83307,0.112878],[-1.25087,-0.648703,-1.34589],[0.640413,0.819406,0.555107],[0.177552,-0.737803,0.0525485],[0.454135,0.177549,-0.402395],[-0.933466,-0.449071,0.901593],[0.881987,-1.63252,-1.9874],[-1.41957,-1.12315,-0.067838],[0.536613,-0.302599,-1.02201],[-1.0701,-0.255939,-1.55947],[0.0339221,-0.488094,-0.835294],[1.14106,0.342209,-1.97056],[1.31255,-0.403469,-1.11504],[-2.47446,-1.06871,1.27424],[-0.234696,0.0481382,0.495298],[-1.08701,-0.116607,-0.971184],[1.28782,0.422923,-0.629879],[0.119802,-1.47156,1.28571],[0.566787,-0.450311,-0.998742],[0.631406,1.12939,0.586769],[-0.636448,0.9215,-1.02417],[-1.6013,1.1239,0.164343],[-0.841253,0.373231,0.468586],[-0.38153,-0.963811,0.297461],[1.55842,-0.141905,-1.37296],[1.23132,0.533576,-1.23688],[-0.113216,1.30556,0.506293],[0.411095,-1.29363,0.584636],[0.240477,1.49548,1.02417],[0.182833,0.0707466,-0.0861731],[0.0179177,-0.243053,0.854961],[0.870328,-0.0830082,-0.399777],[-0.668203,-0.0972463,0.319936],[-0.277099,0.21652,-0.955234],[0.522429,0.856652,-0.267241],[1.73407,-2.00269,0.535702],[-2.45483,0.224273,-1.75902],[-0.0850246,-0.724202,1.04353],[-1.39021,-0.0239166,-0.192253],[-0.258345,0.562973,-0.80597],[-0.246207,-0.273907,-0.392854],[0.743421,1.42525,0.34557],[0.106058,0.123646,-0.227748],[0.0647098,-0.263662,-1.09128],[0.0306809,0.744163,0.482251],[0.324682,0.47847,0.436648],[-0.0420732,1.22104,0.104201],[0.491851,0.842862,-0.107488],[1.77382,-0.281255,-0.0564845],[-0.335723,-1.16919,-0.832282],[1.68102,1.51075,0.205976],[-1.1352,-1.19821,-0.41303],[-0.238281,-1.59352,0.0829109],[1.53132,-0.142637,-0.0090004],[-0.137955,-0.387748,-1.16716],[0.607014,-2.02372,-0.677758],[-0.277323,2.25749,1.36989],[-1.46465,0.178227,0.926746],[-1.49669,0.451284,0.57575],[0.782001,0.534263,-0.0854382],[-0.217126,-1.87238,1.1724],[0.999178,-0.537846,-0.700611],[-0.16501,-0.367897,-0.252428],[-0.433481,1.53821,0.692666],[0.309419,0.766261,0.284153],[-0.399386,-0.212853,-0.846167],[0.126293,0.535006,0.549675],[0.367458,-0.80144,0.3216],[1.12958,-0.163954,-0.444464]] start=0 timeStep=0.1 n=100
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Case 2: Get a time series from a Process

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    myProcess = ot.WhiteNoise(ot.Normal(3), myTimeGrid)
    myTimeSeries2 = myProcess.getRealization()
    myTimeSeries2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>0</td><td>0.7441633</td><td>0.6691127</td><td>0.654993</td></tr>
      <tr><th>1</th><td>0.1</td><td>2.025489</td><td>-2.291076</td><td>-0.3085604</td></tr>
      <tr><th>2</th><td>0.2</td><td>0.4824069</td><td>-0.2966456</td><td>0.753103</td></tr>
      <tr><th>3</th><td>0.3</td><td>0.2603006</td><td>-0.5311959</td><td>0.243069</td></tr>
      <tr><th>4</th><td>0.4</td><td>-0.454824</td><td>-0.5556</td><td>-0.2506951</td></tr>
      <tr><th>5</th><td>0.5</td><td>0.6527283</td><td>-1.061281</td><td>1.170084</td></tr>
      <tr><th>6</th><td>0.6</td><td>0.1580856</td><td>-0.1309486</td><td>0.1493004</td></tr>
      <tr><th>7</th><td>0.7</td><td>-0.125599</td><td>2.131254</td><td>-0.5100349</td></tr>
      <tr><th>8</th><td>0.8</td><td>0.3811956</td><td>0.7550033</td><td>0.5775524</td></tr>
      <tr><th>9</th><td>0.9</td><td>1.390583</td><td>1.283099</td><td>3.054107</td></tr>
      <tr><th>10</th><td>1</td><td>-0.08277586</td><td>-0.5520343</td><td>-0.2208554</td></tr>
      <tr><th>11</th><td>1.1</td><td>0.2590749</td><td>-0.5329411</td><td>1.103103</td></tr>
      <tr><th>12</th><td>1.2</td><td>0.3998844</td><td>-1.148426</td><td>0.05150798</td></tr>
      <tr><th>13</th><td>1.3</td><td>-1.084034</td><td>-0.4314266</td><td>-1.813751</td></tr>
      <tr><th>14</th><td>1.4</td><td>0.6674617</td><td>1.392671</td><td>0.6704148</td></tr>
      <tr><th>15</th><td>1.5</td><td>0.06717289</td><td>-1.347014</td><td>1.972536</td></tr>
      <tr><th>16</th><td>1.6</td><td>0.6207792</td><td>0.6037313</td><td>-3.266675</td></tr>
      <tr><th>17</th><td>1.7</td><td>1.157038</td><td>2.272977</td><td>-0.324369</td></tr>
      <tr><th>18</th><td>1.8</td><td>-0.1988343</td><td>-0.6884332</td><td>0.95115</td></tr>
      <tr><th>19</th><td>1.9</td><td>0.1964159</td><td>1.471355</td><td>-0.2906456</td></tr>
      <tr><th>20</th><td>2</td><td>-0.20463</td><td>1.180738</td><td>0.04770255</td></tr>
      <tr><th>21</th><td>2.1</td><td>2.052661</td><td>1.752519</td><td>-0.07370337</td></tr>
      <tr><th>22</th><td>2.2</td><td>-0.2325496</td><td>-0.6351235</td><td>-0.0549957</td></tr>
      <tr><th>23</th><td>2.3</td><td>0.9784056</td><td>0.5162846</td><td>-0.8765859</td></tr>
      <tr><th>24</th><td>2.4</td><td>0.09456435</td><td>-0.6623348</td><td>0.5471233</td></tr>
      <tr><th>25</th><td>2.5</td><td>1.909001</td><td>0.1869866</td><td>0.3749817</td></tr>
      <tr><th>26</th><td>2.6</td><td>1.641901</td><td>-1.139612</td><td>2.014698</td></tr>
      <tr><th>27</th><td>2.7</td><td>0.418237</td><td>0.4373716</td><td>-1.669412</td></tr>
      <tr><th>28</th><td>2.8</td><td>-0.8637319</td><td>-1.361326</td><td>-0.3842659</td></tr>
      <tr><th>29</th><td>2.9</td><td>1.251103</td><td>2.624905</td><td>-1.804906</td></tr>
      <tr><th>30</th><td>3</td><td>-0.270761</td><td>0.4814337</td><td>1.772913</td></tr>
      <tr><th>31</th><td>3.1</td><td>-0.009206916</td><td>0.04473899</td><td>0.6184474</td></tr>
      <tr><th>32</th><td>3.2</td><td>-0.005707507</td><td>0.1118972</td><td>0.9800191</td></tr>
      <tr><th>33</th><td>3.3</td><td>0.4649596</td><td>0.566519</td><td>0.461334</td></tr>
      <tr><th>34</th><td>3.4</td><td>-0.5528193</td><td>0.1523531</td><td>-0.07080586</td></tr>
      <tr><th>35</th><td>3.5</td><td>-0.9808434</td><td>0.03494315</td><td>0.5793723</td></tr>
      <tr><th>36</th><td>3.6</td><td>-0.836097</td><td>0.9066795</td><td>-0.1697706</td></tr>
      <tr><th>37</th><td>3.7</td><td>-1.398826</td><td>-1.447217</td><td>0.1627815</td></tr>
      <tr><th>38</th><td>3.8</td><td>0.2061378</td><td>-0.4338214</td><td>0.8669154</td></tr>
      <tr><th>39</th><td>3.9</td><td>-0.00925845</td><td>0.5772551</td><td>-0.8868815</td></tr>
      <tr><th>40</th><td>4</td><td>0.710535</td><td>0.3302987</td><td>-0.2973599</td></tr>
      <tr><th>41</th><td>4.1</td><td>0.07365318</td><td>-1.310641</td><td>-0.7848479</td></tr>
      <tr><th>42</th><td>4.2</td><td>-0.01079746</td><td>1.636719</td><td>-0.0634587</td></tr>
      <tr><th>43</th><td>4.3</td><td>-0.320358</td><td>0.3053512</td><td>2.514599</td></tr>
      <tr><th>44</th><td>4.4</td><td>-0.8379119</td><td>-0.0225382</td><td>-0.1712374</td></tr>
      <tr><th>45</th><td>4.5</td><td>-0.7546052</td><td>1.932981</td><td>0.4241113</td></tr>
      <tr><th>46</th><td>4.6</td><td>0.9538415</td><td>-2.043014</td><td>0.7973423</td></tr>
      <tr><th>47</th><td>4.7</td><td>0.2567773</td><td>2.031943</td><td>0.6119406</td></tr>
      <tr><th>48</th><td>4.8</td><td>-2.326726</td><td>-2.051191</td><td>0.8045311</td></tr>
      <tr><th>49</th><td>4.9</td><td>-0.1249077</td><td>-0.4370757</td><td>-1.240472</td></tr>
      <tr><th>50</th><td>5</td><td>0.5199492</td><td>0.1817795</td><td>0.707274</td></tr>
      <tr><th>51</th><td>5.1</td><td>-1.143968</td><td>1.63862</td><td>-0.9934923</td></tr>
      <tr><th>52</th><td>5.2</td><td>1.315229</td><td>-0.3449936</td><td>-1.252983</td></tr>
      <tr><th>53</th><td>5.3</td><td>-0.6482416</td><td>1.25034</td><td>-0.425694</td></tr>
      <tr><th>54</th><td>5.4</td><td>-1.216896</td><td>0.1623168</td><td>0.424852</td></tr>
      <tr><th>55</th><td>5.5</td><td>-0.5252387</td><td>-0.6099689</td><td>0.3916781</td></tr>
      <tr><th>56</th><td>5.6</td><td>0.6332827</td><td>-1.659823</td><td>0.6805154</td></tr>
      <tr><th>57</th><td>5.7</td><td>-1.518147</td><td>1.493124</td><td>0.9120594</td></tr>
      <tr><th>58</th><td>5.8</td><td>0.5525934</td><td>-0.08204626</td><td>0.9115066</td></tr>
      <tr><th>59</th><td>5.9</td><td>0.01069249</td><td>1.074072</td><td>0.8807672</td></tr>
      <tr><th>60</th><td>6</td><td>-0.2095172</td><td>0.7833123</td><td>0.1129441</td></tr>
      <tr><th>61</th><td>6.1</td><td>1.310485</td><td>-1.710715</td><td>-0.4823777</td></tr>
      <tr><th>62</th><td>6.2</td><td>-0.3248811</td><td>1.215481</td><td>0.07020355</td></tr>
      <tr><th>63</th><td>6.3</td><td>0.1373787</td><td>-1.404892</td><td>-1.3211</td></tr>
      <tr><th>64</th><td>6.4</td><td>-0.8855604</td><td>1.898464</td><td>2.421893</td></tr>
      <tr><th>65</th><td>6.5</td><td>-0.6703585</td><td>-1.355824</td><td>-0.1026594</td></tr>
      <tr><th>66</th><td>6.6</td><td>0.1908912</td><td>-1.82906</td><td>1.589352</td></tr>
      <tr><th>67</th><td>6.7</td><td>0.4420196</td><td>0.2929974</td><td>-2.716077</td></tr>
      <tr><th>68</th><td>6.8</td><td>-0.102601</td><td>0.3547131</td><td>-0.4161232</td></tr>
      <tr><th>69</th><td>6.9</td><td>-1.367074</td><td>0.6299776</td><td>-0.3792289</td></tr>
      <tr><th>70</th><td>7</td><td>0.9822828</td><td>-1.054895</td><td>0.7564283</td></tr>
      <tr><th>71</th><td>7.1</td><td>-1.476221</td><td>1.201204</td><td>0.8542175</td></tr>
      <tr><th>72</th><td>7.2</td><td>-0.1294118</td><td>0.5053795</td><td>0.5584386</td></tr>
      <tr><th>73</th><td>7.3</td><td>1.513005</td><td>-0.5261153</td><td>1.345458</td></tr>
      <tr><th>74</th><td>7.4</td><td>-0.007550904</td><td>0.4094867</td><td>-0.2079344</td></tr>
      <tr><th>75</th><td>7.5</td><td>-1.580205</td><td>-1.10743</td><td>1.899028</td></tr>
      <tr><th>76</th><td>7.6</td><td>-0.1597455</td><td>-0.2872831</td><td>1.566113</td></tr>
      <tr><th>77</th><td>7.7</td><td>-0.5674334</td><td>1.198041</td><td>0.6771632</td></tr>
      <tr><th>78</th><td>7.8</td><td>-0.6646536</td><td>-1.111637</td><td>1.713402</td></tr>
      <tr><th>79</th><td>7.9</td><td>-0.8298178</td><td>-0.1993053</td><td>0.6612088</td></tr>
      <tr><th>80</th><td>8</td><td>0.05391718</td><td>1.198664</td><td>-0.3672626</td></tr>
      <tr><th>81</th><td>8.1</td><td>1.051965</td><td>-0.7470316</td><td>-1.122024</td></tr>
      <tr><th>82</th><td>8.2</td><td>-0.1110489</td><td>0.3601171</td><td>0.1550106</td></tr>
      <tr><th>83</th><td>8.3</td><td>1.483536</td><td>1.26867</td><td>0.4918207</td></tr>
      <tr><th>84</th><td>8.4</td><td>0.2929944</td><td>0.1876929</td><td>-0.5331332</td></tr>
      <tr><th>85</th><td>8.5</td><td>1.058811</td><td>-1.71374</td><td>-0.8058508</td></tr>
      <tr><th>86</th><td>8.6</td><td>-0.1032708</td><td>1.813935</td><td>0.7220852</td></tr>
      <tr><th>87</th><td>8.7</td><td>-0.3994359</td><td>-2.387935</td><td>0.7052542</td></tr>
      <tr><th>88</th><td>8.8</td><td>1.363471</td><td>0.6568921</td><td>-0.4202858</td></tr>
      <tr><th>89</th><td>8.9</td><td>0.897979</td><td>0.8159771</td><td>-1.036691</td></tr>
      <tr><th>90</th><td>9</td><td>0.04178603</td><td>1.21093</td><td>0.6501188</td></tr>
      <tr><th>91</th><td>9.1</td><td>1.53322</td><td>-0.1966707</td><td>1.500044</td></tr>
      <tr><th>92</th><td>9.2</td><td>2.298519</td><td>-0.1707669</td><td>1.068041</td></tr>
      <tr><th>93</th><td>9.3</td><td>-0.1996147</td><td>1.00242</td><td>1.053523</td></tr>
      <tr><th>94</th><td>9.4</td><td>0.1728466</td><td>0.01172679</td><td>0.8689039</td></tr>
      <tr><th>95</th><td>9.5</td><td>-0.2064948</td><td>0.6793756</td><td>0.241284</td></tr>
      <tr><th>96</th><td>9.6</td><td>0.4759412</td><td>-1.322344</td><td>0.09691178</td></tr>
      <tr><th>97</th><td>9.7</td><td>-1.161494</td><td>1.01721</td><td>-0.9439533</td></tr>
      <tr><th>98</th><td>9.8</td><td>-0.3405704</td><td>0.08103227</td><td>0.3509164</td></tr>
      <tr><th>99</th><td>9.9</td><td>0.1312525</td><td>-1.253636</td><td>1.153535</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the number of values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 51-53

.. code-block:: Python

    myTimeSeries.getSize()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    100



.. GENERATED FROM PYTHON SOURCE LINES 54-55

Get the dimension of the values observed at each time

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    myTimeSeries.getMesh().getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    1



.. GENERATED FROM PYTHON SOURCE LINES 58-59

Get the value :math:`X_i` at index :math:`i`

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries.getValueAtIndex(i))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.881987,-1.63252,-1.9874]




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Get the time series at index :math:`i` : :math:`X_i`

.. GENERATED FROM PYTHON SOURCE LINES 64-67

.. code-block:: Python

    i = 37
    print("Xi = ", myTimeSeries[i])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Xi =  [0.881987,-1.63252,-1.9874]




.. GENERATED FROM PYTHON SOURCE LINES 68-69

Get a the marginal value at index :math:`i` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 69-75

.. code-block:: Python

    i = 37
    # get the time stamp:
    print("ti = ", myTimeSeries.getTimeGrid().getValue(i))
    # get the first component of the corresponding value :
    print("Xi1 = ", myTimeSeries[i, 0])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ti =  3.7
    Xi1 =  0.8819872260674493




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Get all the values :math:`(X_1, \dots, X_n)` of the time series

.. GENERATED FROM PYTHON SOURCE LINES 77-79

.. code-block:: Python

    myTimeSeries.getValues()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>X2</th></tr>
      <tr><th>0</th><td>-1.230243</td><td>0.4137239</td><td>-0.3711467</td></tr>
      <tr><th>1</th><td>-1.737682</td><td>-0.173193</td><td>0.5655685</td></tr>
      <tr><th>2</th><td>0.4025755</td><td>1.526241</td><td>-1.063404</td></tr>
      <tr><th>3</th><td>2.213745</td><td>0.7584523</td><td>1.018955</td></tr>
      <tr><th>4</th><td>-0.5879114</td><td>-0.7108169</td><td>-1.986574</td></tr>
      <tr><th>5</th><td>1.766398</td><td>-1.023945</td><td>0.536297</td></tr>
      <tr><th>6</th><td>-1.389117</td><td>-0.3956957</td><td>-0.7667354</td></tr>
      <tr><th>7</th><td>-1.451314</td><td>0.7759733</td><td>0.9616415</td></tr>
      <tr><th>8</th><td>1.722686</td><td>-0.08874822</td><td>-1.354505</td></tr>
      <tr><th>9</th><td>0.5232332</td><td>0.5695881</td><td>0.1990005</td></tr>
      <tr><th>10</th><td>-1.349679</td><td>-0.3659612</td><td>0.3670178</td></tr>
      <tr><th>11</th><td>-1.648317</td><td>-0.3660734</td><td>-0.822541</td></tr>
      <tr><th>12</th><td>0.202469</td><td>0.2597965</td><td>1.91411</td></tr>
      <tr><th>13</th><td>-0.5078983</td><td>-0.3806563</td><td>0.1854587</td></tr>
      <tr><th>14</th><td>-0.9346251</td><td>1.365578</td><td>-1.51106</td></tr>
      <tr><th>15</th><td>0.712309</td><td>1.757025</td><td>1.519443</td></tr>
      <tr><th>16</th><td>-1.522366</td><td>0.4146114</td><td>-0.6914176</td></tr>
      <tr><th>17</th><td>0.5740793</td><td>1.095578</td><td>-1.445894</td></tr>
      <tr><th>18</th><td>-0.765293</td><td>0.3492336</td><td>-1.998305</td></tr>
      <tr><th>19</th><td>-1.017424</td><td>0.3154148</td><td>0.9031874</td></tr>
      <tr><th>20</th><td>-0.05925812</td><td>-0.3790401</td><td>0.2440547</td></tr>
      <tr><th>21</th><td>0.1874587</td><td>-0.3525871</td><td>-0.8649316</td></tr>
      <tr><th>22</th><td>-0.09895963</td><td>0.527129</td><td>-0.9641566</td></tr>
      <tr><th>23</th><td>-1.066164</td><td>2.233319</td><td>1.963865</td></tr>
      <tr><th>24</th><td>0.07360145</td><td>0.04178111</td><td>-1.578516</td></tr>
      <tr><th>25</th><td>0.5553654</td><td>-1.488645</td><td>0.3952326</td></tr>
      <tr><th>26</th><td>1.33862</td><td>-0.780955</td><td>-0.0005522337</td></tr>
      <tr><th>27</th><td>1.063344</td><td>0.9001971</td><td>-0.8768796</td></tr>
      <tr><th>28</th><td>-0.01128987</td><td>-0.2943407</td><td>0.3828267</td></tr>
      <tr><th>29</th><td>1.072239</td><td>-0.5167375</td><td>0.2836265</td></tr>
      <tr><th>30</th><td>0.5354828</td><td>0.1185891</td><td>1.127219</td></tr>
      <tr><th>31</th><td>0.2995789</td><td>1.833071</td><td>0.1128781</td></tr>
      <tr><th>32</th><td>-1.250871</td><td>-0.6487027</td><td>-1.345893</td></tr>
      <tr><th>33</th><td>0.640413</td><td>0.8194064</td><td>0.5551066</td></tr>
      <tr><th>34</th><td>0.1775519</td><td>-0.7378029</td><td>0.05254854</td></tr>
      <tr><th>35</th><td>0.4541349</td><td>0.1775487</td><td>-0.4023946</td></tr>
      <tr><th>36</th><td>-0.9334663</td><td>-0.4490712</td><td>0.9015932</td></tr>
      <tr><th>37</th><td>0.8819872</td><td>-1.632523</td><td>-1.987396</td></tr>
      <tr><th>38</th><td>-1.419572</td><td>-1.12315</td><td>-0.06783799</td></tr>
      <tr><th>39</th><td>0.5366128</td><td>-0.3025991</td><td>-1.022014</td></tr>
      <tr><th>40</th><td>-1.070098</td><td>-0.2559392</td><td>-1.559468</td></tr>
      <tr><th>41</th><td>0.03392206</td><td>-0.4880944</td><td>-0.8352935</td></tr>
      <tr><th>42</th><td>1.141061</td><td>0.3422086</td><td>-1.970555</td></tr>
      <tr><th>43</th><td>1.312549</td><td>-0.4034689</td><td>-1.115044</td></tr>
      <tr><th>44</th><td>-2.47446</td><td>-1.068707</td><td>1.274243</td></tr>
      <tr><th>45</th><td>-0.2346961</td><td>0.04813819</td><td>0.4952982</td></tr>
      <tr><th>46</th><td>-1.087014</td><td>-0.1166065</td><td>-0.971184</td></tr>
      <tr><th>47</th><td>1.287823</td><td>0.4229228</td><td>-0.6298794</td></tr>
      <tr><th>48</th><td>0.1198023</td><td>-1.471562</td><td>1.285715</td></tr>
      <tr><th>49</th><td>0.5667874</td><td>-0.4503113</td><td>-0.9987423</td></tr>
      <tr><th>50</th><td>0.631406</td><td>1.129394</td><td>0.5867685</td></tr>
      <tr><th>51</th><td>-0.6364483</td><td>0.9214998</td><td>-1.02417</td></tr>
      <tr><th>52</th><td>-1.601304</td><td>1.1239</td><td>0.1643426</td></tr>
      <tr><th>53</th><td>-0.8412529</td><td>0.3732311</td><td>0.4685855</td></tr>
      <tr><th>54</th><td>-0.3815305</td><td>-0.9638112</td><td>0.2974609</td></tr>
      <tr><th>55</th><td>1.558415</td><td>-0.1419048</td><td>-1.37296</td></tr>
      <tr><th>56</th><td>1.231316</td><td>0.5335758</td><td>-1.236877</td></tr>
      <tr><th>57</th><td>-0.1132158</td><td>1.305556</td><td>0.5062928</td></tr>
      <tr><th>58</th><td>0.4110945</td><td>-1.293629</td><td>0.5846361</td></tr>
      <tr><th>59</th><td>0.2404773</td><td>1.495477</td><td>1.024167</td></tr>
      <tr><th>60</th><td>0.1828329</td><td>0.07074656</td><td>-0.08617312</td></tr>
      <tr><th>61</th><td>0.01791766</td><td>-0.2430533</td><td>0.8549612</td></tr>
      <tr><th>62</th><td>0.870328</td><td>-0.08300818</td><td>-0.3997774</td></tr>
      <tr><th>63</th><td>-0.6682028</td><td>-0.09724626</td><td>0.3199365</td></tr>
      <tr><th>64</th><td>-0.2770985</td><td>0.2165202</td><td>-0.9552343</td></tr>
      <tr><th>65</th><td>0.5224286</td><td>0.8566518</td><td>-0.2672406</td></tr>
      <tr><th>66</th><td>1.734069</td><td>-2.002687</td><td>0.5357025</td></tr>
      <tr><th>67</th><td>-2.454826</td><td>0.224273</td><td>-1.759022</td></tr>
      <tr><th>68</th><td>-0.08502461</td><td>-0.7242019</td><td>1.043525</td></tr>
      <tr><th>69</th><td>-1.390211</td><td>-0.02391665</td><td>-0.1922532</td></tr>
      <tr><th>70</th><td>-0.2583447</td><td>0.5629732</td><td>-0.8059695</td></tr>
      <tr><th>71</th><td>-0.2462071</td><td>-0.2739071</td><td>-0.3928537</td></tr>
      <tr><th>72</th><td>0.7434213</td><td>1.425247</td><td>0.3455696</td></tr>
      <tr><th>73</th><td>0.1060575</td><td>0.1236461</td><td>-0.2277477</td></tr>
      <tr><th>74</th><td>0.06470977</td><td>-0.2636622</td><td>-1.091283</td></tr>
      <tr><th>75</th><td>0.03068088</td><td>0.744163</td><td>0.4822506</td></tr>
      <tr><th>76</th><td>0.3246823</td><td>0.4784698</td><td>0.4366476</td></tr>
      <tr><th>77</th><td>-0.04207318</td><td>1.22104</td><td>0.1042013</td></tr>
      <tr><th>78</th><td>0.4918511</td><td>0.8428624</td><td>-0.1074876</td></tr>
      <tr><th>79</th><td>1.773824</td><td>-0.2812551</td><td>-0.05648454</td></tr>
      <tr><th>80</th><td>-0.3357231</td><td>-1.169188</td><td>-0.8322824</td></tr>
      <tr><th>81</th><td>1.681016</td><td>1.510754</td><td>0.2059759</td></tr>
      <tr><th>82</th><td>-1.1352</td><td>-1.198209</td><td>-0.4130304</td></tr>
      <tr><th>83</th><td>-0.238281</td><td>-1.593523</td><td>0.08291087</td></tr>
      <tr><th>84</th><td>1.531325</td><td>-0.1426366</td><td>-0.009000402</td></tr>
      <tr><th>85</th><td>-0.1379549</td><td>-0.3877482</td><td>-1.167156</td></tr>
      <tr><th>86</th><td>0.6070137</td><td>-2.023717</td><td>-0.6777584</td></tr>
      <tr><th>87</th><td>-0.2773228</td><td>2.257485</td><td>1.369888</td></tr>
      <tr><th>88</th><td>-1.464653</td><td>0.1782268</td><td>0.9267463</td></tr>
      <tr><th>89</th><td>-1.496686</td><td>0.4512844</td><td>0.5757497</td></tr>
      <tr><th>90</th><td>0.7820009</td><td>0.5342627</td><td>-0.08543815</td></tr>
      <tr><th>91</th><td>-0.2171263</td><td>-1.872383</td><td>1.172403</td></tr>
      <tr><th>92</th><td>0.9991779</td><td>-0.537846</td><td>-0.7006115</td></tr>
      <tr><th>93</th><td>-0.1650099</td><td>-0.3678969</td><td>-0.252428</td></tr>
      <tr><th>94</th><td>-0.4334809</td><td>1.538208</td><td>0.6926657</td></tr>
      <tr><th>95</th><td>0.3094186</td><td>0.7662612</td><td>0.284153</td></tr>
      <tr><th>96</th><td>-0.399386</td><td>-0.2128531</td><td>-0.8461675</td></tr>
      <tr><th>97</th><td>0.1262932</td><td>0.5350065</td><td>0.5496746</td></tr>
      <tr><th>98</th><td>0.3674583</td><td>-0.8014402</td><td>0.3215995</td></tr>
      <tr><th>99</th><td>1.129582</td><td>-0.1639544</td><td>-0.444464</td></tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 80-82

Compute the temporal Mean
It corresponds to the mean of the values of the time series

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    myTimeSeries.getInputMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[-0.00154426,0.0338838,-0.0876544]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 85-86

Draw the marginal :math:`i` of the time series using linear interpolation

.. GENERATED FROM PYTHON SOURCE LINES 86-89

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0)
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 90-91

With no interpolation

.. GENERATED FROM PYTHON SOURCE LINES 91-94

.. code-block:: Python

    graph = myTimeSeries.drawMarginal(0, False)
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :alt: Unnamed - 0 marginal
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_timeseries_manipulation_002.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_timeseries_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_timeseries_manipulation.ipynb <plot_timeseries_manipulation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_timeseries_manipulation.py <plot_timeseries_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_timeseries_manipulation.zip <plot_timeseries_manipulation.zip>`
