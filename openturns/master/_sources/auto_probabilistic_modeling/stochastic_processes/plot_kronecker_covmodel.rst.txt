
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_kronecker_covmodel.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_kronecker_covmodel.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_kronecker_covmodel.py:


Create a Kronecker covariance model
===================================

.. GENERATED FROM PYTHON SOURCE LINES 6-31

This example illustrates how the User can create a Kronecker covariance function, which allows defining a multivariate covariance function with a specific covariance structure.

For that purpose, a spatial covariance matrix :math:`\mat{C}^{stat}` is needed in addition to a scalar correlation function :math:`\rho`.

 We recall that the Kronecker covariance model is defined by

.. math::

   C(\vect{s}, \vect{t}) = \rho\left(\dfrac{\vect{s}}{\theta}, \dfrac{\vect{t}}{\theta}\right) C^{stat}

where the output covariance matrix :math:`C^{stat}` is given by

.. math::
   C^{stat} = \mbox{Diag}(\vect{\sigma}) \, \mat{R} \,  \mbox{Diag}(\vect{\sigma}).


:math:`\vect{\sigma}` and :math:`\vect{\theta}` are respectively the amplitude and scale vectors.

The library implements this multivariate model thanks to the *KroneckerCovarianceModel* class which can be instanciated from:


- the correlation function and amplitude vectors :math:`(\rho, \vect{\sigma})`: in that case, by default :math:`\mat{R} = \mat{I}`;
- the correlation function, the amplitude vector and the spatial correlation matrix :math:`(\rho, \vect{\sigma}, \mat{R})`;
- the correlation function, the amplitude vector and the spatial covariance matrix :math:`(\rho, \vect{\sigma}, \mat{C})`;


.. GENERATED FROM PYTHON SOURCE LINES 33-40

.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    import math as m
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 41-42

Scale vector (input dimension 1)

.. GENERATED FROM PYTHON SOURCE LINES 42-60

.. code-block:: default

    theta = [4.0]

    # Create the rho function
    rho = ot.MaternModel(theta, 1.5)

    # Create the amplitude vector (output dimension 2)
    sigma = [1.0, 2.0]

    # output correlation
    R = ot.CorrelationMatrix(2)
    R[1, 0] = 0.01

    # output covariance
    C = ot.CovarianceMatrix(2)
    C[0, 0] = 4.0
    C[1, 1] = 5.0
    C[1, 0] = 0.5








.. GENERATED FROM PYTHON SOURCE LINES 61-62

Create the covariance model from the amplitude and correlation, no spatial correlation

.. GENERATED FROM PYTHON SOURCE LINES 62-64

.. code-block:: default

    ot.KroneckerCovarianceModel(rho, sigma)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>KroneckerCovarianceModel(rho=MaternModel(scale=[4], amplitude=[1], nu=1.5), amplitude=[1,2], no spatial correlation)</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 65-66

or from the correlation function, amplitude, and spatialCovariance

.. GENERATED FROM PYTHON SOURCE LINES 66-68

.. code-block:: default

    ot.KroneckerCovarianceModel(rho, sigma, R)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>KroneckerCovarianceModel(rho=MaternModel(scale=[4], amplitude=[1], nu=1.5), amplitude=[1,2], spatial correlation=<br>
    [[ 1    0.01 ]<br>
     [ 0.01 1    ]])</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-70

or from the correlation model and spatialCovariance

.. GENERATED FROM PYTHON SOURCE LINES 70-71

.. code-block:: default

    ot.KroneckerCovarianceModel(rho, C)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>KroneckerCovarianceModel(rho=MaternModel(scale=[4], amplitude=[1], nu=1.5), amplitude=[2,2.23607], spatial correlation=<br>
    [[ 1        0.111803 ]<br>
     [ 0.111803 1        ]])</p>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.002 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_kronecker_covmodel.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_kronecker_covmodel.py <plot_kronecker_covmodel.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_kronecker_covmodel.ipynb <plot_kronecker_covmodel.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
