
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/stochastic_processes/plot_create_normal_process.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_create_normal_process.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_stochastic_processes_plot_create_normal_process.py:


Create a normal process
=======================

.. GENERATED FROM PYTHON SOURCE LINES 6-11

.. code-block:: default

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 12-16

Create a gaussian process from a covariance model
-------------------------------------------------

In this paragraph we build a gaussian process from its covariance model.

.. GENERATED FROM PYTHON SOURCE LINES 19-20

We first define a covariance model :

.. GENERATED FROM PYTHON SOURCE LINES 22-30

.. code-block:: default

    defaultDimension = 1
    # Amplitude values
    amplitude = [1.0]*defaultDimension
    # Scale values
    scale = [1.0]*defaultDimension
    # Covariance model
    myModel = ot.AbsoluteExponential(scale, amplitude)








.. GENERATED FROM PYTHON SOURCE LINES 31-32

We define a mesh,

.. GENERATED FROM PYTHON SOURCE LINES 32-37

.. code-block:: default

    tmin = 0.0
    step = 0.1
    n = 11
    myTimeGrid = ot.RegularGrid(tmin, step, n)








.. GENERATED FROM PYTHON SOURCE LINES 38-39

and create the process :

.. GENERATED FROM PYTHON SOURCE LINES 39-42

.. code-block:: default

    process = ot.GaussianProcess(myModel, myTimeGrid)
    print(process)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    GaussianProcess(trend=[x0]->[0.0], covariance=AbsoluteExponential(scale=[1], amplitude=[1]))




.. GENERATED FROM PYTHON SOURCE LINES 43-44

We draw the first marginal of a sample of size 6 :

.. GENERATED FROM PYTHON SOURCE LINES 44-50

.. code-block:: default

    sample = process.getSample(6)
    graph = sample.drawMarginal(0)
    graph.setTitle("First marginal of six realizations of the process")
    view = viewer.View(graph)





.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_create_normal_process_001.png
   :alt: First marginal of six realizations of the process
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_create_normal_process_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 51-56

Create a gaussian process from spectral density
-----------------------------------------------

In this paragraph we build a gaussian process from its spectral density.


.. GENERATED FROM PYTHON SOURCE LINES 58-59

We first define a spectral model :

.. GENERATED FROM PYTHON SOURCE LINES 59-65

.. code-block:: default

    amplitude = [1.0, 2.0]
    scale = [4.0, 5.0]
    spatialCorrelation = ot.CorrelationMatrix(2)
    spatialCorrelation[0, 1] = 0.8
    mySpectralModel = ot.CauchyModel(scale, amplitude, spatialCorrelation)








.. GENERATED FROM PYTHON SOURCE LINES 66-67

As usual we define a mesh,

.. GENERATED FROM PYTHON SOURCE LINES 67-69

.. code-block:: default

    myTimeGrid = ot.RegularGrid(0.0, 0.1, 20)








.. GENERATED FROM PYTHON SOURCE LINES 70-71

and create the process thereafter

.. GENERATED FROM PYTHON SOURCE LINES 71-74

.. code-block:: default

    process = ot.SpectralGaussianProcess(mySpectralModel, myTimeGrid)
    print(process)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

     SpectralGaussianProcess=SpectralGaussianProcess dimension=2 spectralModel=class=CauchyModel amplitude=[1,2] scale=[4,5] spatial correlation=
    [[ 1   0.8 ]
     [ 0.8 1   ]] maximal frequency=5 n frequency=10




.. GENERATED FROM PYTHON SOURCE LINES 75-76

Eventually we draw the first marginal of a sample of size 6 :

.. GENERATED FROM PYTHON SOURCE LINES 76-81

.. code-block:: default

    sample = process.getSample(6)
    graph = sample.drawMarginal(0)
    graph.setTitle("First marginal of six realizations of the process")
    view = viewer.View(graph)




.. image-sg:: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_create_normal_process_002.png
   :alt: First marginal of six realizations of the process
   :srcset: /auto_probabilistic_modeling/stochastic_processes/images/sphx_glr_plot_create_normal_process_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 82-83

Display figures

.. GENERATED FROM PYTHON SOURCE LINES 83-84

.. code-block:: default

    plt.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.155 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_stochastic_processes_plot_create_normal_process.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_create_normal_process.py <plot_create_normal_process.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_create_normal_process.ipynb <plot_create_normal_process.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
