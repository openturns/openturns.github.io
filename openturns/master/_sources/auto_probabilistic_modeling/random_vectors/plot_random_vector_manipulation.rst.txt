
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_probabilistic_modeling/random_vectors/plot_random_vector_manipulation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_probabilistic_modeling_random_vectors_plot_random_vector_manipulation.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_probabilistic_modeling_random_vectors_plot_random_vector_manipulation.py:


Create a random vector
======================

.. GENERATED FROM PYTHON SOURCE LINES 6-9

The RandomVector object represents the concept of random variable.

In this example we are going to exhibit some of its main methods.

.. GENERATED FROM PYTHON SOURCE LINES 11-17

.. code-block:: default

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    import math as m
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Create a random vector

.. GENERATED FROM PYTHON SOURCE LINES 19-22

.. code-block:: default

    dist3d = ot.Normal(3)
    X = ot.RandomVector(dist3d)








.. GENERATED FROM PYTHON SOURCE LINES 23-24

Get the dimension

.. GENERATED FROM PYTHON SOURCE LINES 24-26

.. code-block:: default

    X.getDimension()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    3



.. GENERATED FROM PYTHON SOURCE LINES 27-28

Get the mean

.. GENERATED FROM PYTHON SOURCE LINES 28-30

.. code-block:: default

    X.getMean()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[0,0,0]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 31-32

Get the covariance

.. GENERATED FROM PYTHON SOURCE LINES 32-34

.. code-block:: default

    X.getCovariance()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[[ 1 0 0 ]<br>
     [ 0 1 0 ]<br>
     [ 0 0 1 ]]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 35-36

Draw a sample

.. GENERATED FROM PYTHON SOURCE LINES 36-38

.. code-block:: default

    X.getSample(5)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>X0</TH><TH>X1</TH><TH>X2</TH></TR>
    <TR><TH>0</TH><TD>0.3534472</TD><TD>-0.2187709</TD><TD>-0.8883468</TD></TR>
    <TR><TH>1</TH><TD>1.302108</TD><TD>1.13897</TD><TD>1.554364</TD></TR>
    <TR><TH>2</TH><TD>0.4893773</TD><TD>0.04257442</TD><TD>1.501532</TD></TR>
    <TR><TH>3</TH><TD>-1.147</TD><TD>-0.7282897</TD><TD>-1.07746</TD></TR>
    <TR><TH>4</TH><TD>-1.269175</TD><TD>-0.4687614</TD><TD>-0.8110714</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 39-40

Extract a single component

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: default

    X1 = X.getMarginal(1)
    X1.getSample(5)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>X1</TH></TR>
    <TR><TH>0</TH><TD>1.13703</TD></TR>
    <TR><TH>1</TH><TD>-0.04030962</TD></TR>
    <TR><TH>2</TH><TD>1.55857</TD></TR>
    <TR><TH>3</TH><TD>0.7398424</TD></TR>
    <TR><TH>4</TH><TD>0.09927194</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 44-45

Extract several components

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    X02 = X.getMarginal([0, 2])
    X02.getSample(5)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>X0</TH><TH>X2</TH></TR>
    <TR><TH>0</TH><TD>0.6119656</TD><TD>-0.3669958</TD></TR>
    <TR><TH>1</TH><TD>1.4285</TD><TD>-1.908112</TD></TR>
    <TR><TH>2</TH><TD>2.113194</TD><TD>-0.6656038</TD></TR>
    <TR><TH>3</TH><TD>-0.1165616</TD><TD>1.078081</TD></TR>
    <TR><TH>4</TH><TD>-0.5657817</TD><TD>-0.6800565</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.002 seconds)


.. _sphx_glr_download_auto_probabilistic_modeling_random_vectors_plot_random_vector_manipulation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_random_vector_manipulation.py <plot_random_vector_manipulation.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_random_vector_manipulation.ipynb <plot_random_vector_manipulation.ipynb>`
