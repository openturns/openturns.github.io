.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_py_reliability_sensitivity_design_of_experiments_plot_deterministic_design.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_py_reliability_sensitivity_design_of_experiments_plot_deterministic_design.py:


Deterministic design of experiments
===================================

In this example we present the available deterministic design of experiments.

Four types of deterministic design of experiments are available:

- `Axial`
- `Factorial`
- `Composite`
- `Box`

Each type of deterministic design is discretized differently according to a number of levels.

Functionally speaking, a design is a `Sample` that lies within the unit cube :math:`(0,1)^d` and can be scaled and moved to cover the desired box.


.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    ot.Log.Show(ot.Log.NONE)









We will use the following function to plot bi-dimensional samples.


.. code-block:: default

    def drawBidimensionalSample(sample, title):
        n = sample.getSize()
        graph = ot.Graph("%s, size=%d" % (title, n), "X1", "X2", True, '')
        cloud = ot.Cloud(sample)
        graph.add(cloud)
        return graph









Axial design
------------


.. code-block:: default

    levels = [1.0, 1.5, 3.0]
    experiment = ot.Axial(2, levels)
    sample = experiment.generate()
    graph = drawBidimensionalSample(sample,"Axial")
    view = viewer.View(graph)




.. image:: /auto_py_reliability_sensitivity/design_of_experiments/images/sphx_glr_plot_deterministic_design_001.png
    :alt: Axial, size=13
    :class: sphx-glr-single-img





Scale and to get desired location.


.. code-block:: default

    sample *= 2.0
    sample += [5.0, 8.0]
    graph = drawBidimensionalSample(sample,"Axial")
    view = viewer.View(graph)




.. image:: /auto_py_reliability_sensitivity/design_of_experiments/images/sphx_glr_plot_deterministic_design_002.png
    :alt: Axial, size=13
    :class: sphx-glr-single-img





Factorial design
----------------



.. code-block:: default

    experiment = ot.Factorial(2, levels)
    sample = experiment.generate()
    sample *= 2.0
    sample += [5.0, 8.0]
    graph = drawBidimensionalSample(sample,"Factorial")
    view = viewer.View(graph)




.. image:: /auto_py_reliability_sensitivity/design_of_experiments/images/sphx_glr_plot_deterministic_design_003.png
    :alt: Factorial, size=13
    :class: sphx-glr-single-img





Composite design
----------------


.. code-block:: default

    experiment = ot.Composite(2, levels)
    sample = experiment.generate()
    sample *= 2.0
    sample += [5.0, 8.0]
    graph = drawBidimensionalSample(sample,"Composite")
    view = viewer.View(graph)




.. image:: /auto_py_reliability_sensitivity/design_of_experiments/images/sphx_glr_plot_deterministic_design_004.png
    :alt: Composite, size=25
    :class: sphx-glr-single-img





Grid design
-----------



.. code-block:: default

    levels = [3, 4]
    experiment = ot.Box(levels)
    sample = experiment.generate()
    sample *= 2.0
    sample += [5.0, 8.0]
    graph = drawBidimensionalSample(sample,"Box")
    view = viewer.View(graph)
    plt.show()



.. image:: /auto_py_reliability_sensitivity/design_of_experiments/images/sphx_glr_plot_deterministic_design_005.png
    :alt: Box, size=30
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.353 seconds)


.. _sphx_glr_download_auto_py_reliability_sensitivity_design_of_experiments_plot_deterministic_design.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_deterministic_design.py <plot_deterministic_design.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_deterministic_design.ipynb <plot_deterministic_design.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
