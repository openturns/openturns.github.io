.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_meta_modeling_fields_metamodels_plot_karhunenloeve_validation.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_meta_modeling_fields_metamodels_plot_karhunenloeve_validation.py:


Validation of a Karhunen-Loeve decomposition
============================================

In this example we are going to assess a Karhunen-Loeve decomposition



.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    ot.Log.Show(ot.Log.NONE)








Create a Gaussian process


.. code-block:: default

    numberOfVertices = 20
    interval = ot.Interval(-1.0, 1.0)
    mesh = ot.IntervalMesher([numberOfVertices - 1]).build(interval)
    covariance = ot.SquaredExponential()
    process = ot.GaussianProcess(covariance, mesh)








decompose it using KL-SVD


.. code-block:: default

    sampleSize = 100
    processSample = process.getSample(sampleSize)
    threshold = 1.0e-7
    algo = ot.KarhunenLoeveSVDAlgorithm(processSample, threshold)
    algo.run()
    klresult = algo.getResult()








Instanciate the validation service


.. code-block:: default

    validation = ot.KarhunenLoeveValidation(processSample, klresult)








Plot the residual field


.. code-block:: default

    residualProcessSample = validation.computeResidual()
    view = viewer.View(residualProcessSample.drawMarginal(0))




.. image:: /auto_meta_modeling/fields_metamodels/images/sphx_glr_plot_karhunenloeve_validation_001.png
    :alt: KL residual - 0 marginal
    :class: sphx-glr-single-img





Plot the residual mean field


.. code-block:: default

    residualMean = validation.computeResidualMean()
    view = viewer.View(residualMean.drawMarginal(0))




.. image:: /auto_meta_modeling/fields_metamodels/images/sphx_glr_plot_karhunenloeve_validation_002.png
    :alt: KL residual mean - 0 marginal
    :class: sphx-glr-single-img





Plot the residual standard deviation field


.. code-block:: default

    residualSigmaField = validation.computeResidualStandardDeviation()
    view = viewer.View(residualSigmaField.drawMarginal(0))




.. image:: /auto_meta_modeling/fields_metamodels/images/sphx_glr_plot_karhunenloeve_validation_003.png
    :alt: KL residual standard deviation - 0 marginal
    :class: sphx-glr-single-img





Build the validation graph


.. code-block:: default

    view = viewer.View(validation.drawValidation())




.. image:: /auto_meta_modeling/fields_metamodels/images/sphx_glr_plot_karhunenloeve_validation_004.png
    :alt: Karhunen-Loeve Validation
    :class: sphx-glr-single-img





Build the weight graph


.. code-block:: default

    view = viewer.View(validation.drawObservationWeight(0))




.. image:: /auto_meta_modeling/fields_metamodels/images/sphx_glr_plot_karhunenloeve_validation_005.png
    :alt: Field weight axis 0
    :class: sphx-glr-single-img





Build the quality graph


.. code-block:: default

    view = viewer.View(validation.drawObservationQuality())
    plt.show()



.. image:: /auto_meta_modeling/fields_metamodels/images/sphx_glr_plot_karhunenloeve_validation_006.png
    :alt: Field quality
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.584 seconds)


.. _sphx_glr_download_auto_meta_modeling_fields_metamodels_plot_karhunenloeve_validation.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_karhunenloeve_validation.py <plot_karhunenloeve_validation.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_karhunenloeve_validation.ipynb <plot_karhunenloeve_validation.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
