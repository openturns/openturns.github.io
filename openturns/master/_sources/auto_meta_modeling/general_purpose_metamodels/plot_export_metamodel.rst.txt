
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_meta_modeling/general_purpose_metamodels/plot_export_metamodel.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_meta_modeling_general_purpose_metamodels_plot_export_metamodel.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_meta_modeling_general_purpose_metamodels_plot_export_metamodel.py:


Export a metamodel
------------------

.. GENERATED FROM PYTHON SOURCE LINES 7-9

In this example we will see how to export a metamodel from the context it is created
to another context where it will actually be used with the help of the pickle module.

.. GENERATED FROM PYTHON SOURCE LINES 11-15

.. code-block:: Python

    import openturns as ot
    from openturns.usecases import cantilever_beam
    import pickle








.. GENERATED FROM PYTHON SOURCE LINES 16-18

Load the cantilever beam use-case.
We want to use the independent distribution to get meaningful Sobol' indices.

.. GENERATED FROM PYTHON SOURCE LINES 18-22

.. code-block:: Python

    beam = cantilever_beam.CantileverBeam()
    g = beam.model
    distribution = beam.independentDistribution








.. GENERATED FROM PYTHON SOURCE LINES 23-24

Generate a learning sample with MC simulation (or retrieve the design from experimental data).

.. GENERATED FROM PYTHON SOURCE LINES 24-29

.. code-block:: Python

    ot.RandomGenerator.SetSeed(0)
    N = 30  # size of the experimental design
    X = distribution.getSample(N)
    Y = g(X)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Build a chaos metamodel

.. GENERATED FROM PYTHON SOURCE LINES 31-36

.. code-block:: Python

    algo = ot.FunctionalChaosAlgorithm(X, Y, distribution)
    algo.run()
    assert algo.getResult().getResiduals()[0] < 1e-12
    metamodel = algo.getResult().getMetaModel()








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Save the metamodel into a .pkl file for later use

.. GENERATED FROM PYTHON SOURCE LINES 38-41

.. code-block:: Python

    with open("metamodel.pkl", "wb") as f:
        pickle.dump(metamodel, f)








.. GENERATED FROM PYTHON SOURCE LINES 42-43

Reload the metamodel in another context from the same .pkl

.. GENERATED FROM PYTHON SOURCE LINES 43-46

.. code-block:: Python

    with open("metamodel.pkl", "rb") as f:
        metamodel = pickle.load(f)








.. GENERATED FROM PYTHON SOURCE LINES 47-48

Reuse the loaded metamodel

.. GENERATED FROM PYTHON SOURCE LINES 48-51

.. code-block:: Python

    x = [6.70455e+10, 300.0, 2.55, 1.45385e-07]
    y = metamodel(x)
    print(y)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [0.170031]





.. _sphx_glr_download_auto_meta_modeling_general_purpose_metamodels_plot_export_metamodel.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_export_metamodel.ipynb <plot_export_metamodel.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_export_metamodel.py <plot_export_metamodel.py>`
