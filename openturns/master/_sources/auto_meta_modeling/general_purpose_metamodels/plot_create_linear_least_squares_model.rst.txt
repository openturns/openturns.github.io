
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_meta_modeling/general_purpose_metamodels/plot_create_linear_least_squares_model.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_meta_modeling_general_purpose_metamodels_plot_create_linear_least_squares_model.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_meta_modeling_general_purpose_metamodels_plot_create_linear_least_squares_model.py:


Create a linear least squares model
===================================

.. GENERATED FROM PYTHON SOURCE LINES 6-19

In this example we are going to create a global approximation of a model response using  a linear
function:

.. math::
    \underline{y} \, \approx \, \widehat{h}(\underline{x}) \,
   = \, \sum_{j=0}^{n_X} \; a_j \; \psi_j(\underline{x})


Here

.. math::
   h(x) = [cos(x_1 + x_2), (x2 + 1)* e^{x_1 - 2* x_2}]


.. GENERATED FROM PYTHON SOURCE LINES 21-31

.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    ot.Log.Show(ot.Log.NONE)

    # Prepare an input sample
    x  = [[0.5,0.5], [-0.5,-0.5], [-0.5,0.5], [0.5,-0.5]]
    x += [[0.25,0.25], [-0.25,-0.25], [-0.25,0.25], [0.25,-0.25]]








.. GENERATED FROM PYTHON SOURCE LINES 32-33

Compute the output sample from the input sample and a function

.. GENERATED FROM PYTHON SOURCE LINES 33-37

.. code-block:: default

    formulas = ['cos(x1 + x2)', '(x2 + 1) * exp(x1 - 2 * x2)']
    model = ot.SymbolicFunction(['x1', 'x2'], formulas)
    y = model(x)








.. GENERATED FROM PYTHON SOURCE LINES 38-39

create a linear least squares model

.. GENERATED FROM PYTHON SOURCE LINES 39-42

.. code-block:: default

    algo = ot.LinearLeastSquares(x, y)
    algo.run()








.. GENERATED FROM PYTHON SOURCE LINES 43-44

get the linear term

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: default

    algo.getLinear()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[[  9.93014e-17  0.998189    ]<br>
     [  4.96507e-17 -0.925648    ]]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 47-48

get the constant term

.. GENERATED FROM PYTHON SOURCE LINES 48-50

.. code-block:: default

    algo.getConstant()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <p>[0.854471,1.05305]</p>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 51-52

get the metamodel

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: default

    responseSurface = algo.getMetaModel()








.. GENERATED FROM PYTHON SOURCE LINES 55-56

plot 2nd output of our model with x1=0.5

.. GENERATED FROM PYTHON SOURCE LINES 56-65

.. code-block:: default

    graph = ot.ParametricFunction(responseSurface, [0], [0.5]).getMarginal(1).draw(-0.5, 0.5)
    graph.setLegends(['linear LS'])
    curve = ot.ParametricFunction(model, [0], [0.5]).getMarginal(1).draw(-0.5, 0.5).getDrawable(0)
    curve.setColor('red')
    curve.setLegend('model')
    graph.add(curve)
    graph.setLegendPosition('topright')
    view = viewer.View(graph)
    plt.show()



.. image-sg:: /auto_meta_modeling/general_purpose_metamodels/images/sphx_glr_plot_create_linear_least_squares_model_001.png
   :alt: y1 as a function of x1
   :srcset: /auto_meta_modeling/general_purpose_metamodels/images/sphx_glr_plot_create_linear_least_squares_model_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.080 seconds)


.. _sphx_glr_download_auto_meta_modeling_general_purpose_metamodels_plot_create_linear_least_squares_model.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_create_linear_least_squares_model.py <plot_create_linear_least_squares_model.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_create_linear_least_squares_model.ipynb <plot_create_linear_least_squares_model.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
