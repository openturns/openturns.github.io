
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_functional_modeling/field_functions/plot_value_function.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_functional_modeling_field_functions_plot_value_function.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_functional_modeling_field_functions_plot_value_function.py:


Value function
==============

.. GENERATED FROM PYTHON SOURCE LINES 6-32

A value function
:math:`f_{value}: \mathcal{D} \times \mathbb{R}^d \rightarrow \mathcal{D} \times \mathbb{R}^q` is a
particular field function that lets invariant the mesh of a field
and defined by a function :math:`g : \mathbb{R}^d  \rightarrow \mathbb{R}^q` such that:

.. math::
   \begin{aligned} f_{value}(\underline{t}, \underline{x})=(\underline{t}, g(\underline{x}))\end{aligned}

Let's note that the input dimension of :math:`f_{value}` still designs the
dimension of :math:`\underline{x}` : :math:`d`. Its output dimension is equal to :math:`q`.

The creation of the *ValueFunction* object requires the
function :math:`g` and the integer :math:`n`: the dimension of the
vertices of the mesh :math:`\mathcal{M}`. This data is required for tests on the
compatibility of dimension when a composite process is created using the
spatial function.


The use case illustrates the creation of a spatial (field) function
from the function :math:`g: \mathbb{R}^2  \rightarrow \mathbb{R}^2` such as :

.. math::
   \begin{aligned}
     g(\underline{x})=(x_1^2, x_1+x_2)
   \end{aligned}


.. GENERATED FROM PYTHON SOURCE LINES 34-38

.. code-block:: Python

    import openturns as ot

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 39-40

Create a mesh

.. GENERATED FROM PYTHON SOURCE LINES 40-43

.. code-block:: Python

    N = 100
    mesh = ot.RegularGrid(0.0, 1.0, N)








.. GENERATED FROM PYTHON SOURCE LINES 44-45

Create the function that acts the values of the mesh

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: Python

    g = ot.SymbolicFunction(["x1", "x2"], ["x1^2", "x1+x2"])








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Create the field function

.. GENERATED FROM PYTHON SOURCE LINES 49-51

.. code-block:: Python

    f = ot.ValueFunction(g, mesh)








.. GENERATED FROM PYTHON SOURCE LINES 52-53

Evaluate f

.. GENERATED FROM PYTHON SOURCE LINES 53-60

.. code-block:: Python

    inF = ot.Normal(2).getSample(N)
    outF = f(inF)

    # print input/output at first mesh nodes
    xy = inF
    xy.stack(outF)
    xy[:5]





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>X0</th><th>X1</th><th>y0</th><th>y1</th></tr>
      <tr><th>0</th><td>-0.07417901</td><td>-0.8205449</td><td>0.005502526</td><td>-0.8947239</td></tr>
      <tr><th>1</th><td>0.4911823</td><td>0.3099347</td><td>0.2412601</td><td>0.801117</td></tr>
      <tr><th>2</th><td>-0.6362435</td><td>-0.08046494</td><td>0.4048058</td><td>-0.7167084</td></tr>
      <tr><th>3</th><td>-0.4333433</td><td>-0.2612988</td><td>0.1877864</td><td>-0.6946421</td></tr>
      <tr><th>4</th><td>1.176418</td><td>-2.04828</td><td>1.383959</td><td>-0.8718619</td></tr>
    </table>
    </div>
    <br />
    <br />


.. _sphx_glr_download_auto_functional_modeling_field_functions_plot_value_function.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_value_function.ipynb <plot_value_function.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_value_function.py <plot_value_function.py>`
