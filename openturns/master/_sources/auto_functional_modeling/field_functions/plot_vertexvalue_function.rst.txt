
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_functional_modeling/field_functions/plot_vertexvalue_function.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_functional_modeling_field_functions_plot_vertexvalue_function.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_functional_modeling_field_functions_plot_vertexvalue_function.py:


Vertex value function
=====================

.. GENERATED FROM PYTHON SOURCE LINES 6-29

A vertex value function
:math:`f_{vertexvalue}: \mathcal{D} \times \mathbb{R}^d \rightarrow \mathcal{D} \times \mathbb{R}^q` is a
particular field function that lets invariant the mesh of a field
and defined by a function :math:`h : \mathbb{R}^n \times \mathbb{R}^d  \rightarrow \mathbb{R}^q` such that:

.. math::
   \begin{aligned} f_{vertexvalue}(\underline{t}, \underline{x})=(\underline{t}, h(\underline{t},\underline{x}))\end{aligned}

Let's note that the input dimension of :math:`f_{vertexvalue}` still design the
dimension of :math:`\underline{x}` : :math:`d`. Its output dimension is equal to :math:`q`.

The creation of the *VertexValueFunction* object requires the
function :math:`h` and the integer :math:`n`: the dimension of the
vertices of the mesh :math:`\mathcal{M}`.

This example illustrates the creation of a field from the function
:math:`h:\mathbb{R}\times\mathbb{R}^2` such as:

.. math::
   \begin{aligned}
      h(\underline{t}, \underline{x})=(t+x_1^2+x_2^2)
   \end{aligned}


.. GENERATED FROM PYTHON SOURCE LINES 32-36

.. code-block:: Python

    import openturns as ot

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Create a mesh

.. GENERATED FROM PYTHON SOURCE LINES 38-41

.. code-block:: Python

    N = 100
    mesh = ot.RegularGrid(0.0, 1.0, N)








.. GENERATED FROM PYTHON SOURCE LINES 42-43

Create the function that acts the values of the mesh

.. GENERATED FROM PYTHON SOURCE LINES 43-45

.. code-block:: Python

    h = ot.SymbolicFunction(["t", "x1", "x2"], ["t+x1^2+x2^2"])








.. GENERATED FROM PYTHON SOURCE LINES 46-47

Create the field function

.. GENERATED FROM PYTHON SOURCE LINES 47-49

.. code-block:: Python

    f = ot.VertexValueFunction(h, mesh)








.. GENERATED FROM PYTHON SOURCE LINES 50-51

Evaluate f

.. GENERATED FROM PYTHON SOURCE LINES 51-59

.. code-block:: Python

    inF = ot.Normal(2).getSample(N)
    outF = f(inF)

    # print input/output at first 10 mesh nodes
    txy = mesh.getVertices()
    txy.stack(inF)
    txy.stack(outF)
    txy[:10]





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table>
      <tr><td></td><th>t</th><th>X0</th><th>X1</th><th>y0</th></tr>
      <tr><th>0</th><td>0</td><td>-0.9503652</td><td>0.7824849</td><td>1.515477</td></tr>
      <tr><th>1</th><td>1</td><td>1.651401</td><td>-0.5092668</td><td>3.986477</td></tr>
      <tr><th>2</th><td>2</td><td>0.07533105</td><td>0.2870389</td><td>2.088066</td></tr>
      <tr><th>3</th><td>3</td><td>-2.072195</td><td>-0.3823547</td><td>7.440186</td></tr>
      <tr><th>4</th><td>4</td><td>-0.8624453</td><td>0.2369853</td><td>4.799974</td></tr>
      <tr><th>5</th><td>5</td><td>1.205096</td><td>0.1801496</td><td>6.48471</td></tr>
      <tr><th>6</th><td>6</td><td>-0.6270144</td><td>2.489934</td><td>12.59292</td></tr>
      <tr><th>7</th><td>7</td><td>2.325934</td><td>-1.211789</td><td>13.8784</td></tr>
      <tr><th>8</th><td>8</td><td>-2.079742</td><td>-0.2421917</td><td>12.38398</td></tr>
      <tr><th>9</th><td>9</td><td>0.5590535</td><td>-0.8243434</td><td>9.992083</td></tr>
    </table>
    </div>
    <br />
    <br />


.. _sphx_glr_download_auto_functional_modeling_field_functions_plot_vertexvalue_function.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_vertexvalue_function.ipynb <plot_vertexvalue_function.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_vertexvalue_function.py <plot_vertexvalue_function.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_vertexvalue_function.zip <plot_vertexvalue_function.zip>`
