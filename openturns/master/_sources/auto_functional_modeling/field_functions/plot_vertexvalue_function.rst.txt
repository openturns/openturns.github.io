
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_functional_modeling/field_functions/plot_vertexvalue_function.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_functional_modeling_field_functions_plot_vertexvalue_function.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_functional_modeling_field_functions_plot_vertexvalue_function.py:


Vertex value function
=====================

.. GENERATED FROM PYTHON SOURCE LINES 6-29

A vertex value function
:math:`f_{vertexvalue}: \mathcal{D} \times \mathbb{R}^d \rightarrow \mathcal{D} \times \mathbb{R}^q` is a
particular field function that lets invariant the mesh of a field
and defined by a function :math:`h : \mathbb{R}^n \times \mathbb{R}^d  \rightarrow \mathbb{R}^q` such that:

.. math::
   \begin{aligned} f_{vertexvalue}(\underline{t}, \underline{x})=(\underline{t}, h(\underline{t},\underline{x}))\end{aligned}

Let's note that the input dimension of :math:`f_{vertexvalue}` still design the
dimension of :math:`\underline{x}` : :math:`d`. Its output dimension is equal to :math:`q`.

The creation of the *VertexValueFunction* object requires the
function :math:`h` and the integer :math:`n`: the dimension of the
vertices of the mesh :math:`\mathcal{M}`.

This example illustrates the creation of a field from the function
:math:`h:\mathbb{R}\times\mathbb{R}^2` such as:

.. math::
   \begin{aligned} 
      h(\underline{t}, \underline{x})=(t+x_1^2+x_2^2)
   \end{aligned}


.. GENERATED FROM PYTHON SOURCE LINES 32-39

.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    import math as m
    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 40-41

Create a mesh

.. GENERATED FROM PYTHON SOURCE LINES 41-44

.. code-block:: default

    N = 100
    mesh = ot.RegularGrid(0.0, 1.0, N)








.. GENERATED FROM PYTHON SOURCE LINES 45-46

Create the function that acts the values of the mesh

.. GENERATED FROM PYTHON SOURCE LINES 46-48

.. code-block:: default

    h = ot.SymbolicFunction(['t', 'x1', 'x2'],  ['t+x1^2+x2^2'])








.. GENERATED FROM PYTHON SOURCE LINES 49-50

Create the field function

.. GENERATED FROM PYTHON SOURCE LINES 50-52

.. code-block:: default

    f = ot.VertexValueFunction(h, mesh)








.. GENERATED FROM PYTHON SOURCE LINES 53-54

Evaluate f

.. GENERATED FROM PYTHON SOURCE LINES 54-62

.. code-block:: default

    inF = ot.Normal(2).getSample(N)
    outF = f(inF)

    # print input/output at first 10 mesh nodes
    txy = mesh.getVertices()
    txy.stack(inF)
    txy.stack(outF)
    txy[:10]





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <TABLE><TR><TD></TD><TH>t</TH><TH>X0</TH><TH>X1</TH><TH>y0</TH></TR>
    <TR><TH>0</TH><TD>0</TD><TD>-0.08563258</TD><TD>1.799827</TD><TD>3.246711</TD></TR>
    <TR><TH>1</TH><TD>1</TD><TD>-2.04777</TD><TD>-0.6334859</TD><TD>5.594667</TD></TR>
    <TR><TH>2</TH><TD>2</TD><TD>-0.5371822</TD><TD>-0.115501</TD><TD>2.301905</TD></TR>
    <TR><TH>3</TH><TD>3</TD><TD>0.5966476</TD><TD>-0.407825</TD><TD>3.52231</TD></TR>
    <TR><TH>4</TH><TD>4</TD><TD>-1.397822</TD><TD>0.4756979</TD><TD>6.180195</TD></TR>
    <TR><TH>5</TH><TD>5</TD><TD>0.9306682</TD><TD>0.3090413</TD><TD>5.96165</TD></TR>
    <TR><TH>6</TH><TD>6</TD><TD>-0.3934743</TD><TD>1.385295</TD><TD>8.073865</TD></TR>
    <TR><TH>7</TH><TD>7</TD><TD>-0.5934191</TD><TD>-1.069596</TD><TD>8.496181</TD></TR>
    <TR><TH>8</TH><TD>8</TD><TD>0.5019269</TD><TD>-1.47757</TD><TD>10.43514</TD></TR>
    <TR><TH>9</TH><TD>9</TD><TD>1.785641</TD><TD>0.1907433</TD><TD>12.2249</TD></TR>
    </TABLE>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.010 seconds)


.. _sphx_glr_download_auto_functional_modeling_field_functions_plot_vertexvalue_function.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_vertexvalue_function.py <plot_vertexvalue_function.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_vertexvalue_function.ipynb <plot_vertexvalue_function.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
