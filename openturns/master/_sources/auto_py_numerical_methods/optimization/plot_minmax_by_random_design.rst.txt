.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_py_numerical_methods_optimization_plot_minmax_by_random_design.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_py_numerical_methods_optimization_plot_minmax_by_random_design.py:


Mix/max search and sensitivity from design
==========================================

In this example we are going to evaluate the min and max values of the output variable of interest from a sample and to evaluate the gradient of the limit state function defining the output variable of interest at a particular point.


.. code-block:: default

    from __future__ import print_function
    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    import math as m
    ot.Log.Show(ot.Log.NONE)








Create the marginal distributions of the parameters


.. code-block:: default

    dist_E = ot.Beta(0.93, 2.27, 2.8e7, 4.8e7)
    dist_F = ot.LogNormalMuSigma(30000, 9000, 15000).getDistribution()
    dist_L = ot.Uniform(250, 260)
    dist_I = ot.Beta(2.5, 1.5, 3.1e2, 4.5e2)
    marginals = [dist_E, dist_F, dist_L, dist_I]
    distribution = ot.ComposedDistribution(marginals)








Sample inputs


.. code-block:: default

    sampleX = distribution.getSample(100)








Create the model


.. code-block:: default

    model = ot.SymbolicFunction(['E', 'F', 'L', 'I'], ['F*L^3/(3*E*I)'])








Evaluate outputs


.. code-block:: default

    sampleY = model(sampleX)








Get min and max


.. code-block:: default

    minY = sampleY.getMin()
    minX = sampleX[sampleY.find(minY)]
    print('min: y=', minY, ' with x=', minX)
    maxY = sampleY.getMax()
    maxX = sampleX[sampleY.find(maxY)]
    print('max: y=', maxY, ' with x=', maxX)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    min: y= [7.06076]  with x= [4.63544e+07,24774.3,255.912,422.873]
    max: y= [38.8026]  with x= [3.30578e+07,96185.6,259.774,438.171]




Get sensitivity at min


.. code-block:: default

    model.gradient(minX)





.. raw:: html

    <p>[[ -1.52321e-07 ]<br>
     [  0.000285003 ]<br>
     [  0.0827718   ]<br>
     [ -0.0166971   ]]</p>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.004 seconds)


.. _sphx_glr_download_auto_py_numerical_methods_optimization_plot_minmax_by_random_design.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_minmax_by_random_design.py <plot_minmax_by_random_design.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_minmax_by_random_design.ipynb <plot_minmax_by_random_design.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
