
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_functional_modeling/field_functions/plot_viscous_fall_field_function.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_functional_modeling_field_functions_plot_viscous_fall_field_function.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_functional_modeling_field_functions_plot_viscous_fall_field_function.py:


Define a function with a field output: the viscous free fall example
====================================================================

.. GENERATED FROM PYTHON SOURCE LINES 6-10

In this example, we define a function which has a vector input and a field output.
This is why we use the :class:`~openturns.PythonPointToFieldFunction` class to create the associated function and propagate the uncertainties through it.

We consider a viscous free fall as explained :ref:`here <use-case-viscous-fall>`.

.. GENERATED FROM PYTHON SOURCE LINES 12-14

Define the model
----------------

.. GENERATED FROM PYTHON SOURCE LINES 16-23

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as viewer
    from matplotlib import pylab as plt
    from openturns.usecases import viscous_free_fall

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Load the viscous free fall example.

.. GENERATED FROM PYTHON SOURCE LINES 25-29

.. code-block:: Python

    vff = viscous_free_fall.ViscousFreeFall()
    distribution = vff.distribution
    model = vff.model








.. GENERATED FROM PYTHON SOURCE LINES 30-32

Sample trajectories
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 34-35

In order to sample trajectories, we use the `getSample` method of the input distribution and apply the field function.

.. GENERATED FROM PYTHON SOURCE LINES 37-41

.. code-block:: Python

    size = 10
    inputSample = distribution.getSample(size)
    outputSample = model(inputSample)








.. GENERATED FROM PYTHON SOURCE LINES 42-44

.. code-block:: Python

    ot.ResourceMap.SetAsUnsignedInteger("Drawable-DefaultPalettePhase", size)








.. GENERATED FROM PYTHON SOURCE LINES 45-46

Draw some curves.

.. GENERATED FROM PYTHON SOURCE LINES 48-55

.. code-block:: Python

    graph = outputSample.drawMarginal(0)
    graph.setTitle("Viscous free fall: %d trajectories" % (size))
    graph.setXTitle(r"$t$")
    graph.setYTitle(r"$z$")
    view = viewer.View(graph)
    plt.show()




.. image-sg:: /auto_functional_modeling/field_functions/images/sphx_glr_plot_viscous_fall_field_function_001.png
   :alt: Viscous free fall: 10 trajectories
   :srcset: /auto_functional_modeling/field_functions/images/sphx_glr_plot_viscous_fall_field_function_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 56-60

We see that the object first moves up and then falls down.
Not all objects, however, achieve the same maximum altitude.
We see that some trajectories reach a higher maximum altitude than others.
Moreover, at the final time :math:`t_{max}`, one trajectory hits the ground: :math:`z(t_{max})=0` for this trajectory.

.. GENERATED FROM PYTHON SOURCE LINES 62-63

Reset default settings

.. GENERATED FROM PYTHON SOURCE LINES 63-64

.. code-block:: Python

    ot.ResourceMap.Reload()








.. _sphx_glr_download_auto_functional_modeling_field_functions_plot_viscous_fall_field_function.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_viscous_fall_field_function.ipynb <plot_viscous_fall_field_function.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_viscous_fall_field_function.py <plot_viscous_fall_field_function.py>`
