
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_functional_modeling/field_functions/plot_viscous_fall_field_function_connection.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_functional_modeling_field_functions_plot_viscous_fall_field_function_connection.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_functional_modeling_field_functions_plot_viscous_fall_field_function_connection.py:


Define a connection function with a field output
================================================

.. GENERATED FROM PYTHON SOURCE LINES 6-9

In this example, we define a function which has a vector input and a field output.
The goal of this example is to show how to use :class:`~openturns.PointToFieldConnection` class to combine two functions.
A detailed explanation of the model is presented :ref:`here <use-case-viscous-fall>`.

.. GENERATED FROM PYTHON SOURCE LINES 11-13

Define the model
----------------

.. GENERATED FROM PYTHON SOURCE LINES 15-21

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as otv
    from openturns.usecases import viscous_free_fall

    ot.Log.Show(ot.Log.NONE)








.. GENERATED FROM PYTHON SOURCE LINES 22-23

Load the viscous free fall example.

.. GENERATED FROM PYTHON SOURCE LINES 23-27

.. code-block:: Python

    vff = viscous_free_fall.ViscousFreeFall()
    distribution = vff.distribution
    model = vff.model








.. GENERATED FROM PYTHON SOURCE LINES 28-30

Restrict the number of inputs
-----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 32-33

We define a function which has input only `z0` as input to *freeze* the 3 other inputs of the original model:

.. GENERATED FROM PYTHON SOURCE LINES 33-35

.. code-block:: Python

    fz0 = ot.SymbolicFunction(["z0"], ["z0", "55", "80", "15"])








.. GENERATED FROM PYTHON SOURCE LINES 36-37

Then we use the :class:`~openturns.PointToFieldConnection` to compose it with the original model.

.. GENERATED FROM PYTHON SOURCE LINES 37-39

.. code-block:: Python

    model_z0 = ot.PointToFieldConnection(model, fz0)








.. GENERATED FROM PYTHON SOURCE LINES 40-42

Sample trajectories
--------------------

.. GENERATED FROM PYTHON SOURCE LINES 44-45

In order to sample trajectories, we use the `getSample` method of the distribution of `z0` and apply the field function.

.. GENERATED FROM PYTHON SOURCE LINES 45-49

.. code-block:: Python

    size = 10
    inputSample = vff.distZ0.getSample(size)
    outputSample = model_z0(inputSample)








.. GENERATED FROM PYTHON SOURCE LINES 50-51

Draw viscous free fall trajectories.

.. GENERATED FROM PYTHON SOURCE LINES 51-57

.. code-block:: Python

    graph = outputSample.drawMarginal(0)
    graph.setTitle("Viscous free fall: %d trajectories" % (size))
    graph.setXTitle(r"$t$")
    graph.setYTitle(r"$z$")
    view = otv.View(graph)
    otv.View.ShowAll()



.. image-sg:: /auto_functional_modeling/field_functions/images/sphx_glr_plot_viscous_fall_field_function_connection_001.png
   :alt: Viscous free fall: 10 trajectories
   :srcset: /auto_functional_modeling/field_functions/images/sphx_glr_plot_viscous_fall_field_function_connection_001.png
   :class: sphx-glr-single-img






.. _sphx_glr_download_auto_functional_modeling_field_functions_plot_viscous_fall_field_function_connection.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_viscous_fall_field_function_connection.ipynb <plot_viscous_fall_field_function_connection.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_viscous_fall_field_function_connection.py <plot_viscous_fall_field_function_connection.py>`
