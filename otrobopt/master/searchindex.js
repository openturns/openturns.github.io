Search.setIndex({"docnames": ["developer_guide/architecture/architecture", "developer_guide/developer_guide", "developer_guide/validation/validation", "examples/examples", "index", "user_manual/_generated/otrobopt.AggregatedMeasure", "user_manual/_generated/otrobopt.IndividualChanceMeasure", "user_manual/_generated/otrobopt.JointChanceMeasure", "user_manual/_generated/otrobopt.MeanMeasure", "user_manual/_generated/otrobopt.MeanStandardDeviationTradeoffMeasure", "user_manual/_generated/otrobopt.MeasureEvaluation", "user_manual/_generated/otrobopt.MeasureFactory", "user_manual/_generated/otrobopt.MeasureFunction", "user_manual/_generated/otrobopt.QuantileMeasure", "user_manual/_generated/otrobopt.RobustOptimizationAlgorithm", "user_manual/_generated/otrobopt.RobustOptimizationProblem", "user_manual/_generated/otrobopt.SequentialMonteCarloRobustAlgorithm", "user_manual/_generated/otrobopt.VarianceMeasure", "user_manual/_generated/otrobopt.WorstCaseMeasure", "user_manual/user_manual"], "filenames": ["developer_guide/architecture/architecture.rst", "developer_guide/developer_guide.rst", "developer_guide/validation/validation.rst", "examples/examples.rst", "index.rst", "user_manual/_generated/otrobopt.AggregatedMeasure.rst", "user_manual/_generated/otrobopt.IndividualChanceMeasure.rst", "user_manual/_generated/otrobopt.JointChanceMeasure.rst", "user_manual/_generated/otrobopt.MeanMeasure.rst", "user_manual/_generated/otrobopt.MeanStandardDeviationTradeoffMeasure.rst", "user_manual/_generated/otrobopt.MeasureEvaluation.rst", "user_manual/_generated/otrobopt.MeasureFactory.rst", "user_manual/_generated/otrobopt.MeasureFunction.rst", "user_manual/_generated/otrobopt.QuantileMeasure.rst", "user_manual/_generated/otrobopt.RobustOptimizationAlgorithm.rst", "user_manual/_generated/otrobopt.RobustOptimizationProblem.rst", "user_manual/_generated/otrobopt.SequentialMonteCarloRobustAlgorithm.rst", "user_manual/_generated/otrobopt.VarianceMeasure.rst", "user_manual/_generated/otrobopt.WorstCaseMeasure.rst", "user_manual/user_manual.rst"], "titles": ["Architecture considerations", "Developer guide", "Validation", "Examples", "OTRobOpt documentation", "AggregatedMeasure", "IndividualChanceMeasure distribution", "JointChanceMeasure distribution", "MeanMeasure distribution", "MeanStandardDeviationTradeoffMeasure distribution", "MeasureEvaluation", "MeasureFactory", "MeasureFunction", "QuantileMeasure distribution", "RobustOptimizationAlgorithm", "RobustOptimizationProblem", "SequentialMonteCarloRobustAlgorithm", "VarianceMeasure distribution", "WorstCaseMeasure distribution", "User manual"], "terms": {"sever": [0, 5, 11], "ar": [0, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18], "need": 0, "order": [0, 15], "build": [0, 11], "openturn": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "sphinx": 0, "doc": 0, "option": [0, 18], "thi": [0, 1, 2, 15, 19], "cd": [0, 3, 6, 7, 8, 9, 11, 13, 17, 18, 19], "otrobopt": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "mkdir": 0, "p": [0, 3, 5, 6, 7, 8, 9, 12, 13, 17, 18], "cmake": 0, "dcmake_install_prefix": 0, "pwd": 0, "instal": 0, "dopenturns_dir": 0, "lib": 0, "here": 0, "i": [0, 1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19], "global": 0, "class": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "diagram": 0, "each": [0, 15, 16], "layer": 0, "The": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "goal": [1, 19], "part": 1, "expos": [1, 19], "design": [1, 11, 19], "principl": 1, "govern": 1, "platform": 1, "architectur": 1, "consider": 1, "depend": [1, 5, 6, 7, 8, 9, 12, 13, 17, 18], "compil": 1, "sourc": [1, 6, 7, 8, 9, 13, 17, 18], "code": [1, 6, 7, 8, 9, 13, 17, 18], "structur": 1, "valid": [1, 5, 6, 7, 8, 9, 13, 15, 17, 18], "test": [1, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "case": [1, 5, 6, 7, 8, 9, 12, 13, 17, 18], "1": [1, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "xxxxxx": 1, "purpos": 2, "exampl": [2, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "estim": 2, "risk": 2, "stochast": 2, "variabl": [2, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 19], "name": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "descript": [2, 5, 6, 7, 8, 9, 12, 13, 17, 18], "distribut": [2, 5, 10, 11, 15, 19], "q": 2, "a1": 2, "normal": [2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17], "10200": 2, "100": [2, 3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18], "e": [2, 3, 14, 16], "a2": 2, "3000": 2, "15": [2, 3], "c": 2, "c1": 2, "4000": 2, "60": 2, "independ": 2, "valu": [2, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18], "t": [2, 5, 6, 7, 8, 9, 12, 13, 17, 18], "loss": 2, "rate": 2, "0": [2, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19], "05": [2, 15], "nelec": 2, "refer": 2, "effici": 2, "54": 2, "nth": 2, "8": [2, 5, 6, 7, 8, 9, 12, 13, 17, 18], "primari": 2, "energi": 2, "save": 2, "e_p": 2, "frac": [2, 14, 16], "f": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "u": [2, 5, 6, 7, 8, 9, 12, 13, 17, 18], "l": 2, "m": 2, "min": [2, 5, 6, 7, 8, 9, 12, 13, 17, 18], "max": [2, 5, 6, 7, 8, 9, 12, 13, 17, 18], "step": [2, 16], "10033": 2, "10364": 2, "6": [2, 3, 5, 6, 7, 8, 9, 12, 13, 17, 18], "2975": 2, "3024": 2, "99": [2, 13], "3901": 2, "33": 2, "4097": 2, "74": 2, "ep": 2, "10030": 2, "3900": 2, "06035": 2, "10365": 2, "2995": 2, "4100": 2, "05456": 2, "begin": [3, 19], "align": [3, 19], "underset": [3, 19], "x": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19], "text": [3, 19], "minim": [3, 15, 18, 19], "mathbb": 3, "_": [3, 5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18], "x_0": 3, "2x_1": 3, "4x_1": 3, "theta": [3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19], "subject": [3, 19], "leq": [3, 13], "geq": [3, 5, 6, 7, 8, 9, 12, 13, 17, 18, 19], "9": 3, "thicksim": 3, "cu": 3, "end": [3, 19], "usr": 3, "bin": 3, "env": 3, "python": 3, "import": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "ot": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "log": 3, "show": [3, 5, 6, 7, 8, 9, 12, 13, 17, 18], "info": 3, "calj": 3, "symbolicfunct": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "x0": 3, "x1": [3, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18], "calg": 3, "j": [3, 5, 6, 7, 8, 9, 12, 13, 17, 18, 19], "parametricfunct": [3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18], "g": [3, 14, 15, 16, 19], "dim": 3, "getinputdimens": [3, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "solver": [3, 14, 16, 18], "cobyla": [3, 15], "setignorefailur": 3, "true": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "setmaximumiterationnumb": [3, 14, 16], "1000": 3, "thetadist": [3, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18], "uniform": [3, 18], "robustnessmeasur": [3, 15], "meanmeasur": [3, 5, 10, 11, 12, 15], "reliabilitymeasur": [3, 15], "jointchancemeasur": [3, 10, 15], "greater": [3, 15], "robustoptimizationproblem": [3, 14, 16, 19], "bound": [3, 15, 16], "interv": [3, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "10": [3, 11, 15], "setbound": [3, 15], "algo": [3, 15], "sequentialmontecarlorobustalgorithm": [3, 14], "setmaximumabsoluteerror": [3, 14, 16], "1e": 3, "setinitialsamplings": [3, 16], "setinitialsearch": [3, 16], "run": [3, 14, 15, 16], "result": [3, 14, 16], "getresult": [3, 14, 15, 16], "print": [3, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "getoptimalpoint": [3, 15], "getoptimalvalu": [3, 15], "iter": [3, 14, 16], "getiterationnumb": 3, "sqrt": [3, 9], "x_1": [3, 5, 6, 7, 8, 9, 12, 13, 17, 18], "4x_0": 3, "120": 3, "cn": 3, "30": 3, "setminim": [3, 15, 18], "fals": [3, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "5": [3, 15], "50": 3, "assert_almost_equ": 3, "ce": 3, "setstartingpoint": [3, 14, 15, 16], "exponenti": 3, "co": [3, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "sin": [3, 5, 6, 7, 8, 9, 12, 13, 17, 18], "pi": 3, "manual": 4, "measur": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18], "function": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "evalu": [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18], "defin": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "robust": [4, 10, 14, 15, 16], "optim": [4, 14, 15, 16, 18], "problem": [4, 14, 15, 16, 18], "discret": [4, 6, 7, 8, 9, 11, 16, 17, 18], "solv": [4, 16], "2": [4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "3": [4, 12, 14, 15, 16], "4": [4, 5, 6, 7, 8, 9, 12, 13, 17, 18], "guid": 4, "index": [4, 5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "search": [4, 16], "page": 4, "arg": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "aggreg": 5, "assembl": 5, "output": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "paramet": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "collect": [5, 11], "sequenc": [5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 18], "measureevalu": [5, 11, 12, 15, 19], "f_base": [5, 6, 7, 8, 9, 11, 13, 15, 17, 18], "variancemeasur": [5, 10, 11, 15], "01": [5, 17], "method": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "__init__": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "draw": [5, 6, 7, 8, 9, 12, 13, 17, 18], "graph": [5, 6, 7, 8, 9, 12, 13, 17, 18], "avail": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "usag": [5, 6, 7, 8, 9, 12, 13, 17, 18], "inputmarg": [5, 6, 7, 8, 9, 12, 13, 17, 18], "outputmarg": [5, 6, 7, 8, 9, 12, 13, 17, 18], "cp": [5, 6, 7, 8, 9, 12, 13, 17, 18], "ximin": [5, 6, 7, 8, 9, 12, 13, 17, 18], "ximax": [5, 6, 7, 8, 9, 12, 13, 17, 18], "ptnb": [5, 6, 7, 8, 9, 12, 13, 17, 18], "firstinputmarg": [5, 6, 7, 8, 9, 12, 13, 17, 18], "secondinputmarg": [5, 6, 7, 8, 9, 12, 13, 17, 18], "ximin_xjmin": [5, 6, 7, 8, 9, 12, 13, 17, 18], "ximax_xjmax": [5, 6, 7, 8, 9, 12, 13, 17, 18], "int": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "margin": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "In": [5, 6, 7, 8, 9, 12, 13, 17, 18], "2d": [5, 6, 7, 8, 9, 12, 13, 17, 18], "drawn": [5, 6, 7, 8, 9, 12, 13, 16, 17, 18], "two": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18], "float": [5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18], "central": [5, 6, 7, 8, 9, 12, 13, 17, 18], "point": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18], "where": [5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19], "curv": [5, 6, 7, 8, 9, 12, 13, 17, 18], "plot": [5, 6, 7, 8, 9, 12, 13, 17, 18], "dimens": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "list": [5, 6, 7, 8, 9, 12, 13, 16, 17, 18], "ptnb_k": [5, 6, 7, 8, 9, 12, 13, 17, 18], "k": [5, 6, 7, 8, 9, 12, 13, 17, 18], "number": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18], "note": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18, 19], "we": [5, 6, 7, 8, 9, 12, 13, 17, 18], "rset": [5, 6, 7, 8, 9, 12, 13, 17, 18, 19], "n": [5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19], "rightarrow": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18], "vect": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18], "dot": [5, 6, 7, 8, 9, 12, 13, 17, 18], "x_n": [5, 6, 7, 8, 9, 12, 13, 17, 18], "f_1": [5, 6, 7, 8, 9, 12, 13, 17, 18], "f_p": [5, 6, 7, 8, 9, 12, 13, 17, 18], "first": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18], "given": [5, 6, 7, 8, 9, 12, 13, 17, 18, 19], "1d": [5, 6, 7, 8, 9, 12, 13, 17, 18], "f_k": [5, 6, 7, 8, 9, 12, 13, 17, 18], "respect": [5, 6, 7, 8, 9, 12, 13, 17, 18], "variat": [5, 6, 7, 8, 9, 12, 13, 17, 18], "x_i": [5, 6, 7, 8, 9, 12, 13, 17, 18], "when": [5, 6, 7, 8, 9, 12, 13, 16, 17, 18], "all": [5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18], "other": [5, 6, 7, 8, 9, 12, 13, 17, 18], "compon": [5, 6, 7, 8, 9, 12, 13, 17, 18], "fix": [5, 6, 7, 8, 9, 12, 13, 17, 18], "correspond": [5, 6, 7, 8, 9, 12, 13, 17, 18], "ones": [5, 6, 7, 8, 9, 12, 13, 17, 18], "Then": [5, 6, 7, 8, 9, 11, 12, 13, 17, 18], "mapsto": [5, 6, 7, 8, 9, 12, 13, 17, 18], "cp_1": [5, 6, 7, 8, 9, 12, 13, 17, 18], "cp_": [5, 6, 7, 8, 9, 12, 13, 17, 18], "cp_n": [5, 6, 7, 8, 9, 12, 13, 17, 18], "second": [5, 6, 7, 8, 9, 12, 13, 17, 18], "iso": [5, 6, 7, 8, 9, 12, 13, 17, 18], "x_j": [5, 6, 7, 8, 9, 12, 13, 17, 18], "time": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "third": [5, 6, 7, 8, 9, 12, 13, 17, 18], "same": [5, 6, 7, 8, 9, 12, 13, 17, 18], "onli": [5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18], "fourth": [5, 6, 7, 8, 9, 12, 13, 17, 18], "from": [5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18], "viewer": [5, 6, 7, 8, 9, 12, 13, 17, 18], "view": [5, 6, 7, 8, 9, 12, 13, 17, 18], "pi_": [5, 6, 7, 8, 9, 12, 13, 17, 18], "exp": [5, 6, 7, 8, 9, 12, 13, 17, 18], "getcallsnumb": [5, 6, 7, 8, 9, 12, 13, 17, 18], "accessor": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "ha": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "been": [5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18], "call": [5, 6, 7, 8, 9, 12, 13, 17, 18], "return": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "calls_numb": [5, 6, 7, 8, 9, 12, 13, 17, 18], "integ": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "count": [5, 6, 7, 8, 9, 12, 13, 17, 18], "sinc": [5, 6, 7, 8, 9, 12, 13, 17, 18], "its": [5, 6, 7, 8, 9, 12, 13, 17, 18], "creation": [5, 6, 7, 8, 9, 12, 13, 17, 18], "getcheckoutput": [5, 6, 7, 8, 9, 13, 17, 18], "verif": [5, 6, 7, 8, 9, 13, 17, 18], "flag": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "check_output": [5, 6, 7, 8, 9, 13, 17, 18], "bool": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "whether": [5, 6, 7, 8, 9, 13, 14, 15, 16, 17, 18], "check": [5, 6, 7, 8, 9, 13, 15, 17, 18], "nan": [5, 6, 7, 8, 9, 13, 17, 18], "inf": [5, 6, 7, 8, 9, 13, 17, 18], "getclassnam": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "object": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "class_nam": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "str": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "__class__": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "__name__": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "getdescript": [5, 6, 7, 8, 9, 12, 13, 17, 18], "input": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "x2": [5, 6, 7, 8, 9, 12, 13, 14, 16, 17, 18], "y0": [5, 6, 7, 8, 9, 12, 13, 17, 18], "getdistribut": [5, 6, 7, 8, 9, 10, 13, 15, 17, 18], "getfunct": [5, 6, 7, 8, 9, 10, 13, 17, 18], "parametr": [5, 6, 7, 8, 9, 10, 12, 13, 17, 18, 19], "getid": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "id": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "intern": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "uniqu": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "identifi": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "getinputdescript": [5, 6, 7, 8, 9, 12, 13, 17, 18], "number_input": [5, 6, 7, 8, 9, 13, 17, 18], "getintegrationalgorithm": [5, 6, 7, 8, 9, 13, 17, 18], "integr": [5, 6, 7, 8, 9, 13, 17, 18], "algorithm": [5, 6, 7, 8, 9, 13, 14, 16, 17, 18], "integrationalgorithm": [5, 6, 7, 8, 9, 13, 17, 18], "us": [5, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19], "comput": [5, 6, 7, 8, 9, 13, 17, 18], "exact": [5, 6, 7, 8, 9, 13, 17, 18], "getmargin": [5, 6, 7, 8, 9, 12, 13, 17, 18], "indic": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "set": [5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18], "which": [5, 6, 7, 8, 9, 12, 13, 17, 18], "extract": [5, 6, 7, 8, 9, 12, 13, 17, 18], "either": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "f_i": [5, 6, 7, 8, 9, 12, 13, 17, 18], "f_0": [5, 6, 7, 8, 9, 12, 13, 17, 18], "f_": [5, 6, 7, 8, 9, 12, 13, 17, 18], "getnam": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "getoutputdescript": [5, 6, 7, 8, 9, 12, 13, 17, 18], "getoutputdimens": [5, 6, 7, 8, 9, 12, 13, 17, 18], "number_output": [5, 6, 7, 8, 9, 12, 13, 17, 18], "getpdfthreshold": [5, 6, 7, 8, 9, 13, 17, 18], "pdf": [5, 6, 7, 8, 9, 13, 17, 18], "threshold": [5, 6, 7, 8, 9, 13, 17, 18], "under": [5, 6, 7, 8, 9, 13, 17, 18], "contribut": [5, 6, 7, 8, 9, 13, 17, 18], "getparamet": [5, 6, 7, 8, 9, 12, 13, 17, 18], "getparameterdescript": [5, 6, 7, 8, 9, 12, 13, 17, 18], "getparameterdimens": [5, 6, 7, 8, 9, 12, 13, 17, 18], "parameter_dimens": [5, 6, 7, 8, 9, 13, 17, 18], "getshadowedid": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "shadow": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "getvis": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "visibl": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "state": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "hasnam": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "empti": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "hasvisiblenam": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "distinguish": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "default": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "one": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "isactualimplement": [5, 6, 7, 8, 9, 13, 17, 18], "is_impl": [5, 6, 7, 8, 9, 13, 17, 18], "implement": [5, 6, 7, 8, 9, 10, 12, 13, 17, 18], "islinear": [5, 6, 7, 8, 9, 12, 13, 17, 18], "linear": [5, 6, 7, 8, 9, 12, 13, 17, 18], "otherwis": [5, 6, 7, 8, 9, 12, 13, 15, 17, 18], "islinearlydepend": [5, 6, 7, 8, 9, 12, 13, 17, 18], "regard": [5, 6, 7, 8, 9, 12, 13, 17, 18], "specif": [5, 6, 7, 8, 9, 12, 13, 17, 18], "linearli": [5, 6, 7, 8, 9, 12, 13, 17, 18], "specifi": [5, 6, 7, 8, 9, 12, 13, 15, 16, 17, 18], "parametergradi": [5, 6, 7, 8, 9, 12, 13, 17, 18], "inp": [5, 6, 7, 8, 9, 12, 13, 17, 18], "gradient": [5, 6, 7, 8, 9, 12, 13, 17, 18], "against": [5, 6, 7, 8, 9, 12, 13, 17, 18], "parameter_gradi": [5, 6, 7, 8, 9, 13, 17, 18], "matrix": [5, 6, 7, 8, 9, 12, 13, 17, 18], "setcheckoutput": [5, 6, 7, 8, 9, 13, 17, 18], "checkoutput": [5, 6, 7, 8, 9, 13, 17, 18], "setdescript": [5, 6, 7, 8, 9, 12, 13, 17, 18], "b": [5, 6, 7, 8, 9, 12, 13, 17, 18], "y": [5, 6, 7, 8, 9, 12, 13, 17, 18], "setdistribut": [5, 6, 7, 8, 9, 10, 13, 17, 18], "setfunct": [5, 6, 7, 8, 9, 10, 13, 17, 18], "setinputdescript": [5, 6, 7, 8, 9, 12, 13, 17, 18], "inputdescript": [5, 6, 7, 8, 9, 12, 13, 17, 18], "setintegrationalgorithm": [5, 6, 7, 8, 9, 13, 17, 18], "setnam": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "setoutputdescript": [5, 6, 7, 8, 9, 12, 13, 17, 18], "outputdescript": [5, 6, 7, 8, 9, 12, 13, 17, 18], "setpdfthreshold": [5, 6, 7, 8, 9, 13, 17, 18], "setparamet": [5, 6, 7, 8, 9, 12, 13, 17, 18], "setparameterdescript": [5, 6, 7, 8, 9, 12, 13, 17, 18], "setshadowedid": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "setvis": [5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18], "png": [6, 7, 8, 9, 13, 17, 18], "hire": [6, 7, 8, 9, 13, 17, 18], "individu": 6, "chanc": [6, 7], "It": [6, 7, 8, 9, 11, 13, 17, 18], "built": [6, 7, 8, 9, 13, 17, 18], "densiti": [6, 7, 8, 9, 13, 17, 18], "constraint": [6, 7, 10, 14, 15, 16, 19], "consid": [6, 7], "pset": [6, 7, 13], "ge": [6, 7], "alpha_k": [6, 9], "foral": [6, 7], "m_": [6, 7, 8, 9, 13, 17, 18], "continu": [6, 7, 8, 9, 14, 15, 16, 17, 18], "int_": [6, 7, 8, 9, 17], "supp": [6, 7, 8, 9, 17, 18], "mathbf": [6, 7], "d": [6, 7, 8, 9, 12, 17], "sum_": [6, 7, 8, 9, 11, 17], "theta_i": [6, 7, 8, 9, 11, 17, 18], "p_i": [6, 7, 8, 9, 17], "oper": [6, 7, 14], "comparisonoper": [6, 7], "comparison": [6, 7], "front": [6, 7], "alpha": [6, 7, 9, 13], "probabl": [6, 7], "level": [6, 7, 13, 15], "greaterorequ": [6, 7], "95": [6, 7, 15], "108655": [6, 7], "getalpha": [6, 7, 9, 13], "setalpha": [6, 7, 9, 13], "joint": 7, "left": 7, "bigcap_": 7, "right": 7, "prod_": 7, "mean": [8, 9], "varianc": [9, 17], "tradeoff": 9, "mu_k": 9, "var_k": 9, "mu": [9, 17], "coeffici": 9, "24": 9, "base": [10, 14], "allow": [10, 14, 16], "counterpart": 10, "meanstandarddeviationtradeoffmeasur": 10, "worstcasemeasur": 10, "individualchancemeasur": 10, "quantilemeasur": 10, "aggregatedmeasur": 10, "getimplement": 10, "underli": 10, "impl": 10, "A": [10, 19], "copi": 10, "consist": [11, 15, 19], "replac": 11, "approxim": [11, 14, 16], "omega_i": 11, "delta_": 11, "dirac": 11, "experi": [11, 16], "weightedexperi": 11, "lhsexperi": 11, "factori": 11, "discretizedmeasur": 11, "onc": 11, "coll": 11, "buildcollect": 11, "getevalu": 12, "evaluationimplement": 12, "getevaluationcallsnumb": 12, "evaluation_calls_numb": 12, "getgradi": 12, "gradientimplement": 12, "getgradientcallsnumb": 12, "gradient_calls_numb": 12, "finit": 12, "differ": [12, 15], "equal": [12, 14, 15, 16], "gethessian": 12, "hessian": 12, "hessianimplement": 12, "gethessiancallsnumb": 12, "hessian_calls_numb": 12, "vector": [12, 15, 19], "inputdim": 12, "parameterdimens": 12, "jacobian": 12, "transpos": 12, "calcul": 12, "14": 12, "13": 12, "5345": 12, "00001": 12, "symmetrictensor": 12, "sheet": 12, "20": 12, "00637061": 12, "setevalu": 12, "setgradi": 12, "gradient_funct": 12, "centeredfinitedifferencegradi": 12, "resourcemap": [12, 16], "getasscalar": 12, "defaultepsilon": 12, "sethessian": 12, "hessian_funct": 12, "centeredfinitedifferencehessian": 12, "quantil": 13, "23264": 13, "optimizationalgorithm": [14, 16, 18], "getmaximumabsoluteerror": [14, 16], "maximum": [14, 16], "absolut": [14, 16], "error": [14, 16], "maximumabsoluteerror": [14, 16], "epsilon": [14, 16], "a_n": [14, 16], "_n": [14, 16], "infti": [14, 16], "consecut": [14, 16], "optimum": [14, 16], "getmaximumconstrainterror": [14, 16], "maximumconstrainterror": [14, 16], "gamma_n": [14, 16], "current": [14, 16], "gather": [14, 16], "inequ": [14, 15, 16, 19], "violat": [14, 16], "getmaximumevaluationnumb": [14, 16], "getmaximumiterationnumb": [14, 16], "getmaximumrelativeerror": [14, 16], "rel": [14, 16], "maximumrelativeerror": [14, 16], "r_n": [14, 16], "neq": [14, 16], "els": [14, 16], "getmaximumresidualerror": [14, 16], "residu": [14, 16], "maximumresidualerror": [14, 16], "getoptimizationalgorithm": [14, 16, 18], "getproblem": [14, 16], "optimizationproblem": [14, 16], "optimizationresult": [14, 16], "getrobustproblem": [14, 16], "getstartingpoint": [14, 16], "start": [14, 16], "startingpoint": [14, 16], "getverbos": [14, 16], "verbos": [14, 16], "launch": [14, 16], "setmaximumconstrainterror": [14, 16], "setmaximumevaluationnumb": [14, 16], "maximumevaluationnumb": [14, 16], "maximumiterationnumb": [14, 16], "setmaximumrelativeerror": [14, 16], "setmaximumresidualerror": [14, 16], "math": [14, 16], "setoptimizationalgorithm": [14, 16, 18], "setproblem": [14, 16], "setprogresscallback": [14, 16], "up": [14, 16], "progress": [14, 16], "callback": [14, 16], "can": [14, 16, 19], "programmat": [14, 16], "report": [14, 16], "an": [14, 16], "callabl": [14, 16], "take": [14, 16], "argument": [14, 16], "percentag": [14, 16], "sy": [14, 16], "rosenbrock": [14, 16], "10000": [14, 16], "def": [14, 16], "report_progress": [14, 16], "stderr": [14, 16], "write": [14, 16], "setresult": [14, 16], "setrobustproblem": [14, 16], "setstopcallback": [14, 16], "stop": [14, 16], "decid": [14, 16], "ask_stop": [14, 16], "setverbos": [14, 16], "must": [15, 16], "least": 15, "constructor": 15, "inequalityconstraint": 15, "mesur": 15, "pure": 15, "x_et": 15, "55": 15, "j_et": 15, "42652e": 15, "determinist": [15, 16, 19], "reliabl": 15, "g_base": 15, "83551": 15, "835515": 15, "67103": 15, "getbound": 15, "getdimens": 15, "getequalityconstraint": 15, "describ": 15, "getinequalityconstraint": 15, "getlevelfunct": 15, "getlevelvalu": 15, "getobject": 15, "getreliabilitymeasur": 15, "associ": [15, 19], "getresidualfunct": 15, "getrobustnessmeasur": 15, "getvariablestyp": 15, "type": 15, "variablestyp": 15, "possibl": 15, "optimizationproblemimplement": 15, "binari": 15, "hasbound": 15, "had": 15, "hasequalityconstraint": 15, "hasinequalityconstraint": 15, "haslevelfunct": 15, "hasmultipleobject": 15, "scalar": 15, "hasreliabilitymeasur": 15, "If": 15, "wa": 15, "should": 15, "have": 15, "deduc": 15, "hasresidualfunct": 15, "squar": 15, "hasrobustnessmeasur": 15, "iscontinu": 15, "isminim": [15, 18], "marginalindex": 15, "maxim": 15, "marginal_index": 15, "multi": [15, 16], "setequalityconstraint": 15, "equalityconstraint": 15, "setinequalityconstraint": 15, "setlevelfunct": 15, "levelfunct": 15, "setlevelvalu": 15, "levelvalu": 15, "tell": 15, "setobject": 15, "objectivefunct": 15, "clear": 15, "keep": 15, "setreliabilitymeasur": 15, "setresidualfunct": 15, "residualfunct": 15, "setrobustnessmeasur": 15, "setvariablestyp": 15, "variabletyp": 15, "sequenti": 16, "mont": 16, "carlo": 16, "altern": 16, "initi": 16, "size": 16, "increment": 16, "setsamplingsizeincr": 16, "reli": 16, "lh": 16, "kei": 16, "convergencefactor": 16, "control": 16, "converg": 16, "criteria": [16, 18], "inner": 16, "reach": 16, "small": 16, "enough": 16, "getinitialresultcollect": 16, "dure": 16, "phase": 16, "resultcol": 16, "getinitialsamplings": 16, "sampl": 16, "initialsamplings": 16, "getinitialsearch": 16, "uniformli": 16, "box": 16, "initialsearch": 16, "getinitialstartingpoint": 16, "startpoint": 16, "getresultcollect": 16, "intermedi": 16, "getsamplingsizeincr": 16, "total": 16, "previou": 16, "samplingsizeincr": 16, "n0": 16, "worst": 18, "inf_": 18, "formul": 19, "made": 19, "model": 19, "random": 19, "choos": 19, "rho_": 19, "lambda_": 19, "read": 19, "definit": 19, "concept": 19, "through": 19, "measurefunct": 19, "gener": 19, "servic": 19, "robustoptimizationalgorithm": 19, "over": 19, "so": 19, "measurefactori": 19}, "objects": {"otrobopt": [[5, 0, 1, "", "AggregatedMeasure"], [6, 0, 1, "", "IndividualChanceMeasure"], [7, 0, 1, "", "JointChanceMeasure"], [8, 0, 1, "", "MeanMeasure"], [9, 0, 1, "", "MeanStandardDeviationTradeoffMeasure"], [10, 0, 1, "", "MeasureEvaluation"], [11, 0, 1, "", "MeasureFactory"], [12, 0, 1, "", "MeasureFunction"], [13, 0, 1, "", "QuantileMeasure"], [14, 0, 1, "", "RobustOptimizationAlgorithm"], [15, 0, 1, "", "RobustOptimizationProblem"], [16, 0, 1, "", "SequentialMonteCarloRobustAlgorithm"], [17, 0, 1, "", "VarianceMeasure"], [18, 0, 1, "", "WorstCaseMeasure"]], "otrobopt.AggregatedMeasure": [[5, 1, 1, "", "__init__"], [5, 1, 1, "", "draw"], [5, 1, 1, "", "getCallsNumber"], [5, 1, 1, "", "getCheckOutput"], [5, 1, 1, "", "getClassName"], [5, 1, 1, "", "getDescription"], [5, 1, 1, "", "getDistribution"], [5, 1, 1, "", "getFunction"], [5, 1, 1, "", "getId"], [5, 1, 1, "", "getInputDescription"], [5, 1, 1, "", "getInputDimension"], [5, 1, 1, "", "getIntegrationAlgorithm"], [5, 1, 1, "", "getMarginal"], [5, 1, 1, "", "getName"], [5, 1, 1, "", "getOutputDescription"], [5, 1, 1, "", "getOutputDimension"], [5, 1, 1, "", "getPDFThreshold"], [5, 1, 1, "", "getParameter"], [5, 1, 1, "", "getParameterDescription"], [5, 1, 1, "", "getParameterDimension"], [5, 1, 1, "", "getShadowedId"], [5, 1, 1, "", "getVisibility"], [5, 1, 1, "", "hasName"], [5, 1, 1, "", "hasVisibleName"], [5, 1, 1, "", "isActualImplementation"], [5, 1, 1, "", "isLinear"], [5, 1, 1, "", "isLinearlyDependent"], [5, 1, 1, "", "parameterGradient"], [5, 1, 1, "", "setCheckOutput"], [5, 1, 1, "", "setDescription"], [5, 1, 1, "", "setDistribution"], [5, 1, 1, "", "setFunction"], [5, 1, 1, "", "setInputDescription"], [5, 1, 1, "", "setIntegrationAlgorithm"], [5, 1, 1, "", "setName"], [5, 1, 1, "", "setOutputDescription"], [5, 1, 1, "", "setPDFThreshold"], [5, 1, 1, "", "setParameter"], [5, 1, 1, "", "setParameterDescription"], [5, 1, 1, "", "setShadowedId"], [5, 1, 1, "", "setVisibility"]], "otrobopt.IndividualChanceMeasure": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "draw"], [6, 1, 1, "", "getAlpha"], [6, 1, 1, "", "getCallsNumber"], [6, 1, 1, "", "getCheckOutput"], [6, 1, 1, "", "getClassName"], [6, 1, 1, "", "getDescription"], [6, 1, 1, "", "getDistribution"], [6, 1, 1, "", "getFunction"], [6, 1, 1, "", "getId"], [6, 1, 1, "", "getInputDescription"], [6, 1, 1, "", "getInputDimension"], [6, 1, 1, "", "getIntegrationAlgorithm"], [6, 1, 1, "", "getMarginal"], [6, 1, 1, "", "getName"], [6, 1, 1, "", "getOutputDescription"], [6, 1, 1, "", "getOutputDimension"], [6, 1, 1, "", "getPDFThreshold"], [6, 1, 1, "", "getParameter"], [6, 1, 1, "", "getParameterDescription"], [6, 1, 1, "", "getParameterDimension"], [6, 1, 1, "", "getShadowedId"], [6, 1, 1, "", "getVisibility"], [6, 1, 1, "", "hasName"], [6, 1, 1, "", "hasVisibleName"], [6, 1, 1, "", "isActualImplementation"], [6, 1, 1, "", "isLinear"], [6, 1, 1, "", "isLinearlyDependent"], [6, 1, 1, "", "parameterGradient"], [6, 1, 1, "", "setAlpha"], [6, 1, 1, "", "setCheckOutput"], [6, 1, 1, "", "setDescription"], [6, 1, 1, "", "setDistribution"], [6, 1, 1, "", "setFunction"], [6, 1, 1, "", "setInputDescription"], [6, 1, 1, "", "setIntegrationAlgorithm"], [6, 1, 1, "", "setName"], [6, 1, 1, "", "setOutputDescription"], [6, 1, 1, "", "setPDFThreshold"], [6, 1, 1, "", "setParameter"], [6, 1, 1, "", "setParameterDescription"], [6, 1, 1, "", "setShadowedId"], [6, 1, 1, "", "setVisibility"]], "otrobopt.JointChanceMeasure": [[7, 1, 1, "", "__init__"], [7, 1, 1, "", "draw"], [7, 1, 1, "", "getAlpha"], [7, 1, 1, "", "getCallsNumber"], [7, 1, 1, "", "getCheckOutput"], [7, 1, 1, "", "getClassName"], [7, 1, 1, "", "getDescription"], [7, 1, 1, "", "getDistribution"], [7, 1, 1, "", "getFunction"], [7, 1, 1, "", "getId"], [7, 1, 1, "", "getInputDescription"], [7, 1, 1, "", "getInputDimension"], [7, 1, 1, "", "getIntegrationAlgorithm"], [7, 1, 1, "", "getMarginal"], [7, 1, 1, "", "getName"], [7, 1, 1, "", "getOutputDescription"], [7, 1, 1, "", "getOutputDimension"], [7, 1, 1, "", "getPDFThreshold"], [7, 1, 1, "", "getParameter"], [7, 1, 1, "", "getParameterDescription"], [7, 1, 1, "", "getParameterDimension"], [7, 1, 1, "", "getShadowedId"], [7, 1, 1, "", "getVisibility"], [7, 1, 1, "", "hasName"], [7, 1, 1, "", "hasVisibleName"], [7, 1, 1, "", "isActualImplementation"], [7, 1, 1, "", "isLinear"], [7, 1, 1, "", "isLinearlyDependent"], [7, 1, 1, "", "parameterGradient"], [7, 1, 1, "", "setAlpha"], [7, 1, 1, "", "setCheckOutput"], [7, 1, 1, "", "setDescription"], [7, 1, 1, "", "setDistribution"], [7, 1, 1, "", "setFunction"], [7, 1, 1, "", "setInputDescription"], [7, 1, 1, "", "setIntegrationAlgorithm"], [7, 1, 1, "", "setName"], [7, 1, 1, "", "setOutputDescription"], [7, 1, 1, "", "setPDFThreshold"], [7, 1, 1, "", "setParameter"], [7, 1, 1, "", "setParameterDescription"], [7, 1, 1, "", "setShadowedId"], [7, 1, 1, "", "setVisibility"]], "otrobopt.MeanMeasure": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "draw"], [8, 1, 1, "", "getCallsNumber"], [8, 1, 1, "", "getCheckOutput"], [8, 1, 1, "", "getClassName"], [8, 1, 1, "", "getDescription"], [8, 1, 1, "", "getDistribution"], [8, 1, 1, "", "getFunction"], [8, 1, 1, "", "getId"], [8, 1, 1, "", "getInputDescription"], [8, 1, 1, "", "getInputDimension"], [8, 1, 1, "", "getIntegrationAlgorithm"], [8, 1, 1, "", "getMarginal"], [8, 1, 1, "", "getName"], [8, 1, 1, "", "getOutputDescription"], [8, 1, 1, "", "getOutputDimension"], [8, 1, 1, "", "getPDFThreshold"], [8, 1, 1, "", "getParameter"], [8, 1, 1, "", "getParameterDescription"], [8, 1, 1, "", "getParameterDimension"], [8, 1, 1, "", "getShadowedId"], [8, 1, 1, "", "getVisibility"], [8, 1, 1, "", "hasName"], [8, 1, 1, "", "hasVisibleName"], [8, 1, 1, "", "isActualImplementation"], [8, 1, 1, "", "isLinear"], [8, 1, 1, "", "isLinearlyDependent"], [8, 1, 1, "", "parameterGradient"], [8, 1, 1, "", "setCheckOutput"], [8, 1, 1, "", "setDescription"], [8, 1, 1, "", "setDistribution"], [8, 1, 1, "", "setFunction"], [8, 1, 1, "", "setInputDescription"], [8, 1, 1, "", "setIntegrationAlgorithm"], [8, 1, 1, "", "setName"], [8, 1, 1, "", "setOutputDescription"], [8, 1, 1, "", "setPDFThreshold"], [8, 1, 1, "", "setParameter"], [8, 1, 1, "", "setParameterDescription"], [8, 1, 1, "", "setShadowedId"], [8, 1, 1, "", "setVisibility"]], "otrobopt.MeanStandardDeviationTradeoffMeasure": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "draw"], [9, 1, 1, "", "getAlpha"], [9, 1, 1, "", "getCallsNumber"], [9, 1, 1, "", "getCheckOutput"], [9, 1, 1, "", "getClassName"], [9, 1, 1, "", "getDescription"], [9, 1, 1, "", "getDistribution"], [9, 1, 1, "", "getFunction"], [9, 1, 1, "", "getId"], [9, 1, 1, "", "getInputDescription"], [9, 1, 1, "", "getInputDimension"], [9, 1, 1, "", "getIntegrationAlgorithm"], [9, 1, 1, "", "getMarginal"], [9, 1, 1, "", "getName"], [9, 1, 1, "", "getOutputDescription"], [9, 1, 1, "", "getOutputDimension"], [9, 1, 1, "", "getPDFThreshold"], [9, 1, 1, "", "getParameter"], [9, 1, 1, "", "getParameterDescription"], [9, 1, 1, "", "getParameterDimension"], [9, 1, 1, "", "getShadowedId"], [9, 1, 1, "", "getVisibility"], [9, 1, 1, "", "hasName"], [9, 1, 1, "", "hasVisibleName"], [9, 1, 1, "", "isActualImplementation"], [9, 1, 1, "", "isLinear"], [9, 1, 1, "", "isLinearlyDependent"], [9, 1, 1, "", "parameterGradient"], [9, 1, 1, "", "setAlpha"], [9, 1, 1, "", "setCheckOutput"], [9, 1, 1, "", "setDescription"], [9, 1, 1, "", "setDistribution"], [9, 1, 1, "", "setFunction"], [9, 1, 1, "", "setInputDescription"], [9, 1, 1, "", "setIntegrationAlgorithm"], [9, 1, 1, "", "setName"], [9, 1, 1, "", "setOutputDescription"], [9, 1, 1, "", "setPDFThreshold"], [9, 1, 1, "", "setParameter"], [9, 1, 1, "", "setParameterDescription"], [9, 1, 1, "", "setShadowedId"], [9, 1, 1, "", "setVisibility"]], "otrobopt.MeasureEvaluation": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "getClassName"], [10, 1, 1, "", "getDistribution"], [10, 1, 1, "", "getFunction"], [10, 1, 1, "", "getId"], [10, 1, 1, "", "getImplementation"], [10, 1, 1, "", "getName"], [10, 1, 1, "", "setDistribution"], [10, 1, 1, "", "setFunction"], [10, 1, 1, "", "setName"]], "otrobopt.MeasureFactory": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "build"], [11, 1, 1, "", "buildCollection"], [11, 1, 1, "", "getClassName"], [11, 1, 1, "", "getId"], [11, 1, 1, "", "getName"], [11, 1, 1, "", "getShadowedId"], [11, 1, 1, "", "getVisibility"], [11, 1, 1, "", "hasName"], [11, 1, 1, "", "hasVisibleName"], [11, 1, 1, "", "setName"], [11, 1, 1, "", "setShadowedId"], [11, 1, 1, "", "setVisibility"]], "otrobopt.MeasureFunction": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "draw"], [12, 1, 1, "", "getCallsNumber"], [12, 1, 1, "", "getClassName"], [12, 1, 1, "", "getDescription"], [12, 1, 1, "", "getEvaluation"], [12, 1, 1, "", "getEvaluationCallsNumber"], [12, 1, 1, "", "getGradient"], [12, 1, 1, "", "getGradientCallsNumber"], [12, 1, 1, "", "getHessian"], [12, 1, 1, "", "getHessianCallsNumber"], [12, 1, 1, "", "getId"], [12, 1, 1, "", "getInputDescription"], [12, 1, 1, "", "getInputDimension"], [12, 1, 1, "", "getMarginal"], [12, 1, 1, "", "getName"], [12, 1, 1, "", "getOutputDescription"], [12, 1, 1, "", "getOutputDimension"], [12, 1, 1, "", "getParameter"], [12, 1, 1, "", "getParameterDescription"], [12, 1, 1, "", "getParameterDimension"], [12, 1, 1, "", "getShadowedId"], [12, 1, 1, "", "getVisibility"], [12, 1, 1, "", "gradient"], [12, 1, 1, "", "hasName"], [12, 1, 1, "", "hasVisibleName"], [12, 1, 1, "", "hessian"], [12, 1, 1, "", "isLinear"], [12, 1, 1, "", "isLinearlyDependent"], [12, 1, 1, "", "parameterGradient"], [12, 1, 1, "", "setDescription"], [12, 1, 1, "", "setEvaluation"], [12, 1, 1, "", "setGradient"], [12, 1, 1, "", "setHessian"], [12, 1, 1, "", "setInputDescription"], [12, 1, 1, "", "setName"], [12, 1, 1, "", "setOutputDescription"], [12, 1, 1, "", "setParameter"], [12, 1, 1, "", "setParameterDescription"], [12, 1, 1, "", "setShadowedId"], [12, 1, 1, "", "setVisibility"]], "otrobopt.QuantileMeasure": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "draw"], [13, 1, 1, "", "getAlpha"], [13, 1, 1, "", "getCallsNumber"], [13, 1, 1, "", "getCheckOutput"], [13, 1, 1, "", "getClassName"], [13, 1, 1, "", "getDescription"], [13, 1, 1, "", "getDistribution"], [13, 1, 1, "", "getFunction"], [13, 1, 1, "", "getId"], [13, 1, 1, "", "getInputDescription"], [13, 1, 1, "", "getInputDimension"], [13, 1, 1, "", "getIntegrationAlgorithm"], [13, 1, 1, "", "getMarginal"], [13, 1, 1, "", "getName"], [13, 1, 1, "", "getOutputDescription"], [13, 1, 1, "", "getOutputDimension"], [13, 1, 1, "", "getPDFThreshold"], [13, 1, 1, "", "getParameter"], [13, 1, 1, "", "getParameterDescription"], [13, 1, 1, "", "getParameterDimension"], [13, 1, 1, "", "getShadowedId"], [13, 1, 1, "", "getVisibility"], [13, 1, 1, "", "hasName"], [13, 1, 1, "", "hasVisibleName"], [13, 1, 1, "", "isActualImplementation"], [13, 1, 1, "", "isLinear"], [13, 1, 1, "", "isLinearlyDependent"], [13, 1, 1, "", "parameterGradient"], [13, 1, 1, "", "setAlpha"], [13, 1, 1, "", "setCheckOutput"], [13, 1, 1, "", "setDescription"], [13, 1, 1, "", "setDistribution"], [13, 1, 1, "", "setFunction"], [13, 1, 1, "", "setInputDescription"], [13, 1, 1, "", "setIntegrationAlgorithm"], [13, 1, 1, "", "setName"], [13, 1, 1, "", "setOutputDescription"], [13, 1, 1, "", "setPDFThreshold"], [13, 1, 1, "", "setParameter"], [13, 1, 1, "", "setParameterDescription"], [13, 1, 1, "", "setShadowedId"], [13, 1, 1, "", "setVisibility"]], "otrobopt.RobustOptimizationAlgorithm": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "getClassName"], [14, 1, 1, "", "getId"], [14, 1, 1, "", "getMaximumAbsoluteError"], [14, 1, 1, "", "getMaximumConstraintError"], [14, 1, 1, "", "getMaximumEvaluationNumber"], [14, 1, 1, "", "getMaximumIterationNumber"], [14, 1, 1, "", "getMaximumRelativeError"], [14, 1, 1, "", "getMaximumResidualError"], [14, 1, 1, "", "getName"], [14, 1, 1, "", "getOptimizationAlgorithm"], [14, 1, 1, "", "getProblem"], [14, 1, 1, "", "getResult"], [14, 1, 1, "", "getRobustProblem"], [14, 1, 1, "", "getShadowedId"], [14, 1, 1, "", "getStartingPoint"], [14, 1, 1, "", "getVerbose"], [14, 1, 1, "", "getVisibility"], [14, 1, 1, "", "hasName"], [14, 1, 1, "", "hasVisibleName"], [14, 1, 1, "", "run"], [14, 1, 1, "", "setMaximumAbsoluteError"], [14, 1, 1, "", "setMaximumConstraintError"], [14, 1, 1, "", "setMaximumEvaluationNumber"], [14, 1, 1, "", "setMaximumIterationNumber"], [14, 1, 1, "", "setMaximumRelativeError"], [14, 1, 1, "", "setMaximumResidualError"], [14, 1, 1, "", "setName"], [14, 1, 1, "", "setOptimizationAlgorithm"], [14, 1, 1, "", "setProblem"], [14, 1, 1, "", "setProgressCallback"], [14, 1, 1, "", "setResult"], [14, 1, 1, "", "setRobustProblem"], [14, 1, 1, "", "setShadowedId"], [14, 1, 1, "", "setStartingPoint"], [14, 1, 1, "", "setStopCallback"], [14, 1, 1, "", "setVerbose"], [14, 1, 1, "", "setVisibility"]], "otrobopt.RobustOptimizationProblem": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "getBounds"], [15, 1, 1, "", "getClassName"], [15, 1, 1, "", "getDimension"], [15, 1, 1, "", "getDistribution"], [15, 1, 1, "", "getEqualityConstraint"], [15, 1, 1, "", "getId"], [15, 1, 1, "", "getInequalityConstraint"], [15, 1, 1, "", "getLevelFunction"], [15, 1, 1, "", "getLevelValue"], [15, 1, 1, "", "getName"], [15, 1, 1, "", "getObjective"], [15, 1, 1, "", "getReliabilityMeasure"], [15, 1, 1, "", "getResidualFunction"], [15, 1, 1, "", "getRobustnessMeasure"], [15, 1, 1, "", "getShadowedId"], [15, 1, 1, "", "getVariablesType"], [15, 1, 1, "", "getVisibility"], [15, 1, 1, "", "hasBounds"], [15, 1, 1, "", "hasEqualityConstraint"], [15, 1, 1, "", "hasInequalityConstraint"], [15, 1, 1, "", "hasLevelFunction"], [15, 1, 1, "", "hasMultipleObjective"], [15, 1, 1, "", "hasName"], [15, 1, 1, "", "hasReliabilityMeasure"], [15, 1, 1, "", "hasResidualFunction"], [15, 1, 1, "", "hasRobustnessMeasure"], [15, 1, 1, "", "hasVisibleName"], [15, 1, 1, "", "isContinuous"], [15, 1, 1, "", "isMinimization"], [15, 1, 1, "", "setBounds"], [15, 1, 1, "", "setEqualityConstraint"], [15, 1, 1, "", "setInequalityConstraint"], [15, 1, 1, "", "setLevelFunction"], [15, 1, 1, "", "setLevelValue"], [15, 1, 1, "", "setMinimization"], [15, 1, 1, "", "setName"], [15, 1, 1, "", "setObjective"], [15, 1, 1, "", "setReliabilityMeasure"], [15, 1, 1, "", "setResidualFunction"], [15, 1, 1, "", "setRobustnessMeasure"], [15, 1, 1, "", "setShadowedId"], [15, 1, 1, "", "setVariablesType"], [15, 1, 1, "", "setVisibility"]], "otrobopt.SequentialMonteCarloRobustAlgorithm": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "getClassName"], [16, 1, 1, "", "getId"], [16, 1, 1, "", "getInitialResultCollection"], [16, 1, 1, "", "getInitialSamplingSize"], [16, 1, 1, "", "getInitialSearch"], [16, 1, 1, "", "getInitialStartingPoints"], [16, 1, 1, "", "getMaximumAbsoluteError"], [16, 1, 1, "", "getMaximumConstraintError"], [16, 1, 1, "", "getMaximumEvaluationNumber"], [16, 1, 1, "", "getMaximumIterationNumber"], [16, 1, 1, "", "getMaximumRelativeError"], [16, 1, 1, "", "getMaximumResidualError"], [16, 1, 1, "", "getName"], [16, 1, 1, "", "getOptimizationAlgorithm"], [16, 1, 1, "", "getProblem"], [16, 1, 1, "", "getResult"], [16, 1, 1, "", "getResultCollection"], [16, 1, 1, "", "getRobustProblem"], [16, 1, 1, "", "getSamplingSizeIncrement"], [16, 1, 1, "", "getShadowedId"], [16, 1, 1, "", "getStartingPoint"], [16, 1, 1, "", "getVerbose"], [16, 1, 1, "", "getVisibility"], [16, 1, 1, "", "hasName"], [16, 1, 1, "", "hasVisibleName"], [16, 1, 1, "", "run"], [16, 1, 1, "", "setInitialSamplingSize"], [16, 1, 1, "", "setInitialSearch"], [16, 1, 1, "", "setMaximumAbsoluteError"], [16, 1, 1, "", "setMaximumConstraintError"], [16, 1, 1, "", "setMaximumEvaluationNumber"], [16, 1, 1, "", "setMaximumIterationNumber"], [16, 1, 1, "", "setMaximumRelativeError"], [16, 1, 1, "", "setMaximumResidualError"], [16, 1, 1, "", "setName"], [16, 1, 1, "", "setOptimizationAlgorithm"], [16, 1, 1, "", "setProblem"], [16, 1, 1, "", "setProgressCallback"], [16, 1, 1, "", "setResult"], [16, 1, 1, "", "setRobustProblem"], [16, 1, 1, "", "setSamplingSizeIncrement"], [16, 1, 1, "", "setShadowedId"], [16, 1, 1, "", "setStartingPoint"], [16, 1, 1, "", "setStopCallback"], [16, 1, 1, "", "setVerbose"], [16, 1, 1, "", "setVisibility"]], "otrobopt.VarianceMeasure": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "draw"], [17, 1, 1, "", "getCallsNumber"], [17, 1, 1, "", "getCheckOutput"], [17, 1, 1, "", "getClassName"], [17, 1, 1, "", "getDescription"], [17, 1, 1, "", "getDistribution"], [17, 1, 1, "", "getFunction"], [17, 1, 1, "", "getId"], [17, 1, 1, "", "getInputDescription"], [17, 1, 1, "", "getInputDimension"], [17, 1, 1, "", "getIntegrationAlgorithm"], [17, 1, 1, "", "getMarginal"], [17, 1, 1, "", "getName"], [17, 1, 1, "", "getOutputDescription"], [17, 1, 1, "", "getOutputDimension"], [17, 1, 1, "", "getPDFThreshold"], [17, 1, 1, "", "getParameter"], [17, 1, 1, "", "getParameterDescription"], [17, 1, 1, "", "getParameterDimension"], [17, 1, 1, "", "getShadowedId"], [17, 1, 1, "", "getVisibility"], [17, 1, 1, "", "hasName"], [17, 1, 1, "", "hasVisibleName"], [17, 1, 1, "", "isActualImplementation"], [17, 1, 1, "", "isLinear"], [17, 1, 1, "", "isLinearlyDependent"], [17, 1, 1, "", "parameterGradient"], [17, 1, 1, "", "setCheckOutput"], [17, 1, 1, "", "setDescription"], [17, 1, 1, "", "setDistribution"], [17, 1, 1, "", "setFunction"], [17, 1, 1, "", "setInputDescription"], [17, 1, 1, "", "setIntegrationAlgorithm"], [17, 1, 1, "", "setName"], [17, 1, 1, "", "setOutputDescription"], [17, 1, 1, "", "setPDFThreshold"], [17, 1, 1, "", "setParameter"], [17, 1, 1, "", "setParameterDescription"], [17, 1, 1, "", "setShadowedId"], [17, 1, 1, "", "setVisibility"]], "otrobopt.WorstCaseMeasure": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "draw"], [18, 1, 1, "", "getCallsNumber"], [18, 1, 1, "", "getCheckOutput"], [18, 1, 1, "", "getClassName"], [18, 1, 1, "", "getDescription"], [18, 1, 1, "", "getDistribution"], [18, 1, 1, "", "getFunction"], [18, 1, 1, "", "getId"], [18, 1, 1, "", "getInputDescription"], [18, 1, 1, "", "getInputDimension"], [18, 1, 1, "", "getIntegrationAlgorithm"], [18, 1, 1, "", "getMarginal"], [18, 1, 1, "", "getName"], [18, 1, 1, "", "getOptimizationAlgorithm"], [18, 1, 1, "", "getOutputDescription"], [18, 1, 1, "", "getOutputDimension"], [18, 1, 1, "", "getPDFThreshold"], [18, 1, 1, "", "getParameter"], [18, 1, 1, "", "getParameterDescription"], [18, 1, 1, "", "getParameterDimension"], [18, 1, 1, "", "getShadowedId"], [18, 1, 1, "", "getVisibility"], [18, 1, 1, "", "hasName"], [18, 1, 1, "", "hasVisibleName"], [18, 1, 1, "", "isActualImplementation"], [18, 1, 1, "", "isLinear"], [18, 1, 1, "", "isLinearlyDependent"], [18, 1, 1, "", "isMinimization"], [18, 1, 1, "", "parameterGradient"], [18, 1, 1, "", "setCheckOutput"], [18, 1, 1, "", "setDescription"], [18, 1, 1, "", "setDistribution"], [18, 1, 1, "", "setFunction"], [18, 1, 1, "", "setInputDescription"], [18, 1, 1, "", "setIntegrationAlgorithm"], [18, 1, 1, "", "setMinimization"], [18, 1, 1, "", "setName"], [18, 1, 1, "", "setOptimizationAlgorithm"], [18, 1, 1, "", "setOutputDescription"], [18, 1, 1, "", "setPDFThreshold"], [18, 1, 1, "", "setParameter"], [18, 1, 1, "", "setParameterDescription"], [18, 1, 1, "", "setShadowedId"], [18, 1, 1, "", "setVisibility"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"architectur": 0, "consider": 0, "depend": 0, "compil": 0, "sourc": 0, "code": 0, "structur": 0, "develop": [1, 4], "guid": 1, "valid": 2, "test": 2, "case": 2, "1": [2, 3], "xxxxxx": 2, "problem": [2, 3, 19], "statement": [2, 3], "input": 2, "b": 2, "output": 2, "2": [2, 3], "determinist": 2, "parametr": 2, "analysi": 2, "result": 2, "exampl": 3, "solut": 3, "3": 3, "resolut": 3, "4": 3, "otrobopt": 4, "document": 4, "user": [4, 19], "indic": 4, "tabl": 4, "aggregatedmeasur": 5, "individualchancemeasur": 6, "distribut": [6, 7, 8, 9, 13, 17, 18], "jointchancemeasur": 7, "meanmeasur": 8, "meanstandarddeviationtradeoffmeasur": 9, "measureevalu": 10, "measurefactori": 11, "measurefunct": 12, "quantilemeasur": 13, "robustoptimizationalgorithm": 14, "robustoptimizationproblem": 15, "sequentialmontecarlorobustalgorithm": 16, "variancemeasur": 17, "worstcasemeasur": 18, "manual": 19, "measur": 19, "function": 19, "evalu": 19, "defin": 19, "robust": 19, "optim": 19, "discret": 19, "solv": 19}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"OTRobOpt documentation": [[4, "otrobopt-documentation"]], "User documentation": [[4, "user-documentation"]], "Developer documentation": [[4, "developer-documentation"]], "Indices and tables": [[4, "indices-and-tables"]], "Validation": [[2, "validation"]], "Test case 1: XXXXXX": [[2, "test-case-1-xxxxxx"]], "1- Problem statement": [[2, "problem-statement"], [3, "problem-statement"], [3, "id1"], [3, "id4"], [3, "id7"]], "a- Inputs": [[2, "a-inputs"], [2, "id1"]], "b- Output": [[2, "b-output"]], "2- Deterministic parametric analysis": [[2, "deterministic-parametric-analysis"]], "b- Results": [[2, "b-results"]], "Architecture considerations": [[0, "architecture-considerations"]], "Dependencies": [[0, "dependencies"]], "Compilation": [[0, "compilation"]], "Source code structure": [[0, "source-code-structure"]], "Developer guide": [[1, "developer-guide"]], "Examples": [[3, "examples"]], "Example 1": [[3, "example-1"]], "2- Solution": [[3, "solution"], [3, "id2"], [3, "id5"], [3, "id8"]], "3- Resolution": [[3, "resolution"], [3, "id3"], [3, "id6"], [3, "id9"]], "Example 2": [[3, "example-2"]], "Example 3": [[3, "example-3"]], "Example 4": [[3, "example-4"]], "MeasureFunction": [[12, "measurefunction"]], "MeasureFactory": [[11, "measurefactory"]], "QuantileMeasure distribution": [[13, "quantilemeasure-distribution"]], "RobustOptimizationAlgorithm": [[14, "robustoptimizationalgorithm"]], "MeasureEvaluation": [[10, "measureevaluation"]], "WorstCaseMeasure distribution": [[18, "worstcasemeasure-distribution"]], "RobustOptimizationProblem": [[15, "robustoptimizationproblem"]], "SequentialMonteCarloRobustAlgorithm": [[16, "sequentialmontecarlorobustalgorithm"]], "User manual": [[19, "user-manual"]], "Measure function": [[19, "measure-function"]], "Measure evaluation": [[19, "measure-evaluation"]], "Define a robust optimization problem": [[19, "define-a-robust-optimization-problem"]], "Discretize a measure function": [[19, "discretize-a-measure-function"]], "Solve a robust optimization problem": [[19, "solve-a-robust-optimization-problem"]], "VarianceMeasure distribution": [[17, "variancemeasure-distribution"]], "IndividualChanceMeasure distribution": [[6, "individualchancemeasure-distribution"]], "AggregatedMeasure": [[5, "aggregatedmeasure"]], "MeanStandardDeviationTradeoffMeasure distribution": [[9, "meanstandarddeviationtradeoffmeasure-distribution"]], "MeanMeasure distribution": [[8, "meanmeasure-distribution"]], "JointChanceMeasure distribution": [[7, "jointchancemeasure-distribution"]]}, "indexentries": {"aggregatedmeasure (class in otrobopt)": [[5, "otrobopt.AggregatedMeasure"]], "__init__() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.__init__"]], "draw() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.draw"]], "getcallsnumber() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getCheckOutput"]], "getclassname() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getClassName"]], "getdescription() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getDescription"]], "getdistribution() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getDistribution"]], "getfunction() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getFunction"]], "getid() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getId"]], "getinputdescription() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getInputDescription"]], "getinputdimension() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getMarginal"]], "getname() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getName"]], "getoutputdescription() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getPDFThreshold"]], "getparameter() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getParameter"]], "getparameterdescription() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getShadowedId"]], "getvisibility() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.getVisibility"]], "hasname() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.hasName"]], "hasvisiblename() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.isActualImplementation"]], "islinear() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.isLinear"]], "islinearlydependent() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.parameterGradient"]], "setcheckoutput() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setCheckOutput"]], "setdescription() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setDescription"]], "setdistribution() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setDistribution"]], "setfunction() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setFunction"]], "setinputdescription() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setName"]], "setoutputdescription() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setPDFThreshold"]], "setparameter() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setParameter"]], "setparameterdescription() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setShadowedId"]], "setvisibility() (otrobopt.aggregatedmeasure method)": [[5, "otrobopt.AggregatedMeasure.setVisibility"]], "individualchancemeasure (class in otrobopt)": [[6, "otrobopt.IndividualChanceMeasure"]], "__init__() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.__init__"]], "draw() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.draw"]], "getalpha() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getAlpha"]], "getcallsnumber() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getCheckOutput"]], "getclassname() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getClassName"]], "getdescription() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getDescription"]], "getdistribution() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getDistribution"]], "getfunction() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getFunction"]], "getid() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getId"]], "getinputdescription() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getInputDescription"]], "getinputdimension() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getMarginal"]], "getname() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getName"]], "getoutputdescription() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getPDFThreshold"]], "getparameter() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getParameter"]], "getparameterdescription() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getShadowedId"]], "getvisibility() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.getVisibility"]], "hasname() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.hasName"]], "hasvisiblename() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.isActualImplementation"]], "islinear() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.isLinear"]], "islinearlydependent() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.parameterGradient"]], "setalpha() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setAlpha"]], "setcheckoutput() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setCheckOutput"]], "setdescription() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setDescription"]], "setdistribution() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setDistribution"]], "setfunction() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setFunction"]], "setinputdescription() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setName"]], "setoutputdescription() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setPDFThreshold"]], "setparameter() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setParameter"]], "setparameterdescription() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setShadowedId"]], "setvisibility() (otrobopt.individualchancemeasure method)": [[6, "otrobopt.IndividualChanceMeasure.setVisibility"]], "jointchancemeasure (class in otrobopt)": [[7, "otrobopt.JointChanceMeasure"]], "__init__() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.__init__"]], "draw() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.draw"]], "getalpha() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getAlpha"]], "getcallsnumber() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getCheckOutput"]], "getclassname() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getClassName"]], "getdescription() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getDescription"]], "getdistribution() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getDistribution"]], "getfunction() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getFunction"]], "getid() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getId"]], "getinputdescription() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getInputDescription"]], "getinputdimension() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getMarginal"]], "getname() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getName"]], "getoutputdescription() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getPDFThreshold"]], "getparameter() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getParameter"]], "getparameterdescription() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getShadowedId"]], "getvisibility() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.getVisibility"]], "hasname() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.hasName"]], "hasvisiblename() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.isActualImplementation"]], "islinear() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.isLinear"]], "islinearlydependent() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.parameterGradient"]], "setalpha() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setAlpha"]], "setcheckoutput() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setCheckOutput"]], "setdescription() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setDescription"]], "setdistribution() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setDistribution"]], "setfunction() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setFunction"]], "setinputdescription() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setName"]], "setoutputdescription() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setPDFThreshold"]], "setparameter() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setParameter"]], "setparameterdescription() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setShadowedId"]], "setvisibility() (otrobopt.jointchancemeasure method)": [[7, "otrobopt.JointChanceMeasure.setVisibility"]], "meanmeasure (class in otrobopt)": [[8, "otrobopt.MeanMeasure"]], "__init__() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.__init__"]], "draw() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.draw"]], "getcallsnumber() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getCheckOutput"]], "getclassname() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getClassName"]], "getdescription() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getDescription"]], "getdistribution() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getDistribution"]], "getfunction() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getFunction"]], "getid() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getId"]], "getinputdescription() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getInputDescription"]], "getinputdimension() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getMarginal"]], "getname() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getName"]], "getoutputdescription() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getPDFThreshold"]], "getparameter() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getParameter"]], "getparameterdescription() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getShadowedId"]], "getvisibility() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.getVisibility"]], "hasname() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.hasName"]], "hasvisiblename() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.isActualImplementation"]], "islinear() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.isLinear"]], "islinearlydependent() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.parameterGradient"]], "setcheckoutput() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setCheckOutput"]], "setdescription() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setDescription"]], "setdistribution() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setDistribution"]], "setfunction() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setFunction"]], "setinputdescription() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setName"]], "setoutputdescription() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setPDFThreshold"]], "setparameter() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setParameter"]], "setparameterdescription() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setShadowedId"]], "setvisibility() (otrobopt.meanmeasure method)": [[8, "otrobopt.MeanMeasure.setVisibility"]], "meanstandarddeviationtradeoffmeasure (class in otrobopt)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure"]], "__init__() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.__init__"]], "draw() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.draw"]], "getalpha() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getAlpha"]], "getcallsnumber() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getCheckOutput"]], "getclassname() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getClassName"]], "getdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getDescription"]], "getdistribution() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getDistribution"]], "getfunction() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getFunction"]], "getid() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getId"]], "getinputdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getInputDescription"]], "getinputdimension() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getMarginal"]], "getname() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getName"]], "getoutputdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getPDFThreshold"]], "getparameter() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getParameter"]], "getparameterdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getShadowedId"]], "getvisibility() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.getVisibility"]], "hasname() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.hasName"]], "hasvisiblename() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.isActualImplementation"]], "islinear() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.isLinear"]], "islinearlydependent() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.parameterGradient"]], "setalpha() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setAlpha"]], "setcheckoutput() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setCheckOutput"]], "setdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setDescription"]], "setdistribution() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setDistribution"]], "setfunction() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setFunction"]], "setinputdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setName"]], "setoutputdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setPDFThreshold"]], "setparameter() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setParameter"]], "setparameterdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setShadowedId"]], "setvisibility() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[9, "otrobopt.MeanStandardDeviationTradeoffMeasure.setVisibility"]], "measureevaluation (class in otrobopt)": [[10, "otrobopt.MeasureEvaluation"]], "__init__() (otrobopt.measureevaluation method)": [[10, "otrobopt.MeasureEvaluation.__init__"]], "getclassname() (otrobopt.measureevaluation method)": [[10, "otrobopt.MeasureEvaluation.getClassName"]], "getdistribution() (otrobopt.measureevaluation method)": [[10, "otrobopt.MeasureEvaluation.getDistribution"]], "getfunction() (otrobopt.measureevaluation method)": [[10, "otrobopt.MeasureEvaluation.getFunction"]], "getid() (otrobopt.measureevaluation method)": [[10, "otrobopt.MeasureEvaluation.getId"]], "getimplementation() (otrobopt.measureevaluation method)": [[10, "otrobopt.MeasureEvaluation.getImplementation"]], "getname() (otrobopt.measureevaluation method)": [[10, "otrobopt.MeasureEvaluation.getName"]], "setdistribution() (otrobopt.measureevaluation method)": [[10, "otrobopt.MeasureEvaluation.setDistribution"]], "setfunction() (otrobopt.measureevaluation method)": [[10, "otrobopt.MeasureEvaluation.setFunction"]], "setname() (otrobopt.measureevaluation method)": [[10, "otrobopt.MeasureEvaluation.setName"]], "measurefactory (class in otrobopt)": [[11, "otrobopt.MeasureFactory"]], "__init__() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.__init__"]], "build() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.build"]], "buildcollection() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.buildCollection"]], "getclassname() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.getClassName"]], "getid() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.getId"]], "getname() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.getName"]], "getshadowedid() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.getShadowedId"]], "getvisibility() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.getVisibility"]], "hasname() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.hasName"]], "hasvisiblename() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.hasVisibleName"]], "setname() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.setName"]], "setshadowedid() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.setShadowedId"]], "setvisibility() (otrobopt.measurefactory method)": [[11, "otrobopt.MeasureFactory.setVisibility"]], "measurefunction (class in otrobopt)": [[12, "otrobopt.MeasureFunction"]], "__init__() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.__init__"]], "draw() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.draw"]], "getcallsnumber() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getCallsNumber"]], "getclassname() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getClassName"]], "getdescription() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getDescription"]], "getevaluation() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getEvaluation"]], "getevaluationcallsnumber() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getEvaluationCallsNumber"]], "getgradient() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getGradient"]], "getgradientcallsnumber() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getGradientCallsNumber"]], "gethessian() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getHessian"]], "gethessiancallsnumber() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getHessianCallsNumber"]], "getid() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getId"]], "getinputdescription() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getInputDescription"]], "getinputdimension() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getInputDimension"]], "getmarginal() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getMarginal"]], "getname() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getName"]], "getoutputdescription() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getOutputDescription"]], "getoutputdimension() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getOutputDimension"]], "getparameter() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getParameter"]], "getparameterdescription() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getParameterDescription"]], "getparameterdimension() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getParameterDimension"]], "getshadowedid() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getShadowedId"]], "getvisibility() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.getVisibility"]], "gradient() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.gradient"]], "hasname() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.hasName"]], "hasvisiblename() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.hasVisibleName"]], "hessian() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.hessian"]], "islinear() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.isLinear"]], "islinearlydependent() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.isLinearlyDependent"]], "parametergradient() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.parameterGradient"]], "setdescription() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setDescription"]], "setevaluation() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setEvaluation"]], "setgradient() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setGradient"]], "sethessian() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setHessian"]], "setinputdescription() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setInputDescription"]], "setname() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setName"]], "setoutputdescription() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setOutputDescription"]], "setparameter() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setParameter"]], "setparameterdescription() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setParameterDescription"]], "setshadowedid() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setShadowedId"]], "setvisibility() (otrobopt.measurefunction method)": [[12, "otrobopt.MeasureFunction.setVisibility"]], "quantilemeasure (class in otrobopt)": [[13, "otrobopt.QuantileMeasure"]], "__init__() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.__init__"]], "draw() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.draw"]], "getalpha() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getAlpha"]], "getcallsnumber() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getCheckOutput"]], "getclassname() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getClassName"]], "getdescription() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getDescription"]], "getdistribution() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getDistribution"]], "getfunction() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getFunction"]], "getid() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getId"]], "getinputdescription() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getInputDescription"]], "getinputdimension() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getMarginal"]], "getname() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getName"]], "getoutputdescription() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getPDFThreshold"]], "getparameter() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getParameter"]], "getparameterdescription() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getShadowedId"]], "getvisibility() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.getVisibility"]], "hasname() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.hasName"]], "hasvisiblename() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.isActualImplementation"]], "islinear() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.isLinear"]], "islinearlydependent() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.parameterGradient"]], "setalpha() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setAlpha"]], "setcheckoutput() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setCheckOutput"]], "setdescription() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setDescription"]], "setdistribution() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setDistribution"]], "setfunction() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setFunction"]], "setinputdescription() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setName"]], "setoutputdescription() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setPDFThreshold"]], "setparameter() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setParameter"]], "setparameterdescription() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setShadowedId"]], "setvisibility() (otrobopt.quantilemeasure method)": [[13, "otrobopt.QuantileMeasure.setVisibility"]], "robustoptimizationalgorithm (class in otrobopt)": [[14, "otrobopt.RobustOptimizationAlgorithm"]], "__init__() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.__init__"]], "getclassname() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getClassName"]], "getid() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getId"]], "getmaximumabsoluteerror() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getMaximumAbsoluteError"]], "getmaximumconstrainterror() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getMaximumConstraintError"]], "getmaximumevaluationnumber() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getMaximumEvaluationNumber"]], "getmaximumiterationnumber() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getMaximumIterationNumber"]], "getmaximumrelativeerror() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getMaximumRelativeError"]], "getmaximumresidualerror() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getMaximumResidualError"]], "getname() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getName"]], "getoptimizationalgorithm() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getOptimizationAlgorithm"]], "getproblem() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getProblem"]], "getresult() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getResult"]], "getrobustproblem() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getRobustProblem"]], "getshadowedid() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getShadowedId"]], "getstartingpoint() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getStartingPoint"]], "getverbose() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getVerbose"]], "getvisibility() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.getVisibility"]], "hasname() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.hasName"]], "hasvisiblename() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.hasVisibleName"]], "run() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.run"]], "setmaximumabsoluteerror() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setMaximumAbsoluteError"]], "setmaximumconstrainterror() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setMaximumConstraintError"]], "setmaximumevaluationnumber() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setMaximumEvaluationNumber"]], "setmaximumiterationnumber() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setMaximumIterationNumber"]], "setmaximumrelativeerror() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setMaximumRelativeError"]], "setmaximumresidualerror() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setMaximumResidualError"]], "setname() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setName"]], "setoptimizationalgorithm() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setOptimizationAlgorithm"]], "setproblem() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setProblem"]], "setprogresscallback() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setProgressCallback"]], "setresult() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setResult"]], "setrobustproblem() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setRobustProblem"]], "setshadowedid() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setShadowedId"]], "setstartingpoint() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setStartingPoint"]], "setstopcallback() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setStopCallback"]], "setverbose() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setVerbose"]], "setvisibility() (otrobopt.robustoptimizationalgorithm method)": [[14, "otrobopt.RobustOptimizationAlgorithm.setVisibility"]], "robustoptimizationproblem (class in otrobopt)": [[15, "otrobopt.RobustOptimizationProblem"]], "__init__() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.__init__"]], "getbounds() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getBounds"]], "getclassname() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getClassName"]], "getdimension() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getDimension"]], "getdistribution() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getDistribution"]], "getequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getEqualityConstraint"]], "getid() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getId"]], "getinequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getInequalityConstraint"]], "getlevelfunction() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getLevelFunction"]], "getlevelvalue() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getLevelValue"]], "getname() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getName"]], "getobjective() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getObjective"]], "getreliabilitymeasure() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getReliabilityMeasure"]], "getresidualfunction() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getResidualFunction"]], "getrobustnessmeasure() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getRobustnessMeasure"]], "getshadowedid() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getShadowedId"]], "getvariablestype() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getVariablesType"]], "getvisibility() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.getVisibility"]], "hasbounds() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.hasBounds"]], "hasequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.hasEqualityConstraint"]], "hasinequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.hasInequalityConstraint"]], "haslevelfunction() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.hasLevelFunction"]], "hasmultipleobjective() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.hasMultipleObjective"]], "hasname() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.hasName"]], "hasreliabilitymeasure() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.hasReliabilityMeasure"]], "hasresidualfunction() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.hasResidualFunction"]], "hasrobustnessmeasure() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.hasRobustnessMeasure"]], "hasvisiblename() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.hasVisibleName"]], "iscontinuous() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.isContinuous"]], "isminimization() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.isMinimization"]], "setbounds() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setBounds"]], "setequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setEqualityConstraint"]], "setinequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setInequalityConstraint"]], "setlevelfunction() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setLevelFunction"]], "setlevelvalue() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setLevelValue"]], "setminimization() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setMinimization"]], "setname() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setName"]], "setobjective() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setObjective"]], "setreliabilitymeasure() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setReliabilityMeasure"]], "setresidualfunction() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setResidualFunction"]], "setrobustnessmeasure() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setRobustnessMeasure"]], "setshadowedid() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setShadowedId"]], "setvariablestype() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setVariablesType"]], "setvisibility() (otrobopt.robustoptimizationproblem method)": [[15, "otrobopt.RobustOptimizationProblem.setVisibility"]], "sequentialmontecarlorobustalgorithm (class in otrobopt)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm"]], "__init__() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.__init__"]], "getclassname() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getClassName"]], "getid() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getId"]], "getinitialresultcollection() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getInitialResultCollection"]], "getinitialsamplingsize() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getInitialSamplingSize"]], "getinitialsearch() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getInitialSearch"]], "getinitialstartingpoints() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getInitialStartingPoints"]], "getmaximumabsoluteerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumAbsoluteError"]], "getmaximumconstrainterror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumConstraintError"]], "getmaximumevaluationnumber() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumEvaluationNumber"]], "getmaximumiterationnumber() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumIterationNumber"]], "getmaximumrelativeerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumRelativeError"]], "getmaximumresidualerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumResidualError"]], "getname() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getName"]], "getoptimizationalgorithm() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getOptimizationAlgorithm"]], "getproblem() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getProblem"]], "getresult() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getResult"]], "getresultcollection() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getResultCollection"]], "getrobustproblem() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getRobustProblem"]], "getsamplingsizeincrement() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getSamplingSizeIncrement"]], "getshadowedid() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getShadowedId"]], "getstartingpoint() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getStartingPoint"]], "getverbose() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getVerbose"]], "getvisibility() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.getVisibility"]], "hasname() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.hasName"]], "hasvisiblename() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.hasVisibleName"]], "run() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.run"]], "setinitialsamplingsize() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setInitialSamplingSize"]], "setinitialsearch() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setInitialSearch"]], "setmaximumabsoluteerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumAbsoluteError"]], "setmaximumconstrainterror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumConstraintError"]], "setmaximumevaluationnumber() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumEvaluationNumber"]], "setmaximumiterationnumber() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumIterationNumber"]], "setmaximumrelativeerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumRelativeError"]], "setmaximumresidualerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumResidualError"]], "setname() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setName"]], "setoptimizationalgorithm() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setOptimizationAlgorithm"]], "setproblem() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setProblem"]], "setprogresscallback() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setProgressCallback"]], "setresult() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setResult"]], "setrobustproblem() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setRobustProblem"]], "setsamplingsizeincrement() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setSamplingSizeIncrement"]], "setshadowedid() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setShadowedId"]], "setstartingpoint() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setStartingPoint"]], "setstopcallback() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setStopCallback"]], "setverbose() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setVerbose"]], "setvisibility() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[16, "otrobopt.SequentialMonteCarloRobustAlgorithm.setVisibility"]], "variancemeasure (class in otrobopt)": [[17, "otrobopt.VarianceMeasure"]], "__init__() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.__init__"]], "draw() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.draw"]], "getcallsnumber() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getCheckOutput"]], "getclassname() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getClassName"]], "getdescription() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getDescription"]], "getdistribution() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getDistribution"]], "getfunction() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getFunction"]], "getid() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getId"]], "getinputdescription() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getInputDescription"]], "getinputdimension() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getMarginal"]], "getname() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getName"]], "getoutputdescription() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getPDFThreshold"]], "getparameter() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getParameter"]], "getparameterdescription() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getShadowedId"]], "getvisibility() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.getVisibility"]], "hasname() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.hasName"]], "hasvisiblename() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.isActualImplementation"]], "islinear() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.isLinear"]], "islinearlydependent() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.parameterGradient"]], "setcheckoutput() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setCheckOutput"]], "setdescription() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setDescription"]], "setdistribution() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setDistribution"]], "setfunction() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setFunction"]], "setinputdescription() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setName"]], "setoutputdescription() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setPDFThreshold"]], "setparameter() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setParameter"]], "setparameterdescription() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setShadowedId"]], "setvisibility() (otrobopt.variancemeasure method)": [[17, "otrobopt.VarianceMeasure.setVisibility"]], "worstcasemeasure (class in otrobopt)": [[18, "otrobopt.WorstCaseMeasure"]], "__init__() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.__init__"]], "draw() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.draw"]], "getcallsnumber() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getCheckOutput"]], "getclassname() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getClassName"]], "getdescription() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getDescription"]], "getdistribution() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getDistribution"]], "getfunction() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getFunction"]], "getid() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getId"]], "getinputdescription() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getInputDescription"]], "getinputdimension() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getMarginal"]], "getname() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getName"]], "getoptimizationalgorithm() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getOptimizationAlgorithm"]], "getoutputdescription() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getPDFThreshold"]], "getparameter() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getParameter"]], "getparameterdescription() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getShadowedId"]], "getvisibility() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.getVisibility"]], "hasname() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.hasName"]], "hasvisiblename() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.isActualImplementation"]], "islinear() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.isLinear"]], "islinearlydependent() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.isLinearlyDependent"]], "isminimization() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.isMinimization"]], "parametergradient() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.parameterGradient"]], "setcheckoutput() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setCheckOutput"]], "setdescription() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setDescription"]], "setdistribution() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setDistribution"]], "setfunction() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setFunction"]], "setinputdescription() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setIntegrationAlgorithm"]], "setminimization() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setMinimization"]], "setname() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setName"]], "setoptimizationalgorithm() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setOptimizationAlgorithm"]], "setoutputdescription() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setPDFThreshold"]], "setparameter() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setParameter"]], "setparameterdescription() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setShadowedId"]], "setvisibility() (otrobopt.worstcasemeasure method)": [[18, "otrobopt.WorstCaseMeasure.setVisibility"]]}})