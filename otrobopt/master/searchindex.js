Search.setIndex({"docnames": ["auto_examples/index", "auto_examples/plot_example1", "auto_examples/plot_example2", "auto_examples/plot_example3", "auto_examples/plot_example4", "auto_examples/sg_execution_times", "developer_guide/architecture/architecture", "developer_guide/developer_guide", "developer_guide/validation/validation", "index", "sg_execution_times", "user_manual/_generated/otrobopt.AggregatedMeasure", "user_manual/_generated/otrobopt.IndividualChanceMeasure", "user_manual/_generated/otrobopt.InverseFORM", "user_manual/_generated/otrobopt.InverseFORMResult", "user_manual/_generated/otrobopt.JointChanceMeasure", "user_manual/_generated/otrobopt.MeanMeasure", "user_manual/_generated/otrobopt.MeanStandardDeviationTradeoffMeasure", "user_manual/_generated/otrobopt.MeasureEvaluation", "user_manual/_generated/otrobopt.MeasureFactory", "user_manual/_generated/otrobopt.MeasureFunction", "user_manual/_generated/otrobopt.QuantileMeasure", "user_manual/_generated/otrobopt.RobustOptimizationAlgorithm", "user_manual/_generated/otrobopt.RobustOptimizationProblem", "user_manual/_generated/otrobopt.SequentialMonteCarloRobustAlgorithm", "user_manual/_generated/otrobopt.SubsetInverseSampling", "user_manual/_generated/otrobopt.SubsetInverseSamplingResult", "user_manual/_generated/otrobopt.VarianceMeasure", "user_manual/_generated/otrobopt.WorstCaseMeasure", "user_manual/user_manual"], "filenames": ["auto_examples/index.rst", "auto_examples/plot_example1.rst", "auto_examples/plot_example2.rst", "auto_examples/plot_example3.rst", "auto_examples/plot_example4.rst", "auto_examples/sg_execution_times.rst", "developer_guide/architecture/architecture.rst", "developer_guide/developer_guide.rst", "developer_guide/validation/validation.rst", "index.rst", "sg_execution_times.rst", "user_manual/_generated/otrobopt.AggregatedMeasure.rst", "user_manual/_generated/otrobopt.IndividualChanceMeasure.rst", "user_manual/_generated/otrobopt.InverseFORM.rst", "user_manual/_generated/otrobopt.InverseFORMResult.rst", "user_manual/_generated/otrobopt.JointChanceMeasure.rst", "user_manual/_generated/otrobopt.MeanMeasure.rst", "user_manual/_generated/otrobopt.MeanStandardDeviationTradeoffMeasure.rst", "user_manual/_generated/otrobopt.MeasureEvaluation.rst", "user_manual/_generated/otrobopt.MeasureFactory.rst", "user_manual/_generated/otrobopt.MeasureFunction.rst", "user_manual/_generated/otrobopt.QuantileMeasure.rst", "user_manual/_generated/otrobopt.RobustOptimizationAlgorithm.rst", "user_manual/_generated/otrobopt.RobustOptimizationProblem.rst", "user_manual/_generated/otrobopt.SequentialMonteCarloRobustAlgorithm.rst", "user_manual/_generated/otrobopt.SubsetInverseSampling.rst", "user_manual/_generated/otrobopt.SubsetInverseSamplingResult.rst", "user_manual/_generated/otrobopt.VarianceMeasure.rst", "user_manual/_generated/otrobopt.WorstCaseMeasure.rst", "user_manual/user_manual.rst"], "titles": ["Examples", "Example 1", "Example 2", "Example 3", "Example 4", "Computation times", "Architecture considerations", "Developer guide", "Validation", "OTRobOpt documentation", "Computation times", "AggregatedMeasure", "IndividualChanceMeasure distribution", "InverseFORM", "InverseFORMResult", "JointChanceMeasure distribution", "MeanMeasure distribution", "MeanStandardDeviationTradeoffMeasure distribution", "MeasureEvaluation", "MeasureFactory", "MeasureFunction", "QuantileMeasure distribution", "RobustOptimizationAlgorithm", "RobustOptimizationProblem", "SequentialMonteCarloRobustAlgorithm", "SubsetInverseSampling", "SubsetInverseSamplingResult", "VarianceMeasure distribution", "WorstCaseMeasure distribution", "User manual"], "terms": {"4": [0, 1, 2, 5, 10, 11, 12, 15, 16, 17, 20, 21, 27, 28], "3": [0, 1, 2, 4, 5, 10, 20, 22, 23, 24], "2": [0, 1, 3, 4, 5, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "1": [0, 2, 3, 4, 5, 7, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "download": [0, 1, 2, 3, 4], "all": [0, 10, 11, 12, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28], "python": [0, 1, 2, 3, 4], "sourc": [0, 1, 2, 3, 4, 7, 12, 15, 16, 17, 21, 27, 28], "code": [0, 1, 2, 3, 4, 7, 12, 15, 16, 17, 21, 27, 28], "auto_examples_python": 0, "zip": 0, "jupyt": [0, 1, 2, 3, 4], "notebook": [0, 1, 2, 3, 4], "auto_examples_jupyt": 0, "go": [1, 2, 3, 4], "end": [1, 2, 3, 4, 14, 26, 29], "full": [1, 2, 3, 4], "problem": [1, 2, 3, 4, 9, 14, 22, 23, 24, 28], "statement": [1, 2, 3, 4], "begin": [1, 2, 3, 4, 14, 29], "align": [1, 2, 3, 4, 29], "underset": [1, 2, 3, 4, 29], "x": [1, 2, 3, 4, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29], "text": [1, 2, 3, 4, 29], "minim": [1, 2, 3, 4, 23, 28, 29], "mathbb": [1, 2, 3, 4, 25], "e": [1, 2, 3, 4, 8, 14, 22, 23, 24], "_": [1, 2, 3, 4, 11, 12, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28], "cd": [1, 2, 3, 4, 6, 12, 14, 15, 16, 17, 19, 21, 27, 28, 29], "x_0": [1, 2], "2x_1": [1, 2], "4x_1": 1, "theta": [1, 2, 3, 4, 11, 12, 15, 16, 17, 19, 20, 21, 23, 24, 27, 28, 29], "subject": [1, 2, 3, 4, 29], "p": [1, 3, 4, 6, 11, 12, 15, 16, 17, 20, 21, 25, 27, 28], "leq": [1, 2, 3, 4, 21, 25, 26], "0": [1, 2, 3, 4, 5, 8, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "geq": [1, 3, 4, 11, 12, 14, 15, 16, 17, 20, 21, 25, 26, 27, 28, 29], "9": [1, 3, 4], "thicksim": [1, 2, 3, 4], "cu": [1, 4], "solut": [1, 2, 3, 4], "hat": [1, 2, 3, 4], "6": [1, 8, 11, 12, 15, 16, 17, 20, 21, 27, 28], "import": [1, 2, 3, 4, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "openturn": [1, 2, 3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "ot": [1, 2, 3, 4, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28], "otrobopt": [1, 2, 3, 4, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "log": [1, 2, 3, 4], "show": [1, 2, 3, 4, 11, 12, 15, 16, 17, 20, 21, 27, 28], "info": [1, 2, 3, 4], "calj": [1, 2, 3, 4], "symbolicfunct": [1, 2, 3, 4, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28], "x0": [1, 2], "x1": [1, 2, 11, 12, 15, 16, 17, 20, 21, 22, 23, 24, 27, 28], "calg": [1, 3, 4], "j": [1, 2, 3, 4, 11, 12, 14, 15, 16, 17, 20, 21, 27, 28, 29], "parametricfunct": [1, 2, 3, 4, 11, 12, 15, 16, 17, 19, 20, 21, 23, 27, 28], "g": [1, 2, 3, 4, 22, 23, 24, 25, 29], "dim": [1, 2, 3, 4, 25], "getinputdimens": [1, 2, 3, 4, 11, 12, 15, 16, 17, 20, 21, 23, 25, 27, 28], "solver": [1, 2, 3, 4, 22, 24, 28], "cobyla": [1, 2, 3, 4, 23], "setignorefailur": 1, "true": [1, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "setmaximumiterationnumb": [1, 2, 3, 4, 22, 24], "1000": [1, 2, 3, 4], "thetadist": [1, 2, 3, 4, 11, 12, 15, 16, 17, 19, 20, 21, 23, 27, 28], "uniform": [1, 4, 28], "robustnessmeasur": [1, 2, 3, 4, 23], "meanmeasur": [1, 2, 3, 4, 11, 18, 19, 20, 23], "reliabilitymeasur": [1, 3, 4, 23], "jointchancemeasur": [1, 3, 4, 18, 23], "greater": [1, 3, 4, 23], "robustoptimizationproblem": [1, 2, 3, 4, 22, 24, 29], "bound": [1, 2, 23, 24], "interv": [1, 2, 11, 12, 15, 16, 17, 20, 21, 23, 25, 26, 27, 28], "10": [1, 2, 3, 4, 19], "setbound": [1, 2, 23], "algo": [1, 2, 3, 4, 23, 25], "sequentialmontecarlorobustalgorithm": [1, 2, 3, 4, 22], "setmaximumabsoluteerror": [1, 2, 3, 4, 22, 24], "1e": [1, 2, 3, 4], "setinitialsamplings": [1, 2, 3, 4, 24], "setinitialsearch": [1, 2, 24], "100": [1, 2, 8, 11, 12, 15, 16, 17, 20, 21, 22, 24, 25, 27, 28], "run": [1, 2, 3, 4, 13, 22, 23, 24, 25], "result": [1, 2, 3, 4, 13, 14, 22, 24, 25, 26], "getresult": [1, 2, 3, 4, 13, 22, 23, 24, 25], "print": [1, 2, 3, 4, 11, 12, 15, 16, 17, 20, 21, 23, 27, 28], "getoptimalpoint": [1, 2, 3, 4, 23], "getoptimalvalu": [1, 2, 3, 4, 23], "iter": [1, 2, 3, 4, 13, 22, 24], "getiterationnumb": [1, 2, 3, 4], "1791": 1, "620063": 1, "19849": 1, "total": [1, 2, 3, 4, 5, 10, 24], "time": [1, 2, 3, 4, 11, 12, 15, 16, 17, 20, 21, 23, 25, 27, 28], "script": [1, 2, 3, 4], "minut": [1, 2, 3, 4], "903": [1, 5, 10], "second": [1, 2, 3, 4, 11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "plot_example1": [1, 5, 10], "ipynb": [1, 2, 3, 4], "py": [1, 2, 3, 4, 5, 10], "sqrt": [2, 17, 26], "x_1": [2, 11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "4x_0": 2, "120": 2, "cn": 2, "15": [2, 8], "30": 2, "test": [2, 7, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "normal": [2, 8, 11, 12, 14, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27], "setminim": [2, 3, 23, 28], "fals": [2, 3, 11, 12, 15, 16, 17, 20, 21, 23, 27, 28], "5": [2, 3, 23], "50": 2, "assert_almost_equ": 2, "46": 2, "2957": 2, "634": 2, "0002": [2, 25], "0004": 2, "40": 2, "7026": 2, "444": [2, 5, 10], "plot_example2": [2, 5, 10], "ce": 3, "setstartingpoint": [3, 4, 22, 23, 24], "exponenti": 3, "66295": 3, "004": [3, 5, 10], "plot_example3": [3, 5, 10], "co": [4, 11, 12, 14, 15, 16, 17, 20, 21, 23, 27, 28], "sin": [4, 11, 12, 15, 16, 17, 20, 21, 27, 28], "pi": 4, "14159": 4, "757706": 4, "009": [4, 5, 10], "plot_example4": [4, 5, 10], "00": [5, 10], "01": [5, 10, 11, 27], "360": [5, 10], "execut": [5, 10], "file": [5, 10], "from": [5, 10, 11, 12, 14, 15, 16, 17, 20, 21, 23, 24, 26, 27, 28], "auto_exampl": 5, "exampl": [5, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28], "mem": [5, 10], "mb": [5, 10], "sever": [6, 11, 19], "ar": [6, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28], "need": 6, "order": [6, 23, 25], "build": [6, 19], "sphinx": 6, "doc": 6, "option": [6, 14, 25, 28], "thi": [6, 7, 8, 14, 23, 25, 26, 29], "mkdir": 6, "cmake": 6, "dcmake_install_prefix": 6, "pwd": 6, "instal": 6, "dopenturns_dir": 6, "lib": 6, "here": 6, "i": [6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "global": 6, "class": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "diagram": 6, "each": [6, 14, 23, 24, 25, 26], "layer": 6, "The": [7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "goal": [7, 25, 29], "part": 7, "expos": [7, 29], "design": [7, 14, 19, 29], "principl": 7, "govern": 7, "platform": 7, "architectur": 7, "consider": 7, "depend": [7, 11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "compil": 7, "structur": [7, 14, 25], "valid": [7, 11, 12, 15, 16, 17, 21, 23, 27, 28], "case": [7, 11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "xxxxxx": 7, "purpos": 8, "estim": [8, 25, 26], "risk": 8, "stochast": 8, "variabl": [8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 23, 27, 28, 29], "name": [8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "descript": [8, 11, 12, 14, 15, 16, 17, 20, 21, 26, 27, 28], "distribut": [8, 11, 14, 18, 19, 23, 25, 26, 29], "q": [8, 25], "a1": 8, "10200": 8, "a2": 8, "3000": 8, "c": [8, 14, 20, 25], "c1": 8, "4000": 8, "60": 8, "independ": 8, "valu": [8, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28], "t": [8, 11, 12, 15, 16, 17, 20, 21, 26, 27, 28], "loss": 8, "rate": 8, "05": [8, 23], "nelec": 8, "refer": 8, "effici": [8, 25], "54": 8, "nth": 8, "8": [8, 11, 12, 15, 16, 17, 20, 21, 27, 28], "primari": 8, "energi": 8, "save": [8, 25], "e_p": 8, "frac": [8, 14, 22, 24, 25, 26], "f": [8, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27, 28], "u": [8, 11, 12, 14, 15, 16, 17, 21, 26, 27, 28], "l": 8, "m": [8, 25], "min": [8, 11, 12, 15, 16, 17, 20, 21, 27, 28], "max": [8, 11, 12, 15, 16, 17, 20, 21, 27, 28], "step": [8, 13, 24, 25], "10033": 8, "10364": 8, "2975": 8, "3024": 8, "99": [8, 21], "3901": 8, "33": 8, "4097": 8, "74": 8, "ep": 8, "10030": 8, "3900": 8, "06035": 8, "10365": 8, "2995": 8, "4100": 8, "05456": 8, "manual": 9, "measur": [9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28], "function": [9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28], "evalu": [9, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28], "defin": [9, 11, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28], "robust": [9, 18, 22, 23, 24], "optim": [9, 13, 14, 22, 23, 24, 28], "discret": [9, 12, 15, 16, 17, 19, 24, 27, 28], "solv": [9, 24], "an": [9, 14, 22, 24, 25], "invers": [9, 13, 14, 25, 26], "reliabl": [9, 14, 23], "guid": 9, "index": [9, 11, 12, 14, 15, 16, 17, 20, 21, 23, 27, 28], "search": [9, 13, 24], "page": 9, "galleri": 10, "arg": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "aggreg": 11, "assembl": 11, "output": [11, 12, 15, 16, 17, 20, 21, 23, 25, 27, 28], "paramet": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "collect": [11, 19], "sequenc": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25, 26, 27, 28], "measureevalu": [11, 19, 20, 23, 29], "f_base": [11, 12, 15, 16, 17, 19, 21, 23, 27, 28], "variancemeasur": [11, 18, 19, 23], "method": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "__init__": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "draw": [11, 12, 14, 15, 16, 17, 20, 21, 25, 26, 27, 28], "graph": [11, 12, 14, 15, 16, 17, 20, 21, 25, 26, 27, 28], "avail": [11, 12, 15, 16, 17, 20, 21, 23, 25, 26, 27, 28], "usag": [11, 12, 15, 16, 17, 20, 21, 27, 28], "inputmarg": [11, 12, 15, 16, 17, 20, 21, 27, 28], "outputmarg": [11, 12, 15, 16, 17, 20, 21, 27, 28], "cp": [11, 12, 15, 16, 17, 21, 27, 28], "ximin": [11, 12, 15, 16, 17, 20, 21, 27, 28], "ximax": [11, 12, 15, 16, 17, 20, 21, 27, 28], "ptnb": [11, 12, 15, 16, 17, 20, 21, 27, 28], "firstinputmarg": [11, 12, 15, 16, 17, 20, 21, 27, 28], "secondinputmarg": [11, 12, 15, 16, 17, 20, 21, 27, 28], "ximin_xjmin": [11, 12, 15, 16, 17, 20, 21, 27, 28], "ximax_xjmax": [11, 12, 15, 16, 17, 20, 21, 27, 28], "int": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "margin": [11, 12, 14, 15, 16, 17, 20, 21, 23, 27, 28], "In": [11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "2d": [11, 12, 15, 16, 17, 20, 21, 27, 28], "drawn": [11, 12, 15, 16, 17, 20, 21, 24, 25, 27, 28], "two": [11, 12, 14, 15, 16, 17, 20, 21, 22, 24, 27, 28], "float": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28], "central": [11, 12, 15, 16, 17, 20, 21, 27, 28], "point": [11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28], "where": [11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29], "curv": [11, 12, 15, 16, 17, 20, 21, 27, 28], "plot": [11, 12, 15, 16, 17, 20, 21, 27, 28], "dimens": [11, 12, 15, 16, 17, 20, 21, 23, 27, 28], "list": [11, 12, 14, 15, 16, 17, 20, 21, 24, 27, 28], "ptnb_k": [11, 12, 15, 16, 17, 20, 21, 27, 28], "k": [11, 12, 15, 16, 17, 20, 21, 27, 28], "number": [11, 12, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28], "note": [11, 12, 14, 15, 16, 17, 20, 21, 23, 25, 26, 27, 28, 29], "we": [11, 12, 13, 15, 16, 17, 20, 21, 25, 26, 27, 28], "rset": [11, 12, 15, 16, 17, 20, 21, 27, 28, 29], "n": [11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29], "rightarrow": [11, 12, 15, 16, 17, 19, 20, 21, 27, 28], "vect": [11, 12, 14, 15, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28], "dot": [11, 12, 15, 16, 17, 20, 21, 25, 27, 28], "x_n": [11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "f_1": [11, 12, 14, 15, 16, 17, 20, 21, 25, 27, 28], "f_p": [11, 12, 15, 16, 17, 20, 21, 27, 28], "first": [11, 12, 14, 15, 16, 17, 19, 20, 21, 25, 27, 28], "given": [11, 12, 15, 16, 17, 20, 21, 25, 27, 28, 29], "1d": [11, 12, 15, 16, 17, 20, 21, 27, 28], "f_k": [11, 12, 15, 16, 17, 20, 21, 27, 28], "respect": [11, 12, 15, 16, 17, 20, 21, 27, 28], "variat": [11, 12, 15, 16, 17, 20, 21, 25, 26, 27, 28], "x_i": [11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "when": [11, 12, 14, 15, 16, 17, 20, 21, 24, 25, 27, 28], "other": [11, 12, 15, 16, 17, 20, 21, 27, 28], "compon": [11, 12, 14, 15, 16, 17, 20, 21, 26, 27, 28], "fix": [11, 12, 13, 15, 16, 17, 20, 21, 27, 28], "correspond": [11, 12, 15, 16, 17, 20, 21, 27, 28], "ones": [11, 12, 15, 16, 17, 21, 27, 28], "Then": [11, 12, 15, 16, 17, 19, 20, 21, 27, 28], "mapsto": [11, 12, 15, 16, 17, 21, 27, 28], "cp_1": [11, 12, 15, 16, 17, 21, 27, 28], "cp_": [11, 12, 15, 16, 17, 21, 27, 28], "cp_n": [11, 12, 15, 16, 17, 21, 27, 28], "iso": [11, 12, 14, 15, 16, 17, 20, 21, 26, 27, 28], "x_j": [11, 12, 15, 16, 17, 20, 21, 27, 28], "third": [11, 12, 15, 16, 17, 20, 21, 27, 28], "same": [11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "onli": [11, 12, 15, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28], "fourth": [11, 12, 15, 16, 17, 20, 21, 27, 28], "viewer": [11, 12, 15, 16, 17, 20, 21, 27, 28], "view": [11, 12, 15, 16, 17, 20, 21, 27, 28], "pi_": [11, 12, 15, 16, 17, 20, 21, 27, 28], "exp": [11, 12, 15, 16, 17, 20, 21, 27, 28], "getcallsnumb": [11, 12, 15, 16, 17, 20, 21, 27, 28], "accessor": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "ha": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "been": [11, 12, 15, 16, 17, 20, 21, 23, 24, 27, 28], "call": [11, 12, 15, 16, 17, 20, 21, 27, 28], "return": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "calls_numb": [11, 12, 15, 16, 17, 20, 21, 27, 28], "integ": [11, 12, 15, 16, 17, 20, 21, 23, 27, 28], "count": [11, 12, 15, 16, 17, 20, 21, 27, 28], "sinc": [11, 12, 15, 16, 17, 20, 21, 27, 28], "its": [11, 12, 14, 15, 16, 17, 20, 21, 25, 27, 28], "creation": [11, 12, 15, 16, 17, 20, 21, 27, 28], "getcheckoutput": [11, 12, 15, 16, 17, 21, 27, 28], "verif": [11, 12, 15, 16, 17, 21, 27, 28], "flag": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "check_output": [11, 12, 15, 16, 17, 21, 27, 28], "bool": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "whether": [11, 12, 14, 15, 16, 17, 21, 22, 23, 24, 25, 27, 28], "check": [11, 12, 15, 16, 17, 21, 23, 27, 28], "nan": [11, 12, 15, 16, 17, 21, 27, 28], "inf": [11, 12, 15, 16, 17, 21, 27, 28], "getclassnam": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "object": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "class_nam": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "str": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "__class__": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "__name__": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "getdescript": [11, 12, 15, 16, 17, 20, 21, 27, 28], "input": [11, 12, 14, 15, 16, 17, 20, 21, 23, 25, 27, 28], "x2": [11, 12, 15, 16, 17, 20, 21, 22, 24, 27, 28], "y0": [11, 12, 15, 16, 17, 20, 21, 27, 28], "getdistribut": [11, 12, 15, 16, 17, 18, 21, 23, 27, 28], "getfunct": [11, 12, 15, 16, 17, 18, 21, 27, 28], "parametr": [11, 12, 15, 16, 17, 18, 20, 21, 27, 28, 29], "getid": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "id": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "intern": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "uniqu": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "identifi": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "getinputdescript": [11, 12, 15, 16, 17, 20, 21, 27, 28], "number_input": [11, 12, 15, 16, 17, 21, 27, 28], "getintegrationalgorithm": [11, 12, 15, 16, 17, 21, 27, 28], "integr": [11, 12, 15, 16, 17, 21, 27, 28], "algorithm": [11, 12, 13, 14, 15, 16, 17, 21, 22, 24, 25, 26, 27, 28], "integrationalgorithm": [11, 12, 15, 16, 17, 21, 27, 28], "us": [11, 12, 14, 15, 16, 17, 21, 22, 24, 25, 27, 28, 29], "comput": [11, 12, 13, 14, 15, 16, 17, 21, 25, 27, 28], "exact": [11, 12, 15, 16, 17, 21, 27, 28], "getmargin": [11, 12, 15, 16, 17, 20, 21, 27, 28], "indic": [11, 12, 14, 15, 16, 17, 20, 21, 23, 27, 28], "set": [11, 12, 15, 16, 17, 20, 21, 22, 23, 24, 25, 27, 28], "which": [11, 12, 14, 15, 16, 17, 20, 21, 25, 26, 27, 28], "extract": [11, 12, 15, 16, 17, 20, 21, 27, 28], "either": [11, 12, 15, 16, 17, 20, 21, 23, 27, 28], "f_i": [11, 12, 15, 16, 17, 20, 21, 25, 27, 28], "f_0": [11, 12, 15, 16, 17, 20, 21, 27, 28], "f_": [11, 12, 15, 16, 17, 20, 21, 25, 27, 28], "getnam": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "getoutputdescript": [11, 12, 15, 16, 17, 20, 21, 27, 28], "getoutputdimens": [11, 12, 15, 16, 17, 20, 21, 27, 28], "number_output": [11, 12, 15, 16, 17, 20, 21, 27, 28], "getpdfthreshold": [11, 12, 15, 16, 17, 21, 27, 28], "pdf": [11, 12, 14, 15, 16, 17, 21, 27, 28], "threshold": [11, 12, 15, 16, 17, 21, 25, 27, 28], "under": [11, 12, 15, 16, 17, 21, 27, 28], "contribut": [11, 12, 15, 16, 17, 21, 27, 28], "getparamet": [11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "getparameterdescript": [11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "getparameterdimens": [11, 12, 15, 16, 17, 20, 21, 27, 28], "parameter_dimens": [11, 12, 15, 16, 17, 21, 27, 28], "getshadowedid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "shadow": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "getvis": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "visibl": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "state": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "hasnam": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "empti": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "hasvisiblenam": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "distinguish": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "default": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "one": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "isactualimplement": [11, 12, 15, 16, 17, 21, 27, 28], "is_impl": [11, 12, 15, 16, 17, 21, 27, 28], "implement": [11, 12, 15, 16, 17, 18, 20, 21, 27, 28], "islinear": [11, 12, 15, 16, 17, 20, 21, 27, 28], "linear": [11, 12, 15, 16, 17, 20, 21, 27, 28], "otherwis": [11, 12, 15, 16, 17, 20, 21, 23, 27, 28], "islinearlydepend": [11, 12, 15, 16, 17, 20, 21, 27, 28], "regard": [11, 12, 14, 15, 16, 17, 20, 21, 27, 28], "specif": [11, 12, 15, 16, 17, 20, 21, 27, 28], "linearli": [11, 12, 15, 16, 17, 20, 21, 27, 28], "specifi": [11, 12, 14, 15, 16, 17, 20, 21, 23, 24, 27, 28], "parametergradi": [11, 12, 15, 16, 17, 20, 21, 27, 28], "inp": [11, 12, 15, 16, 17, 20, 21, 27, 28], "gradient": [11, 12, 15, 16, 17, 20, 21, 27, 28], "against": [11, 12, 15, 16, 17, 20, 21, 27, 28], "parameter_gradi": [11, 12, 15, 16, 17, 21, 27, 28], "matrix": [11, 12, 15, 16, 17, 20, 21, 27, 28], "setcheckoutput": [11, 12, 15, 16, 17, 21, 27, 28], "checkoutput": [11, 12, 15, 16, 17, 21, 27, 28], "setdescript": [11, 12, 15, 16, 17, 20, 21, 27, 28], "b": [11, 12, 15, 16, 17, 20, 21, 27, 28], "y": [11, 12, 14, 15, 16, 17, 20, 21, 25, 27, 28], "setdistribut": [11, 12, 15, 16, 17, 18, 21, 27, 28], "setfunct": [11, 12, 15, 16, 17, 18, 21, 27, 28], "setinputdescript": [11, 12, 15, 16, 17, 20, 21, 27, 28], "inputdescript": [11, 12, 15, 16, 17, 20, 21, 27, 28], "setintegrationalgorithm": [11, 12, 15, 16, 17, 21, 27, 28], "setnam": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "setoutputdescript": [11, 12, 15, 16, 17, 20, 21, 27, 28], "outputdescript": [11, 12, 15, 16, 17, 20, 21, 27, 28], "setpdfthreshold": [11, 12, 15, 16, 17, 21, 27, 28], "setparamet": [11, 12, 15, 16, 17, 20, 21, 27, 28], "setparameterdescript": [11, 12, 15, 16, 17, 20, 21, 27, 28], "setshadowedid": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "setvis": [11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28], "png": [12, 15, 16, 17, 21, 27, 28], "hire": [12, 15, 16, 17, 21, 27, 28], "individu": 12, "chanc": [12, 15], "It": [12, 15, 16, 17, 19, 21, 25, 26, 27, 28], "built": [12, 15, 16, 17, 21, 25, 27, 28], "densiti": [12, 15, 16, 17, 21, 27, 28], "constraint": [12, 15, 18, 22, 23, 24, 29], "consid": [12, 15], "pset": [12, 15, 21], "ge": [12, 15], "alpha_k": [12, 17], "foral": [12, 15], "m_": [12, 15, 16, 17, 21, 27, 28], "continu": [12, 15, 16, 17, 22, 23, 24, 25, 27, 28], "int_": [12, 14, 15, 16, 17, 25, 27], "supp": [12, 15, 16, 17, 27, 28], "mathbf": [12, 15, 25], "d": [12, 15, 16, 17, 20, 25, 27], "sum_": [12, 14, 15, 16, 17, 19, 25, 26, 27], "theta_i": [12, 15, 16, 17, 19, 27, 28], "p_i": [12, 15, 16, 17, 27], "oper": [12, 15, 22], "comparisonoper": [12, 15], "comparison": [12, 15], "front": [12, 15], "alpha": [12, 15, 17, 21], "probabl": [12, 13, 14, 15, 25, 26], "level": [12, 15, 21, 23, 25, 26], "greaterorequ": [12, 15], "95": [12, 15, 23, 25, 26], "108655": [12, 15], "getalpha": [12, 15, 17, 21], "setalpha": [12, 15, 17, 21], "form": [13, 14], "event": [13, 14, 25, 26], "randomvector": [13, 14, 25, 26], "parameternam": 13, "physicalstartingpoint": 13, "start": [13, 22, 24], "getbetaconverg": 13, "beta": [13, 14, 25], "converg": [13, 14, 24, 25], "criterion": 13, "getfixedstep": 13, "mode": 13, "getfixedstepvalu": 13, "getlimitstateconverg": 13, "limit": [13, 25], "getmaximumiter": 13, "maximum": [13, 22, 24, 25], "inverseformresult": 13, "gettargetbeta": 13, "target": [13, 25], "getvariableconverg": 13, "getvariablestepmaxiter": 13, "line": 13, "setbetaconverg": 13, "betaconverg": 13, "setfixedstep": 13, "fixedstep": 13, "setfixedstepvalu": 13, "fixedstepvalu": 13, "setlimitstateconverg": 13, "limitstateconverg": 13, "setmaximumiter": 13, "maximumiter": 13, "setresult": [13, 22, 24], "settargetbeta": 13, "targetbeta": 13, "setvariableconverg": 13, "variableconverg": 13, "setvariablestepmaxiter": 13, "variablestepmaxiter": 13, "draweventprobabilitysensit": 14, "sensit": 14, "failur": [14, 25], "width": 14, "calcul": [14, 20], "shift": 14, "posit": 14, "barplot": 14, "By": [14, 25, 26], "graphcollect": 14, "contain": [14, 25, 26], "probabilist": [14, 26], "vector": [14, 20, 23, 29], "drawhasoferreliabilityindexsensit": 14, "hasof": 14, "drawimportancefactor": [14, 26], "factor": [14, 26], "type": [14, 23], "see": [14, 26], "getimportancefactor": [14, 26], "pie": 14, "getconvergencecriteria": 14, "criteria": [14, 24, 28], "geteventprob": 14, "p_f": [14, 25], "geteventprobabilitysensit": 14, "getgeneralisedreliabilityindex": 14, "generalis": 14, "beta_g": 14, "equal": [14, 20, 22, 23, 24, 26], "pm": 14, "beta_": 14, "hl": 14, "accord": 14, "fact": 14, "standard": [14, 25, 26], "space": [14, 25, 26], "center": 14, "fulfil": 14, "gethasoferreliabilityindex": 14, "distanc": 14, "origin": [14, 25], "gethasoferreliabilityindexsensit": 14, "pointwithdescript": [14, 26], "analyticalresult": 14, "ellipt": 14, "squar": [14, 23], "transform": [14, 26], "classic": [14, 25], "thei": 14, "physic": [14, 26], "If": [14, 23], "alpha_i": [14, 26], "u_i": 14, "y_i": 14, "left": [14, 15, 26], "arrai": 14, "circ": 14, "f_2": [14, 25], "x_2": 14, "vdot": 14, "f_n": 14, "right": [14, 15, 26], "univari": 14, "cdf": 14, "copula": 14, "c_e": 14, "phi": 14, "displaystyl": [14, 26], "s_i": 14, "partial": 14, "u_j": 14, "getisstandardpointorigininfailurespac": 14, "know": 14, "isinfailurespac": 14, "getlimitstatevari": 14, "limitstatevari": 14, "getmeanpointinstandardeventdomain": 14, "mean": [14, 16, 17, 25, 26], "domain": [14, 26], "meanpoint": [14, 26], "standrad": 14, "context": 14, "approxim": [14, 19, 22, 24], "let": 14, "denot": 14, "random": [14, 29], "follow": [14, 25, 26], "spheric": 14, "ident": 14, "ani": [14, 20], "associ": [14, 23, 25, 29], "lind": 14, "symmetri": 14, "expect": 14, "infti": [14, 22, 24], "di": [14, 25], "getoptimizationresult": 14, "optimizationresult": [14, 22, 24], "inform": 14, "concern": 14, "getphysicalspacedesignpoint": 14, "designpoint": 14, "getstandardspacedesignpoint": 14, "setisstandardpointorigininfailurespac": 14, "isstandardpointorigininfailurespac": 14, "setmeanpointinstandardeventdomain": 14, "meanpointinstandardeventdomain": 14, "restrict": 14, "setoptimizationresult": 14, "setstandardspacedesignpoint": 14, "standardspacedesignpoint": 14, "joint": 15, "bigcap_": 15, "prod_": [15, 25], "varianc": [17, 25, 26, 27], "tradeoff": 17, "mu_k": 17, "var_k": 17, "mu": [17, 27], "coeffici": [17, 25, 26], "24": 17, "base": [18, 22], "allow": [18, 22, 24, 25], "counterpart": 18, "meanstandarddeviationtradeoffmeasur": 18, "worstcasemeasur": 18, "individualchancemeasur": 18, "quantilemeasur": 18, "aggregatedmeasur": 18, "getimplement": 18, "underli": 18, "impl": 18, "A": [18, 29], "copi": 18, "consist": [19, 23, 29], "replac": [19, 25], "omega_i": 19, "delta_": 19, "dirac": 19, "experi": [19, 24, 25], "weightedexperi": 19, "lhsexperi": 19, "factori": 19, "discretizedmeasur": 19, "onc": 19, "coll": 19, "buildcollect": 19, "centralpoint": 20, "equat": 20, "c_1": 20, "c_": 20, "c_n": 20, "getevalu": 20, "evaluationimplement": 20, "getevaluationcallsnumb": 20, "evaluation_calls_numb": 20, "getgradi": 20, "gradientimplement": 20, "getgradientcallsnumb": 20, "gradient_calls_numb": 20, "finit": 20, "differ": [20, 23], "gethessian": 20, "hessian": 20, "hessianimplement": 20, "gethessiancallsnumb": 20, "hessian_calls_numb": 20, "inputdim": 20, "parameterdimens": 20, "jacobian": 20, "transpos": 20, "14": 20, "13": 20, "5345": 20, "00001": 20, "symmetrictensor": 20, "sheet": 20, "20": 20, "00637061": 20, "setevalu": 20, "setgradi": 20, "gradient_funct": 20, "centeredfinitedifferencegradi": 20, "resourcemap": [20, 24, 25], "getasscalar": 20, "defaultepsilon": 20, "sethessian": 20, "hessian_funct": 20, "centeredfinitedifferencehessian": 20, "quantil": 21, "23264": 21, "optimizationalgorithm": [22, 24, 28], "getverbos": [22, 24, 25], "setverbos": [22, 24, 25], "getmaximumabsoluteerror": [22, 24], "absolut": [22, 24], "error": [22, 24], "maximumabsoluteerror": [22, 24], "epsilon": [22, 24], "a_n": [22, 24], "_n": [22, 24], "consecut": [22, 24], "optimum": [22, 24], "getmaximumconstrainterror": [22, 24], "maximumconstrainterror": [22, 24], "gamma_n": [22, 24], "current": [22, 24], "gather": [22, 24], "inequ": [22, 23, 24, 29], "violat": [22, 24], "getmaximumevaluationnumb": [22, 24], "getmaximumiterationnumb": [22, 24], "getmaximumrelativeerror": [22, 24], "rel": [22, 24], "maximumrelativeerror": [22, 24], "r_n": [22, 24], "neq": [22, 24], "els": [22, 24], "getmaximumresidualerror": [22, 24], "residu": [22, 24], "maximumresidualerror": [22, 24], "getoptimizationalgorithm": [22, 24, 28], "getproblem": [22, 24], "optimizationproblem": [22, 24], "getrobustproblem": [22, 24], "getstartingpoint": [22, 24], "startingpoint": [22, 24], "launch": [22, 24, 25], "setmaximumconstrainterror": [22, 24], "setmaximumevaluationnumb": [22, 24], "maximumevaluationnumb": [22, 24], "maximumiterationnumb": [22, 24], "setmaximumrelativeerror": [22, 24], "setmaximumresidualerror": [22, 24], "setoptimizationalgorithm": [22, 24, 28], "setproblem": [22, 24], "setprogresscallback": [22, 24, 25], "up": [22, 24, 25], "progress": [22, 24, 25], "callback": [22, 24, 25], "can": [22, 24, 25, 29], "programmat": [22, 24, 25], "report": [22, 24, 25], "callabl": [22, 24, 25], "take": [22, 24, 25], "argument": [22, 24, 25], "percentag": [22, 24, 25], "sy": [22, 24, 25], "rosenbrock": [22, 24], "10000": [22, 24, 25], "def": [22, 24, 25], "report_progress": [22, 24, 25], "stderr": [22, 24, 25], "write": [22, 24, 25], "setrobustproblem": [22, 24], "setstopcallback": [22, 24, 25], "stop": [22, 24, 25], "decid": [22, 24, 25], "ask_stop": [22, 24], "must": [23, 24], "least": 23, "constructor": 23, "inequalityconstraint": 23, "mesur": 23, "pure": 23, "x_et": 23, "55": 23, "j_et": 23, "42": 23, "determinist": [23, 24, 29], "g_base": 23, "83": 23, "67": 23, "getbound": 23, "getdimens": 23, "getequalityconstraint": 23, "describ": 23, "getinequalityconstraint": 23, "getlevelfunct": 23, "getlevelvalu": 23, "getobject": 23, "getreliabilitymeasur": 23, "getresidualfunct": 23, "getrobustnessmeasur": 23, "getvariablestyp": 23, "variablestyp": 23, "possibl": 23, "optimizationproblemimplement": 23, "binari": 23, "hasbound": 23, "had": 23, "hasequalityconstraint": 23, "hasinequalityconstraint": 23, "haslevelfunct": 23, "hasmultipleobject": 23, "scalar": 23, "hasreliabilitymeasur": 23, "wa": 23, "should": 23, "have": 23, "deduc": 23, "hasresidualfunct": 23, "hasrobustnessmeasur": 23, "iscontinu": 23, "isminim": [23, 28], "marginalindex": 23, "maxim": 23, "marginal_index": 23, "multi": [23, 24], "setequalityconstraint": 23, "equalityconstraint": 23, "setinequalityconstraint": 23, "setlevelfunct": 23, "levelfunct": 23, "setlevelvalu": 23, "levelvalu": 23, "tell": 23, "setobject": 23, "objectivefunct": 23, "clear": 23, "keep": [23, 25], "setreliabilitymeasur": 23, "setresidualfunct": 23, "residualfunct": 23, "setrobustnessmeasur": 23, "setvariablestyp": 23, "variabletyp": 23, "sequenti": 24, "mont": [24, 25], "carlo": [24, 25], "altern": 24, "initi": 24, "size": [24, 25, 26], "increment": 24, "setsamplingsizeincr": 24, "reli": 24, "lh": [24, 25], "kei": 24, "convergencefactor": 24, "control": 24, "inner": 24, "reach": 24, "small": 24, "enough": 24, "getinitialsamplings": 24, "sampl": [24, 25, 26], "initialsamplings": 24, "getinitialsearch": 24, "uniformli": 24, "box": 24, "initialsearch": 24, "getinitialstartingpoint": 24, "dure": [24, 25], "phase": 24, "startpoint": 24, "getresultcollect": 24, "intermedi": 24, "resultcol": 24, "getsamplingsizeincr": 24, "previou": 24, "samplingsizeincr": 24, "n0": 24, "subset": [25, 26], "simul": [25, 26], "targetprob": 25, "want": [25, 26], "final": 25, "proposalrang": 25, "propos": 25, "rang": 25, "length": [25, 26], "conditionalprob": 25, "between": 25, "success": 25, "mathcal": 25, "d_f": 25, "ux": 25, "r": 25, "n_x": 25, "underlin": 25, "prob": 25, "idea": 25, "rare": 25, "more": 25, "frequent": 25, "condit": [25, 26], "supset": 25, "f_m": 25, "rewrit": 25, "bigcap": 25, "limits_": 25, "And": 25, "region": 25, "chosen": 25, "g_i": 25, "so": [25, 29], "lead": 25, "gener": [25, 26, 29], "markov": 25, "chain": 25, "metropoli": 25, "hast": 25, "being": 25, "per": 25, "p_": 25, "0i": 25, "gamma_i": 25, "autocorrel": 25, "delta": 25, "2_i": 25, "2_1": 25, "express": 25, "o": 25, "v": 25, "randomgener": 25, "setse": 25, "creat": 25, "perform": [25, 26], "limitst": 25, "u1": 25, "u2": 25, "7": 25, "sigma": [25, 26], "identitymatrix": 25, "mydistribut": 25, "compositerandomvector": 25, "fiction": 25, "myevent": 25, "thresholdev": 25, "less": 25, "myss": 25, "setmaximumoutersampl": 25, "get": 25, "some": 25, "resultss": 25, "pf": 25, "getprobabilityestim": [25, 26], "getthresholdperstep": 25, "threshold_cl": 25, "getthresholdconfidencelength": 25, "90": 25, "drawprobabilityconverg": 25, "confid": [25, 26], "getblocks": [25, 26], "block": [25, 26], "blocksiz": [25, 26], "term": [25, 26], "group": [25, 26], "togeth": [25, 26], "getcoefficientofvariationperstep": 25, "coef": 25, "getconditionalprob": 25, "getconvergencestrategi": 25, "strategi": 25, "storage_strategi": 25, "historystrategi": 25, "storag": 25, "store": 25, "getev": [25, 26], "geteventinputsampl": 25, "inputsampl": 25, "geteventoutputsampl": 25, "outputsampl": 25, "ouput": 25, "getgammaperstep": 25, "getinputsampl": 25, "getmaximumcoefficientofvari": 25, "getmaximumoutersampl": 25, "outersampl": [25, 26], "getmaximumstandarddevi": 25, "deviat": [25, 26], "getnumberofstep": 25, "accesor": 25, "getoutputsampl": 25, "getprobabilityestimateperstep": 25, "getproposalrang": 25, "simulationresult": 25, "obtain": 25, "after": 25, "gettargetprob": 25, "getthresholdcoefficientofvariationperstep": 25, "confidencelength": [25, 26], "setblocks": [25, 26], "occurr": 25, "empir": 25, "most": 25, "well": 25, "deal": 25, "32": 25, "combin": 25, "setbetamin": 25, "betamin": 25, "radiu": 25, "hypersher": 25, "exclus": 25, "activ": [25, 26], "For": 25, "while": 25, "multithread": 25, "recommend": 25, "cpu": 25, "direct": 25, "setconditionalprob": 25, "setconvergencestrategi": 25, "convergencestrategi": 25, "setisubset": 25, "isubset": 25, "conditon": 25, "setkeepeventsampl": 25, "keepeventsampl": 25, "setmaximumcoefficientofvari": 25, "maximumcoefficientofvari": 25, "maximumoutersampl": 25, "setmaximumstandarddevi": 25, "maximumstandarddevi": 25, "montecarloexperi": 25, "probabilitysimulationalgorithm": 25, "setproposalrang": 25, "10000000": 25, "timer": 25, "timercallback": 25, "settargetprob": 25, "necessari": 26, "enabl": 26, "histori": 26, "model": [26, 29], "analysi": 26, "memoizefunct": 26, "getcoefficientofvari": 26, "var_": 26, "p_e": 26, "getconfidencelength": 26, "importancefactor": 26, "coordin": 26, "map": 26, "u_": 26, "_i": 26, "1_": 26, "notion": 26, "mechan": 26, "getmeanpointineventdomain": 26, "realiz": 26, "eventsimul": 26, "fail": 26, "getoutersampl": 26, "outer": 26, "getprobabilitydistribut": 26, "asymptot": 26, "probadistribut": 26, "probaestim": 26, "getstandarddevi": 26, "getvarianceestim": 26, "varianceestim": 26, "setev": 26, "setoutersampl": 26, "setprobabilityestim": 26, "probabilityestim": 26, "setvarianceestim": 26, "worst": 28, "inf_": 28, "formul": 29, "made": 29, "choos": 29, "rho_": 29, "lambda_": 29, "read": 29, "definit": 29, "concept": 29, "through": 29, "measurefunct": 29, "servic": 29, "robustoptimizationalgorithm": 29, "over": 29, "measurefactori": 29}, "objects": {"otrobopt": [[11, 0, 1, "", "AggregatedMeasure"], [12, 0, 1, "", "IndividualChanceMeasure"], [13, 0, 1, "", "InverseFORM"], [14, 0, 1, "", "InverseFORMResult"], [15, 0, 1, "", "JointChanceMeasure"], [16, 0, 1, "", "MeanMeasure"], [17, 0, 1, "", "MeanStandardDeviationTradeoffMeasure"], [18, 0, 1, "", "MeasureEvaluation"], [19, 0, 1, "", "MeasureFactory"], [20, 0, 1, "", "MeasureFunction"], [21, 0, 1, "", "QuantileMeasure"], [22, 0, 1, "", "RobustOptimizationAlgorithm"], [23, 0, 1, "", "RobustOptimizationProblem"], [24, 0, 1, "", "SequentialMonteCarloRobustAlgorithm"], [25, 0, 1, "", "SubsetInverseSampling"], [26, 0, 1, "", "SubsetInverseSamplingResult"], [27, 0, 1, "", "VarianceMeasure"], [28, 0, 1, "", "WorstCaseMeasure"]], "otrobopt.AggregatedMeasure": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "draw"], [11, 1, 1, "", "getCallsNumber"], [11, 1, 1, "", "getCheckOutput"], [11, 1, 1, "", "getClassName"], [11, 1, 1, "", "getDescription"], [11, 1, 1, "", "getDistribution"], [11, 1, 1, "", "getFunction"], [11, 1, 1, "", "getId"], [11, 1, 1, "", "getInputDescription"], [11, 1, 1, "", "getInputDimension"], [11, 1, 1, "", "getIntegrationAlgorithm"], [11, 1, 1, "", "getMarginal"], [11, 1, 1, "", "getName"], [11, 1, 1, "", "getOutputDescription"], [11, 1, 1, "", "getOutputDimension"], [11, 1, 1, "", "getPDFThreshold"], [11, 1, 1, "", "getParameter"], [11, 1, 1, "", "getParameterDescription"], [11, 1, 1, "", "getParameterDimension"], [11, 1, 1, "", "getShadowedId"], [11, 1, 1, "", "getVisibility"], [11, 1, 1, "", "hasName"], [11, 1, 1, "", "hasVisibleName"], [11, 1, 1, "", "isActualImplementation"], [11, 1, 1, "", "isLinear"], [11, 1, 1, "", "isLinearlyDependent"], [11, 1, 1, "", "parameterGradient"], [11, 1, 1, "", "setCheckOutput"], [11, 1, 1, "", "setDescription"], [11, 1, 1, "", "setDistribution"], [11, 1, 1, "", "setFunction"], [11, 1, 1, "", "setInputDescription"], [11, 1, 1, "", "setIntegrationAlgorithm"], [11, 1, 1, "", "setName"], [11, 1, 1, "", "setOutputDescription"], [11, 1, 1, "", "setPDFThreshold"], [11, 1, 1, "", "setParameter"], [11, 1, 1, "", "setParameterDescription"], [11, 1, 1, "", "setShadowedId"], [11, 1, 1, "", "setVisibility"]], "otrobopt.IndividualChanceMeasure": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "draw"], [12, 1, 1, "", "getAlpha"], [12, 1, 1, "", "getCallsNumber"], [12, 1, 1, "", "getCheckOutput"], [12, 1, 1, "", "getClassName"], [12, 1, 1, "", "getDescription"], [12, 1, 1, "", "getDistribution"], [12, 1, 1, "", "getFunction"], [12, 1, 1, "", "getId"], [12, 1, 1, "", "getInputDescription"], [12, 1, 1, "", "getInputDimension"], [12, 1, 1, "", "getIntegrationAlgorithm"], [12, 1, 1, "", "getMarginal"], [12, 1, 1, "", "getName"], [12, 1, 1, "", "getOutputDescription"], [12, 1, 1, "", "getOutputDimension"], [12, 1, 1, "", "getPDFThreshold"], [12, 1, 1, "", "getParameter"], [12, 1, 1, "", "getParameterDescription"], [12, 1, 1, "", "getParameterDimension"], [12, 1, 1, "", "getShadowedId"], [12, 1, 1, "", "getVisibility"], [12, 1, 1, "", "hasName"], [12, 1, 1, "", "hasVisibleName"], [12, 1, 1, "", "isActualImplementation"], [12, 1, 1, "", "isLinear"], [12, 1, 1, "", "isLinearlyDependent"], [12, 1, 1, "", "parameterGradient"], [12, 1, 1, "", "setAlpha"], [12, 1, 1, "", "setCheckOutput"], [12, 1, 1, "", "setDescription"], [12, 1, 1, "", "setDistribution"], [12, 1, 1, "", "setFunction"], [12, 1, 1, "", "setInputDescription"], [12, 1, 1, "", "setIntegrationAlgorithm"], [12, 1, 1, "", "setName"], [12, 1, 1, "", "setOutputDescription"], [12, 1, 1, "", "setPDFThreshold"], [12, 1, 1, "", "setParameter"], [12, 1, 1, "", "setParameterDescription"], [12, 1, 1, "", "setShadowedId"], [12, 1, 1, "", "setVisibility"]], "otrobopt.InverseFORM": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "getBetaConvergence"], [13, 1, 1, "", "getClassName"], [13, 1, 1, "", "getFixedStep"], [13, 1, 1, "", "getFixedStepValue"], [13, 1, 1, "", "getId"], [13, 1, 1, "", "getLimitStateConvergence"], [13, 1, 1, "", "getMaximumIteration"], [13, 1, 1, "", "getName"], [13, 1, 1, "", "getResult"], [13, 1, 1, "", "getShadowedId"], [13, 1, 1, "", "getTargetBeta"], [13, 1, 1, "", "getVariableConvergence"], [13, 1, 1, "", "getVariableStepMaxIterations"], [13, 1, 1, "", "getVisibility"], [13, 1, 1, "", "hasName"], [13, 1, 1, "", "hasVisibleName"], [13, 1, 1, "", "run"], [13, 1, 1, "", "setBetaConvergence"], [13, 1, 1, "", "setFixedStep"], [13, 1, 1, "", "setFixedStepValue"], [13, 1, 1, "", "setLimitStateConvergence"], [13, 1, 1, "", "setMaximumIteration"], [13, 1, 1, "", "setName"], [13, 1, 1, "", "setResult"], [13, 1, 1, "", "setShadowedId"], [13, 1, 1, "", "setTargetBeta"], [13, 1, 1, "", "setVariableConvergence"], [13, 1, 1, "", "setVariableStepMaxIterations"], [13, 1, 1, "", "setVisibility"]], "otrobopt.InverseFORMResult": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "drawEventProbabilitySensitivity"], [14, 1, 1, "", "drawHasoferReliabilityIndexSensitivity"], [14, 1, 1, "", "drawImportanceFactors"], [14, 1, 1, "", "getClassName"], [14, 1, 1, "", "getConvergenceCriteria"], [14, 1, 1, "", "getEventProbability"], [14, 1, 1, "", "getEventProbabilitySensitivity"], [14, 1, 1, "", "getGeneralisedReliabilityIndex"], [14, 1, 1, "", "getHasoferReliabilityIndex"], [14, 1, 1, "", "getHasoferReliabilityIndexSensitivity"], [14, 1, 1, "", "getId"], [14, 1, 1, "", "getImportanceFactors"], [14, 1, 1, "", "getIsStandardPointOriginInFailureSpace"], [14, 1, 1, "", "getLimitStateVariable"], [14, 1, 1, "", "getMeanPointInStandardEventDomain"], [14, 1, 1, "", "getName"], [14, 1, 1, "", "getOptimizationResult"], [14, 1, 1, "", "getParameter"], [14, 1, 1, "", "getParameterDescription"], [14, 1, 1, "", "getPhysicalSpaceDesignPoint"], [14, 1, 1, "", "getShadowedId"], [14, 1, 1, "", "getStandardSpaceDesignPoint"], [14, 1, 1, "", "getVisibility"], [14, 1, 1, "", "hasName"], [14, 1, 1, "", "hasVisibleName"], [14, 1, 1, "", "setIsStandardPointOriginInFailureSpace"], [14, 1, 1, "", "setMeanPointInStandardEventDomain"], [14, 1, 1, "", "setName"], [14, 1, 1, "", "setOptimizationResult"], [14, 1, 1, "", "setShadowedId"], [14, 1, 1, "", "setStandardSpaceDesignPoint"], [14, 1, 1, "", "setVisibility"]], "otrobopt.JointChanceMeasure": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "draw"], [15, 1, 1, "", "getAlpha"], [15, 1, 1, "", "getCallsNumber"], [15, 1, 1, "", "getCheckOutput"], [15, 1, 1, "", "getClassName"], [15, 1, 1, "", "getDescription"], [15, 1, 1, "", "getDistribution"], [15, 1, 1, "", "getFunction"], [15, 1, 1, "", "getId"], [15, 1, 1, "", "getInputDescription"], [15, 1, 1, "", "getInputDimension"], [15, 1, 1, "", "getIntegrationAlgorithm"], [15, 1, 1, "", "getMarginal"], [15, 1, 1, "", "getName"], [15, 1, 1, "", "getOutputDescription"], [15, 1, 1, "", "getOutputDimension"], [15, 1, 1, "", "getPDFThreshold"], [15, 1, 1, "", "getParameter"], [15, 1, 1, "", "getParameterDescription"], [15, 1, 1, "", "getParameterDimension"], [15, 1, 1, "", "getShadowedId"], [15, 1, 1, "", "getVisibility"], [15, 1, 1, "", "hasName"], [15, 1, 1, "", "hasVisibleName"], [15, 1, 1, "", "isActualImplementation"], [15, 1, 1, "", "isLinear"], [15, 1, 1, "", "isLinearlyDependent"], [15, 1, 1, "", "parameterGradient"], [15, 1, 1, "", "setAlpha"], [15, 1, 1, "", "setCheckOutput"], [15, 1, 1, "", "setDescription"], [15, 1, 1, "", "setDistribution"], [15, 1, 1, "", "setFunction"], [15, 1, 1, "", "setInputDescription"], [15, 1, 1, "", "setIntegrationAlgorithm"], [15, 1, 1, "", "setName"], [15, 1, 1, "", "setOutputDescription"], [15, 1, 1, "", "setPDFThreshold"], [15, 1, 1, "", "setParameter"], [15, 1, 1, "", "setParameterDescription"], [15, 1, 1, "", "setShadowedId"], [15, 1, 1, "", "setVisibility"]], "otrobopt.MeanMeasure": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "draw"], [16, 1, 1, "", "getCallsNumber"], [16, 1, 1, "", "getCheckOutput"], [16, 1, 1, "", "getClassName"], [16, 1, 1, "", "getDescription"], [16, 1, 1, "", "getDistribution"], [16, 1, 1, "", "getFunction"], [16, 1, 1, "", "getId"], [16, 1, 1, "", "getInputDescription"], [16, 1, 1, "", "getInputDimension"], [16, 1, 1, "", "getIntegrationAlgorithm"], [16, 1, 1, "", "getMarginal"], [16, 1, 1, "", "getName"], [16, 1, 1, "", "getOutputDescription"], [16, 1, 1, "", "getOutputDimension"], [16, 1, 1, "", "getPDFThreshold"], [16, 1, 1, "", "getParameter"], [16, 1, 1, "", "getParameterDescription"], [16, 1, 1, "", "getParameterDimension"], [16, 1, 1, "", "getShadowedId"], [16, 1, 1, "", "getVisibility"], [16, 1, 1, "", "hasName"], [16, 1, 1, "", "hasVisibleName"], [16, 1, 1, "", "isActualImplementation"], [16, 1, 1, "", "isLinear"], [16, 1, 1, "", "isLinearlyDependent"], [16, 1, 1, "", "parameterGradient"], [16, 1, 1, "", "setCheckOutput"], [16, 1, 1, "", "setDescription"], [16, 1, 1, "", "setDistribution"], [16, 1, 1, "", "setFunction"], [16, 1, 1, "", "setInputDescription"], [16, 1, 1, "", "setIntegrationAlgorithm"], [16, 1, 1, "", "setName"], [16, 1, 1, "", "setOutputDescription"], [16, 1, 1, "", "setPDFThreshold"], [16, 1, 1, "", "setParameter"], [16, 1, 1, "", "setParameterDescription"], [16, 1, 1, "", "setShadowedId"], [16, 1, 1, "", "setVisibility"]], "otrobopt.MeanStandardDeviationTradeoffMeasure": [[17, 1, 1, "", "__init__"], [17, 1, 1, "", "draw"], [17, 1, 1, "", "getAlpha"], [17, 1, 1, "", "getCallsNumber"], [17, 1, 1, "", "getCheckOutput"], [17, 1, 1, "", "getClassName"], [17, 1, 1, "", "getDescription"], [17, 1, 1, "", "getDistribution"], [17, 1, 1, "", "getFunction"], [17, 1, 1, "", "getId"], [17, 1, 1, "", "getInputDescription"], [17, 1, 1, "", "getInputDimension"], [17, 1, 1, "", "getIntegrationAlgorithm"], [17, 1, 1, "", "getMarginal"], [17, 1, 1, "", "getName"], [17, 1, 1, "", "getOutputDescription"], [17, 1, 1, "", "getOutputDimension"], [17, 1, 1, "", "getPDFThreshold"], [17, 1, 1, "", "getParameter"], [17, 1, 1, "", "getParameterDescription"], [17, 1, 1, "", "getParameterDimension"], [17, 1, 1, "", "getShadowedId"], [17, 1, 1, "", "getVisibility"], [17, 1, 1, "", "hasName"], [17, 1, 1, "", "hasVisibleName"], [17, 1, 1, "", "isActualImplementation"], [17, 1, 1, "", "isLinear"], [17, 1, 1, "", "isLinearlyDependent"], [17, 1, 1, "", "parameterGradient"], [17, 1, 1, "", "setAlpha"], [17, 1, 1, "", "setCheckOutput"], [17, 1, 1, "", "setDescription"], [17, 1, 1, "", "setDistribution"], [17, 1, 1, "", "setFunction"], [17, 1, 1, "", "setInputDescription"], [17, 1, 1, "", "setIntegrationAlgorithm"], [17, 1, 1, "", "setName"], [17, 1, 1, "", "setOutputDescription"], [17, 1, 1, "", "setPDFThreshold"], [17, 1, 1, "", "setParameter"], [17, 1, 1, "", "setParameterDescription"], [17, 1, 1, "", "setShadowedId"], [17, 1, 1, "", "setVisibility"]], "otrobopt.MeasureEvaluation": [[18, 1, 1, "", "__init__"], [18, 1, 1, "", "getClassName"], [18, 1, 1, "", "getDistribution"], [18, 1, 1, "", "getFunction"], [18, 1, 1, "", "getId"], [18, 1, 1, "", "getImplementation"], [18, 1, 1, "", "getName"], [18, 1, 1, "", "setDistribution"], [18, 1, 1, "", "setFunction"], [18, 1, 1, "", "setName"]], "otrobopt.MeasureFactory": [[19, 1, 1, "", "__init__"], [19, 1, 1, "", "build"], [19, 1, 1, "", "buildCollection"], [19, 1, 1, "", "getClassName"], [19, 1, 1, "", "getId"], [19, 1, 1, "", "getName"], [19, 1, 1, "", "getShadowedId"], [19, 1, 1, "", "getVisibility"], [19, 1, 1, "", "hasName"], [19, 1, 1, "", "hasVisibleName"], [19, 1, 1, "", "setName"], [19, 1, 1, "", "setShadowedId"], [19, 1, 1, "", "setVisibility"]], "otrobopt.MeasureFunction": [[20, 1, 1, "", "__init__"], [20, 1, 1, "", "draw"], [20, 1, 1, "", "getCallsNumber"], [20, 1, 1, "", "getClassName"], [20, 1, 1, "", "getDescription"], [20, 1, 1, "", "getEvaluation"], [20, 1, 1, "", "getEvaluationCallsNumber"], [20, 1, 1, "", "getGradient"], [20, 1, 1, "", "getGradientCallsNumber"], [20, 1, 1, "", "getHessian"], [20, 1, 1, "", "getHessianCallsNumber"], [20, 1, 1, "", "getId"], [20, 1, 1, "", "getInputDescription"], [20, 1, 1, "", "getInputDimension"], [20, 1, 1, "", "getMarginal"], [20, 1, 1, "", "getName"], [20, 1, 1, "", "getOutputDescription"], [20, 1, 1, "", "getOutputDimension"], [20, 1, 1, "", "getParameter"], [20, 1, 1, "", "getParameterDescription"], [20, 1, 1, "", "getParameterDimension"], [20, 1, 1, "", "getShadowedId"], [20, 1, 1, "", "getVisibility"], [20, 1, 1, "", "gradient"], [20, 1, 1, "", "hasName"], [20, 1, 1, "", "hasVisibleName"], [20, 1, 1, "", "hessian"], [20, 1, 1, "", "isLinear"], [20, 1, 1, "", "isLinearlyDependent"], [20, 1, 1, "", "parameterGradient"], [20, 1, 1, "", "setDescription"], [20, 1, 1, "", "setEvaluation"], [20, 1, 1, "", "setGradient"], [20, 1, 1, "", "setHessian"], [20, 1, 1, "", "setInputDescription"], [20, 1, 1, "", "setName"], [20, 1, 1, "", "setOutputDescription"], [20, 1, 1, "", "setParameter"], [20, 1, 1, "", "setParameterDescription"], [20, 1, 1, "", "setShadowedId"], [20, 1, 1, "", "setVisibility"]], "otrobopt.QuantileMeasure": [[21, 1, 1, "", "__init__"], [21, 1, 1, "", "draw"], [21, 1, 1, "", "getAlpha"], [21, 1, 1, "", "getCallsNumber"], [21, 1, 1, "", "getCheckOutput"], [21, 1, 1, "", "getClassName"], [21, 1, 1, "", "getDescription"], [21, 1, 1, "", "getDistribution"], [21, 1, 1, "", "getFunction"], [21, 1, 1, "", "getId"], [21, 1, 1, "", "getInputDescription"], [21, 1, 1, "", "getInputDimension"], [21, 1, 1, "", "getIntegrationAlgorithm"], [21, 1, 1, "", "getMarginal"], [21, 1, 1, "", "getName"], [21, 1, 1, "", "getOutputDescription"], [21, 1, 1, "", "getOutputDimension"], [21, 1, 1, "", "getPDFThreshold"], [21, 1, 1, "", "getParameter"], [21, 1, 1, "", "getParameterDescription"], [21, 1, 1, "", "getParameterDimension"], [21, 1, 1, "", "getShadowedId"], [21, 1, 1, "", "getVisibility"], [21, 1, 1, "", "hasName"], [21, 1, 1, "", "hasVisibleName"], [21, 1, 1, "", "isActualImplementation"], [21, 1, 1, "", "isLinear"], [21, 1, 1, "", "isLinearlyDependent"], [21, 1, 1, "", "parameterGradient"], [21, 1, 1, "", "setAlpha"], [21, 1, 1, "", "setCheckOutput"], [21, 1, 1, "", "setDescription"], [21, 1, 1, "", "setDistribution"], [21, 1, 1, "", "setFunction"], [21, 1, 1, "", "setInputDescription"], [21, 1, 1, "", "setIntegrationAlgorithm"], [21, 1, 1, "", "setName"], [21, 1, 1, "", "setOutputDescription"], [21, 1, 1, "", "setPDFThreshold"], [21, 1, 1, "", "setParameter"], [21, 1, 1, "", "setParameterDescription"], [21, 1, 1, "", "setShadowedId"], [21, 1, 1, "", "setVisibility"]], "otrobopt.RobustOptimizationAlgorithm": [[22, 1, 1, "", "__init__"], [22, 1, 1, "", "getClassName"], [22, 1, 1, "", "getId"], [22, 1, 1, "", "getMaximumAbsoluteError"], [22, 1, 1, "", "getMaximumConstraintError"], [22, 1, 1, "", "getMaximumEvaluationNumber"], [22, 1, 1, "", "getMaximumIterationNumber"], [22, 1, 1, "", "getMaximumRelativeError"], [22, 1, 1, "", "getMaximumResidualError"], [22, 1, 1, "", "getName"], [22, 1, 1, "", "getOptimizationAlgorithm"], [22, 1, 1, "", "getProblem"], [22, 1, 1, "", "getResult"], [22, 1, 1, "", "getRobustProblem"], [22, 1, 1, "", "getShadowedId"], [22, 1, 1, "", "getStartingPoint"], [22, 1, 1, "", "getVisibility"], [22, 1, 1, "", "hasName"], [22, 1, 1, "", "hasVisibleName"], [22, 1, 1, "", "run"], [22, 1, 1, "", "setMaximumAbsoluteError"], [22, 1, 1, "", "setMaximumConstraintError"], [22, 1, 1, "", "setMaximumEvaluationNumber"], [22, 1, 1, "", "setMaximumIterationNumber"], [22, 1, 1, "", "setMaximumRelativeError"], [22, 1, 1, "", "setMaximumResidualError"], [22, 1, 1, "", "setName"], [22, 1, 1, "", "setOptimizationAlgorithm"], [22, 1, 1, "", "setProblem"], [22, 1, 1, "", "setProgressCallback"], [22, 1, 1, "", "setResult"], [22, 1, 1, "", "setRobustProblem"], [22, 1, 1, "", "setShadowedId"], [22, 1, 1, "", "setStartingPoint"], [22, 1, 1, "", "setStopCallback"], [22, 1, 1, "", "setVisibility"]], "otrobopt.RobustOptimizationProblem": [[23, 1, 1, "", "__init__"], [23, 1, 1, "", "getBounds"], [23, 1, 1, "", "getClassName"], [23, 1, 1, "", "getDimension"], [23, 1, 1, "", "getDistribution"], [23, 1, 1, "", "getEqualityConstraint"], [23, 1, 1, "", "getId"], [23, 1, 1, "", "getInequalityConstraint"], [23, 1, 1, "", "getLevelFunction"], [23, 1, 1, "", "getLevelValue"], [23, 1, 1, "", "getName"], [23, 1, 1, "", "getObjective"], [23, 1, 1, "", "getReliabilityMeasure"], [23, 1, 1, "", "getResidualFunction"], [23, 1, 1, "", "getRobustnessMeasure"], [23, 1, 1, "", "getShadowedId"], [23, 1, 1, "", "getVariablesType"], [23, 1, 1, "", "getVisibility"], [23, 1, 1, "", "hasBounds"], [23, 1, 1, "", "hasEqualityConstraint"], [23, 1, 1, "", "hasInequalityConstraint"], [23, 1, 1, "", "hasLevelFunction"], [23, 1, 1, "", "hasMultipleObjective"], [23, 1, 1, "", "hasName"], [23, 1, 1, "", "hasReliabilityMeasure"], [23, 1, 1, "", "hasResidualFunction"], [23, 1, 1, "", "hasRobustnessMeasure"], [23, 1, 1, "", "hasVisibleName"], [23, 1, 1, "", "isContinuous"], [23, 1, 1, "", "isMinimization"], [23, 1, 1, "", "setBounds"], [23, 1, 1, "", "setEqualityConstraint"], [23, 1, 1, "", "setInequalityConstraint"], [23, 1, 1, "", "setLevelFunction"], [23, 1, 1, "", "setLevelValue"], [23, 1, 1, "", "setMinimization"], [23, 1, 1, "", "setName"], [23, 1, 1, "", "setObjective"], [23, 1, 1, "", "setReliabilityMeasure"], [23, 1, 1, "", "setResidualFunction"], [23, 1, 1, "", "setRobustnessMeasure"], [23, 1, 1, "", "setShadowedId"], [23, 1, 1, "", "setVariablesType"], [23, 1, 1, "", "setVisibility"]], "otrobopt.SequentialMonteCarloRobustAlgorithm": [[24, 1, 1, "", "__init__"], [24, 1, 1, "", "getClassName"], [24, 1, 1, "", "getId"], [24, 1, 1, "", "getInitialSamplingSize"], [24, 1, 1, "", "getInitialSearch"], [24, 1, 1, "", "getInitialStartingPoints"], [24, 1, 1, "", "getMaximumAbsoluteError"], [24, 1, 1, "", "getMaximumConstraintError"], [24, 1, 1, "", "getMaximumEvaluationNumber"], [24, 1, 1, "", "getMaximumIterationNumber"], [24, 1, 1, "", "getMaximumRelativeError"], [24, 1, 1, "", "getMaximumResidualError"], [24, 1, 1, "", "getName"], [24, 1, 1, "", "getOptimizationAlgorithm"], [24, 1, 1, "", "getProblem"], [24, 1, 1, "", "getResult"], [24, 1, 1, "", "getResultCollection"], [24, 1, 1, "", "getRobustProblem"], [24, 1, 1, "", "getSamplingSizeIncrement"], [24, 1, 1, "", "getShadowedId"], [24, 1, 1, "", "getStartingPoint"], [24, 1, 1, "", "getVisibility"], [24, 1, 1, "", "hasName"], [24, 1, 1, "", "hasVisibleName"], [24, 1, 1, "", "run"], [24, 1, 1, "", "setInitialSamplingSize"], [24, 1, 1, "", "setInitialSearch"], [24, 1, 1, "", "setMaximumAbsoluteError"], [24, 1, 1, "", "setMaximumConstraintError"], [24, 1, 1, "", "setMaximumEvaluationNumber"], [24, 1, 1, "", "setMaximumIterationNumber"], [24, 1, 1, "", "setMaximumRelativeError"], [24, 1, 1, "", "setMaximumResidualError"], [24, 1, 1, "", "setName"], [24, 1, 1, "", "setOptimizationAlgorithm"], [24, 1, 1, "", "setProblem"], [24, 1, 1, "", "setProgressCallback"], [24, 1, 1, "", "setResult"], [24, 1, 1, "", "setRobustProblem"], [24, 1, 1, "", "setSamplingSizeIncrement"], [24, 1, 1, "", "setShadowedId"], [24, 1, 1, "", "setStartingPoint"], [24, 1, 1, "", "setStopCallback"], [24, 1, 1, "", "setVisibility"]], "otrobopt.SubsetInverseSampling": [[25, 1, 1, "", "__init__"], [25, 1, 1, "", "drawProbabilityConvergence"], [25, 1, 1, "", "getBlockSize"], [25, 1, 1, "", "getClassName"], [25, 1, 1, "", "getCoefficientOfVariationPerStep"], [25, 1, 1, "", "getConditionalProbability"], [25, 1, 1, "", "getConvergenceStrategy"], [25, 1, 1, "", "getEvent"], [25, 1, 1, "", "getEventInputSample"], [25, 1, 1, "", "getEventOutputSample"], [25, 1, 1, "", "getGammaPerStep"], [25, 1, 1, "", "getId"], [25, 1, 1, "", "getInputSample"], [25, 1, 1, "", "getMaximumCoefficientOfVariation"], [25, 1, 1, "", "getMaximumOuterSampling"], [25, 1, 1, "", "getMaximumStandardDeviation"], [25, 1, 1, "", "getName"], [25, 1, 1, "", "getNumberOfSteps"], [25, 1, 1, "", "getOutputSample"], [25, 1, 1, "", "getProbabilityEstimatePerStep"], [25, 1, 1, "", "getProposalRange"], [25, 1, 1, "", "getResult"], [25, 1, 1, "", "getShadowedId"], [25, 1, 1, "", "getTargetProbability"], [25, 1, 1, "", "getThresholdCoefficientOfVariationPerStep"], [25, 1, 1, "", "getThresholdConfidenceLength"], [25, 1, 1, "", "getThresholdPerStep"], [25, 1, 1, "", "getVisibility"], [25, 1, 1, "", "hasName"], [25, 1, 1, "", "hasVisibleName"], [25, 1, 1, "", "run"], [25, 1, 1, "", "setBetaMin"], [25, 1, 1, "", "setBlockSize"], [25, 1, 1, "", "setConditionalProbability"], [25, 1, 1, "", "setConvergenceStrategy"], [25, 1, 1, "", "setISubset"], [25, 1, 1, "", "setKeepEventSample"], [25, 1, 1, "", "setMaximumCoefficientOfVariation"], [25, 1, 1, "", "setMaximumOuterSampling"], [25, 1, 1, "", "setMaximumStandardDeviation"], [25, 1, 1, "", "setName"], [25, 1, 1, "", "setProgressCallback"], [25, 1, 1, "", "setProposalRange"], [25, 1, 1, "", "setShadowedId"], [25, 1, 1, "", "setStopCallback"], [25, 1, 1, "", "setTargetProbability"], [25, 1, 1, "", "setVisibility"]], "otrobopt.SubsetInverseSamplingResult": [[26, 1, 1, "", "__init__"], [26, 1, 1, "", "drawImportanceFactors"], [26, 1, 1, "", "getBlockSize"], [26, 1, 1, "", "getClassName"], [26, 1, 1, "", "getCoefficientOfVariation"], [26, 1, 1, "", "getConfidenceLength"], [26, 1, 1, "", "getEvent"], [26, 1, 1, "", "getId"], [26, 1, 1, "", "getImportanceFactors"], [26, 1, 1, "", "getMeanPointInEventDomain"], [26, 1, 1, "", "getName"], [26, 1, 1, "", "getOuterSampling"], [26, 1, 1, "", "getProbabilityDistribution"], [26, 1, 1, "", "getProbabilityEstimate"], [26, 1, 1, "", "getShadowedId"], [26, 1, 1, "", "getStandardDeviation"], [26, 1, 1, "", "getVarianceEstimate"], [26, 1, 1, "", "getVisibility"], [26, 1, 1, "", "hasName"], [26, 1, 1, "", "hasVisibleName"], [26, 1, 1, "", "setBlockSize"], [26, 1, 1, "", "setEvent"], [26, 1, 1, "", "setName"], [26, 1, 1, "", "setOuterSampling"], [26, 1, 1, "", "setProbabilityEstimate"], [26, 1, 1, "", "setShadowedId"], [26, 1, 1, "", "setVarianceEstimate"], [26, 1, 1, "", "setVisibility"]], "otrobopt.VarianceMeasure": [[27, 1, 1, "", "__init__"], [27, 1, 1, "", "draw"], [27, 1, 1, "", "getCallsNumber"], [27, 1, 1, "", "getCheckOutput"], [27, 1, 1, "", "getClassName"], [27, 1, 1, "", "getDescription"], [27, 1, 1, "", "getDistribution"], [27, 1, 1, "", "getFunction"], [27, 1, 1, "", "getId"], [27, 1, 1, "", "getInputDescription"], [27, 1, 1, "", "getInputDimension"], [27, 1, 1, "", "getIntegrationAlgorithm"], [27, 1, 1, "", "getMarginal"], [27, 1, 1, "", "getName"], [27, 1, 1, "", "getOutputDescription"], [27, 1, 1, "", "getOutputDimension"], [27, 1, 1, "", "getPDFThreshold"], [27, 1, 1, "", "getParameter"], [27, 1, 1, "", "getParameterDescription"], [27, 1, 1, "", "getParameterDimension"], [27, 1, 1, "", "getShadowedId"], [27, 1, 1, "", "getVisibility"], [27, 1, 1, "", "hasName"], [27, 1, 1, "", "hasVisibleName"], [27, 1, 1, "", "isActualImplementation"], [27, 1, 1, "", "isLinear"], [27, 1, 1, "", "isLinearlyDependent"], [27, 1, 1, "", "parameterGradient"], [27, 1, 1, "", "setCheckOutput"], [27, 1, 1, "", "setDescription"], [27, 1, 1, "", "setDistribution"], [27, 1, 1, "", "setFunction"], [27, 1, 1, "", "setInputDescription"], [27, 1, 1, "", "setIntegrationAlgorithm"], [27, 1, 1, "", "setName"], [27, 1, 1, "", "setOutputDescription"], [27, 1, 1, "", "setPDFThreshold"], [27, 1, 1, "", "setParameter"], [27, 1, 1, "", "setParameterDescription"], [27, 1, 1, "", "setShadowedId"], [27, 1, 1, "", "setVisibility"]], "otrobopt.WorstCaseMeasure": [[28, 1, 1, "", "__init__"], [28, 1, 1, "", "draw"], [28, 1, 1, "", "getCallsNumber"], [28, 1, 1, "", "getCheckOutput"], [28, 1, 1, "", "getClassName"], [28, 1, 1, "", "getDescription"], [28, 1, 1, "", "getDistribution"], [28, 1, 1, "", "getFunction"], [28, 1, 1, "", "getId"], [28, 1, 1, "", "getInputDescription"], [28, 1, 1, "", "getInputDimension"], [28, 1, 1, "", "getIntegrationAlgorithm"], [28, 1, 1, "", "getMarginal"], [28, 1, 1, "", "getName"], [28, 1, 1, "", "getOptimizationAlgorithm"], [28, 1, 1, "", "getOutputDescription"], [28, 1, 1, "", "getOutputDimension"], [28, 1, 1, "", "getPDFThreshold"], [28, 1, 1, "", "getParameter"], [28, 1, 1, "", "getParameterDescription"], [28, 1, 1, "", "getParameterDimension"], [28, 1, 1, "", "getShadowedId"], [28, 1, 1, "", "getVisibility"], [28, 1, 1, "", "hasName"], [28, 1, 1, "", "hasVisibleName"], [28, 1, 1, "", "isActualImplementation"], [28, 1, 1, "", "isLinear"], [28, 1, 1, "", "isLinearlyDependent"], [28, 1, 1, "", "isMinimization"], [28, 1, 1, "", "parameterGradient"], [28, 1, 1, "", "setCheckOutput"], [28, 1, 1, "", "setDescription"], [28, 1, 1, "", "setDistribution"], [28, 1, 1, "", "setFunction"], [28, 1, 1, "", "setInputDescription"], [28, 1, 1, "", "setIntegrationAlgorithm"], [28, 1, 1, "", "setMinimization"], [28, 1, 1, "", "setName"], [28, 1, 1, "", "setOptimizationAlgorithm"], [28, 1, 1, "", "setOutputDescription"], [28, 1, 1, "", "setPDFThreshold"], [28, 1, 1, "", "setParameter"], [28, 1, 1, "", "setParameterDescription"], [28, 1, 1, "", "setShadowedId"], [28, 1, 1, "", "setVisibility"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"exampl": [0, 1, 2, 3, 4], "1": [1, 8], "2": [2, 8], "3": 3, "4": 4, "comput": [5, 10], "time": [5, 10], "architectur": 6, "consider": 6, "depend": 6, "compil": 6, "sourc": 6, "code": 6, "structur": 6, "develop": [7, 9], "guid": 7, "valid": 8, "test": 8, "case": 8, "xxxxxx": 8, "problem": [8, 29], "statement": 8, "input": 8, "b": 8, "output": 8, "determinist": 8, "parametr": 8, "analysi": 8, "result": 8, "otrobopt": 9, "document": 9, "user": [9, 29], "indic": 9, "tabl": 9, "aggregatedmeasur": 11, "individualchancemeasur": 12, "distribut": [12, 15, 16, 17, 21, 27, 28], "inverseform": 13, "inverseformresult": 14, "jointchancemeasur": 15, "meanmeasur": 16, "meanstandarddeviationtradeoffmeasur": 17, "measureevalu": 18, "measurefactori": 19, "measurefunct": 20, "quantilemeasur": 21, "robustoptimizationalgorithm": 22, "robustoptimizationproblem": 23, "sequentialmontecarlorobustalgorithm": 24, "subsetinversesampl": 25, "subsetinversesamplingresult": 26, "variancemeasur": 27, "worstcasemeasur": 28, "manual": 29, "measur": 29, "function": 29, "evalu": 29, "defin": 29, "robust": 29, "optim": 29, "discret": 29, "solv": 29, "an": 29, "invers": 29, "reliabl": 29}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Example 3": [[3, "example-3"]], "Examples": [[0, "examples"]], "Example 2": [[2, "example-2"]], "Example 1": [[1, "example-1"]], "Architecture considerations": [[6, "architecture-considerations"]], "Dependencies": [[6, "dependencies"]], "Compilation": [[6, "compilation"]], "Source code structure": [[6, "source-code-structure"]], "Example 4": [[4, "example-4"]], "Computation times": [[5, "computation-times"], [10, "computation-times"]], "WorstCaseMeasure distribution": [[28, "worstcasemeasure-distribution"]], "User manual": [[29, "user-manual"]], "Measure function": [[29, "measure-function"]], "Measure evaluation": [[29, "measure-evaluation"]], "Define a robust optimization problem": [[29, "define-a-robust-optimization-problem"]], "Discretize a measure function": [[29, "discretize-a-measure-function"]], "Solve a robust optimization problem": [[29, "solve-a-robust-optimization-problem"]], "Solve an inverse reliability problem": [[29, "solve-an-inverse-reliability-problem"]], "IndividualChanceMeasure distribution": [[12, "individualchancemeasure-distribution"]], "InverseFORM": [[13, "inverseform"]], "Validation": [[8, "validation"]], "Test case 1: XXXXXX": [[8, "test-case-1-xxxxxx"]], "1- Problem statement": [[8, "problem-statement"]], "a- Inputs": [[8, "a-inputs"], [8, "id1"]], "b- Output": [[8, "b-output"]], "2- Deterministic parametric analysis": [[8, "deterministic-parametric-analysis"]], "b- Results": [[8, "b-results"]], "OTRobOpt documentation": [[9, "otrobopt-documentation"]], "User documentation": [[9, "user-documentation"]], "Developer documentation": [[9, "developer-documentation"]], "Indices and tables": [[9, "indices-and-tables"]], "Developer guide": [[7, "developer-guide"]], "AggregatedMeasure": [[11, "aggregatedmeasure"]], "MeasureFunction": [[20, "measurefunction"]], "MeanStandardDeviationTradeoffMeasure distribution": [[17, "meanstandarddeviationtradeoffmeasure-distribution"]], "InverseFORMResult": [[14, "inverseformresult"]], "MeasureEvaluation": [[18, "measureevaluation"]], "JointChanceMeasure distribution": [[15, "jointchancemeasure-distribution"]], "MeanMeasure distribution": [[16, "meanmeasure-distribution"]], "MeasureFactory": [[19, "measurefactory"]], "SubsetInverseSampling": [[25, "subsetinversesampling"]], "SubsetInverseSamplingResult": [[26, "subsetinversesamplingresult"]], "RobustOptimizationProblem": [[23, "robustoptimizationproblem"]], "QuantileMeasure distribution": [[21, "quantilemeasure-distribution"]], "VarianceMeasure distribution": [[27, "variancemeasure-distribution"]], "RobustOptimizationAlgorithm": [[22, "robustoptimizationalgorithm"]], "SequentialMonteCarloRobustAlgorithm": [[24, "sequentialmontecarlorobustalgorithm"]]}, "indexentries": {"aggregatedmeasure (class in otrobopt)": [[11, "otrobopt.AggregatedMeasure"]], "__init__() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.__init__"]], "draw() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.draw"]], "getcallsnumber() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getCheckOutput"]], "getclassname() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getClassName"]], "getdescription() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getDescription"]], "getdistribution() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getDistribution"]], "getfunction() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getFunction"]], "getid() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getId"]], "getinputdescription() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getInputDescription"]], "getinputdimension() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getMarginal"]], "getname() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getName"]], "getoutputdescription() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getPDFThreshold"]], "getparameter() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getParameter"]], "getparameterdescription() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getShadowedId"]], "getvisibility() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.getVisibility"]], "hasname() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.hasName"]], "hasvisiblename() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.isActualImplementation"]], "islinear() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.isLinear"]], "islinearlydependent() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.parameterGradient"]], "setcheckoutput() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setCheckOutput"]], "setdescription() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setDescription"]], "setdistribution() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setDistribution"]], "setfunction() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setFunction"]], "setinputdescription() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setName"]], "setoutputdescription() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setPDFThreshold"]], "setparameter() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setParameter"]], "setparameterdescription() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setShadowedId"]], "setvisibility() (otrobopt.aggregatedmeasure method)": [[11, "otrobopt.AggregatedMeasure.setVisibility"]], "individualchancemeasure (class in otrobopt)": [[12, "otrobopt.IndividualChanceMeasure"]], "__init__() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.__init__"]], "draw() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.draw"]], "getalpha() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getAlpha"]], "getcallsnumber() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getCheckOutput"]], "getclassname() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getClassName"]], "getdescription() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getDescription"]], "getdistribution() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getDistribution"]], "getfunction() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getFunction"]], "getid() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getId"]], "getinputdescription() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getInputDescription"]], "getinputdimension() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getMarginal"]], "getname() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getName"]], "getoutputdescription() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getPDFThreshold"]], "getparameter() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getParameter"]], "getparameterdescription() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getShadowedId"]], "getvisibility() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.getVisibility"]], "hasname() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.hasName"]], "hasvisiblename() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.isActualImplementation"]], "islinear() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.isLinear"]], "islinearlydependent() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.parameterGradient"]], "setalpha() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setAlpha"]], "setcheckoutput() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setCheckOutput"]], "setdescription() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setDescription"]], "setdistribution() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setDistribution"]], "setfunction() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setFunction"]], "setinputdescription() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setName"]], "setoutputdescription() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setPDFThreshold"]], "setparameter() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setParameter"]], "setparameterdescription() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setShadowedId"]], "setvisibility() (otrobopt.individualchancemeasure method)": [[12, "otrobopt.IndividualChanceMeasure.setVisibility"]], "inverseform (class in otrobopt)": [[13, "otrobopt.InverseFORM"]], "__init__() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.__init__"]], "getbetaconvergence() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getBetaConvergence"]], "getclassname() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getClassName"]], "getfixedstep() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getFixedStep"]], "getfixedstepvalue() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getFixedStepValue"]], "getid() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getId"]], "getlimitstateconvergence() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getLimitStateConvergence"]], "getmaximumiteration() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getMaximumIteration"]], "getname() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getName"]], "getresult() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getResult"]], "getshadowedid() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getShadowedId"]], "gettargetbeta() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getTargetBeta"]], "getvariableconvergence() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getVariableConvergence"]], "getvariablestepmaxiterations() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getVariableStepMaxIterations"]], "getvisibility() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.getVisibility"]], "hasname() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.hasName"]], "hasvisiblename() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.hasVisibleName"]], "run() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.run"]], "setbetaconvergence() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setBetaConvergence"]], "setfixedstep() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setFixedStep"]], "setfixedstepvalue() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setFixedStepValue"]], "setlimitstateconvergence() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setLimitStateConvergence"]], "setmaximumiteration() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setMaximumIteration"]], "setname() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setName"]], "setresult() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setResult"]], "setshadowedid() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setShadowedId"]], "settargetbeta() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setTargetBeta"]], "setvariableconvergence() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setVariableConvergence"]], "setvariablestepmaxiterations() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setVariableStepMaxIterations"]], "setvisibility() (otrobopt.inverseform method)": [[13, "otrobopt.InverseFORM.setVisibility"]], "inverseformresult (class in otrobopt)": [[14, "otrobopt.InverseFORMResult"]], "__init__() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.__init__"]], "draweventprobabilitysensitivity() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.drawEventProbabilitySensitivity"]], "drawhasoferreliabilityindexsensitivity() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.drawHasoferReliabilityIndexSensitivity"]], "drawimportancefactors() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.drawImportanceFactors"]], "getclassname() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getClassName"]], "getconvergencecriteria() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getConvergenceCriteria"]], "geteventprobability() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getEventProbability"]], "geteventprobabilitysensitivity() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getEventProbabilitySensitivity"]], "getgeneralisedreliabilityindex() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getGeneralisedReliabilityIndex"]], "gethasoferreliabilityindex() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getHasoferReliabilityIndex"]], "gethasoferreliabilityindexsensitivity() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getHasoferReliabilityIndexSensitivity"]], "getid() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getId"]], "getimportancefactors() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getImportanceFactors"]], "getisstandardpointorigininfailurespace() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getIsStandardPointOriginInFailureSpace"]], "getlimitstatevariable() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getLimitStateVariable"]], "getmeanpointinstandardeventdomain() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getMeanPointInStandardEventDomain"]], "getname() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getName"]], "getoptimizationresult() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getOptimizationResult"]], "getparameter() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getParameter"]], "getparameterdescription() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getParameterDescription"]], "getphysicalspacedesignpoint() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getPhysicalSpaceDesignPoint"]], "getshadowedid() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getShadowedId"]], "getstandardspacedesignpoint() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getStandardSpaceDesignPoint"]], "getvisibility() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.getVisibility"]], "hasname() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.hasName"]], "hasvisiblename() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.hasVisibleName"]], "setisstandardpointorigininfailurespace() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.setIsStandardPointOriginInFailureSpace"]], "setmeanpointinstandardeventdomain() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.setMeanPointInStandardEventDomain"]], "setname() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.setName"]], "setoptimizationresult() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.setOptimizationResult"]], "setshadowedid() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.setShadowedId"]], "setstandardspacedesignpoint() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.setStandardSpaceDesignPoint"]], "setvisibility() (otrobopt.inverseformresult method)": [[14, "otrobopt.InverseFORMResult.setVisibility"]], "jointchancemeasure (class in otrobopt)": [[15, "otrobopt.JointChanceMeasure"]], "__init__() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.__init__"]], "draw() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.draw"]], "getalpha() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getAlpha"]], "getcallsnumber() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getCheckOutput"]], "getclassname() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getClassName"]], "getdescription() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getDescription"]], "getdistribution() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getDistribution"]], "getfunction() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getFunction"]], "getid() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getId"]], "getinputdescription() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getInputDescription"]], "getinputdimension() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getMarginal"]], "getname() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getName"]], "getoutputdescription() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getPDFThreshold"]], "getparameter() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getParameter"]], "getparameterdescription() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getShadowedId"]], "getvisibility() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.getVisibility"]], "hasname() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.hasName"]], "hasvisiblename() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.isActualImplementation"]], "islinear() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.isLinear"]], "islinearlydependent() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.parameterGradient"]], "setalpha() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setAlpha"]], "setcheckoutput() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setCheckOutput"]], "setdescription() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setDescription"]], "setdistribution() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setDistribution"]], "setfunction() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setFunction"]], "setinputdescription() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setName"]], "setoutputdescription() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setPDFThreshold"]], "setparameter() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setParameter"]], "setparameterdescription() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setShadowedId"]], "setvisibility() (otrobopt.jointchancemeasure method)": [[15, "otrobopt.JointChanceMeasure.setVisibility"]], "meanmeasure (class in otrobopt)": [[16, "otrobopt.MeanMeasure"]], "__init__() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.__init__"]], "draw() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.draw"]], "getcallsnumber() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getCheckOutput"]], "getclassname() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getClassName"]], "getdescription() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getDescription"]], "getdistribution() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getDistribution"]], "getfunction() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getFunction"]], "getid() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getId"]], "getinputdescription() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getInputDescription"]], "getinputdimension() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getMarginal"]], "getname() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getName"]], "getoutputdescription() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getPDFThreshold"]], "getparameter() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getParameter"]], "getparameterdescription() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getShadowedId"]], "getvisibility() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.getVisibility"]], "hasname() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.hasName"]], "hasvisiblename() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.isActualImplementation"]], "islinear() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.isLinear"]], "islinearlydependent() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.parameterGradient"]], "setcheckoutput() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setCheckOutput"]], "setdescription() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setDescription"]], "setdistribution() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setDistribution"]], "setfunction() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setFunction"]], "setinputdescription() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setName"]], "setoutputdescription() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setPDFThreshold"]], "setparameter() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setParameter"]], "setparameterdescription() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setShadowedId"]], "setvisibility() (otrobopt.meanmeasure method)": [[16, "otrobopt.MeanMeasure.setVisibility"]], "meanstandarddeviationtradeoffmeasure (class in otrobopt)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure"]], "__init__() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.__init__"]], "draw() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.draw"]], "getalpha() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getAlpha"]], "getcallsnumber() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getCheckOutput"]], "getclassname() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getClassName"]], "getdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getDescription"]], "getdistribution() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getDistribution"]], "getfunction() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getFunction"]], "getid() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getId"]], "getinputdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getInputDescription"]], "getinputdimension() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getMarginal"]], "getname() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getName"]], "getoutputdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getPDFThreshold"]], "getparameter() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getParameter"]], "getparameterdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getShadowedId"]], "getvisibility() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.getVisibility"]], "hasname() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.hasName"]], "hasvisiblename() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.isActualImplementation"]], "islinear() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.isLinear"]], "islinearlydependent() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.parameterGradient"]], "setalpha() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setAlpha"]], "setcheckoutput() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setCheckOutput"]], "setdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setDescription"]], "setdistribution() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setDistribution"]], "setfunction() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setFunction"]], "setinputdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setName"]], "setoutputdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setPDFThreshold"]], "setparameter() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setParameter"]], "setparameterdescription() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setShadowedId"]], "setvisibility() (otrobopt.meanstandarddeviationtradeoffmeasure method)": [[17, "otrobopt.MeanStandardDeviationTradeoffMeasure.setVisibility"]], "measureevaluation (class in otrobopt)": [[18, "otrobopt.MeasureEvaluation"]], "__init__() (otrobopt.measureevaluation method)": [[18, "otrobopt.MeasureEvaluation.__init__"]], "getclassname() (otrobopt.measureevaluation method)": [[18, "otrobopt.MeasureEvaluation.getClassName"]], "getdistribution() (otrobopt.measureevaluation method)": [[18, "otrobopt.MeasureEvaluation.getDistribution"]], "getfunction() (otrobopt.measureevaluation method)": [[18, "otrobopt.MeasureEvaluation.getFunction"]], "getid() (otrobopt.measureevaluation method)": [[18, "otrobopt.MeasureEvaluation.getId"]], "getimplementation() (otrobopt.measureevaluation method)": [[18, "otrobopt.MeasureEvaluation.getImplementation"]], "getname() (otrobopt.measureevaluation method)": [[18, "otrobopt.MeasureEvaluation.getName"]], "setdistribution() (otrobopt.measureevaluation method)": [[18, "otrobopt.MeasureEvaluation.setDistribution"]], "setfunction() (otrobopt.measureevaluation method)": [[18, "otrobopt.MeasureEvaluation.setFunction"]], "setname() (otrobopt.measureevaluation method)": [[18, "otrobopt.MeasureEvaluation.setName"]], "measurefactory (class in otrobopt)": [[19, "otrobopt.MeasureFactory"]], "__init__() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.__init__"]], "build() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.build"]], "buildcollection() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.buildCollection"]], "getclassname() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.getClassName"]], "getid() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.getId"]], "getname() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.getName"]], "getshadowedid() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.getShadowedId"]], "getvisibility() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.getVisibility"]], "hasname() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.hasName"]], "hasvisiblename() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.hasVisibleName"]], "setname() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.setName"]], "setshadowedid() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.setShadowedId"]], "setvisibility() (otrobopt.measurefactory method)": [[19, "otrobopt.MeasureFactory.setVisibility"]], "measurefunction (class in otrobopt)": [[20, "otrobopt.MeasureFunction"]], "__init__() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.__init__"]], "draw() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.draw"]], "getcallsnumber() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getCallsNumber"]], "getclassname() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getClassName"]], "getdescription() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getDescription"]], "getevaluation() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getEvaluation"]], "getevaluationcallsnumber() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getEvaluationCallsNumber"]], "getgradient() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getGradient"]], "getgradientcallsnumber() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getGradientCallsNumber"]], "gethessian() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getHessian"]], "gethessiancallsnumber() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getHessianCallsNumber"]], "getid() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getId"]], "getinputdescription() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getInputDescription"]], "getinputdimension() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getInputDimension"]], "getmarginal() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getMarginal"]], "getname() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getName"]], "getoutputdescription() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getOutputDescription"]], "getoutputdimension() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getOutputDimension"]], "getparameter() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getParameter"]], "getparameterdescription() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getParameterDescription"]], "getparameterdimension() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getParameterDimension"]], "getshadowedid() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getShadowedId"]], "getvisibility() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.getVisibility"]], "gradient() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.gradient"]], "hasname() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.hasName"]], "hasvisiblename() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.hasVisibleName"]], "hessian() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.hessian"]], "islinear() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.isLinear"]], "islinearlydependent() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.isLinearlyDependent"]], "parametergradient() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.parameterGradient"]], "setdescription() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setDescription"]], "setevaluation() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setEvaluation"]], "setgradient() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setGradient"]], "sethessian() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setHessian"]], "setinputdescription() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setInputDescription"]], "setname() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setName"]], "setoutputdescription() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setOutputDescription"]], "setparameter() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setParameter"]], "setparameterdescription() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setParameterDescription"]], "setshadowedid() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setShadowedId"]], "setvisibility() (otrobopt.measurefunction method)": [[20, "otrobopt.MeasureFunction.setVisibility"]], "quantilemeasure (class in otrobopt)": [[21, "otrobopt.QuantileMeasure"]], "__init__() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.__init__"]], "draw() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.draw"]], "getalpha() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getAlpha"]], "getcallsnumber() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getCheckOutput"]], "getclassname() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getClassName"]], "getdescription() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getDescription"]], "getdistribution() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getDistribution"]], "getfunction() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getFunction"]], "getid() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getId"]], "getinputdescription() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getInputDescription"]], "getinputdimension() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getMarginal"]], "getname() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getName"]], "getoutputdescription() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getPDFThreshold"]], "getparameter() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getParameter"]], "getparameterdescription() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getShadowedId"]], "getvisibility() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.getVisibility"]], "hasname() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.hasName"]], "hasvisiblename() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.isActualImplementation"]], "islinear() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.isLinear"]], "islinearlydependent() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.parameterGradient"]], "setalpha() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setAlpha"]], "setcheckoutput() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setCheckOutput"]], "setdescription() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setDescription"]], "setdistribution() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setDistribution"]], "setfunction() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setFunction"]], "setinputdescription() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setName"]], "setoutputdescription() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setPDFThreshold"]], "setparameter() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setParameter"]], "setparameterdescription() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setShadowedId"]], "setvisibility() (otrobopt.quantilemeasure method)": [[21, "otrobopt.QuantileMeasure.setVisibility"]], "robustoptimizationalgorithm (class in otrobopt)": [[22, "otrobopt.RobustOptimizationAlgorithm"]], "__init__() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.__init__"]], "getclassname() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getClassName"]], "getid() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getId"]], "getmaximumabsoluteerror() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getMaximumAbsoluteError"]], "getmaximumconstrainterror() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getMaximumConstraintError"]], "getmaximumevaluationnumber() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getMaximumEvaluationNumber"]], "getmaximumiterationnumber() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getMaximumIterationNumber"]], "getmaximumrelativeerror() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getMaximumRelativeError"]], "getmaximumresidualerror() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getMaximumResidualError"]], "getname() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getName"]], "getoptimizationalgorithm() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getOptimizationAlgorithm"]], "getproblem() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getProblem"]], "getresult() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getResult"]], "getrobustproblem() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getRobustProblem"]], "getshadowedid() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getShadowedId"]], "getstartingpoint() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getStartingPoint"]], "getvisibility() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.getVisibility"]], "hasname() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.hasName"]], "hasvisiblename() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.hasVisibleName"]], "run() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.run"]], "setmaximumabsoluteerror() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setMaximumAbsoluteError"]], "setmaximumconstrainterror() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setMaximumConstraintError"]], "setmaximumevaluationnumber() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setMaximumEvaluationNumber"]], "setmaximumiterationnumber() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setMaximumIterationNumber"]], "setmaximumrelativeerror() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setMaximumRelativeError"]], "setmaximumresidualerror() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setMaximumResidualError"]], "setname() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setName"]], "setoptimizationalgorithm() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setOptimizationAlgorithm"]], "setproblem() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setProblem"]], "setprogresscallback() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setProgressCallback"]], "setresult() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setResult"]], "setrobustproblem() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setRobustProblem"]], "setshadowedid() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setShadowedId"]], "setstartingpoint() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setStartingPoint"]], "setstopcallback() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setStopCallback"]], "setvisibility() (otrobopt.robustoptimizationalgorithm method)": [[22, "otrobopt.RobustOptimizationAlgorithm.setVisibility"]], "robustoptimizationproblem (class in otrobopt)": [[23, "otrobopt.RobustOptimizationProblem"]], "__init__() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.__init__"]], "getbounds() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getBounds"]], "getclassname() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getClassName"]], "getdimension() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getDimension"]], "getdistribution() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getDistribution"]], "getequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getEqualityConstraint"]], "getid() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getId"]], "getinequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getInequalityConstraint"]], "getlevelfunction() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getLevelFunction"]], "getlevelvalue() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getLevelValue"]], "getname() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getName"]], "getobjective() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getObjective"]], "getreliabilitymeasure() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getReliabilityMeasure"]], "getresidualfunction() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getResidualFunction"]], "getrobustnessmeasure() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getRobustnessMeasure"]], "getshadowedid() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getShadowedId"]], "getvariablestype() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getVariablesType"]], "getvisibility() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.getVisibility"]], "hasbounds() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.hasBounds"]], "hasequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.hasEqualityConstraint"]], "hasinequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.hasInequalityConstraint"]], "haslevelfunction() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.hasLevelFunction"]], "hasmultipleobjective() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.hasMultipleObjective"]], "hasname() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.hasName"]], "hasreliabilitymeasure() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.hasReliabilityMeasure"]], "hasresidualfunction() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.hasResidualFunction"]], "hasrobustnessmeasure() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.hasRobustnessMeasure"]], "hasvisiblename() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.hasVisibleName"]], "iscontinuous() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.isContinuous"]], "isminimization() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.isMinimization"]], "setbounds() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setBounds"]], "setequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setEqualityConstraint"]], "setinequalityconstraint() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setInequalityConstraint"]], "setlevelfunction() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setLevelFunction"]], "setlevelvalue() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setLevelValue"]], "setminimization() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setMinimization"]], "setname() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setName"]], "setobjective() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setObjective"]], "setreliabilitymeasure() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setReliabilityMeasure"]], "setresidualfunction() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setResidualFunction"]], "setrobustnessmeasure() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setRobustnessMeasure"]], "setshadowedid() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setShadowedId"]], "setvariablestype() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setVariablesType"]], "setvisibility() (otrobopt.robustoptimizationproblem method)": [[23, "otrobopt.RobustOptimizationProblem.setVisibility"]], "sequentialmontecarlorobustalgorithm (class in otrobopt)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm"]], "__init__() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.__init__"]], "getclassname() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getClassName"]], "getid() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getId"]], "getinitialsamplingsize() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getInitialSamplingSize"]], "getinitialsearch() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getInitialSearch"]], "getinitialstartingpoints() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getInitialStartingPoints"]], "getmaximumabsoluteerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumAbsoluteError"]], "getmaximumconstrainterror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumConstraintError"]], "getmaximumevaluationnumber() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumEvaluationNumber"]], "getmaximumiterationnumber() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumIterationNumber"]], "getmaximumrelativeerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumRelativeError"]], "getmaximumresidualerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getMaximumResidualError"]], "getname() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getName"]], "getoptimizationalgorithm() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getOptimizationAlgorithm"]], "getproblem() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getProblem"]], "getresult() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getResult"]], "getresultcollection() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getResultCollection"]], "getrobustproblem() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getRobustProblem"]], "getsamplingsizeincrement() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getSamplingSizeIncrement"]], "getshadowedid() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getShadowedId"]], "getstartingpoint() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getStartingPoint"]], "getvisibility() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.getVisibility"]], "hasname() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.hasName"]], "hasvisiblename() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.hasVisibleName"]], "run() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.run"]], "setinitialsamplingsize() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setInitialSamplingSize"]], "setinitialsearch() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setInitialSearch"]], "setmaximumabsoluteerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumAbsoluteError"]], "setmaximumconstrainterror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumConstraintError"]], "setmaximumevaluationnumber() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumEvaluationNumber"]], "setmaximumiterationnumber() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumIterationNumber"]], "setmaximumrelativeerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumRelativeError"]], "setmaximumresidualerror() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setMaximumResidualError"]], "setname() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setName"]], "setoptimizationalgorithm() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setOptimizationAlgorithm"]], "setproblem() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setProblem"]], "setprogresscallback() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setProgressCallback"]], "setresult() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setResult"]], "setrobustproblem() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setRobustProblem"]], "setsamplingsizeincrement() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setSamplingSizeIncrement"]], "setshadowedid() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setShadowedId"]], "setstartingpoint() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setStartingPoint"]], "setstopcallback() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setStopCallback"]], "setvisibility() (otrobopt.sequentialmontecarlorobustalgorithm method)": [[24, "otrobopt.SequentialMonteCarloRobustAlgorithm.setVisibility"]], "subsetinversesampling (class in otrobopt)": [[25, "otrobopt.SubsetInverseSampling"]], "__init__() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.__init__"]], "drawprobabilityconvergence() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.drawProbabilityConvergence"]], "getblocksize() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getBlockSize"]], "getclassname() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getClassName"]], "getcoefficientofvariationperstep() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getCoefficientOfVariationPerStep"]], "getconditionalprobability() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getConditionalProbability"]], "getconvergencestrategy() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getConvergenceStrategy"]], "getevent() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getEvent"]], "geteventinputsample() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getEventInputSample"]], "geteventoutputsample() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getEventOutputSample"]], "getgammaperstep() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getGammaPerStep"]], "getid() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getId"]], "getinputsample() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getInputSample"]], "getmaximumcoefficientofvariation() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getMaximumCoefficientOfVariation"]], "getmaximumoutersampling() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getMaximumOuterSampling"]], "getmaximumstandarddeviation() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getMaximumStandardDeviation"]], "getname() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getName"]], "getnumberofsteps() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getNumberOfSteps"]], "getoutputsample() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getOutputSample"]], "getprobabilityestimateperstep() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getProbabilityEstimatePerStep"]], "getproposalrange() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getProposalRange"]], "getresult() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getResult"]], "getshadowedid() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getShadowedId"]], "gettargetprobability() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getTargetProbability"]], "getthresholdcoefficientofvariationperstep() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getThresholdCoefficientOfVariationPerStep"]], "getthresholdconfidencelength() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getThresholdConfidenceLength"]], "getthresholdperstep() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getThresholdPerStep"]], "getvisibility() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.getVisibility"]], "hasname() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.hasName"]], "hasvisiblename() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.hasVisibleName"]], "run() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.run"]], "setbetamin() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setBetaMin"]], "setblocksize() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setBlockSize"]], "setconditionalprobability() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setConditionalProbability"]], "setconvergencestrategy() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setConvergenceStrategy"]], "setisubset() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setISubset"]], "setkeepeventsample() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setKeepEventSample"]], "setmaximumcoefficientofvariation() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setMaximumCoefficientOfVariation"]], "setmaximumoutersampling() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setMaximumOuterSampling"]], "setmaximumstandarddeviation() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setMaximumStandardDeviation"]], "setname() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setName"]], "setprogresscallback() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setProgressCallback"]], "setproposalrange() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setProposalRange"]], "setshadowedid() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setShadowedId"]], "setstopcallback() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setStopCallback"]], "settargetprobability() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setTargetProbability"]], "setvisibility() (otrobopt.subsetinversesampling method)": [[25, "otrobopt.SubsetInverseSampling.setVisibility"]], "subsetinversesamplingresult (class in otrobopt)": [[26, "otrobopt.SubsetInverseSamplingResult"]], "__init__() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.__init__"]], "drawimportancefactors() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.drawImportanceFactors"]], "getblocksize() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getBlockSize"]], "getclassname() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getClassName"]], "getcoefficientofvariation() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getCoefficientOfVariation"]], "getconfidencelength() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getConfidenceLength"]], "getevent() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getEvent"]], "getid() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getId"]], "getimportancefactors() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getImportanceFactors"]], "getmeanpointineventdomain() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getMeanPointInEventDomain"]], "getname() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getName"]], "getoutersampling() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getOuterSampling"]], "getprobabilitydistribution() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getProbabilityDistribution"]], "getprobabilityestimate() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getProbabilityEstimate"]], "getshadowedid() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getShadowedId"]], "getstandarddeviation() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getStandardDeviation"]], "getvarianceestimate() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getVarianceEstimate"]], "getvisibility() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.getVisibility"]], "hasname() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.hasName"]], "hasvisiblename() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.hasVisibleName"]], "setblocksize() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.setBlockSize"]], "setevent() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.setEvent"]], "setname() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.setName"]], "setoutersampling() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.setOuterSampling"]], "setprobabilityestimate() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.setProbabilityEstimate"]], "setshadowedid() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.setShadowedId"]], "setvarianceestimate() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.setVarianceEstimate"]], "setvisibility() (otrobopt.subsetinversesamplingresult method)": [[26, "otrobopt.SubsetInverseSamplingResult.setVisibility"]], "variancemeasure (class in otrobopt)": [[27, "otrobopt.VarianceMeasure"]], "__init__() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.__init__"]], "draw() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.draw"]], "getcallsnumber() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getCheckOutput"]], "getclassname() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getClassName"]], "getdescription() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getDescription"]], "getdistribution() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getDistribution"]], "getfunction() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getFunction"]], "getid() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getId"]], "getinputdescription() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getInputDescription"]], "getinputdimension() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getMarginal"]], "getname() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getName"]], "getoutputdescription() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getPDFThreshold"]], "getparameter() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getParameter"]], "getparameterdescription() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getShadowedId"]], "getvisibility() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.getVisibility"]], "hasname() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.hasName"]], "hasvisiblename() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.isActualImplementation"]], "islinear() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.isLinear"]], "islinearlydependent() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.isLinearlyDependent"]], "parametergradient() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.parameterGradient"]], "setcheckoutput() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setCheckOutput"]], "setdescription() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setDescription"]], "setdistribution() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setDistribution"]], "setfunction() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setFunction"]], "setinputdescription() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setIntegrationAlgorithm"]], "setname() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setName"]], "setoutputdescription() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setPDFThreshold"]], "setparameter() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setParameter"]], "setparameterdescription() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setShadowedId"]], "setvisibility() (otrobopt.variancemeasure method)": [[27, "otrobopt.VarianceMeasure.setVisibility"]], "worstcasemeasure (class in otrobopt)": [[28, "otrobopt.WorstCaseMeasure"]], "__init__() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.__init__"]], "draw() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.draw"]], "getcallsnumber() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getCallsNumber"]], "getcheckoutput() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getCheckOutput"]], "getclassname() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getClassName"]], "getdescription() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getDescription"]], "getdistribution() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getDistribution"]], "getfunction() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getFunction"]], "getid() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getId"]], "getinputdescription() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getInputDescription"]], "getinputdimension() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getInputDimension"]], "getintegrationalgorithm() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getIntegrationAlgorithm"]], "getmarginal() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getMarginal"]], "getname() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getName"]], "getoptimizationalgorithm() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getOptimizationAlgorithm"]], "getoutputdescription() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getOutputDescription"]], "getoutputdimension() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getOutputDimension"]], "getpdfthreshold() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getPDFThreshold"]], "getparameter() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getParameter"]], "getparameterdescription() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getParameterDescription"]], "getparameterdimension() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getParameterDimension"]], "getshadowedid() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getShadowedId"]], "getvisibility() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.getVisibility"]], "hasname() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.hasName"]], "hasvisiblename() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.hasVisibleName"]], "isactualimplementation() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.isActualImplementation"]], "islinear() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.isLinear"]], "islinearlydependent() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.isLinearlyDependent"]], "isminimization() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.isMinimization"]], "parametergradient() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.parameterGradient"]], "setcheckoutput() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setCheckOutput"]], "setdescription() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setDescription"]], "setdistribution() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setDistribution"]], "setfunction() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setFunction"]], "setinputdescription() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setInputDescription"]], "setintegrationalgorithm() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setIntegrationAlgorithm"]], "setminimization() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setMinimization"]], "setname() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setName"]], "setoptimizationalgorithm() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setOptimizationAlgorithm"]], "setoutputdescription() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setOutputDescription"]], "setpdfthreshold() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setPDFThreshold"]], "setparameter() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setParameter"]], "setparameterdescription() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setParameterDescription"]], "setshadowedid() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setShadowedId"]], "setvisibility() (otrobopt.worstcasemeasure method)": [[28, "otrobopt.WorstCaseMeasure.setVisibility"]]}})