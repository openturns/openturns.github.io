
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_example3.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_example3.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_example3.py:


Example 3
=========

.. GENERATED FROM PYTHON SOURCE LINES 7-20

Problem statement:

.. math::

    \begin{aligned}
    & \underset{x}{\text{minimize}}
    & & \mathbb{E}_{\cD}(x^3 - x + \Theta) \\
    & \text{subject to}
    & & \mathbb{P}_{\cD}(x + \Theta - 2 \leq 0) \geq 0.9 \\
    & & & \Theta \thicksim \cE(2)
    \end{aligned}

Solution: :math:`\hat{x} = -1`

.. GENERATED FROM PYTHON SOURCE LINES 22-54

.. code-block:: default

    import openturns as ot
    import otrobopt

    # ot.Log.Show(ot.Log.Info)

    calJ = ot.SymbolicFunction(['x', 'theta'], ['x^3 - 3*x + theta'])
    calG = ot.SymbolicFunction(['x', 'theta'], ['-(x + theta - 2)'])
    J = ot.ParametricFunction(calJ, [1], [0.5])
    g = ot.ParametricFunction(calG, [1], [0.5])

    dim = J.getInputDimension()

    solver = ot.Cobyla()
    solver.setMaximumIterationNumber(1000)
    solver.setStartingPoint([0.0] * dim)

    thetaDist = ot.Exponential(2.0)
    robustnessMeasure = otrobopt.MeanMeasure(J, thetaDist)
    reliabilityMeasure = otrobopt.JointChanceMeasure(
        g, thetaDist, ot.Greater(), 0.9)
    problem = otrobopt.RobustOptimizationProblem(
        robustnessMeasure, reliabilityMeasure)
    problem.setMinimization(False)

    algo = otrobopt.SequentialMonteCarloRobustAlgorithm(problem, solver)
    algo.setMaximumIterationNumber(10)
    algo.setMaximumAbsoluteError(1e-3)
    algo.setInitialSamplingSize(10)
    algo.run()
    result = algo.getResult()
    print('x*=', result.getOptimalPoint(), 'J(x*)=',
          result.getOptimalValue(), 'iteration=', result.getIterationNumber())




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    x*= [-1.00001] J(x*)= [2.66295] iteration= 2





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.004 seconds)


.. _sphx_glr_download_auto_examples_plot_example3.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_example3.py <plot_example3.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_example3.ipynb <plot_example3.ipynb>`
