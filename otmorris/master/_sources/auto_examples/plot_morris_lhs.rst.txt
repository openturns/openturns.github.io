
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_morris_lhs.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_morris_lhs.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_morris_lhs.py:


Example 2: Morris use-case and LHS initial design
=================================================

.. GENERATED FROM PYTHON SOURCE LINES 7-9

To define the trajectories, we first get an LHS design in the box :math:`[0,1]^{20}` of size :math:`50`
We set the number of trajectories input variables are randomly to 10.

.. GENERATED FROM PYTHON SOURCE LINES 11-15

.. code-block:: Python

    import openturns as ot
    import otmorris
    import openturns.viewer as otv








.. GENERATED FROM PYTHON SOURCE LINES 16-17

use the reference 20-d function from the Morris paper

.. GENERATED FROM PYTHON SOURCE LINES 17-20

.. code-block:: Python

    f = ot.Function(otmorris.MorrisFunction())
    dim = f.getInputDimension()








.. GENERATED FROM PYTHON SOURCE LINES 21-22

Number of trajectories

.. GENERATED FROM PYTHON SOURCE LINES 22-24

.. code-block:: Python

    r = 10








.. GENERATED FROM PYTHON SOURCE LINES 25-26

Define an LHS experiment of size 50 in [0, 1]^20

.. GENERATED FROM PYTHON SOURCE LINES 26-35

.. code-block:: Python

    size = 50
    dist = ot.ComposedDistribution([ot.Uniform(0, 1)] * dim)
    lhs_experiment = ot.LHSExperiment(dist, size, True, False)
    lhsDesign = lhs_experiment.generate()
    morris_experiment = otmorris.MorrisExperimentLHS(lhsDesign, r)
    bounds = ot.Interval(dim)  # [0, 1]^20
    X = morris_experiment.generate()
    Y = f(X)








.. GENERATED FROM PYTHON SOURCE LINES 36-37

Evaluate Elementary effects (ee)

.. GENERATED FROM PYTHON SOURCE LINES 37-39

.. code-block:: Python

    morris = otmorris.Morris(X, Y, bounds)








.. GENERATED FROM PYTHON SOURCE LINES 40-41

Compute mu/sigma

.. GENERATED FROM PYTHON SOURCE LINES 41-47

.. code-block:: Python

    mean = morris.getMeanAbsoluteElementaryEffects()
    sigma = morris.getStandardDeviationElementaryEffects()
    graph = morris.drawElementaryEffects(0)
    graph.setTitle("Elementary Effects using LHS")
    view = otv.View(graph)




.. image-sg:: /auto_examples/images/sphx_glr_plot_morris_lhs_001.png
   :alt: Elementary Effects using LHS
   :srcset: /auto_examples/images/sphx_glr_plot_morris_lhs_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 48-49

.. code-block:: Python

    otv.View.ShowAll()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 2.942 seconds)


.. _sphx_glr_download_auto_examples_plot_morris_lhs.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_morris_lhs.ipynb <plot_morris_lhs.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_morris_lhs.py <plot_morris_lhs.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_morris_lhs.zip <plot_morris_lhs.zip>`
