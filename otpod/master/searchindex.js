Search.setIndex({"docnames": ["_generated/otpod.AdaptiveHitMissPOD", "_generated/otpod.AdaptiveSignalPOD", "_generated/otpod.DataHandling", "_generated/otpod.KrigingPOD", "_generated/otpod.PLI", "_generated/otpod.PLIMean", "_generated/otpod.PLIVariance", "_generated/otpod.PODSummary", "_generated/otpod.PolynomialChaosPOD", "_generated/otpod.QuantileRegressionPOD", "_generated/otpod.SobolIndices", "_generated/otpod.UnivariateLinearModelAnalysis", "_generated/otpod.UnivariateLinearModelPOD", "examples/AdaptiveSignalPOD", "examples/PLI", "examples/PODSummary", "examples/SobolIndices", "examples/adaptiveHitMissPOD", "examples/examples", "examples/krigingPOD", "examples/linearAnalysis", "examples/linearAnalysisCensoredData", "examples/linearPOD", "examples/linearPODCensoredData", "examples/polynomialChaosPOD", "examples/quantileRegressionPOD", "index", "user_manual"], "filenames": ["_generated/otpod.AdaptiveHitMissPOD.rst", "_generated/otpod.AdaptiveSignalPOD.rst", "_generated/otpod.DataHandling.rst", "_generated/otpod.KrigingPOD.rst", "_generated/otpod.PLI.rst", "_generated/otpod.PLIMean.rst", "_generated/otpod.PLIVariance.rst", "_generated/otpod.PODSummary.rst", "_generated/otpod.PolynomialChaosPOD.rst", "_generated/otpod.QuantileRegressionPOD.rst", "_generated/otpod.SobolIndices.rst", "_generated/otpod.UnivariateLinearModelAnalysis.rst", "_generated/otpod.UnivariateLinearModelPOD.rst", "examples/AdaptiveSignalPOD.ipynb", "examples/PLI.ipynb", "examples/PODSummary.ipynb", "examples/SobolIndices.ipynb", "examples/adaptiveHitMissPOD.ipynb", "examples/examples.rst", "examples/krigingPOD.ipynb", "examples/linearAnalysis.ipynb", "examples/linearAnalysisCensoredData.ipynb", "examples/linearPOD.ipynb", "examples/linearPODCensoredData.ipynb", "examples/polynomialChaosPOD.ipynb", "examples/quantileRegressionPOD.ipynb", "index.rst", "user_manual.rst"], "titles": ["AdaptiveHitMissPOD", "AdaptiveSignalPOD", "DataHandling", "KrigingPOD", "PLI", "PLIMean", "PLIVariance", "PODSummary", "PolynomialChaosPOD", "QuantileRegressionPOD", "SobolIndices", "UnivariateLinearModelAnalysis", "UnivariateLinearModelPOD", "Adaptive Signal POD using Kriging", "Perturbation Law Indices", "POD Summary", "Sobol Indices", "Adaptive Hit Miss POD", "Examples of the API", "Kriging POD", "Linear model analysis", "Linear model analysis with censored data", "Linear model POD", "Linear model POD with censored data", "Polynomial chaos POD", "Quantile Regression POD", "Welcome to otpod\u2019s documentation!", "Documentation of the API"], "terms": {"class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17], "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "adapt": [0, 1, 8, 18, 24, 26], "algorithm": [0, 1, 3, 4, 5, 6, 7, 8, 10, 17, 19, 24, 26], "hit": [0, 18, 26], "miss": [0, 18, 26], "data": [0, 1, 2, 3, 7, 8, 9, 11, 12, 18, 26], "type": [0, 1, 5, 6, 14], "avail": [0, 1, 3, 7, 8, 9, 10, 11, 12, 13, 15, 19, 26], "constructor": [0, 1, 3, 7, 8, 9, 10, 11, 12], "inputdo": [0, 1, 13, 17], "outputdo": [0, 1, 13, 17], "physicalmodel": [0, 1, 13, 17], "nmorepoint": [0, 1], "detect": [0, 1, 3, 7, 8, 9, 12, 13, 14, 15, 16, 17, 26], "noisethr": [0, 1, 2, 3, 7, 8, 9, 11, 12, 19, 21, 23, 24, 25], "saturationthr": [0, 1, 2, 3, 7, 8, 9, 11, 12, 19, 21, 23, 24, 25], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 24], "2": [0, 1, 2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "d": [0, 1, 2, 3, 7, 8, 9, 11, 12, 17, 23], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23, 25], "float": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23], "vector": [0, 1, 2, 3, 7, 8, 9, 11, 12, 23], "input": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 23], "valu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 24, 25], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26], "first": [0, 1, 3, 7, 8, 9, 10, 11, 12, 14, 16], "column": [0, 1, 3, 7, 8, 11], "must": [0, 1, 3, 4, 7, 8, 9, 12, 14, 17, 19, 22, 23, 24, 25], "correspond": [0, 1, 3, 7, 8, 9, 10, 11, 12, 14, 16, 22], "defect": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 21, 22, 23, 25], "size": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15], "signal": [0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26], "dimens": [0, 1, 2, 3, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 23], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 25], "openturn": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26], "function": [0, 1, 3, 4, 8, 9, 12, 17], "true": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25], "model": [0, 1, 3, 4, 7, 8, 9, 11, 12, 15, 17, 18, 26], "us": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 24, 25, 26], "comput": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 17, 26], "real": [0, 1, 9], "ad": [0, 1, 17], "doe": [0, 1, 13, 14, 17], "posit": [0, 1], "int": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12], "number": [0, 1, 3, 4, 8, 9, 12, 13, 15, 16, 19, 24, 25], "point": [0, 1, 3, 4, 8, 9, 10, 11, 12, 13, 17, 19], "add": [0, 1, 17, 25], "physic": [0, 4, 13, 17, 26], "return": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 19, 23, 24, 25], "low": [0, 1, 2, 3, 7, 8, 9, 11, 12, 23], "censor": [0, 1, 2, 3, 7, 8, 9, 11, 12, 15, 18, 19, 24, 25, 26], "default": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 25], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27], "none": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 23], "high": [0, 1, 2, 3, 7, 8, 9, 11, 12, 23], "sampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 23, 24], "note": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 23], "thi": [0, 1, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 24, 25, 26, 27], "aim": [0, 1, 3, 7, 8, 9, 12, 13], "build": [0, 1, 3, 8, 9, 11, 12, 13, 15, 17, 26], "pod": [0, 1, 3, 5, 6, 7, 8, 9, 10, 12, 18, 26], "base": [0, 1, 3, 4, 5, 6, 8, 9, 10, 12], "classifi": [0, 17], "where": [0, 1, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 25], "design": [0, 1, 26], "experi": [0, 1, 26], "iter": [0, 1, 13, 17, 25, 26], "enrich": [0, 1], "initi": [0, 1, 3, 16, 17, 19], "given": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 21, 26], "criterion": [0, 1, 13], "misclassif": 0, "empir": 0, "risk": 0, "sever": [0, 1, 7, 16], "candid": [0, 1, 13], "creat": [0, 1], "discrep": [0, 1], "sobol": [0, 1, 3, 10, 18, 26], "distribut": [0, 1, 3, 4, 5, 6, 8, 10, 11, 12, 14, 15, 19, 21, 22, 23, 24, 25], "ha": [0, 1, 3, 4, 5, 6, 8, 10, 12, 17], "an": [0, 1, 3, 4, 8, 9, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "independ": [0, 1, 5, 6, 14], "copula": [0, 1], "otherwis": [0, 1, 3, 12], "mont": [0, 1, 3, 4, 5, 6, 7, 8, 10, 13, 15, 19, 24], "carlo": [0, 1, 3, 4, 5, 6, 7, 8, 10, 13, 15, 19, 24], "stop": [0, 1], "onli": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 25], "ar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 21, 23, 24, 25, 26], "svc": 0, "random": [0, 4, 10, 17, 19], "forest": 0, "choic": 0, "can": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 22, 24, 25, 26], "defin": [0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 14, 16, 26], "setclassifiertyp": [0, 17], "either": [0, 5, 6, 10, 11, 14, 16, 25], "0": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "In": [0, 1, 4, 14, 15, 17, 25, 26], "case": [0, 5, 6, 11, 12, 14, 15, 19, 20, 22, 23, 24, 25, 26], "transform": [0, 1, 3, 7, 8, 9, 11, 12, 20, 21, 22, 23, 24, 25], "order": [0, 1, 4, 5, 6, 7, 14, 16, 26], "provid": [0, 1, 3, 8, 9, 12, 16, 17], "simul": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 19, 24, 25, 26], "accuraci": [0, 1, 3, 13], "taken": [0, 1, 3, 15, 16, 19, 24, 25], "account": [0, 1, 3, 15, 16, 19, 24, 25], "tcl": [0, 1, 3], "interpol": [0, 1, 3, 8, 9], "built": [0, 1, 3, 8, 9, 10, 12, 15, 17, 19, 22, 24, 26], "20": [0, 1, 3, 8, 13, 16, 17], "between": [0, 1, 3, 4, 5, 6, 8, 13, 19, 24, 25], "minimum": [0, 1, 3, 8, 19, 24], "maximum": [0, 1, 3, 8, 19, 24, 25], "chang": [0, 1, 3, 4, 5, 6, 8, 10, 13, 14, 15, 19, 20, 24], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 22, 23, 24, 26], "setdefects": [0, 1, 3, 5, 6, 8, 10, 13, 16, 19, 24], "A": [0, 1, 3, 4, 8, 9, 12, 13, 15, 19, 20, 22, 23, 24, 25], "progress": [0, 1, 3, 8, 9, 12, 19, 22, 24, 25], "bar": [0, 1, 3, 8, 9, 12, 22, 25], "shown": [0, 1, 3, 8, 9, 12, 15], "verbos": [0, 1, 3, 7, 8, 9, 12], "enabl": [0, 1, 3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26], "It": [0, 1, 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "disabl": [0, 1, 3, 7, 8, 9, 12, 19, 24], "setverbos": [0, 1, 3, 7, 8, 9, 12, 19, 22, 24, 25], "computedetections": [0, 1, 3, 8, 9, 12, 19, 22, 23, 24, 25], "probabilitylevel": [0, 1, 3, 7, 8, 9, 12, 13, 14, 15, 16, 19, 22, 23, 24, 25], "confidencelevel": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25], "probabl": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 26], "level": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 15, 20, 21], "which": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 19, 24, 25], "confid": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 20, 21], "associ": [0, 1, 3, 4, 7, 8, 9, 12], "result": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 23, 25], "collect": [0, 1, 3, 8, 9, 12], "pointwithdescript": [0, 1, 3, 8, 9, 12], "contain": [0, 1, 3, 4, 7, 8, 9, 12], "drawboxcoxlikelihood": [0, 1, 3, 8, 9, 11, 12, 20], "name": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 19, 20, 21, 22, 23, 24, 25], "draw": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 21], "loglikelihood": [0, 1, 3, 8, 9, 11, 12], "versu": [0, 1, 3, 8, 9, 11, 12], "box": [0, 1, 3, 7, 8, 9, 11, 12, 15, 22, 23, 24, 25], "cox": [0, 1, 3, 7, 8, 9, 11, 12, 15, 22, 23, 24, 25], "string": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "figur": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 15, 17, 19, 20, 21, 22, 23, 24, 25], "save": [0, 1, 3, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 22, 23, 24, 25], "transpar": [0, 1, 3, 8, 9, 10, 11, 12], "option": [0, 1, 3, 8, 9, 10, 11, 12, 13], "set": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 24, 25, 26], "bbox_inch": [0, 1, 3, 8, 9, 10, 11, 12, 20], "tight": [0, 1, 3, 8, 9, 10, 11, 12, 20], "file": [0, 1, 3, 7, 8, 9, 10, 11, 12, 15], "full": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12], "path": [0, 1, 3, 7, 8, 9, 10, 11, 12, 17], "fig": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "matplotlib": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "object": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 19], "ax": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25], "when": [0, 1, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16], "boxcox": [0, 1, 3, 7, 8, 9, 11, 12, 20, 21, 22, 23, 24, 25], "drawpod": [0, 1, 3, 8, 9, 12, 13, 14, 16, 17, 19, 22, 23, 24, 25], "defectmin": [0, 1, 3, 8, 9, 12], "defectmax": [0, 1, 3, 8, 9, 12], "nbpt": [0, 1, 3, 8, 9, 12], "100": [0, 1, 3, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "curv": [0, 1, 3, 8, 9, 12, 13, 14, 16, 26], "interv": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 19, 20, 21, 24, 25], "plot": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14], "min": [0, 1, 3, 4, 8, 9, 12], "max": [0, 1, 3, 4, 8, 9, 12], "getboxcoxparamet": [0, 1, 3, 8, 9, 11, 12], "accessor": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "lambdaboxcox": [0, 1, 3, 8, 9, 11, 12], "If": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 16], "getcandidates": [0, 1], "getclassifi": 0, "svm": 0, "getclassifierparamet": 0, "getclassifiertyp": 0, "getconfusionmatrix": 0, "confus": 0, "matrix": [0, 5, 6], "getdefects": [0, 1, 3, 5, 6, 8, 10, 13, 16, 19, 24], "defects": [0, 1, 3, 5, 6, 8, 10, 13], "perform": [0, 1, 3, 5, 6, 8, 9, 10, 14, 16, 21, 25, 26], "getdistribut": [0, 1, 3, 5, 6, 8, 10], "composeddistribut": [0, 1, 3, 5, 6, 8, 10, 24], "uniform": [0, 1, 3, 4, 5, 6, 8, 10, 11, 17, 20, 21, 22, 23, 24, 25], "all": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 24], "getgraphact": [0, 1], "graph": [0, 1, 3, 7, 8, 17], "graphverbos": [0, 1, 13], "bool": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12], "displai": [0, 1, 4, 7, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "each": [0, 1, 3, 4, 5, 6, 7, 8, 14, 15, 17, 19, 24], "fals": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 22, 25], "getinputdo": [0, 1, 13], "final": [0, 1, 13, 15], "getoutputdo": [0, 1, 13], "output": [0, 1, 11, 16, 17], "getpmax": 0, "upper": [0, 4], "bound": [0, 4], "select": [0, 13, 17], "getpmin": 0, "lower": [0, 1, 4, 14], "getpodclmodel": [0, 1, 3, 8, 9, 12, 19, 22, 23, 24, 25], "95": [0, 1, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "podmodelcl": [0, 1, 3, 8, 9, 12], "getpodmodel": [0, 1, 3, 8, 9, 12, 19, 22, 23, 24, 25], "podmodel": [0, 1, 3, 8, 9, 12, 19, 22, 23, 24, 25], "getsamplings": [0, 1, 3, 5, 6, 7, 8], "getsimulations": [0, 1, 3, 7, 8, 9, 10, 12], "getverbos": [0, 1, 3, 7, 8, 9, 12], "run": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 17, 22, 23, 26], "launch": [0, 1, 12, 13], "onc": [0, 1], "eventu": [0, 1, 3, 10], "mean": [0, 1, 3, 4, 5, 6, 10, 11, 15, 20, 21], "setcandidates": [0, 1, 13], "setclassifierparamet": 0, "setdistribut": [0, 1, 3, 5, 6, 8, 10, 24], "setgraphact": [0, 1, 13, 17], "directori": [0, 1, 7, 11, 13, 15], "png": [0, 1, 7, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "setpmax": 0, "pmax": 0, "setpmin": 0, "pmin": 0, "setsamplings": [0, 1, 3, 5, 6, 7, 8, 13, 14, 15, 16, 19, 24], "setsimulations": [0, 1, 3, 7, 8, 9, 10, 12, 13, 14, 15, 16, 19, 24, 25], "krige": [1, 3, 7, 10, 15, 18, 26], "integr": [1, 4, 5, 6], "squar": [1, 3], "one": [1, 4, 16, 19, 24], "minim": 1, "current": [1, 4, 7, 11, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "time": [1, 13, 14, 16, 19, 24, 25], "consum": [1, 13], "techniqu": [1, 3, 15], "becaus": [1, 14, 15, 16, 20], "requir": [1, 3, 14, 16], "varianc": [1, 4, 6, 10, 15, 16, 20, 21], "No": [1, 3, 15], "assumpt": [1, 3, 8], "residu": [1, 3, 7, 8, 11, 12, 15, 23], "condit": [1, 3], "predict": [1, 3, 8, 9, 11, 19], "For": [1, 3, 7, 8, 10, 14, 15], "advic": [1, 14], "preliminari": 1, "studi": [1, 14, 15, 16, 19, 24], "know": 1, "interest": [1, 4, 13, 14, 16], "rang": [1, 10, 13, 15, 16, 17, 19, 24, 25], "reduc": [1, 13, 16, 19, 24, 25], "linear": [1, 3, 7, 8, 11, 12, 15, 18, 26], "basi": [1, 3, 13, 17, 19], "constant": [1, 3, 15, 19, 20, 21], "covari": [1, 3, 13, 14, 15, 16, 19], "anisotrop": [1, 3], "exponenti": [1, 3, 19], "estim": [1, 3, 4, 5, 6, 10, 11, 14, 15, 20, 21], "mutli": 1, "start": [1, 3, 4, 13, 14, 15, 16, 17, 19, 24], "tnc": [1, 3, 19], "alwai": 1, "optim": [1, 13, 14, 15, 16, 19], "scale": [1, 14], "coeffici": [1, 5, 8, 10, 14, 15, 16, 20, 21], "q2": [1, 3, 8, 13, 14, 15, 16], "than": [1, 5, 6, 7, 10, 13, 14, 16, 20], "advanc": [1, 3, 8], "thank": [1, 3, 7, 8, 10, 14, 15], "dedic": [1, 3, 8, 14], "drawvalidationgraph": [1, 3, 8, 13, 19], "valid": [1, 3, 8, 14, 15, 16, 24], "metamodel": [1, 3, 8, 10, 14, 16], "getbasi": [1, 3], "trend": [1, 3], "other": [1, 3, 14, 19], "getcovariancemodel": [1, 3], "covariancemodel": [1, 3, 19], "getinitialstarts": [1, 3], "multi": [1, 3], "find": [1, 3], "getkrigingresult": [1, 3, 13], "krigingresult": [1, 3, 19], "getq2": [1, 3, 8, 19, 24], "analyt": [1, 3, 8], "dubrul": [1, 3], "1983": [1, 3], "filter": [1, 3, 8, 9, 15, 19, 21, 24, 25], "need": [1, 3, 8, 9, 11, 13], "Then": [1, 3, 8, 9, 12, 15, 16], "mc": [1, 3], "setbasi": [1, 3, 19], "setcovariancemodel": [1, 3, 19], "setinitialstarts": [1, 3, 19], "static": [2, 23], "handl": 2, "filtercensoreddata": [2, 23], "inputsampl": [2, 3, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 23], "sort": [2, 23, 25], "respect": [2, 4, 5, 6, 14, 23], "threshold": [2, 11, 13, 14, 15, 16, 17, 19, 22, 23, 24, 25], "inputsampleunc": [2, 23], "uncensor": [2, 11, 12, 15, 20, 23], "area": [2, 13, 23], "inputsamplenois": [2, 23], "noisi": [2, 23], "inputsamplesat": [2, 23], "satur": [2, 11, 23], "signalsunc": [2, 23], "three": [2, 23], "differ": [2, 7, 12, 23, 25], "whether": [2, 23], "thei": [2, 9, 23, 25], "belong": [2, 23], "outputsampl": [3, 7, 8, 9, 11, 12], "accord": 3, "moreov": [3, 8, 15], "user": [3, 8, 9, 15, 16, 27], "alreadi": [3, 4, 8, 13], "setkrigingresult": [3, 13], "normal": [3, 4, 8, 11, 15, 20, 21, 22, 23, 24, 25], "plimean": [4, 14, 26], "plivari": [4, 14, 26], "perturb": [4, 5, 6, 18, 26], "law": [4, 18, 26], "indic": [4, 5, 6, 10, 18], "upon": 4, "modif": 4, "densiti": [4, 14], "pdf": [4, 5, 6], "quantiti": 4, "failur": 4, "consid": [4, 20], "influenti": 4, "lead": 4, "broad": 4, "These": [4, 15, 16], "sensit": [4, 10, 26], "sole": 4, "been": [4, 5, 6, 10, 12, 17], "thu": 4, "limit": 4, "call": [4, 9, 17], "numer": 4, "implement": [4, 16], "come": 4, "from": [4, 5, 6, 9, 10, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26], "obtain": [4, 5, 6, 14], "closest": 4, "origin": [4, 5, 6], "sens": 4, "kullback": 4, "leibler": 4, "diverg": 4, "includ": 4, "shift": [4, 6, 14], "access": [4, 14], "through": 4, "deriv": 4, "allow": [4, 10, 16], "modifii": 4, "compar": [4, 14, 15], "equival": [4, 14, 22, 23], "same": [4, 5, 6, 14], "possibl": [4, 7, 14, 16], "helling": [4, 5, 6, 14], "distanc": [4, 5, 6, 14], "have": [4, 14, 16], "develop": [4, 10], "paul": 4, "lemaitr": 4, "lema\u00eetr": 4, "ekatarina": 4, "sergienko": 4, "aur\u00e9li": 4, "arnaud": 4, "nicola": 4, "bousquet": 4, "fabric": 4, "gamboa": 4, "et": 4, "al": 4, "reliabl": 4, "analysi": [4, 5, 6, 7, 10, 11, 12, 15, 18, 26], "2012": 4, "analys": 4, "de": 4, "sensibilit\u00e9": 4, "en": 4, "fiabilit\u00e9": 4, "structur": 4, "m\u00e9caniqu": 4, "ph": 4, "universit\u00e9": 4, "bordeaux": 4, "2014": 4, "fran\u00e7ai": 4, "computeconfidenceinterv": 4, "want": [4, 5, 6, 7, 16], "ci": 4, "list": [4, 5, 6, 9, 11, 15], "2d": [4, 5, 6, 14], "arrai": [4, 5, 6, 17, 25], "margin": [4, 5, 6, 14], "delta": [4, 5, 6, 14], "drawindic": [4, 5, 6, 14], "label": [4, 5, 6, 10], "drawmarginal1dpdf": [4, 14], "idelta": [4, 5, 6, 14], "showorigin": 4, "xmin": 4, "xmax": 4, "pointnumb": 4, "index": [4, 25, 26], "x_min": [4, 17], "mesh": 4, "x": [4, 5, 6], "axi": [4, 25], "quantil": [4, 7, 9, 15, 18, 26], "05": [4, 9, 15, 20, 21, 25], "x_max": [4, 17], "x_": 4, "end": 4, "n_point": 4, "distributionimplement": 4, "defaultpointnumb": 4, "resourcemap": 4, "getdeltasampl": 4, "appli": [4, 5, 6], "deltasampl": 4, "getgausskronrod": [4, 5, 6], "gauss": [4, 5, 6, 12], "kronrod": [4, 5, 6], "getindic": [4, 5, 6, 14], "pertub": 4, "getoriginaldelta": 4, "getperturbedprobabilityestim": [4, 14], "pfdelta": 4, "get": [4, 11, 13], "evalu": 4, "setgausskronrod": [4, 5, 6], "algo": [4, 5, 6], "gausskronrod": [4, 5, 6], "pli": [5, 6, 26], "krigingpod": [5, 6, 7, 10, 13, 14, 16, 19, 26], "adaptivesignalpod": [5, 6, 10, 13, 26], "polynomialchaospod": [5, 6, 7, 10, 14, 16, 24, 26], "1d": [5, 6], "new": [5, 6, 8, 13, 14, 19, 24], "sigma": [5, 14, 15, 20, 21], "sigmasc": [5, 14], "shiftingfor": 5, "variabl": [5, 6], "newmean": [5, 14], "standard": [5, 11, 14, 15, 20, 21], "deviat": [5, 14], "drawcontourindic": [5, 6, 14], "contour": [5, 6, 14], "specif": [5, 6, 15, 16], "idefect": [5, 6, 14], "3d": [5, 6], "depend": [5, 6, 12, 14], "getpliobject": [5, 6, 14], "more": [5, 6, 13, 14, 16], "less": [5, 6, 14, 19, 20, 24, 25], "1e": [5, 6, 14], "3": [5, 6, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "greater": [5, 6, 7, 10, 14, 16], "999": [5, 6, 14], "covscal": [6, 14], "newvari": 6, "regress": [7, 9, 11, 12, 15, 18, 26], "gaussian": [7, 11, 12, 15], "hypothesi": [7, 11, 12, 15, 20, 26], "binomi": [7, 12, 15, 22], "kernel": [7, 15, 25], "smooth": [7, 15], "polynomi": [7, 8, 10, 15, 18, 26], "chao": [7, 8, 10, 15, 18, 26], "deactiv": [7, 15], "setmethodact": [7, 15], "kei": 7, "printresult": [7, 15], "saveresult": [7, 11, 15, 20, 21], "savegraph": [7, 15], "specifi": [7, 15, 16], "drawgraph": [7, 15], "extens": [7, 15], "work": [7, 8, 11], "getkrigingpod": 7, "getlinearbinomialpod": 7, "univariatelinearmodelpod": [7, 22, 23, 26], "getlineargausspod": 7, "getlinearkernelsmoothingpod": 7, "getmethodact": [7, 15], "dictionnari": 7, "activ": [7, 14, 17], "activedict": 7, "dict": 7, "tell": 7, "getpolynomialchaospod": 7, "getquantileregressionpod": 7, "quantileregressionpod": [7, 25, 26], "getresult": [7, 11, 13, 15, 17, 20, 21], "9": [7, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "print": [7, 11, 14, 15, 16, 19, 22, 23, 24, 25], "termin": 7, "test": [7, 11, 15, 26], "csv": [7, 11, 15], "separ": [7, 11], "made": [7, 11], "tabul": [7, 11], "under": 8, "follow": [8, 11, 12, 14, 16, 22, 23], "lar": 8, "combin": [8, 14], "kfold": 8, "adaptivestrategi": [8, 24], "chosen": [8, 10, 15, 16], "fix": 8, "enumer": 8, "degre": [8, 24], "setpolynomialchaosresult": 8, "drawpolynomialchaosmodel": [8, 24], "getadaptivestrategi": 8, "strategi": [8, 24], "getcoefficientdistribut": 8, "dist": 8, "getdegre": 8, "getpolynomialchaosresult": 8, "functionalchaosresult": 8, "getprojectionstrategi": 8, "project": [8, 24], "projectionstrategi": [8, 24], "getr2": [8, 9, 11, 12, 20, 21, 22, 23, 24, 25], "r2": [8, 9, 11, 12, 14, 15, 16, 20, 21], "setadaptivestrategi": [8, 24], "setdegre": [8, 24], "chaosresult": 8, "setprojectionstrategi": [8, 24], "21": [9, 15, 16], "98": [9, 25], "setquantil": [9, 25], "bootstrap": [9, 12, 15, 22, 25], "also": [9, 13, 14, 15, 16, 19, 24, 25, 26], "drawlinearmodel": [9, 11, 20, 21, 25], "getquantil": [9, 25], "pseudo": 9, "n": [10, 11, 16, 20, 21, 22, 23, 24, 25], "gener": [10, 11], "sa": 10, "sobolindicesalgorithm": [10, 16], "count": [10, 14, 16], "1000": [10, 13, 16, 19, 24, 25], "aggreg": [10, 16, 26], "those": 10, "four": 10, "setsensitivitymethod": [10, 16], "saltelli": [10, 16], "getsensitivityresult": [10, 16], "proper": 10, "drawaggregatedindic": [10, 16], "drawfirstorderindic": [10, 16], "drawtotalorderindic": [10, 16], "total": [10, 16], "getsensitivitymethod": 10, "str": 10, "martinez": [10, 16], "jansen": [10, 16], "mauntzkucherenko": 10, "resdistfact": [11, 12, 22, 23], "distributionfactori": [11, 12], "normalfactori": [11, 12, 22, 23], "automat": 11, "univari": [11, 15, 26], "exampl": [11, 16, 17, 26], "import": [11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "ot": [11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "otpod": [11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 27], "randomgener": [11, 20, 21, 22, 23, 24, 25], "setse": [11, 20, 21, 22, 23, 24, 25], "defectdist": [11, 20, 21, 22, 23, 24, 25], "6": [11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "epsilon": [11, 20, 21, 22, 23, 24, 25], "getsampl": [11, 20, 21, 22, 23, 24, 25], "signalsinvboxcox": [11, 20, 21, 22, 23, 24, 25], "43": [11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "5": [11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "invboxcox": [11, 20, 21, 22, 23, 24, 25], "inverseboxcoxtransform": [11, 20, 21, 22, 23, 24, 25], "getintercept": [11, 20, 21], "intercept": [11, 15, 20, 21], "51037": 11, "getkolmogorovpvalu": [11, 20, 21], "kolmogorov": [11, 15, 20, 21], "p": [11, 15, 20, 21, 24], "835529": 11, "nois": 11, "60": [11, 13, 14, 20, 21, 23, 25], "1700": [11, 21, 23, 24, 25], "4": [11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "28758": 11, "11243": 11, "346827": 11, "885006": 11, "weibul": 11, "weibullminfactori": [11, 12], "476036": 11, "71764": 11, "were": [11, 13, 14], "drawresidu": [11, 20], "drawresidualsdistribut": [11, 20], "histogram": 11, "fit": [11, 15, 21], "drawresidualsqqplot": [11, 20], "qq": 11, "getandersondarlingpvalu": 11, "anderson": [11, 15, 20, 21], "darl": [11, 15, 20, 21], "pvalu": 11, "both": [11, 15, 19, 21], "getbreuschpaganpvalu": 11, "breusch": 11, "pagan": [11, 15, 20, 21], "getcramervonmisespvalu": 11, "cramer": [11, 15, 20, 21], "von": [11, 15, 20, 21], "mise": [11, 15, 20, 21], "getdurbinwatsonpvalu": 11, "durbin": [11, 15, 20, 21], "watson": [11, 15, 20, 21], "getharrisonmccabepvalu": 11, "harrison": [11, 15, 20, 21], "mccabe": [11, 15, 20, 21], "getinputsampl": 11, "so": [11, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "getnoisethreshold": 11, "threhold": 11, "exist": [11, 14], "getoutputsampl": 11, "getresidu": 11, "getresidualsdistribut": 11, "getsaturationthreshold": 11, "getslop": 11, "slope": [11, 15, 20, 21], "getstandarderror": 11, "error": [11, 15, 19, 20, 21, 24, 25], "stderr": 11, "getzeromeanpvalu": 11, "zero": [11, 15, 20, 21], "univariatelinearmodelanalysi": [12, 20, 21, 22, 23, 26], "prescrib": 12, "notic": 12, "second": [12, 14, 22], "beren": [12, 22], "kernelsmooth": [12, 22], "factori": 12, "relev": [13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "modul": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26], "numpi": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "np": [13, 14, 17, 25], "warn": [13, 14, 15, 16, 17, 19, 20, 24, 25], "filterwarn": [13, 17], "ignor": [13, 17], "notebook": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "try": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "inlin": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "except": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "pass": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "calcul": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "home": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "duma": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "anaconda": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "lib": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "python3": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "site": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "packag": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26], "sklearn": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "ensembl": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "weight_boost": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "py": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "29": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "deprecationwarn": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "core": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "umath_test": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "intern": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "should": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "remov": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "futur": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "releas": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "inner1d": [13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25], "59626812e": [13, 14, 15, 16, 17, 19], "00": [13, 14, 15, 16, 17, 19, 22, 24, 25], "7": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "46143339e": [13, 14, 15, 16, 17, 19], "02": [13, 14, 15, 16, 17, 19, 20], "02231538e": [13, 14, 15, 16, 17, 19], "8": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "60042277e": [13, 14, 15, 16, 17, 19], "01": [13, 14, 15, 16, 17, 19], "14315790e": [13, 14, 15, 16, 17, 19], "20801346e": [13, 14, 15, 16, 17, 19], "05874908e": [13, 14, 15, 16, 17, 19], "65757364e": [13, 14, 15, 16, 17, 19], "76735111e": [13, 14, 15, 16, 17, 19], "72414824e": [13, 14, 15, 16, 17, 19], "05730385e": [13, 14, 15, 16, 17, 19], "76058433e": [13, 14, 15, 16, 17, 19], "82811977e": [13, 14, 15, 16, 17, 19], "49997658e": [13, 14, 15, 16, 17, 19], "06954641e": [13, 14, 15, 16, 17, 19], "54461380e": [13, 14, 15, 16, 17, 19], "48961094e": [13, 14, 15, 16, 17, 19], "74562922e": [13, 14, 15, 16, 17, 19], "04943946e": [13, 14, 15, 16, 17, 19], "19483646e": [13, 14, 15, 16, 17, 19], "05605334e": [13, 14, 15, 16, 17, 19], "87599783e": [13, 14, 15, 16, 17, 19], "06520409e": [13, 14, 15, 16, 17, 19], "39024904e": [13, 14, 15, 16, 17, 19], "69679328e": [13, 14, 15, 16, 17, 19], "74915877e": [13, 14, 15, 16, 17, 19], "04099514e": [13, 14, 15, 16, 17, 19], "50990466e": [13, 14, 15, 16, 17, 19], "10193991e": [13, 14, 15, 16, 17, 19], "35520544e": [13, 14, 15, 16, 17, 19], "02502536e": [13, 14, 15, 16, 17, 19], "51492592e": [13, 14, 15, 16, 17, 19], "04791970e": [13, 14, 15, 16, 17, 19], "38565932e": [13, 14, 15, 16, 17, 19], "01906882e": [13, 14, 15, 16, 17, 19], "07875350e": [13, 14, 15, 16, 17, 19], "66238956e": [13, 14, 15, 16, 17, 19], "49901237e": [13, 14, 15, 16, 17, 19], "02427200e": [13, 14, 15, 16, 17, 19], "45661275e": [13, 14, 15, 16, 17, 19], "86634219e": [13, 14, 15, 16, 17, 19], "04693570e": [13, 14, 15, 16, 17, 19], "08199374e": [13, 14, 15, 16, 17, 19], "05104730e": [13, 14, 15, 16, 17, 19], "13519347e": [13, 14, 15, 16, 17, 19], "45225831e": [13, 14, 15, 16, 17, 19], "01900124e": [13, 14, 15, 16, 17, 19], "10117047e": [13, 14, 15, 16, 17, 19], "92541940e": [13, 14, 15, 16, 17, 19], "87692335e": [13, 14, 15, 16, 17, 19], "91868726e": [13, 14, 15, 16, 17, 19], "32302238e": [13, 14, 15, 16, 17, 19], "70722074e": [13, 14, 15, 16, 17, 19], "51799251e": [13, 14, 15, 16, 17, 19], "10608515e": [13, 14, 15, 16, 17, 19], "30181002e": [13, 14, 15, 16, 17, 19], "29040932e": [13, 14, 15, 16, 17, 19], "75426222e": [13, 14, 15, 16, 17, 19], "75678838e": [13, 14, 15, 16, 17, 19], "28186756e": [13, 14, 15, 16, 17, 19], "89291400e": [13, 14, 15, 16, 17, 19], "34997929e": [13, 14, 15, 16, 17, 19], "07669835e": [13, 14, 15, 16, 17, 19], "38926138e": [13, 14, 15, 16, 17, 19], "44653744e": [13, 14, 15, 16, 17, 19], "63175936e": [13, 14, 15, 16, 17, 19], "06979154e": [13, 14, 15, 16, 17, 19], "19109415e": [13, 14, 15, 16, 17, 19], "99977452e": [13, 14, 15, 16, 17, 19], "80430585e": [13, 14, 15, 16, 17, 19], "01850716e": [13, 14, 15, 16, 17, 19], "61988190e": [13, 14, 15, 16, 17, 19], "95491570e": [13, 14, 15, 16, 17, 19], "09302814e": [13, 14, 15, 16, 17, 19], "03687664e": [13, 14, 15, 16, 17, 19], "09981789e": [13, 14, 15, 16, 17, 19], "16424368e": [13, 14, 15, 16, 17, 19], "69026464e": [13, 14, 15, 16, 17, 19], "06673711e": [13, 14, 15, 16, 17, 19], "88708887e": [13, 14, 15, 16, 17, 19], "30491620e": [13, 14, 15, 16, 17, 19], "53802273e": [13, 14, 15, 16, 17, 19], "06254792e": [13, 14, 15, 16, 17, 19], "03856837e": [13, 14, 15, 16, 17, 19], "92809155e": [13, 14, 15, 16, 17, 19], "20616369e": [13, 14, 15, 16, 17, 19], "00700410e": [13, 14, 15, 16, 17, 19], "02512744e": [13, 14, 15, 16, 17, 19], "68373805e": [13, 14, 15, 16, 17, 19], "26028935e": [13, 14, 15, 16, 17, 19], "05152117e": [13, 14, 15, 16, 17, 19], "81271603e": [13, 14, 15, 16, 17, 19], "32381954e": [13, 14, 15, 16, 17, 19], "33013582e": [13, 14, 15, 16, 17, 19], "90522007e": [13, 14, 15, 16, 17, 19], "56015973e": [13, 14, 15, 16, 17, 19], "35455857e": [13, 14, 15, 16, 17, 19], "23814619e": [13, 14, 15, 16, 17, 19], "01810539e": [13, 14, 15, 16, 17, 19], "10769534e": [13, 14, 15, 16, 17, 19], "37": [13, 14, 15, 16, 17, 19], "305445": [13, 14, 15, 16, 17, 19], "35": [13, 14, 15, 16, 17, 19], "466919": [13, 14, 15, 16, 17, 19], "187991": [13, 14, 15, 16, 17, 19], "45": [13, 14, 15, 16, 17, 19, 20], "305165": [13, 14, 15, 16, 17, 19], "40": [13, 14, 15, 16, 17, 19], "121222": [13, 14, 15, 16, 17, 19], "44": [13, 14, 15, 16, 17, 19], "609524": [13, 14, 15, 16, 17, 19], "14552": [13, 14, 15, 16, 17, 19], "80595": [13, 14, 15, 16, 17, 19], "414039": [13, 14, 15, 16, 17, 19], "39": [13, 14, 15, 16, 17, 19, 25], "851778": [13, 14, 15, 16, 17, 19], "42": [13, 14, 15, 16, 17, 19], "046049": [13, 14, 15, 16, 17, 19], "34": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25], "73469": [13, 14, 15, 16, 17, 19], "339349": [13, 14, 15, 16, 17, 19], "384559": [13, 14, 15, 16, 17, 19], "38": [13, 14, 15, 16, 17, 19, 25], "718623": [13, 14, 15, 16, 17, 19], "46": [13, 14, 15, 16, 17, 19], "189709": [13, 14, 15, 16, 17, 19], "36": [13, 14, 15, 16, 17, 19, 21], "155737": [13, 14, 15, 16, 17, 19], "31": [13, 14, 15, 16, 17, 19, 20], "768369": [13, 14, 15, 16, 17, 19], "384313": [13, 14, 15, 16, 17, 19], "47": [13, 14, 15, 16, 17, 19, 20], "914584": [13, 14, 15, 16, 17, 19], "758537": [13, 14, 15, 16, 17, 19], "564428": [13, 14, 15, 16, 17, 19], "698493": [13, 14, 15, 16, 17, 19], "636588": [13, 14, 15, 16, 17, 19], "643948": [13, 14, 15, 16, 17, 19], "constantbasisfactori": [13, 17, 19], "covmodel": [13, 17], "squaredexponenti": [13, 17], "03148": [13, 17], "13": [13, 14, 16, 17, 19, 20, 22, 23, 24], "9442": [13, 17], "15": [13, 14, 15, 16, 17, 19, 20, 21, 22, 24], "1697": [13, 17], "krigingmodel": [13, 17], "krigingalgorithm": [13, 17], "getmetamodel": [13, 17], "lowest": 13, "As": [13, 15, 16], "effici": 13, "most": 13, "part": 13, "To": 13, "do": 13, "initialpod": 13, "complet": [13, 14, 15, 16, 19, 24], "gt": [13, 14, 15, 16, 17, 19, 20, 21, 24], "8851": 13, "per": [13, 14, 15, 16, 19, 24], "done": [13, 14, 15, 16, 17, 19, 22, 24, 25], "show": [13, 17], "costli": 13, "niter": 13, "adaptivepod": [13, 17], "we": [13, 14, 16, 19, 24], "critert": 13, "500": [13, 16, 19, 24], "5000": [13, 19, 24], "multipl": 13, "without": [13, 14, 16], "intersect": 13, "adaptivesignalpod_i": 13, "0696": 13, "60781": 13, "0672393": 13, "04482": 13, "51": [13, 20, 21], "7969": 13, "updat": [13, 16], "9859": 13, "0500": 13, "45312": 13, "0323814": 13, "03339": 13, "61": [13, 15], "4782": 13, "9775": 13, "0416": 13, "6875": 13, "0610879": 13, "04298": 13, "55362": 13, "9602": 13, "0343": 13, "275": 13, "0578072": 13, "06364": 13, "75": [13, 15], "6775": 13, "9745": 13, "0273": 13, "3125": 13, "0414035": 13, "03708": 13, "1874": 13, "9720": 13, "last": 13, "fid": 13, "again": 13, "befor": [13, 15], "krigingr": 13, "inputfin": 13, "outputfin": 13, "finalpod": 13, "known": [13, 19], "accur": [14, 16, 19, 24, 25], "200": [14, 15, 16, 22, 23, 24, 25], "50": [14, 15, 16, 17, 19], "0000": [14, 15, 16, 19], "podkrig": [14, 16, 19], "podpolychao": [14, 16, 19, 24], "459": [14, 15, 19, 20, 21, 22, 23, 24, 25], "userwarn": [14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "non": [14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26], "gui": [14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "backend": [14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "cannot": [14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "chaospod": [14, 16], "9999": [14, 15, 16], "9987": [14, 15, 16], "podchao": [14, 16], "howev": [14, 19, 24, 25], "two": 14, "equal": [14, 16], "linspac": 14, "root": [14, 15, 16, 19, 20, 24, 25], "14": [14, 16, 19, 20, 22, 23, 24], "23": [14, 15, 20], "32": 14, "41": 14, "69": [14, 15, 21], "too": [14, 19, 24], "small": 14, "big": 14, "you": [14, 20], "choos": 14, "x1": [14, 16], "variable2": [14, 16], "param3": [14, 16], "10": [14, 15, 16, 19, 20, 22, 23, 24, 25], "legend": 14, "loc": 14, "center": 14, "11": [14, 16, 19, 20, 22, 23, 24, 25], "abov": [14, 16], "nan": 14, "larg": [14, 19, 24], "12": [14, 16, 19, 20, 22, 23, 24], "20484953": 14, "46784362": 14, "23294571": 14, "14515493": 14, "1235924": 14, "08908541": 14, "05218406": 14, "23231505": 14, "23064471": 14, "12821335": 14, "08116785": 14, "06974791": 14, "05172207": 14, "02538093": 14, "24367882": 14, "06513973": 14, "03950675": 14, "02547104": 14, "02179865": 14, "01680401": 14, "00708865": 14, "20573065": 14, "05971306": 14, "03811938": 14, "02472888": 14, "02087097": 14, "01672381": 14, "00604371": 14, "64276482": 14, "17388364": 14, "11452088": 14, "07408223": 14, "06100422": 14, "05098839": 14, "01555555": 14, "10647782": 14, "27723651": 14, "18990485": 14, "12399895": 14, "09843456": 14, "08696171": 14, "0226057": 14, "10336807e": 14, "32945706e": 14, "48287972e": 14, "51182636e": 14, "28213346e": 14, "51075386e": 14, "03": [14, 15, 21], "09833716e": 14, "95067466e": 14, "13429231e": 14, "50473569e": 14, "81193815e": 14, "45062730e": 14, "29172764e": 14, "14520879e": 14, "04535446e": 14, "73347022e": 14, "89904848e": 14, "63723691e": 14, "3rd": 14, "plimeandefect3": 14, "58159571": 14, "13891125": 14, "20724209": 14, "4005364": 14, "16568551": 14, "20637717": 14, "26164943": 14, "19143028": 14, "20490247": 14, "15302838": 14, "21607549": 14, "20270131": 14, "07134159": 14, "23935487": 14, "19959424": 14, "01858485": 14, "26042852": 14, "19508161": 14, "78": [14, 20, 21], "16": [14, 16, 17, 19, 21, 22, 24], "coefscal": 14, "newcov": 14, "cov": 14, "increas": 14, "variat": 14, "17": [14, 16, 19, 22, 24], "coef": 14, "plivar": 14, "py3": 14, "egg": 14, "_pli": 14, "689": 14, "runtimewarn": [14, 25], "overflow": 14, "encount": [14, 25], "exp": 14, "With": [14, 16], "see": [14, 16], "18": [14, 16, 19, 21, 22, 24, 25], "19": [14, 16, 21, 24], "take": [15, 16, 22, 24, 25], "podsummari": [15, 26], "25": [15, 20], "main": 15, "modifi": [15, 16], "quantileregress": 15, "info": [15, 19, 24, 25], "lineargauss": 15, "linearbinomi": 15, "linearkernelsmooth": 15, "polynomialchao": 15, "well": [15, 26], "Not": [15, 20], "71": [15, 21], "07": [15, 20, 21], "58": 15, "85": [15, 25], "qualiti": [15, 19, 20, 21, 24], "76": [15, 20], "mu": [15, 20, 21], "7053e": 15, "2441": 15, "42417e": 15, "99": [15, 19, 20, 22, 24, 25], "83": [15, 17, 21], "homoskedast": [15, 21], "breush": [15, 20, 21], "09": [15, 20, 21], "autocorrel": [15, 20, 21], "a90": [15, 19, 22, 23, 24, 25], "88": 15, "81": 15, "66": [15, 17, 20], "63": [15, 21], "anoth": [15, 19, 24, 25], "a80": 15, "90": 15, "67": [15, 17, 21], "64": 15, "68": 15, "52": 15, "57": [15, 24], "59": 15, "text": 15, "here": 15, "solut": 15, "len": 15, "403": 16, "sobolindic": [16, 26], "some": 16, "null": 16, "13827123": 16, "229949": 16, "32162677": 16, "41330454": 16, "5049823": 16, "59666007": 16, "68833784": 16, "xi": 16, "its": 16, "own": 16, "besid": 16, "attribut": [16, 19, 24, 25], "firstordersobol": 16, "totalordersobol": 16, "back": 16, "sobol_result": 16, "format": [16, 19, 22, 23, 24, 25], "getaggregatedfirstorderindic": 16, "getaggregatedtotalorderindic": 16, "nfirst": 16, "getfirstorderindicesinterv": 16, "ntotal": 16, "gettotalorderindicesinterv": 16, "765142": 16, "0389492": 16, "009437": 16, "967498": 16, "241669": 16, "00158793": 16, "721425": 16, "808858": 16, "00216437": 16, "0800628": 16, "0309342": 16, "0498082": 16, "927734": 16, "00726": 16, "222134": 16, "261204": 16, "000178732": 16, "0033546": 16, "retreiv": 16, "among": 16, "4th": 16, "ouput": 16, "nindic": 16, "3f": [16, 19, 22, 23, 24, 25], "getfirstorderindic": 16, "413": 16, "797912": 16, "0111368": 16, "00456263": 16, "gettotalorderindic": 16, "758827": 16, "0190164": 16, "0574944": 16, "00541": 16, "209723": 16, "00412599": 16, "mauntz": 16, "kucherenko": 16, "817988": 16, "044531": 16, "0120991": 16, "00076": 16, "208898": 16, "000234818": 16, "sobol2": 16, "78001561": 16, "sobol_result2": 16, "755025": 16, "0233727": 16, "00412462": 16, "992021": 16, "214846": 16, "0154186": 16, "712503": 16, "797546": 16, "0175281": 16, "0642735": 16, "0436971": 16, "0354478": 16, "952575": 16, "03147": 16, "196013": 16, "233679": 16, "010796": 16, "0200413": 16, "o": 17, "execut": 17, "make_hm": 17, "myhm": 17, "base_dir": 17, "getcwd": 17, "while": 17, "split": 17, "dirnam": 17, "filenam": 17, "sep": 17, "doc": 17, "sourc": 17, "exec": 17, "open": 17, "read": 17, "load": 17, "33": [17, 20], "lt": [17, 25], "n_ini": 17, "t": 17, "n_more": 17, "30": 17, "hitmiss_algo": 17, "res_algo": 17, "adaptivehitmisspod": [17, 26], "rf": 17, "improv": 17, "loop": 17, "insid": 17, "summari": [18, 26], "actual": [19, 24, 25], "diplai": [19, 24, 25], "after": [19, 20, 24], "rais": [19, 24], "wrong": [19, 24], "valueerror": [19, 24], "e": [19, 24], "9549157": 19, "0152854": 19, "07565509": 19, "13602479": 19, "19639448": 19, "25676418": 19, "31713387": 19, "37750357": 19, "43787326": 19, "49824296": 19, "55861265": 19, "61898235": 19, "67935204": 19, "73972174": 19, "80009143": 19, "86046113": 19, "92083082": 19, "98120052": 19, "04157021": 19, "10193991": 19, "9550": 19, "1019": 19, "good": [19, 24], "search": [19, 26], "best": 19, "2000": [19, 24], "62381": 19, "6325": 19, "a95": [19, 22, 24, 25], "66746": 19, "67602": 19, "podmodelcl95": [19, 22, 23, 24, 25], "148": 19, "135": 19, "check": [19, 24], "4f": [19, 24], "leav": 19, "out": 19, "podnew": [19, 24], "absolut": 19, "covcol": 19, "covariancemodelcollect": 19, "absoluteexponenti": 19, "productcovariancemodel": 19, "9660": 19, "63562": 19, "76128": 19, "123456": [20, 21, 22, 23, 24, 25], "invers": [20, 21, 22, 23, 24, 25], "fail": 20, "mai": [20, 22], "604": 20, "758": 20, "780469": 20, "803087": 20, "3606": 20, "04": 20, "291": 20, "755": 20, "453": 20, "91": 20, "3222": 20, "3989": 20, "57545e": 20, "289": 20, "998": 20, "22": 20, "55": 20, "72": 20, "80": 20, "27": 20, "89": [20, 25], "42109e": 20, "32901": 20, "06": [20, 21], "65": 20, "97": [20, 21], "linearmodel": 20, "ep": 20, "set_ylim": 20, "ymax": 20, "savefig": 20, "residualsdistribut": 20, "boxcoxlikelihood": 20, "777": 21, "1614": 21, "869115": 21, "860722": 21, "477505": 21, "505919": 21, "94": 21, "87": 21, "86": 21, "65671e": 21, "968046": 21, "0237411": 21, "998599": 21, "48": 21, "08": 21, "linearmodeluncensor": 21, "linearmodelcensor": 21, "keyword": [22, 23], "argument": [22, 23], "podgauss": [22, 23], "895": 22, "303982": 22, "317157": 22, "323048": 22, "343536": 22, "886": 22, "834": 22, "podbinomi": 22, "298739": 22, "329606": 22, "few": [22, 24, 25], "podk": 22, "308381": 22, "330921": 22, "861": 23, "30373": 23, "317848": 23, "887": [23, 25], "830": 23, "podgausscensor": 23, "datahandl": [23, 26], "__doc__": 23, "defectsfilt": 23, "signalsfilt": 23, "podfiltereddata": 23, "295976": 23, "310948": 23, "podgaussfilt": 23, "19288542": 24, "21420345": 24, "23552149": 24, "25683952": 24, "27815756": 24, "29947559": 24, "32079363": 24, "34211166": 24, "3634297": 24, "38474773": 24, "40606577": 24, "4273838": 24, "44870184": 24, "47001987": 24, "49133791": 24, "51265594": 24, "53397398": 24, "55529201": 24, "57661005": 24, "59792808": 24, "1929": 24, "5979": 24, "minut": [24, 25], "8947": 24, "8914": 24, "307344": 24, "314406": 24, "328888": 24, "335715": 24, "871": 24, "841": 24, "polycol": 24, "hermitefactori": 24, "enumeratefunct": 24, "linearenumeratefunct": 24, "multivariatebasi": 24, "orthogonalproductpolynomialfactori": 24, "indexmax": 24, "getstratacumulatedcardin": 24, "fixedstrategi": 24, "leastsquaresstrategi": 24, "304772": 24, "315494": 24, "0965": 25, "143": 25, "1895": 25, "236": 25, "2825": 25, "329": 25, "3755": 25, "422": 25, "4685": 25, "515": 25, "5615": 25, "608": 25, "6545": 25, "701": 25, "7475": 25, "794": 25, "8405": 25, "9335": 25, "due": 25, "t0": 25, "2f": 25, "": 25, "scipi": 25, "stat": 25, "1706": 25, "futurewarn": 25, "tupl": 25, "multidimension": 25, "deprec": 25, "arr": 25, "seq": 25, "instead": 25, "interpret": 25, "weight": 25, "sumval": 25, "statsmodel": 25, "quantile_regress": 25, "237": 25, "invalid": 25, "less_equ": 25, "epa": 25, "lambda": 25, "u": 25, "ab": 25, "193": 25, "iterationlimitwarn": 25, "300": 25, "reach": 25, "226": 25, "podsimulsize100": 25, "26": 25, "298115": 25, "327459": 25, "331931": 25, "373163": 25, "899": 25, "833": 25, "675": 25, "656": 25, "podquantreg": 25, "destruct": 26, "parametr": 26, "directli": 26, "api": 26, "tool": 26, "page": 26, "manual": 27, "python": 27, "bind": 27, "librari": 27}, "objects": {"otpod": [[0, 0, 1, "", "AdaptiveHitMissPOD"], [1, 0, 1, "", "AdaptiveSignalPOD"], [2, 0, 1, "", "DataHandling"], [3, 0, 1, "", "KrigingPOD"], [4, 0, 1, "", "PLI"], [5, 0, 1, "", "PLIMean"], [6, 0, 1, "", "PLIVariance"], [7, 0, 1, "", "PODSummary"], [8, 0, 1, "", "PolynomialChaosPOD"], [9, 0, 1, "", "QuantileRegressionPOD"], [10, 0, 1, "", "SobolIndices"], [11, 0, 1, "", "UnivariateLinearModelAnalysis"], [12, 0, 1, "", "UnivariateLinearModelPOD"]], "otpod.AdaptiveHitMissPOD": [[0, 1, 1, "", "computeDetectionSize"], [0, 1, 1, "", "drawBoxCoxLikelihood"], [0, 1, 1, "", "drawPOD"], [0, 1, 1, "", "getBoxCoxParameter"], [0, 1, 1, "", "getCandidateSize"], [0, 1, 1, "", "getClassifier"], [0, 1, 1, "", "getClassifierParameters"], [0, 1, 1, "", "getClassifierType"], [0, 1, 1, "", "getConfusionMatrix"], [0, 1, 1, "", "getDefectSizes"], [0, 1, 1, "", "getDistribution"], [0, 1, 1, "", "getGraphActive"], [0, 1, 1, "", "getInputDOE"], [0, 1, 1, "", "getOutputDOE"], [0, 1, 1, "", "getPMax"], [0, 1, 1, "", "getPMin"], [0, 1, 1, "", "getPODCLModel"], [0, 1, 1, "", "getPODModel"], [0, 1, 1, "", "getSamplingSize"], [0, 1, 1, "", "getSimulationSize"], [0, 1, 1, "", "getVerbose"], [0, 1, 1, "", "run"], [0, 1, 1, "", "setCandidateSize"], [0, 1, 1, "", "setClassifierParameters"], [0, 1, 1, "", "setClassifierType"], [0, 1, 1, "", "setDefectSizes"], [0, 1, 1, "", "setDistribution"], [0, 1, 1, "", "setGraphActive"], [0, 1, 1, "", "setPMax"], [0, 1, 1, "", "setPMin"], [0, 1, 1, "", "setSamplingSize"], [0, 1, 1, "", "setSimulationSize"], [0, 1, 1, "", "setVerbose"]], "otpod.AdaptiveSignalPOD": [[1, 1, 1, "", "computeDetectionSize"], [1, 1, 1, "", "drawBoxCoxLikelihood"], [1, 1, 1, "", "drawPOD"], [1, 1, 1, "", "drawValidationGraph"], [1, 1, 1, "", "getBasis"], [1, 1, 1, "", "getBoxCoxParameter"], [1, 1, 1, "", "getCandidateSize"], [1, 1, 1, "", "getCovarianceModel"], [1, 1, 1, "", "getDefectSizes"], [1, 1, 1, "", "getDistribution"], [1, 1, 1, "", "getGraphActive"], [1, 1, 1, "", "getInitialStartSize"], [1, 1, 1, "", "getInputDOE"], [1, 1, 1, "", "getKrigingResult"], [1, 1, 1, "", "getOutputDOE"], [1, 1, 1, "", "getPODCLModel"], [1, 1, 1, "", "getPODModel"], [1, 1, 1, "", "getQ2"], [1, 1, 1, "", "getSamplingSize"], [1, 1, 1, "", "getSimulationSize"], [1, 1, 1, "", "getVerbose"], [1, 1, 1, "", "run"], [1, 1, 1, "", "setBasis"], [1, 1, 1, "", "setCandidateSize"], [1, 1, 1, "", "setCovarianceModel"], [1, 1, 1, "", "setDefectSizes"], [1, 1, 1, "", "setDistribution"], [1, 1, 1, "", "setGraphActive"], [1, 1, 1, "", "setInitialStartSize"], [1, 1, 1, "", "setSamplingSize"], [1, 1, 1, "", "setSimulationSize"], [1, 1, 1, "", "setVerbose"]], "otpod.DataHandling": [[2, 1, 1, "", "filterCensoredData"]], "otpod.KrigingPOD": [[3, 1, 1, "", "computeDetectionSize"], [3, 1, 1, "", "drawBoxCoxLikelihood"], [3, 1, 1, "", "drawPOD"], [3, 1, 1, "", "drawValidationGraph"], [3, 1, 1, "", "getBasis"], [3, 1, 1, "", "getBoxCoxParameter"], [3, 1, 1, "", "getCovarianceModel"], [3, 1, 1, "", "getDefectSizes"], [3, 1, 1, "", "getDistribution"], [3, 1, 1, "", "getInitialStartSize"], [3, 1, 1, "", "getKrigingResult"], [3, 1, 1, "", "getPODCLModel"], [3, 1, 1, "", "getPODModel"], [3, 1, 1, "", "getQ2"], [3, 1, 1, "", "getSamplingSize"], [3, 1, 1, "", "getSimulationSize"], [3, 1, 1, "", "getVerbose"], [3, 1, 1, "", "run"], [3, 1, 1, "", "setBasis"], [3, 1, 1, "", "setCovarianceModel"], [3, 1, 1, "", "setDefectSizes"], [3, 1, 1, "", "setDistribution"], [3, 1, 1, "", "setInitialStartSize"], [3, 1, 1, "", "setKrigingResult"], [3, 1, 1, "", "setSamplingSize"], [3, 1, 1, "", "setSimulationSize"], [3, 1, 1, "", "setVerbose"]], "otpod.PLI": [[4, 1, 1, "", "computeConfidenceInterval"], [4, 1, 1, "", "drawIndices"], [4, 1, 1, "", "drawMarginal1DPDF"], [4, 1, 1, "", "getDeltaSample"], [4, 1, 1, "", "getGaussKronrod"], [4, 1, 1, "", "getIndices"], [4, 1, 1, "", "getOriginalDelta"], [4, 1, 1, "", "getPerturbedProbabilityEstimate"], [4, 1, 1, "", "run"], [4, 1, 1, "", "setGaussKronrod"]], "otpod.PLIMean": [[5, 1, 1, "", "drawContourIndices"], [5, 1, 1, "", "drawIndices"], [5, 1, 1, "", "getDefectSizes"], [5, 1, 1, "", "getDistribution"], [5, 1, 1, "", "getGaussKronrod"], [5, 1, 1, "", "getIndices"], [5, 1, 1, "", "getPLIObject"], [5, 1, 1, "", "getSamplingSize"], [5, 1, 1, "", "run"], [5, 1, 1, "", "setDefectSizes"], [5, 1, 1, "", "setDistribution"], [5, 1, 1, "", "setGaussKronrod"], [5, 1, 1, "", "setSamplingSize"]], "otpod.PLIVariance": [[6, 1, 1, "", "drawContourIndices"], [6, 1, 1, "", "drawIndices"], [6, 1, 1, "", "getDefectSizes"], [6, 1, 1, "", "getDistribution"], [6, 1, 1, "", "getGaussKronrod"], [6, 1, 1, "", "getIndices"], [6, 1, 1, "", "getPLIObject"], [6, 1, 1, "", "getSamplingSize"], [6, 1, 1, "", "run"], [6, 1, 1, "", "setDefectSizes"], [6, 1, 1, "", "setDistribution"], [6, 1, 1, "", "setGaussKronrod"], [6, 1, 1, "", "setSamplingSize"]], "otpod.PODSummary": [[7, 1, 1, "", "drawGraphs"], [7, 1, 1, "", "getKrigingPOD"], [7, 1, 1, "", "getLinearBinomialPOD"], [7, 1, 1, "", "getLinearGaussPOD"], [7, 1, 1, "", "getLinearKernelSmoothingPOD"], [7, 1, 1, "", "getMethodActive"], [7, 1, 1, "", "getPolynomialChaosPOD"], [7, 1, 1, "", "getQuantileRegressionPOD"], [7, 1, 1, "", "getResults"], [7, 1, 1, "", "getSamplingSize"], [7, 1, 1, "", "getSimulationSize"], [7, 1, 1, "", "getVerbose"], [7, 1, 1, "", "run"], [7, 1, 1, "", "saveResults"], [7, 1, 1, "", "setMethodActive"], [7, 1, 1, "", "setSamplingSize"], [7, 1, 1, "", "setSimulationSize"], [7, 1, 1, "", "setVerbose"]], "otpod.PolynomialChaosPOD": [[8, 1, 1, "", "computeDetectionSize"], [8, 1, 1, "", "drawBoxCoxLikelihood"], [8, 1, 1, "", "drawPOD"], [8, 1, 1, "", "drawPolynomialChaosModel"], [8, 1, 1, "", "drawValidationGraph"], [8, 1, 1, "", "getAdaptiveStrategy"], [8, 1, 1, "", "getBoxCoxParameter"], [8, 1, 1, "", "getCoefficientDistribution"], [8, 1, 1, "", "getDefectSizes"], [8, 1, 1, "", "getDegree"], [8, 1, 1, "", "getDistribution"], [8, 1, 1, "", "getPODCLModel"], [8, 1, 1, "", "getPODModel"], [8, 1, 1, "", "getPolynomialChaosResult"], [8, 1, 1, "", "getProjectionStrategy"], [8, 1, 1, "", "getQ2"], [8, 1, 1, "", "getR2"], [8, 1, 1, "", "getSamplingSize"], [8, 1, 1, "", "getSimulationSize"], [8, 1, 1, "", "getVerbose"], [8, 1, 1, "", "run"], [8, 1, 1, "", "setAdaptiveStrategy"], [8, 1, 1, "", "setDefectSizes"], [8, 1, 1, "", "setDegree"], [8, 1, 1, "", "setDistribution"], [8, 1, 1, "", "setPolynomialChaosResult"], [8, 1, 1, "", "setProjectionStrategy"], [8, 1, 1, "", "setSamplingSize"], [8, 1, 1, "", "setSimulationSize"], [8, 1, 1, "", "setVerbose"]], "otpod.QuantileRegressionPOD": [[9, 1, 1, "", "computeDetectionSize"], [9, 1, 1, "", "drawBoxCoxLikelihood"], [9, 1, 1, "", "drawLinearModel"], [9, 1, 1, "", "drawPOD"], [9, 1, 1, "", "getBoxCoxParameter"], [9, 1, 1, "", "getPODCLModel"], [9, 1, 1, "", "getPODModel"], [9, 1, 1, "", "getQuantile"], [9, 1, 1, "", "getR2"], [9, 1, 1, "", "getSimulationSize"], [9, 1, 1, "", "getVerbose"], [9, 1, 1, "", "run"], [9, 1, 1, "", "setQuantile"], [9, 1, 1, "", "setSimulationSize"], [9, 1, 1, "", "setVerbose"]], "otpod.SobolIndices": [[10, 1, 1, "", "drawAggregatedIndices"], [10, 1, 1, "", "drawFirstOrderIndices"], [10, 1, 1, "", "drawTotalOrderIndices"], [10, 1, 1, "", "getDefectSizes"], [10, 1, 1, "", "getDistribution"], [10, 1, 1, "", "getSensitivityMethod"], [10, 1, 1, "", "getSensitivityResult"], [10, 1, 1, "", "getSimulationSize"], [10, 1, 1, "", "run"], [10, 1, 1, "", "setDefectSizes"], [10, 1, 1, "", "setDistribution"], [10, 1, 1, "", "setSensitivityMethod"], [10, 1, 1, "", "setSimulationSize"]], "otpod.UnivariateLinearModelAnalysis": [[11, 1, 1, "", "drawBoxCoxLikelihood"], [11, 1, 1, "", "drawLinearModel"], [11, 1, 1, "", "drawResiduals"], [11, 1, 1, "", "drawResidualsDistribution"], [11, 1, 1, "", "drawResidualsQQplot"], [11, 1, 1, "", "getAndersonDarlingPValue"], [11, 1, 1, "", "getBoxCoxParameter"], [11, 1, 1, "", "getBreuschPaganPValue"], [11, 1, 1, "", "getCramerVonMisesPValue"], [11, 1, 1, "", "getDurbinWatsonPValue"], [11, 1, 1, "", "getHarrisonMcCabePValue"], [11, 1, 1, "", "getInputSample"], [11, 1, 1, "", "getIntercept"], [11, 1, 1, "", "getKolmogorovPValue"], [11, 1, 1, "", "getNoiseThreshold"], [11, 1, 1, "", "getOutputSample"], [11, 1, 1, "", "getR2"], [11, 1, 1, "", "getResiduals"], [11, 1, 1, "", "getResidualsDistribution"], [11, 1, 1, "", "getResults"], [11, 1, 1, "", "getSaturationThreshold"], [11, 1, 1, "", "getSlope"], [11, 1, 1, "", "getStandardError"], [11, 1, 1, "", "getZeroMeanPValue"], [11, 1, 1, "", "saveResults"]], "otpod.UnivariateLinearModelPOD": [[12, 1, 1, "", "computeDetectionSize"], [12, 1, 1, "", "drawBoxCoxLikelihood"], [12, 1, 1, "", "drawPOD"], [12, 1, 1, "", "getBoxCoxParameter"], [12, 1, 1, "", "getPODCLModel"], [12, 1, 1, "", "getPODModel"], [12, 1, 1, "", "getR2"], [12, 1, 1, "", "getSimulationSize"], [12, 1, 1, "", "getVerbose"], [12, 1, 1, "", "run"], [12, 1, 1, "", "setSimulationSize"], [12, 1, 1, "", "setVerbose"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"adaptivehitmisspod": 0, "adaptivesignalpod": 1, "datahandl": 2, "krigingpod": 3, "pli": [4, 14], "plimean": 5, "plivari": 6, "podsummari": 7, "polynomialchaospod": 8, "quantileregressionpod": 9, "sobolindic": 10, "univariatelinearmodelanalysi": 11, "univariatelinearmodelpod": 12, "adapt": [13, 17, 27], "signal": [13, 17], "pod": [13, 14, 15, 16, 17, 19, 22, 23, 24, 25, 27], "us": [13, 16, 22, 23], "krige": [13, 14, 16, 19], "gener": [13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "data": [13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27], "creat": 13, "model": [13, 14, 16, 19, 20, 21, 22, 23, 24, 25], "run": [13, 14, 16, 19, 20, 21, 24, 25], "an": 13, "initi": 13, "studi": 13, "techniqu": [13, 25], "algorithm": [13, 27], "displai": 13, "result": [13, 14, 15, 16, 20, 21], "base": [13, 14, 16, 19, 24], "ad": 13, "diplai": 13, "valid": [13, 19], "graph": [13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "qualiti": 13, "improv": 13, "comput": [13, 15, 16, 19, 22, 23, 24, 25, 27], "perturb": 14, "law": 14, "indic": [14, 16, 26], "build": [14, 16, 19, 22, 23, 24, 25], "show": [14, 15, 16, 19, 20, 21, 22, 23, 24, 25], "polynomi": [14, 16, 24], "chao": [14, 16, 24], "sensit": [14, 16, 27], "analysi": [14, 16, 20, 21, 22, 23, 27], "mean": [14, 19, 22, 23, 24, 25], "draw": [14, 15, 16, 19], "figur": [14, 16], "given": [14, 16, 19, 22, 23, 24, 25], "label": [14, 16], "get": [14, 16, 19, 20, 21, 22, 23, 24, 25], "numer": [14, 16], "object": 14, "specif": 14, "defect": [14, 16, 19, 20, 24], "size": [14, 16, 19, 22, 23, 24, 25], "varianc": 14, "summari": 15, "sever": 15, "method": [15, 16, 27], "access": 15, "dictionnari": 15, "activ": 15, "save": [15, 20, 21], "sobol": 16, "chang": 16, "list": 16, "case": [16, 17, 21], "hit": 17, "miss": 17, "exampl": 18, "api": [18, 27], "user": [19, 24, 25], "defin": [19, 24, 25], "detect": [19, 22, 23, 24, 25], "function": [19, 22, 23, 24, 25], "q2": [19, 24], "confid": [19, 22, 23, 24, 25], "level": [19, 22, 23, 24, 25], "probabl": [19, 22, 23, 24, 25], "advanc": [19, 24], "mode": [19, 24], "linear": [20, 21, 22, 23, 25], "without": 20, "box": [20, 21], "cox": [20, 21], "some": [20, 21], "particular": [20, 21], "print": [20, 21], "all": [20, 21], "regress": [20, 21, 22, 23, 25], "test": [20, 21], "residu": [20, 21, 22], "The": [20, 21], "i": [20, 24], "correct": 20, "ar": 20, "homoskedast": 20, "csv": [20, 21], "file": [20, 21], "respect": 20, "fit": 20, "distribut": 20, "histogram": 20, "qq": 20, "plot": 20, "likelihood": 20, "censor": [21, 23], "uncensor": 21, "default": 21, "previou": [22, 23], "gaussian": [22, 23], "hypothesi": [22, 23], "r2": [22, 23, 24, 25], "valu": [22, 23], "onli": [22, 23, 24], "kernel": 22, "smooth": 22, "filter": 23, "1d": 24, "avail": 24, "input": 24, "dimens": 24, "1": 24, "quantil": 25, "pseudo": 25, "welcom": 26, "otpod": 26, "": 26, "document": [26, 27], "content": 26, "tabl": 26, "tool": 27}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"AdaptiveHitMissPOD": [[0, "adaptivehitmisspod"]], "AdaptiveSignalPOD": [[1, "adaptivesignalpod"]], "DataHandling": [[2, "datahandling"]], "KrigingPOD": [[3, "krigingpod"]], "PLI": [[4, "pli"]], "PLIMean": [[5, "plimean"]], "PLIVariance": [[6, "plivariance"]], "PODSummary": [[7, "podsummary"]], "PolynomialChaosPOD": [[8, "polynomialchaospod"]], "QuantileRegressionPOD": [[9, "quantileregressionpod"]], "SobolIndices": [[10, "sobolindices"]], "UnivariateLinearModelAnalysis": [[11, "univariatelinearmodelanalysis"]], "UnivariateLinearModelPOD": [[12, "univariatelinearmodelpod"]], "Adaptive Signal POD using Kriging": [[13, "Adaptive-Signal-POD-using-Kriging"]], "Generate data": [[13, "Generate-data"], [14, "Generate-data"], [15, "Generate-data"], [16, "Generate-data"], [19, "Generate-data"], [20, "Generate-data"], [21, "Generate-data"], [22, "Generate-data"], [23, "Generate-data"], [25, "Generate-data"]], "Create the Adaptive Signal POD with Kriging model": [[13, "Create-the-Adaptive-Signal-POD-with-Kriging-model"]], "Run an initial POD study with the kriging technique": [[13, "Run-an-initial-POD-study-with-the-kriging-technique"]], "Run the adaptive algorithm": [[13, "Run-the-adaptive-algorithm"]], "Display the POD result based on the adative kriging model": [[13, "Display-the-POD-result-based-on-the-adative-kriging-model"]], "Diplay the validation graph": [[13, "Diplay-the-validation-graph"]], "Quality improvement of the POD computation": [[13, "Quality-improvement-of-the-POD-computation"]], "Perturbation Law Indices": [[14, "Perturbation-Law-Indices"]], "Build POD with Kriging model": [[14, "Build-POD-with-Kriging-model"], [16, "Build-POD-with-Kriging-model"], [19, "Build-POD-with-Kriging-model"]], "Running the Kriging based POD": [[14, "Running-the-Kriging-based-POD"], [16, "Running-the-Kriging-based-POD"], [19, "Running-the-Kriging-based-POD"]], "Show POD graphs": [[14, "Show-POD-graphs"], [14, "id1"], [16, "Show-POD-graphs"], [16, "id1"], [19, "Show-POD-graphs"], [22, "Show-POD-graphs"], [24, "Show-POD-graphs"], [25, "Show-POD-graphs"]], "Build POD with polynomial chaos model": [[14, "Build-POD-with-polynomial-chaos-model"], [16, "Build-POD-with-polynomial-chaos-model"], [24, "Build-POD-with-polynomial-chaos-model"]], "Running the chaos based POD": [[14, "Running-the-chaos-based-POD"], [16, "Running-the-chaos-based-POD"]], "Run the sensitivity analysis": [[14, "Run-the-sensitivity-analysis"], [16, "Run-the-sensitivity-analysis"]], "Mean perturbation": [[14, "Mean-perturbation"]], "with a Kriging POD": [[14, "with-a-Kriging-POD"]], "Draw the figure with given labels": [[14, "Draw-the-figure-with-given-labels"], [16, "Draw-the-figure-with-given-labels"]], "Get the numerical results": [[14, "Get-the-numerical-results"], [16, "Get-the-numerical-results"]], "PLI object for a specific defect size": [[14, "PLI-object-for-a-specific-defect-size"]], "with polynomial chaos": [[14, "with-polynomial-chaos"]], "Variance perturbation": [[14, "Variance-perturbation"]], "POD Summary": [[15, "POD-Summary"]], "Compute POD with several methods": [[15, "Compute-POD-with-several-methods"]], "Access to the dictionnary of the active methods": [[15, "Access-to-the-dictionnary-of-the-active-methods"]], "Show results": [[15, "Show-results"]], "Save results": [[15, "Save-results"]], "Draw and save graphs": [[15, "Draw-and-save-graphs"]], "Sobol Indices": [[16, "Sobol-Indices"]], "Using the kriging model": [[16, "Using-the-kriging-model"]], "Change the defect sizes list": [[16, "Change-the-defect-sizes-list"]], "Change the method to compute the indices": [[16, "Change-the-method-to-compute-the-indices"]], "Case with polynomial chaos": [[16, "Case-with-polynomial-chaos"]], "Adaptive Hit Miss POD": [[17, "Adaptive-Hit-Miss-POD"]], "Signal case": [[17, "Signal-case"]], "Examples of the API": [[18, "examples-of-the-api"]], "Kriging POD": [[19, "Kriging-POD"]], "User-defined defect sizes": [[19, "User-defined-defect-sizes"], [24, "User-defined-defect-sizes"]], "Compute detection size": [[19, "Compute-detection-size"], [22, "Compute-detection-size"], [23, "Compute-detection-size"], [24, "Compute-detection-size"], [25, "Compute-detection-size"]], "get POD Function": [[19, "get-POD-Function"], [22, "get-POD-Function"], [23, "get-POD-Function"], [24, "get-POD-Function"], [25, "get-POD-Function"]], "Compute the Q2": [[19, "Compute-the-Q2"]], "Draw the validation graph": [[19, "Draw-the-validation-graph"]], "Mean POD and POD at confidence level with the detection size for a given probability level": [[19, "Mean-POD-and-POD-at-confidence-level-with-the-detection-size-for-a-given-probability-level"], [22, "Mean-POD-and-POD-at-confidence-level-with-the-detection-size-for-a-given-probability-level"], [23, "Mean-POD-and-POD-at-confidence-level-with-the-detection-size-for-a-given-probability-level"], [24, "Mean-POD-and-POD-at-confidence-level-with-the-detection-size-for-a-given-probability-level"], [25, "Mean-POD-and-POD-at-confidence-level-with-the-detection-size-for-a-given-probability-level"]], "Advanced user mode": [[19, "Advanced-user-mode"], [24, "Advanced-user-mode"]], "Linear model analysis": [[20, "Linear-model-analysis"]], "Run analysis without Box Cox": [[20, "Run-analysis-without-Box-Cox"]], "Get some particular results": [[20, "Get-some-particular-results"], [21, "Get-some-particular-results"]], "Print all results of the linear regression and all tests on the residuals": [[20, "Print-all-results-of-the-linear-regression-and-all-tests-on-the-residuals"], [21, "Print-all-results-of-the-linear-regression-and-all-tests-on-the-residuals"]], "Show graphs": [[20, "Show-graphs"], [20, "id1"], [21, "Show-graphs"]], "The linear model is not correct": [[20, "The-linear-model-is-not-correct"]], "The residuals are not homoskedastic": [[20, "The-residuals-are-not-homoskedastic"]], "Run analysis with Box Cox": [[20, "Run-analysis-with-Box-Cox"], [21, "Run-analysis-with-Box-Cox"]], "Print results of the linear regression and all tests on the residuals": [[20, "Print-results-of-the-linear-regression-and-all-tests-on-the-residuals"]], "Save all results in a csv file": [[20, "Save-all-results-in-a-csv-file"], [21, "Save-all-results-in-a-csv-file"]], "The linear regression model with data": [[20, "The-linear-regression-model-with-data"]], "The residuals with respect to the defects": [[20, "The-residuals-with-respect-to-the-defects"]], "The fitted residuals distribution with the histogram": [[20, "The-fitted-residuals-distribution-with-the-histogram"]], "The residuals QQ plot": [[20, "The-residuals-QQ-plot"]], "The Box Cox likelihood with respect to the defect": [[20, "The-Box-Cox-likelihood-with-respect-to-the-defect"]], "Linear model analysis with censored data": [[21, "Linear-model-analysis-with-censored-data"]], "The linear regression model with data for the uncensored case (default case)": [[21, "The-linear-regression-model-with-data-for-the-uncensored-case-(default-case)"]], "The linear regression model with data for the censored case": [[21, "The-linear-regression-model-with-data-for-the-censored-case"]], "Linear model POD": [[22, "Linear-model-POD"]], "Build POD using previous linear analysis": [[22, "Build-POD-using-previous-linear-analysis"], [23, "Build-POD-using-previous-linear-analysis"]], "Build POD with Gaussian hypothesis": [[22, "Build-POD-with-Gaussian-hypothesis"], [23, "Build-POD-with-Gaussian-hypothesis"]], "Get the R2 value of the regression": [[22, "Get-the-R2-value-of-the-regression"], [23, "Get-the-R2-value-of-the-regression"]], "Only the mean POD": [[22, "Only-the-mean-POD"]], "Mean POD with the detection size for a given probability level": [[22, "Mean-POD-with-the-detection-size-for-a-given-probability-level"]], "Mean POD with POD at confidence level": [[22, "Mean-POD-with-POD-at-confidence-level"]], "Build POD with no hypothesis on the residuals": [[22, "Build-POD-with-no-hypothesis-on-the-residuals"]], "Build POD with kernel smoothing on the residuals": [[22, "Build-POD-with-kernel-smoothing-on-the-residuals"]], "Linear model POD with censored data": [[23, "Linear-model-POD-with-censored-data"]], "Show POD graph": [[23, "Show-POD-graph"]], "Build POD only with the filtered data": [[23, "Build-POD-only-with-the-filtered-data"]], "Polynomial chaos POD": [[24, "Polynomial-chaos-POD"]], "Generate 1D data": [[24, "Generate-1D-data"]], "Running the polynomial chaos based POD": [[24, "Running-the-polynomial-chaos-based-POD"]], "Compute the R2 and the Q2": [[24, "Compute-the-R2-and-the-Q2"]], "Show the polynomial chaos model (only available if the input dimension is 1)": [[24, "Show-the-polynomial-chaos-model-(only-available-if-the-input-dimension-is-1)"]], "Quantile Regression POD": [[25, "Quantile-Regression-POD"]], "Build POD with quantile regression technique": [[25, "Build-POD-with-quantile-regression-technique"]], "Quantile user-defined": [[25, "Quantile-user-defined"]], "Running quantile regression POD": [[25, "Running-quantile-regression-POD"]], "Compute the pseudo R2 for a given quantile": [[25, "Compute-the-pseudo-R2-for-a-given-quantile"]], "Show the linear regression model at the given quantile": [[25, "Show-the-linear-regression-model-at-the-given-quantile"]], "Welcome to otpod\u2019s documentation!": [[26, "welcome-to-otpod-s-documentation"]], "Contents:": [[26, "contents"]], "Indices and tables": [[26, "indices-and-tables"]], "Documentation of the API": [[27, "documentation-of-the-api"]], "Data analysis": [[27, "data-analysis"]], "POD computation methods": [[27, "pod-computation-methods"]], "Adaptive algorithms": [[27, "adaptive-algorithms"]], "Sensitivity analysis": [[27, "sensitivity-analysis"]], "Tools": [[27, "tools"]]}, "indexentries": {"adaptivehitmisspod (class in otpod)": [[0, "otpod.AdaptiveHitMissPOD"]], "computedetectionsize() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.computeDetectionSize"]], "drawboxcoxlikelihood() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.drawBoxCoxLikelihood"]], "drawpod() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.drawPOD"]], "getboxcoxparameter() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getBoxCoxParameter"]], "getcandidatesize() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getCandidateSize"]], "getclassifier() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getClassifier"]], "getclassifierparameters() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getClassifierParameters"]], "getclassifiertype() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getClassifierType"]], "getconfusionmatrix() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getConfusionMatrix"]], "getdefectsizes() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getDefectSizes"]], "getdistribution() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getDistribution"]], "getgraphactive() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getGraphActive"]], "getinputdoe() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getInputDOE"]], "getoutputdoe() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getOutputDOE"]], "getpmax() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getPMax"]], "getpmin() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getPMin"]], "getpodclmodel() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getPODCLModel"]], "getpodmodel() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getPODModel"]], "getsamplingsize() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getSamplingSize"]], "getsimulationsize() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getSimulationSize"]], "getverbose() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.getVerbose"]], "run() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.run"]], "setcandidatesize() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setCandidateSize"]], "setclassifierparameters() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setClassifierParameters"]], "setclassifiertype() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setClassifierType"]], "setdefectsizes() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setDefectSizes"]], "setdistribution() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setDistribution"]], "setgraphactive() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setGraphActive"]], "setpmax() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setPMax"]], "setpmin() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setPMin"]], "setsamplingsize() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setSamplingSize"]], "setsimulationsize() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setSimulationSize"]], "setverbose() (adaptivehitmisspod method)": [[0, "otpod.AdaptiveHitMissPOD.setVerbose"]], "adaptivesignalpod (class in otpod)": [[1, "otpod.AdaptiveSignalPOD"]], "computedetectionsize() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.computeDetectionSize"]], "drawboxcoxlikelihood() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.drawBoxCoxLikelihood"]], "drawpod() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.drawPOD"]], "drawvalidationgraph() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.drawValidationGraph"]], "getbasis() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getBasis"]], "getboxcoxparameter() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getBoxCoxParameter"]], "getcandidatesize() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getCandidateSize"]], "getcovariancemodel() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getCovarianceModel"]], "getdefectsizes() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getDefectSizes"]], "getdistribution() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getDistribution"]], "getgraphactive() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getGraphActive"]], "getinitialstartsize() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getInitialStartSize"]], "getinputdoe() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getInputDOE"]], "getkrigingresult() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getKrigingResult"]], "getoutputdoe() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getOutputDOE"]], "getpodclmodel() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getPODCLModel"]], "getpodmodel() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getPODModel"]], "getq2() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getQ2"]], "getsamplingsize() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getSamplingSize"]], "getsimulationsize() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getSimulationSize"]], "getverbose() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.getVerbose"]], "run() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.run"]], "setbasis() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.setBasis"]], "setcandidatesize() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.setCandidateSize"]], "setcovariancemodel() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.setCovarianceModel"]], "setdefectsizes() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.setDefectSizes"]], "setdistribution() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.setDistribution"]], "setgraphactive() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.setGraphActive"]], "setinitialstartsize() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.setInitialStartSize"]], "setsamplingsize() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.setSamplingSize"]], "setsimulationsize() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.setSimulationSize"]], "setverbose() (adaptivesignalpod method)": [[1, "otpod.AdaptiveSignalPOD.setVerbose"]], "datahandling (class in otpod)": [[2, "otpod.DataHandling"]], "filtercensoreddata() (datahandling static method)": [[2, "otpod.DataHandling.filterCensoredData"]], "krigingpod (class in otpod)": [[3, "otpod.KrigingPOD"]], "computedetectionsize() (krigingpod method)": [[3, "otpod.KrigingPOD.computeDetectionSize"]], "drawboxcoxlikelihood() (krigingpod method)": [[3, "otpod.KrigingPOD.drawBoxCoxLikelihood"]], "drawpod() (krigingpod method)": [[3, "otpod.KrigingPOD.drawPOD"]], "drawvalidationgraph() (krigingpod method)": [[3, "otpod.KrigingPOD.drawValidationGraph"]], "getbasis() (krigingpod method)": [[3, "otpod.KrigingPOD.getBasis"]], "getboxcoxparameter() (krigingpod method)": [[3, "otpod.KrigingPOD.getBoxCoxParameter"]], "getcovariancemodel() (krigingpod method)": [[3, "otpod.KrigingPOD.getCovarianceModel"]], "getdefectsizes() (krigingpod method)": [[3, "otpod.KrigingPOD.getDefectSizes"]], "getdistribution() (krigingpod method)": [[3, "otpod.KrigingPOD.getDistribution"]], "getinitialstartsize() (krigingpod method)": [[3, "otpod.KrigingPOD.getInitialStartSize"]], "getkrigingresult() (krigingpod method)": [[3, "otpod.KrigingPOD.getKrigingResult"]], "getpodclmodel() (krigingpod method)": [[3, "otpod.KrigingPOD.getPODCLModel"]], "getpodmodel() (krigingpod method)": [[3, "otpod.KrigingPOD.getPODModel"]], "getq2() (krigingpod method)": [[3, "otpod.KrigingPOD.getQ2"]], "getsamplingsize() (krigingpod method)": [[3, "otpod.KrigingPOD.getSamplingSize"]], "getsimulationsize() (krigingpod method)": [[3, "otpod.KrigingPOD.getSimulationSize"]], "getverbose() (krigingpod method)": [[3, "otpod.KrigingPOD.getVerbose"]], "run() (krigingpod method)": [[3, "otpod.KrigingPOD.run"]], "setbasis() (krigingpod method)": [[3, "otpod.KrigingPOD.setBasis"]], "setcovariancemodel() (krigingpod method)": [[3, "otpod.KrigingPOD.setCovarianceModel"]], "setdefectsizes() (krigingpod method)": [[3, "otpod.KrigingPOD.setDefectSizes"]], "setdistribution() (krigingpod method)": [[3, "otpod.KrigingPOD.setDistribution"]], "setinitialstartsize() (krigingpod method)": [[3, "otpod.KrigingPOD.setInitialStartSize"]], "setkrigingresult() (krigingpod method)": [[3, "otpod.KrigingPOD.setKrigingResult"]], "setsamplingsize() (krigingpod method)": [[3, "otpod.KrigingPOD.setSamplingSize"]], "setsimulationsize() (krigingpod method)": [[3, "otpod.KrigingPOD.setSimulationSize"]], "setverbose() (krigingpod method)": [[3, "otpod.KrigingPOD.setVerbose"]], "pli (class in otpod)": [[4, "otpod.PLI"]], "computeconfidenceinterval() (pli method)": [[4, "otpod.PLI.computeConfidenceInterval"]], "drawindices() (pli method)": [[4, "otpod.PLI.drawIndices"]], "drawmarginal1dpdf() (pli method)": [[4, "otpod.PLI.drawMarginal1DPDF"]], "getdeltasample() (pli method)": [[4, "otpod.PLI.getDeltaSample"]], "getgausskronrod() (pli method)": [[4, "otpod.PLI.getGaussKronrod"]], "getindices() (pli method)": [[4, "otpod.PLI.getIndices"]], "getoriginaldelta() (pli method)": [[4, "otpod.PLI.getOriginalDelta"]], "getperturbedprobabilityestimate() (pli method)": [[4, "otpod.PLI.getPerturbedProbabilityEstimate"]], "run() (pli method)": [[4, "otpod.PLI.run"]], "setgausskronrod() (pli method)": [[4, "otpod.PLI.setGaussKronrod"]], "plimean (class in otpod)": [[5, "otpod.PLIMean"]], "drawcontourindices() (plimean method)": [[5, "otpod.PLIMean.drawContourIndices"]], "drawindices() (plimean method)": [[5, "otpod.PLIMean.drawIndices"]], "getdefectsizes() (plimean method)": [[5, "otpod.PLIMean.getDefectSizes"]], "getdistribution() (plimean method)": [[5, "otpod.PLIMean.getDistribution"]], "getgausskronrod() (plimean method)": [[5, "otpod.PLIMean.getGaussKronrod"]], "getindices() (plimean method)": [[5, "otpod.PLIMean.getIndices"]], "getpliobject() (plimean method)": [[5, "otpod.PLIMean.getPLIObject"]], "getsamplingsize() (plimean method)": [[5, "otpod.PLIMean.getSamplingSize"]], "run() (plimean method)": [[5, "otpod.PLIMean.run"]], "setdefectsizes() (plimean method)": [[5, "otpod.PLIMean.setDefectSizes"]], "setdistribution() (plimean method)": [[5, "otpod.PLIMean.setDistribution"]], "setgausskronrod() (plimean method)": [[5, "otpod.PLIMean.setGaussKronrod"]], "setsamplingsize() (plimean method)": [[5, "otpod.PLIMean.setSamplingSize"]], "plivariance (class in otpod)": [[6, "otpod.PLIVariance"]], "drawcontourindices() (plivariance method)": [[6, "otpod.PLIVariance.drawContourIndices"]], "drawindices() (plivariance method)": [[6, "otpod.PLIVariance.drawIndices"]], "getdefectsizes() (plivariance method)": [[6, "otpod.PLIVariance.getDefectSizes"]], "getdistribution() (plivariance method)": [[6, "otpod.PLIVariance.getDistribution"]], "getgausskronrod() (plivariance method)": [[6, "otpod.PLIVariance.getGaussKronrod"]], "getindices() (plivariance method)": [[6, "otpod.PLIVariance.getIndices"]], "getpliobject() (plivariance method)": [[6, "otpod.PLIVariance.getPLIObject"]], "getsamplingsize() (plivariance method)": [[6, "otpod.PLIVariance.getSamplingSize"]], "run() (plivariance method)": [[6, "otpod.PLIVariance.run"]], "setdefectsizes() (plivariance method)": [[6, "otpod.PLIVariance.setDefectSizes"]], "setdistribution() (plivariance method)": [[6, "otpod.PLIVariance.setDistribution"]], "setgausskronrod() (plivariance method)": [[6, "otpod.PLIVariance.setGaussKronrod"]], "setsamplingsize() (plivariance method)": [[6, "otpod.PLIVariance.setSamplingSize"]], "podsummary (class in otpod)": [[7, "otpod.PODSummary"]], "drawgraphs() (podsummary method)": [[7, "otpod.PODSummary.drawGraphs"]], "getkrigingpod() (podsummary method)": [[7, "otpod.PODSummary.getKrigingPOD"]], "getlinearbinomialpod() (podsummary method)": [[7, "otpod.PODSummary.getLinearBinomialPOD"]], "getlineargausspod() (podsummary method)": [[7, "otpod.PODSummary.getLinearGaussPOD"]], "getlinearkernelsmoothingpod() (podsummary method)": [[7, "otpod.PODSummary.getLinearKernelSmoothingPOD"]], "getmethodactive() (podsummary method)": [[7, "otpod.PODSummary.getMethodActive"]], "getpolynomialchaospod() (podsummary method)": [[7, "otpod.PODSummary.getPolynomialChaosPOD"]], "getquantileregressionpod() (podsummary method)": [[7, "otpod.PODSummary.getQuantileRegressionPOD"]], "getresults() (podsummary method)": [[7, "otpod.PODSummary.getResults"]], "getsamplingsize() (podsummary method)": [[7, "otpod.PODSummary.getSamplingSize"]], "getsimulationsize() (podsummary method)": [[7, "otpod.PODSummary.getSimulationSize"]], "getverbose() (podsummary method)": [[7, "otpod.PODSummary.getVerbose"]], "run() (podsummary method)": [[7, "otpod.PODSummary.run"]], "saveresults() (podsummary method)": [[7, "otpod.PODSummary.saveResults"]], "setmethodactive() (podsummary method)": [[7, "otpod.PODSummary.setMethodActive"]], "setsamplingsize() (podsummary method)": [[7, "otpod.PODSummary.setSamplingSize"]], "setsimulationsize() (podsummary method)": [[7, "otpod.PODSummary.setSimulationSize"]], "setverbose() (podsummary method)": [[7, "otpod.PODSummary.setVerbose"]], "polynomialchaospod (class in otpod)": [[8, "otpod.PolynomialChaosPOD"]], "computedetectionsize() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.computeDetectionSize"]], "drawboxcoxlikelihood() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.drawBoxCoxLikelihood"]], "drawpod() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.drawPOD"]], "drawpolynomialchaosmodel() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.drawPolynomialChaosModel"]], "drawvalidationgraph() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.drawValidationGraph"]], "getadaptivestrategy() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getAdaptiveStrategy"]], "getboxcoxparameter() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getBoxCoxParameter"]], "getcoefficientdistribution() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getCoefficientDistribution"]], "getdefectsizes() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getDefectSizes"]], "getdegree() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getDegree"]], "getdistribution() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getDistribution"]], "getpodclmodel() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getPODCLModel"]], "getpodmodel() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getPODModel"]], "getpolynomialchaosresult() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getPolynomialChaosResult"]], "getprojectionstrategy() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getProjectionStrategy"]], "getq2() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getQ2"]], "getr2() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getR2"]], "getsamplingsize() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getSamplingSize"]], "getsimulationsize() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getSimulationSize"]], "getverbose() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.getVerbose"]], "run() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.run"]], "setadaptivestrategy() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.setAdaptiveStrategy"]], "setdefectsizes() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.setDefectSizes"]], "setdegree() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.setDegree"]], "setdistribution() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.setDistribution"]], "setpolynomialchaosresult() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.setPolynomialChaosResult"]], "setprojectionstrategy() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.setProjectionStrategy"]], "setsamplingsize() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.setSamplingSize"]], "setsimulationsize() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.setSimulationSize"]], "setverbose() (polynomialchaospod method)": [[8, "otpod.PolynomialChaosPOD.setVerbose"]], "quantileregressionpod (class in otpod)": [[9, "otpod.QuantileRegressionPOD"]], "computedetectionsize() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.computeDetectionSize"]], "drawboxcoxlikelihood() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.drawBoxCoxLikelihood"]], "drawlinearmodel() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.drawLinearModel"]], "drawpod() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.drawPOD"]], "getboxcoxparameter() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.getBoxCoxParameter"]], "getpodclmodel() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.getPODCLModel"]], "getpodmodel() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.getPODModel"]], "getquantile() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.getQuantile"]], "getr2() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.getR2"]], "getsimulationsize() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.getSimulationSize"]], "getverbose() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.getVerbose"]], "run() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.run"]], "setquantile() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.setQuantile"]], "setsimulationsize() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.setSimulationSize"]], "setverbose() (quantileregressionpod method)": [[9, "otpod.QuantileRegressionPOD.setVerbose"]], "sobolindices (class in otpod)": [[10, "otpod.SobolIndices"]], "drawaggregatedindices() (sobolindices method)": [[10, "otpod.SobolIndices.drawAggregatedIndices"]], "drawfirstorderindices() (sobolindices method)": [[10, "otpod.SobolIndices.drawFirstOrderIndices"]], "drawtotalorderindices() (sobolindices method)": [[10, "otpod.SobolIndices.drawTotalOrderIndices"]], "getdefectsizes() (sobolindices method)": [[10, "otpod.SobolIndices.getDefectSizes"]], "getdistribution() (sobolindices method)": [[10, "otpod.SobolIndices.getDistribution"]], "getsensitivitymethod() (sobolindices method)": [[10, "otpod.SobolIndices.getSensitivityMethod"]], "getsensitivityresult() (sobolindices method)": [[10, "otpod.SobolIndices.getSensitivityResult"]], "getsimulationsize() (sobolindices method)": [[10, "otpod.SobolIndices.getSimulationSize"]], "run() (sobolindices method)": [[10, "otpod.SobolIndices.run"]], "setdefectsizes() (sobolindices method)": [[10, "otpod.SobolIndices.setDefectSizes"]], "setdistribution() (sobolindices method)": [[10, "otpod.SobolIndices.setDistribution"]], "setsensitivitymethod() (sobolindices method)": [[10, "otpod.SobolIndices.setSensitivityMethod"]], "setsimulationsize() (sobolindices method)": [[10, "otpod.SobolIndices.setSimulationSize"]], "univariatelinearmodelanalysis (class in otpod)": [[11, "otpod.UnivariateLinearModelAnalysis"]], "drawboxcoxlikelihood() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.drawBoxCoxLikelihood"]], "drawlinearmodel() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.drawLinearModel"]], "drawresiduals() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.drawResiduals"]], "drawresidualsdistribution() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.drawResidualsDistribution"]], "drawresidualsqqplot() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.drawResidualsQQplot"]], "getandersondarlingpvalue() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getAndersonDarlingPValue"]], "getboxcoxparameter() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getBoxCoxParameter"]], "getbreuschpaganpvalue() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getBreuschPaganPValue"]], "getcramervonmisespvalue() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getCramerVonMisesPValue"]], "getdurbinwatsonpvalue() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getDurbinWatsonPValue"]], "getharrisonmccabepvalue() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getHarrisonMcCabePValue"]], "getinputsample() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getInputSample"]], "getintercept() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getIntercept"]], "getkolmogorovpvalue() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getKolmogorovPValue"]], "getnoisethreshold() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getNoiseThreshold"]], "getoutputsample() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getOutputSample"]], "getr2() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getR2"]], "getresiduals() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getResiduals"]], "getresidualsdistribution() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getResidualsDistribution"]], "getresults() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getResults"]], "getsaturationthreshold() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getSaturationThreshold"]], "getslope() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getSlope"]], "getstandarderror() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getStandardError"]], "getzeromeanpvalue() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.getZeroMeanPValue"]], "saveresults() (univariatelinearmodelanalysis method)": [[11, "otpod.UnivariateLinearModelAnalysis.saveResults"]], "univariatelinearmodelpod (class in otpod)": [[12, "otpod.UnivariateLinearModelPOD"]], "computedetectionsize() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.computeDetectionSize"]], "drawboxcoxlikelihood() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.drawBoxCoxLikelihood"]], "drawpod() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.drawPOD"]], "getboxcoxparameter() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.getBoxCoxParameter"]], "getpodclmodel() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.getPODCLModel"]], "getpodmodel() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.getPODModel"]], "getr2() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.getR2"]], "getsimulationsize() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.getSimulationSize"]], "getverbose() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.getVerbose"]], "run() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.run"]], "setsimulationsize() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.setSimulationSize"]], "setverbose() (univariatelinearmodelpod method)": [[12, "otpod.UnivariateLinearModelPOD.setVerbose"]]}})