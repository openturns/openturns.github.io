Search.setIndex({"docnames": ["auto_examples/index", "auto_examples/plot_example1", "auto_examples/plot_example2", "auto_examples/sg_execution_times", "developer_guide/architecture/architecture", "developer_guide/developer_guide", "developer_guide/validation/validation", "index", "user_manual/_generated/otsvm.ExponentialRBF", "user_manual/_generated/otsvm.LibSVMClassification", "user_manual/_generated/otsvm.LibSVMRegression", "user_manual/_generated/otsvm.LinearKernel", "user_manual/_generated/otsvm.NormalRBF", "user_manual/_generated/otsvm.PolynomialKernel", "user_manual/_generated/otsvm.RationalKernel", "user_manual/_generated/otsvm.SigmoidKernel", "user_manual/user_manual"], "filenames": ["auto_examples/index.rst", "auto_examples/plot_example1.rst", "auto_examples/plot_example2.rst", "auto_examples/sg_execution_times.rst", "developer_guide/architecture/architecture.rst", "developer_guide/developer_guide.rst", "developer_guide/validation/validation.rst", "index.rst", "user_manual/_generated/otsvm.ExponentialRBF.rst", "user_manual/_generated/otsvm.LibSVMClassification.rst", "user_manual/_generated/otsvm.LibSVMRegression.rst", "user_manual/_generated/otsvm.LinearKernel.rst", "user_manual/_generated/otsvm.NormalRBF.rst", "user_manual/_generated/otsvm.PolynomialKernel.rst", "user_manual/_generated/otsvm.RationalKernel.rst", "user_manual/_generated/otsvm.SigmoidKernel.rst", "user_manual/user_manual.rst"], "titles": ["Examples", "Regression", "Classification", "Computation times", "Architecture considerations", "Developer guide", "Validation", "OTSVM documentation", "ExponentialRBF", "LibSVMClassification", "LibSVMRegression", "LinearKernel", "NormalRBF", "PolynomialKernel", "RationalKernel", "SigmoidKernel", "User manual"], "terms": {"classif": [0, 3, 7, 9], "regress": [0, 3, 7], "download": [0, 1, 2], "all": [0, 16], "python": [0, 1, 2], "sourc": [0, 1, 2, 5], "code": [0, 1, 2, 5], "auto_examples_python": 0, "zip": 0, "jupyt": [0, 1, 2], "notebook": [0, 1, 2], "auto_examples_jupyt": 0, "go": [1, 2], "end": [1, 2], "full": [1, 2], "exampl": [1, 2, 6, 7, 16], "The": [1, 2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "object": [1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16], "thi": [1, 2, 4, 5, 6, 16], "i": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16], "creat": [1, 2], "svm": [1, 2, 7], "algorithm": [1, 2, 16], "order": [1, 2, 4], "metamodel": [1, 2], "otsvm": [1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15], "enabl": [1, 2], "set": [1, 2, 9, 16], "list": [1, 2, 9], "tradeoff": [1, 2], "factor": [1, 2], "kernel": [1, 2, 7], "paramet": [1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16], "method": [1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16], "settradeofffactor": [1, 2, 9, 10], "setkernelparamet": [1, 2, 9, 10], "select": [1, 2, 16], "type": [1, 2], "linear": [1, 2, 7], "polynomi": [1, 2, 16], "sigmoid": [1, 2], "rbf": [1, 2], "comput": [1, 2, 16], "an": [1, 2, 16], "input": [1, 2, 9, 16], "output": [1, 2], "sampl": [1, 2], "experi": 1, "plane": 1, "function": [1, 2, 16], "isoprobabilist": 1, "distribut": [1, 6], "we": [1, 2, 16], "recommend": 1, "user": 1, "us": [1, 2, 16], "gaussian": [1, 16], "moreov": 1, "import": [1, 2], "understand": 1, "primari": [1, 6], "If": [1, 16], "you": 1, "don": 1, "t": [1, 6, 16], "know": 1, "what": 1, "take": [1, 16], "must": 1, "wide": 1, "rang": [1, 2], "valu": [1, 6, 8, 9, 11, 12, 13, 14, 15, 16], "10": [1, 2], "5": 1, "3": 1, "1": [1, 2, 5, 16], "15": [1, 6], "13": 1, "usual": 1, "alwai": 1, "converg": 1, "can": [1, 16], "long": 1, "while": [1, 16], "mostli": 1, "have": [1, 16], "lot": 1, "test": [1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16], "openturn": [1, 2, 4, 8, 11, 12, 13, 14, 15], "ot": [1, 2], "here": [1, 4], "sobol": 1, "dimens": [1, 9], "meanth": 1, "0": [1, 2, 3, 6, 16], "point": [1, 8, 9, 11, 12, 13, 14, 15, 16], "inputvari": 1, "descript": [1, 6, 8, 11, 12, 13, 14, 15], "formula": 1, "covth": 1, "2": [1, 2, 9, 16], "xi": [1, 16], "str": [1, 8, 9, 10, 11, 12, 13, 14, 15], "ab": 1, "4": 1, "model": [1, 16], "symbolicfunct": 1, "randomgener": 1, "setse": 1, "margin": [1, 7], "distributioncollect": 1, "uniform": 1, "composeddistribut": 1, "01": [1, 2, 3], "100": [1, 2, 6], "1000": 1, "001": [1, 2], "first": 1, "problem": [1, 2, 16], "datain": [1, 2], "getsampl": 1, "250": 1, "dataout": [1, 2], "second": [1, 2], "our": 1, "third": 1, "enumer": 1, "normalrbf": [1, 2], "algo": [1, 2], "libsvmregress": 1, "libsvm": [1, 2, 16], "perform": 1, "run": [1, 2, 9, 10], "stream": 1, "out": 1, "result": [1, 2], "getresult": [1, 10], "get": [1, 16], "residu": 1, "error": [1, 16], "getresidu": 1, "rel": 1, "relativeerror": 1, "getrelativeerror": 1, "print": [1, 2], "f": [1, 6, 16], "myexperi": 1, "montecarloexperi": 1, "gener": 1, "algo2": 1, "present": [1, 16], "svmresourcemap": 1, "class": [1, 2, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16], "fix": [1, 16], "other": [1, 16], "like": [1, 16], "degre": [1, 16], "constant": 1, "caches": 1, "number": [1, 9, 16], "fold": 1, "epsilon": 1, "default": [1, 8, 9, 10, 11, 12, 13, 14, 15], "hi": 1, "want": [1, 16], "resourcemap": 1, "degreepolynomialkernel": 1, "now": [1, 16], "0043475": 1, "00793795": 1, "0515409": 1, "04162": 1, "total": [1, 2, 3], "time": [1, 2, 16], "script": [1, 2], "minut": [1, 2], "452": [1, 3], "plot_example1": [1, 3], "py": [1, 2, 3], "ipynb": [1, 2], "case": [2, 5, 16], "build": [2, 4, 16], "separ": [2, 16], "data": [2, 16], "o": 2, "csv": 2, "file": [2, 3], "retriev": 2, "from": [2, 16], "try": 2, "path": 2, "abspath": 2, "dirnam": 2, "__file__": 2, "except": [2, 16], "nameerror": 2, "getcwd": 2, "datainout": 2, "importfromcsvfil": 2, "join": 2, "size": 2, "getsiz": 2, "getmargin": 2, "indic": [2, 9, 16], "int": [2, 8, 9, 10, 11, 12, 13, 14, 15], "c": [2, 6, 16], "cp": 2, "000001": 2, "00001": 2, "0001": 2, "gamma": [2, 16], "libsvmclassif": 2, "setkerneltyp": [2, 9], "accuraci": [2, 16], "p": [2, 4, 16], "getaccuraci": [2, 9], "962": [2, 3], "plot_example2": [2, 3], "00": 3, "06": 3, "414": 3, "execut": 3, "auto_exampl": 3, "04": 3, "mb": 3, "sever": 4, "ar": [4, 9, 16], "need": 4, "modul": 4, "sphinx": 4, "doc": 4, "option": 4, "cd": 4, "mkdir": 4, "cmake": 4, "dcmake_install_prefix": 4, "pwd": 4, "instal": 4, "dopenturns_dir": 4, "lib": 4, "global": 4, "diagram": 4, "each": [4, 9, 16], "layer": 4, "goal": 5, "part": 5, "expos": 5, "design": [5, 16], "principl": 5, "govern": 5, "platform": 5, "architectur": 5, "consider": 5, "depend": [5, 16], "compil": 5, "structur": 5, "valid": [5, 16], "xxxxxx": 5, "purpos": 6, "estim": 6, "risk": 6, "stochast": 6, "variabl": [6, 8, 11, 12, 13, 14, 15, 16], "name": [6, 8, 9, 10, 11, 12, 13, 14, 15], "q": [6, 16], "a1": 6, "normal": [6, 16], "10200": 6, "e": [6, 16], "a2": 6, "3000": 6, "c1": 6, "4000": 6, "60": 6, "independ": 6, "loss": [6, 16], "rate": 6, "05": 6, "nelec": 6, "refer": 6, "effici": [6, 16], "54": 6, "nth": 6, "8": 6, "energi": 6, "save": 6, "e_p": 6, "frac": [6, 16], "u": 6, "l": [6, 16], "m": 6, "min": [6, 16], "max": [6, 16], "step": 6, "10033": 6, "10364": 6, "6": 6, "2975": 6, "3024": 6, "99": 6, "3901": 6, "33": 6, "4097": 6, "74": 6, "ep": 6, "10030": 6, "3900": 6, "06035": 6, "10365": 6, "2995": 6, "4100": 6, "05456": 6, "manual": 7, "introduct": 7, "support": 7, "vector": [7, 9], "machin": 7, "primal": 7, "form": 7, "dual": 7, "soft": 7, "nonlinear": 7, "choos": 7, "index": [7, 9], "search": [7, 16], "page": 7, "arg": [8, 9, 10, 11, 12, 13, 14, 15], "getsigma": [8, 12], "setsigma": [8, 12], "__init__": [8, 9, 10, 11, 12, 13, 14, 15], "getclassnam": [8, 9, 10, 11, 12, 13, 14, 15], "accessor": [8, 9, 10, 11, 12, 13, 14, 15], "": [8, 9, 10, 11, 12, 13, 14, 15, 16], "return": [8, 9, 10, 11, 12, 13, 14, 15], "class_nam": [8, 9, 10, 11, 12, 13, 14, 15], "__class__": [8, 9, 10, 11, 12, 13, 14, 15], "__name__": [8, 9, 10, 11, 12, 13, 14, 15], "getid": [8, 9, 10, 11, 12, 13, 14, 15], "id": [8, 9, 10, 11, 12, 13, 14, 15], "intern": [8, 9, 10, 11, 12, 13, 14, 15], "uniqu": [8, 9, 10, 11, 12, 13, 14, 15], "identifi": [8, 9, 10, 11, 12, 13, 14, 15], "getnam": [8, 9, 10, 11, 12, 13, 14, 15], "getparamet": [8, 11, 12, 13, 14, 15], "current": [8, 11, 12, 13, 14, 15], "getparameterdescript": [8, 11, 12, 13, 14, 15], "getshadowedid": [8, 9, 10, 11, 12, 13, 14, 15], "shadow": [8, 9, 10, 11, 12, 13, 14, 15], "getvis": [8, 9, 10, 11, 12, 13, 14, 15], "visibl": [8, 9, 10, 11, 12, 13, 14, 15], "state": [8, 9, 10, 11, 12, 13, 14, 15, 16], "bool": [8, 9, 10, 11, 12, 13, 14, 15], "flag": [8, 9, 10, 11, 12, 13, 14, 15], "hasnam": [8, 9, 10, 11, 12, 13, 14, 15], "true": [8, 9, 10, 11, 12, 13, 14, 15], "empti": [8, 9, 10, 11, 12, 13, 14, 15], "hasvisiblenam": [8, 9, 10, 11, 12, 13, 14, 15], "ha": [8, 9, 10, 11, 12, 13, 14, 15, 16], "distinguish": [8, 9, 10, 11, 12, 13, 14, 15], "one": [8, 9, 10, 11, 12, 13, 14, 15, 16], "partialgradi": [8, 11, 12, 13, 14, 15], "x1": [8, 11, 12, 13, 14, 15], "x2": [8, 11, 12, 13, 14, 15], "gradient": [8, 11, 12, 13, 14, 15], "wrt": [8, 11, 12, 13, 14, 15], "partialhessian": [8, 11, 12, 13, 14, 15], "hessian": [8, 11, 12, 13, 14, 15], "symmetricmatrix": [8, 11, 12, 13, 14, 15], "setnam": [8, 9, 10, 11, 12, 13, 14, 15], "setparamet": [8, 11, 12, 13, 14, 15], "setshadowedid": [8, 9, 10, 11, 12, 13, 14, 15], "setvis": [8, 9, 10, 11, 12, 13, 14, 15], "predict": [9, 16], "runkmean": 9, "setweight": 9, "classifi": [9, 16], "accord": 9, "sequenc": [9, 16], "float": 9, "d": [9, 16], "A": [9, 16], "cl": 9, "getdimens": 9, "dim": 9, "getnumberofclass": 9, "n_class": 9, "getverbos": 9, "verbos": 9, "verb": 9, "logic": 9, "tell": 9, "mode": 9, "been": 9, "activ": 9, "grade": 9, "inp": 9, "outc": 9, "inputpoint": 9, "k": [9, 16], "respect": 9, "isparallel": 9, "parallel": [9, 16], "setparallel": 9, "done": [9, 16], "setverbos": 9, "getinputsampl": 10, "getkernelparamet": 10, "getoutputsampl": 10, "gettradeofffactor": 10, "getconst": [13, 14, 15], "getdegre": 13, "getlinear": [13, 15], "setconst": [13, 14, 15], "setdegre": 13, "setlinear": [13, 15], "librari": 16, "provid": 16, "produc": 16, "concept": 16, "statist": 16, "scienc": 16, "relat": 16, "supervis": 16, "learn": 16, "analyz": 16, "recogn": 16, "pattern": 16, "analysi": 16, "standard": 16, "given": 16, "which": 16, "two": 16, "possibl": 16, "train": 16, "mark": 16, "belong": 16, "categori": 16, "assign": 16, "new": 16, "more": 16, "formal": 16, "construct": 16, "hyperplan": 16, "high": 16, "infinit": 16, "dimension": 16, "space": 16, "good": 16, "achiev": 16, "largest": 16, "distanc": 16, "nearest": 16, "ani": 16, "wherea": 16, "origin": 16, "mai": 16, "finit": 16, "often": 16, "happen": 16, "discrimin": 16, "linearli": 16, "For": 16, "reason": 16, "wa": 16, "propos": 16, "map": 16, "much": 16, "higher": 16, "presum": 16, "make": 16, "easier": 16, "To": 16, "keep": 16, "load": 16, "scheme": 16, "ensur": 16, "dot": 16, "product": 16, "easili": 16, "term": 16, "defin": 16, "them": 16, "x": 16, "y": 16, "suit": 16, "some": 16, "n": 16, "x_": 16, "y_": 16, "mathbb": 16, "r": 16, "_": 16, "where": 16, "y_i": 16, "either": 16, "x_i": 16, "real": 16, "find": 16, "maximum": 16, "divid": 16, "those": 16, "written": 16, "satisfi": 16, "w": 16, "cdot": 16, "b": 16, "denot": 16, "maxim": 16, "between": 16, "far": 16, "apart": 16, "still": 16, "These": 16, "describ": 16, "equat": 16, "so": 16, "minim": 16, "As": 16, "also": 16, "prevent": 16, "fall": 16, "add": 16, "follow": 16, "constraint": 16, "geq": 16, "quad": 16, "leq": 16, "optim": 16, "subject": 16, "preced": 16, "section": 16, "difficult": 16, "solv": 16, "becaus": 16, "involv": 16, "squar": 16, "root": 16, "It": 16, "alter": 16, "substitu": 16, "without": 16, "chang": 16, "solut": 16, "quadrat": 16, "program": 16, "By": 16, "introduc": 16, "lagrang": 16, "multipli": 16, "alpha": 16, "previou": 16, "constrain": 16, "express": 16, "underset": 16, "text": 16, "sum_": 16, "alpha_": 16, "techniqu": 16, "stationari": 16, "karush": 16, "kuhn": 16, "tucker": 16, "condit": 16, "impli": 16, "combin": 16, "alpha_i": 16, "onli": 16, "few": 16, "greater": 16, "than": 16, "zero": 16, "correspond": 16, "exactli": 16, "lie": 16, "fact": 16, "show": 16, "reduc": 16, "j": 16, "alpha_j": 16, "y_j": 16, "x_j": 16, "thank": 16, "sum_i": 16, "exist": 16, "split": 16, "ye": 16, "cleanli": 16, "slack": 16, "xi_i": 16, "measur": 16, "misclassif": 16, "increas": 16, "penal": 16, "non": 16, "becom": 16, "trade": 16, "off": 16, "larg": 16, "small": 16, "penalti": 16, "constaint": 16, "abov": 16, "One": 16, "beta": 16, "beta_i": 16, "similar": 16, "everi": 16, "replac": 16, "allow": 16, "fit": 16, "transform": 16, "featur": 16, "thu": 16, "though": 16, "common": 16, "includ": 16, "radial": 16, "basi": 16, "exp": 16, "hyperbol": 16, "tangent": 16, "tanh": 16, "varphi": 16, "effect": 16, "choic": 16, "singl": 16, "best": 16, "grid": 16, "exponenti": 16, "grow": 16, "check": 16, "cross": 16, "pick": 16, "final": 16, "whole": 16, "svc": 16, "min_": 16, "tq": 16, "ones": 16, "upper": 16, "bound": 16, "posit": 16, "semidefinit": 16, "matrix": 16, "q_": 16, "ij": 16, "y_iy_jk": 16, "decis": 16, "sign": 16, "alpha_ik": 16, "differ": 16, "unbalanc": 16, "formul": 16, "c_": 16, "weight": 16, "up": 16, "too": 16, "varepsilon": 16, "insensit": 16, "precis": 16, "min_w": 16, "l_i": 16, "wx_i": 16, "control": 16}, "objects": {"otsvm": [[8, 0, 1, "", "ExponentialRBF"], [9, 0, 1, "", "LibSVMClassification"], [10, 0, 1, "", "LibSVMRegression"], [11, 0, 1, "", "LinearKernel"], [12, 0, 1, "", "NormalRBF"], [13, 0, 1, "", "PolynomialKernel"], [14, 0, 1, "", "RationalKernel"], [15, 0, 1, "", "SigmoidKernel"]], "otsvm.ExponentialRBF": [[8, 1, 1, "", "__init__"], [8, 1, 1, "", "getClassName"], [8, 1, 1, "", "getId"], [8, 1, 1, "", "getName"], [8, 1, 1, "", "getParameter"], [8, 1, 1, "", "getParameterDescription"], [8, 1, 1, "", "getShadowedId"], [8, 1, 1, "", "getVisibility"], [8, 1, 1, "", "hasName"], [8, 1, 1, "", "hasVisibleName"], [8, 1, 1, "", "partialGradient"], [8, 1, 1, "", "partialHessian"], [8, 1, 1, "", "setName"], [8, 1, 1, "", "setParameter"], [8, 1, 1, "", "setShadowedId"], [8, 1, 1, "", "setVisibility"]], "otsvm.LibSVMClassification": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "classify"], [9, 1, 1, "", "getClassName"], [9, 1, 1, "", "getDimension"], [9, 1, 1, "", "getId"], [9, 1, 1, "", "getName"], [9, 1, 1, "", "getNumberOfClasses"], [9, 1, 1, "", "getShadowedId"], [9, 1, 1, "", "getVerbose"], [9, 1, 1, "", "getVisibility"], [9, 1, 1, "", "grade"], [9, 1, 1, "", "hasName"], [9, 1, 1, "", "hasVisibleName"], [9, 1, 1, "", "isParallel"], [9, 1, 1, "", "setName"], [9, 1, 1, "", "setParallel"], [9, 1, 1, "", "setShadowedId"], [9, 1, 1, "", "setVerbose"], [9, 1, 1, "", "setVisibility"]], "otsvm.LibSVMRegression": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "getClassName"], [10, 1, 1, "", "getId"], [10, 1, 1, "", "getName"], [10, 1, 1, "", "getShadowedId"], [10, 1, 1, "", "getVisibility"], [10, 1, 1, "", "hasName"], [10, 1, 1, "", "hasVisibleName"], [10, 1, 1, "", "setName"], [10, 1, 1, "", "setShadowedId"], [10, 1, 1, "", "setVisibility"]], "otsvm.LinearKernel": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "getClassName"], [11, 1, 1, "", "getId"], [11, 1, 1, "", "getName"], [11, 1, 1, "", "getParameter"], [11, 1, 1, "", "getParameterDescription"], [11, 1, 1, "", "getShadowedId"], [11, 1, 1, "", "getVisibility"], [11, 1, 1, "", "hasName"], [11, 1, 1, "", "hasVisibleName"], [11, 1, 1, "", "partialGradient"], [11, 1, 1, "", "partialHessian"], [11, 1, 1, "", "setName"], [11, 1, 1, "", "setParameter"], [11, 1, 1, "", "setShadowedId"], [11, 1, 1, "", "setVisibility"]], "otsvm.NormalRBF": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "getClassName"], [12, 1, 1, "", "getId"], [12, 1, 1, "", "getName"], [12, 1, 1, "", "getParameter"], [12, 1, 1, "", "getParameterDescription"], [12, 1, 1, "", "getShadowedId"], [12, 1, 1, "", "getVisibility"], [12, 1, 1, "", "hasName"], [12, 1, 1, "", "hasVisibleName"], [12, 1, 1, "", "partialGradient"], [12, 1, 1, "", "partialHessian"], [12, 1, 1, "", "setName"], [12, 1, 1, "", "setParameter"], [12, 1, 1, "", "setShadowedId"], [12, 1, 1, "", "setVisibility"]], "otsvm.PolynomialKernel": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "getClassName"], [13, 1, 1, "", "getId"], [13, 1, 1, "", "getName"], [13, 1, 1, "", "getParameter"], [13, 1, 1, "", "getParameterDescription"], [13, 1, 1, "", "getShadowedId"], [13, 1, 1, "", "getVisibility"], [13, 1, 1, "", "hasName"], [13, 1, 1, "", "hasVisibleName"], [13, 1, 1, "", "partialGradient"], [13, 1, 1, "", "partialHessian"], [13, 1, 1, "", "setName"], [13, 1, 1, "", "setParameter"], [13, 1, 1, "", "setShadowedId"], [13, 1, 1, "", "setVisibility"]], "otsvm.RationalKernel": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "getClassName"], [14, 1, 1, "", "getId"], [14, 1, 1, "", "getName"], [14, 1, 1, "", "getParameter"], [14, 1, 1, "", "getParameterDescription"], [14, 1, 1, "", "getShadowedId"], [14, 1, 1, "", "getVisibility"], [14, 1, 1, "", "hasName"], [14, 1, 1, "", "hasVisibleName"], [14, 1, 1, "", "partialGradient"], [14, 1, 1, "", "partialHessian"], [14, 1, 1, "", "setName"], [14, 1, 1, "", "setParameter"], [14, 1, 1, "", "setShadowedId"], [14, 1, 1, "", "setVisibility"]], "otsvm.SigmoidKernel": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "getClassName"], [15, 1, 1, "", "getId"], [15, 1, 1, "", "getName"], [15, 1, 1, "", "getParameter"], [15, 1, 1, "", "getParameterDescription"], [15, 1, 1, "", "getShadowedId"], [15, 1, 1, "", "getVisibility"], [15, 1, 1, "", "hasName"], [15, 1, 1, "", "hasVisibleName"], [15, 1, 1, "", "partialGradient"], [15, 1, 1, "", "partialHessian"], [15, 1, 1, "", "setName"], [15, 1, 1, "", "setParameter"], [15, 1, 1, "", "setShadowedId"], [15, 1, 1, "", "setVisibility"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"exampl": 0, "regress": [1, 16], "classif": [2, 16], "comput": 3, "time": 3, "architectur": 4, "consider": 4, "depend": 4, "compil": 4, "sourc": 4, "code": 4, "structur": 4, "develop": [5, 7], "guid": [5, 7], "valid": 6, "test": 6, "case": 6, "1": 6, "xxxxxx": 6, "problem": 6, "statement": 6, "input": 6, "b": 6, "output": 6, "2": 6, "determinist": 6, "parametr": 6, "analysi": 6, "result": 6, "otsvm": 7, "document": 7, "user": [7, 16], "indic": 7, "tabl": 7, "exponentialrbf": 8, "libsvmclassif": 9, "libsvmregress": 10, "linearkernel": 11, "normalrbf": 12, "polynomialkernel": 13, "rationalkernel": 14, "sigmoidkernel": 15, "manual": 16, "introduct": 16, "support": 16, "vector": 16, "machin": 16, "linear": 16, "svm": 16, "primal": 16, "form": 16, "dual": 16, "soft": 16, "margin": 16, "nonlinear": 16, "choos": 16, "kernel": 16}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Regression": [[1, "regression"], [16, "regression"], [16, "id2"]], "Computation times": [[3, "computation-times"]], "Classification": [[2, "classification"], [16, "classification"], [16, "id1"]], "Examples": [[0, "examples"]], "OTSVM documentation": [[7, "otsvm-documentation"]], "User documentation": [[7, "user-documentation"]], "Developer guide": [[7, "developer-guide"], [5, "developer-guide"]], "Indices and tables": [[7, "indices-and-tables"]], "Architecture considerations": [[4, "architecture-considerations"]], "Dependencies": [[4, "dependencies"]], "Compilation": [[4, "compilation"]], "Source code structure": [[4, "source-code-structure"]], "Validation": [[6, "validation"]], "Test case 1: XXXXXX": [[6, "test-case-1-xxxxxx"]], "1- Problem statement": [[6, "problem-statement"]], "a- Inputs": [[6, "a-inputs"], [6, "id1"]], "b- Output": [[6, "b-output"]], "2- Deterministic parametric analysis": [[6, "deterministic-parametric-analysis"]], "b- Results": [[6, "b-results"]], "User manual": [[16, "user-manual"]], "Introduction to support vector machine": [[16, "introduction-to-support-vector-machine"]], "Linear SVM": [[16, "linear-svm"]], "Primal form": [[16, "primal-form"]], "Dual form": [[16, "dual-form"]], "Soft margin": [[16, "soft-margin"]], "Nonlinear SVM": [[16, "nonlinear-svm"]], "Choose a kernel": [[16, "choose-a-kernel"]], "ExponentialRBF": [[8, "exponentialrbf"]], "LinearKernel": [[11, "linearkernel"]], "LibSVMRegression": [[10, "libsvmregression"]], "LibSVMClassification": [[9, "libsvmclassification"]], "PolynomialKernel": [[13, "polynomialkernel"]], "SigmoidKernel": [[15, "sigmoidkernel"]], "NormalRBF": [[12, "normalrbf"]], "RationalKernel": [[14, "rationalkernel"]]}, "indexentries": {"exponentialrbf (class in otsvm)": [[8, "otsvm.ExponentialRBF"]], "__init__() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.__init__"]], "getclassname() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.getClassName"]], "getid() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.getId"]], "getname() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.getName"]], "getparameter() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.getParameter"]], "getparameterdescription() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.getParameterDescription"]], "getshadowedid() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.getShadowedId"]], "getvisibility() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.getVisibility"]], "hasname() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.hasName"]], "hasvisiblename() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.hasVisibleName"]], "partialgradient() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.partialGradient"]], "partialhessian() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.partialHessian"]], "setname() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.setName"]], "setparameter() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.setParameter"]], "setshadowedid() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.setShadowedId"]], "setvisibility() (otsvm.exponentialrbf method)": [[8, "otsvm.ExponentialRBF.setVisibility"]], "libsvmclassification (class in otsvm)": [[9, "otsvm.LibSVMClassification"]], "__init__() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.__init__"]], "classify() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.classify"]], "getclassname() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.getClassName"]], "getdimension() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.getDimension"]], "getid() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.getId"]], "getname() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.getName"]], "getnumberofclasses() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.getNumberOfClasses"]], "getshadowedid() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.getShadowedId"]], "getverbose() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.getVerbose"]], "getvisibility() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.getVisibility"]], "grade() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.grade"]], "hasname() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.hasName"]], "hasvisiblename() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.hasVisibleName"]], "isparallel() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.isParallel"]], "setname() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.setName"]], "setparallel() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.setParallel"]], "setshadowedid() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.setShadowedId"]], "setverbose() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.setVerbose"]], "setvisibility() (otsvm.libsvmclassification method)": [[9, "otsvm.LibSVMClassification.setVisibility"]], "libsvmregression (class in otsvm)": [[10, "otsvm.LibSVMRegression"]], "__init__() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.__init__"]], "getclassname() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.getClassName"]], "getid() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.getId"]], "getname() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.getName"]], "getshadowedid() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.getShadowedId"]], "getvisibility() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.getVisibility"]], "hasname() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.hasName"]], "hasvisiblename() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.hasVisibleName"]], "setname() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.setName"]], "setshadowedid() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.setShadowedId"]], "setvisibility() (otsvm.libsvmregression method)": [[10, "otsvm.LibSVMRegression.setVisibility"]], "linearkernel (class in otsvm)": [[11, "otsvm.LinearKernel"]], "__init__() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.__init__"]], "getclassname() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.getClassName"]], "getid() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.getId"]], "getname() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.getName"]], "getparameter() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.getParameter"]], "getparameterdescription() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.getParameterDescription"]], "getshadowedid() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.getShadowedId"]], "getvisibility() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.getVisibility"]], "hasname() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.hasName"]], "hasvisiblename() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.hasVisibleName"]], "partialgradient() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.partialGradient"]], "partialhessian() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.partialHessian"]], "setname() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.setName"]], "setparameter() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.setParameter"]], "setshadowedid() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.setShadowedId"]], "setvisibility() (otsvm.linearkernel method)": [[11, "otsvm.LinearKernel.setVisibility"]], "normalrbf (class in otsvm)": [[12, "otsvm.NormalRBF"]], "__init__() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.__init__"]], "getclassname() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.getClassName"]], "getid() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.getId"]], "getname() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.getName"]], "getparameter() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.getParameter"]], "getparameterdescription() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.getParameterDescription"]], "getshadowedid() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.getShadowedId"]], "getvisibility() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.getVisibility"]], "hasname() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.hasName"]], "hasvisiblename() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.hasVisibleName"]], "partialgradient() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.partialGradient"]], "partialhessian() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.partialHessian"]], "setname() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.setName"]], "setparameter() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.setParameter"]], "setshadowedid() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.setShadowedId"]], "setvisibility() (otsvm.normalrbf method)": [[12, "otsvm.NormalRBF.setVisibility"]], "polynomialkernel (class in otsvm)": [[13, "otsvm.PolynomialKernel"]], "__init__() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.__init__"]], "getclassname() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.getClassName"]], "getid() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.getId"]], "getname() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.getName"]], "getparameter() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.getParameter"]], "getparameterdescription() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.getParameterDescription"]], "getshadowedid() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.getShadowedId"]], "getvisibility() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.getVisibility"]], "hasname() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.hasName"]], "hasvisiblename() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.hasVisibleName"]], "partialgradient() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.partialGradient"]], "partialhessian() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.partialHessian"]], "setname() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.setName"]], "setparameter() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.setParameter"]], "setshadowedid() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.setShadowedId"]], "setvisibility() (otsvm.polynomialkernel method)": [[13, "otsvm.PolynomialKernel.setVisibility"]], "rationalkernel (class in otsvm)": [[14, "otsvm.RationalKernel"]], "__init__() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.__init__"]], "getclassname() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.getClassName"]], "getid() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.getId"]], "getname() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.getName"]], "getparameter() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.getParameter"]], "getparameterdescription() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.getParameterDescription"]], "getshadowedid() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.getShadowedId"]], "getvisibility() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.getVisibility"]], "hasname() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.hasName"]], "hasvisiblename() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.hasVisibleName"]], "partialgradient() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.partialGradient"]], "partialhessian() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.partialHessian"]], "setname() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.setName"]], "setparameter() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.setParameter"]], "setshadowedid() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.setShadowedId"]], "setvisibility() (otsvm.rationalkernel method)": [[14, "otsvm.RationalKernel.setVisibility"]], "sigmoidkernel (class in otsvm)": [[15, "otsvm.SigmoidKernel"]], "__init__() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.__init__"]], "getclassname() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.getClassName"]], "getid() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.getId"]], "getname() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.getName"]], "getparameter() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.getParameter"]], "getparameterdescription() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.getParameterDescription"]], "getshadowedid() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.getShadowedId"]], "getvisibility() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.getVisibility"]], "hasname() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.hasName"]], "hasvisiblename() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.hasVisibleName"]], "partialgradient() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.partialGradient"]], "partialhessian() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.partialHessian"]], "setname() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.setName"]], "setparameter() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.setParameter"]], "setshadowedid() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.setShadowedId"]], "setvisibility() (otsvm.sigmoidkernel method)": [[15, "otsvm.SigmoidKernel.setVisibility"]]}})