Search.setIndex({"docnames": ["auto_examples/index", "auto_examples/plot_example1", "auto_examples/plot_example2", "auto_examples/sg_execution_times", "developer_guide/architecture/architecture", "developer_guide/developer_guide", "developer_guide/validation/validation", "index", "sg_execution_times", "user_manual/_generated/otsvm.ExponentialRBF", "user_manual/_generated/otsvm.LinearKernel", "user_manual/_generated/otsvm.NormalRBF", "user_manual/_generated/otsvm.PolynomialKernel", "user_manual/_generated/otsvm.RationalKernel", "user_manual/_generated/otsvm.SVMClassification", "user_manual/_generated/otsvm.SVMRegression", "user_manual/_generated/otsvm.SigmoidKernel", "user_manual/user_manual"], "filenames": ["auto_examples/index.rst", "auto_examples/plot_example1.rst", "auto_examples/plot_example2.rst", "auto_examples/sg_execution_times.rst", "developer_guide/architecture/architecture.rst", "developer_guide/developer_guide.rst", "developer_guide/validation/validation.rst", "index.rst", "sg_execution_times.rst", "user_manual/_generated/otsvm.ExponentialRBF.rst", "user_manual/_generated/otsvm.LinearKernel.rst", "user_manual/_generated/otsvm.NormalRBF.rst", "user_manual/_generated/otsvm.PolynomialKernel.rst", "user_manual/_generated/otsvm.RationalKernel.rst", "user_manual/_generated/otsvm.SVMClassification.rst", "user_manual/_generated/otsvm.SVMRegression.rst", "user_manual/_generated/otsvm.SigmoidKernel.rst", "user_manual/user_manual.rst"], "titles": ["Examples", "Regression", "Classification", "Computation times", "Architecture considerations", "Developer guide", "Validation", "OTSVM documentation", "Computation times", "ExponentialRBF", "LinearKernel", "NormalRBF", "PolynomialKernel", "RationalKernel", "SVMClassification", "SVMRegression", "SigmoidKernel", "User manual"], "terms": {"classif": [0, 3, 7, 8, 14], "regress": [0, 3, 7, 8, 15], "download": [0, 1, 2], "all": [0, 8, 17], "python": [0, 1, 2], "sourc": [0, 1, 2, 5], "code": [0, 1, 2, 5], "auto_examples_python": 0, "zip": 0, "jupyt": [0, 1, 2], "notebook": [0, 1, 2], "auto_examples_jupyt": 0, "go": [1, 2], "end": [1, 2], "full": [1, 2], "exampl": [1, 2, 3, 6, 7, 8, 17], "The": [1, 2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17], "object": [1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17], "thi": [1, 2, 4, 5, 6, 17], "i": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17], "creat": [1, 2], "svm": [1, 2, 7], "algorithm": [1, 2, 14, 15, 17], "order": [1, 2, 4], "metamodel": [1, 2], "otsvm": [1, 2, 4, 9, 10, 11, 12, 13, 14, 15, 16], "enabl": [1, 2], "set": [1, 2, 14, 17], "list": [1, 2, 14], "tradeoff": [1, 2], "factor": [1, 2], "kernel": [1, 2, 7, 9, 10, 11, 12, 13, 16], "paramet": [1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17], "method": [1, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17], "settradeofffactor": [1, 2, 14, 15], "setkernelparamet": [1, 2, 14, 15], "select": [1, 2, 17], "type": [1, 2], "linear": [1, 2, 7, 10, 12, 13, 16], "polynomi": [1, 2, 12, 13, 17], "sigmoid": [1, 2, 16], "rbf": [1, 2, 9, 11], "comput": [1, 2, 17], "an": [1, 2, 17], "input": [1, 2, 14, 17], "output": [1, 2], "sampl": [1, 2], "experi": 1, "plane": 1, "function": [1, 2, 17], "isoprobabilist": 1, "distribut": [1, 6], "we": [1, 2, 17], "recommend": 1, "user": 1, "us": [1, 2, 14, 15, 17], "gaussian": [1, 17], "moreov": 1, "import": [1, 2], "understand": 1, "primari": [1, 6], "If": [1, 17], "you": 1, "don": 1, "t": [1, 6, 17], "know": 1, "what": 1, "take": [1, 17], "must": 1, "wide": 1, "rang": [1, 2], "valu": [1, 6, 9, 10, 11, 12, 13, 14, 16, 17], "10": [1, 2], "5": 1, "3": 1, "1": [1, 2, 5, 17], "15": [1, 6], "13": 1, "usual": 1, "alwai": 1, "converg": 1, "can": [1, 17], "long": 1, "while": [1, 17], "mostli": 1, "have": [1, 17], "lot": 1, "test": [1, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17], "openturn": [1, 2, 4, 9, 10, 11, 12, 13, 16], "ot": [1, 2], "here": [1, 4], "sobol": 1, "dimens": [1, 14], "meanth": 1, "0": [1, 2, 3, 6, 8, 17], "point": [1, 9, 10, 11, 12, 13, 14, 16, 17], "inputvari": 1, "descript": [1, 6, 9, 10, 11, 12, 13, 16], "formula": 1, "covth": 1, "2": [1, 2, 3, 8, 14, 17], "xi": [1, 17], "str": [1, 9, 10, 11, 12, 13, 14, 15, 16], "ab": 1, "4": 1, "model": [1, 17], "symbolicfunct": 1, "randomgener": 1, "setse": 1, "margin": [1, 7], "distributioncollect": 1, "uniform": 1, "composeddistribut": 1, "01": [1, 2, 3, 8], "100": [1, 2, 6], "1000": 1, "001": [1, 2], "first": 1, "problem": [1, 2, 17], "datain": [1, 2], "getsampl": 1, "250": 1, "dataout": [1, 2], "second": [1, 2], "our": 1, "third": 1, "enumer": 1, "normalrbf": [1, 2], "algo": [1, 2], "svmregress": 1, "libsvm": [1, 2, 14, 15, 17], "perform": 1, "run": [1, 2, 14, 15], "stream": 1, "out": 1, "result": [1, 2], "getresult": [1, 15], "get": [1, 17], "residu": 1, "error": [1, 17], "getresidu": 1, "rel": 1, "relativeerror": 1, "getrelativeerror": 1, "print": [1, 2], "f": [1, 6, 17], "myexperi": 1, "montecarloexperi": 1, "gener": 1, "algo2": 1, "present": [1, 17], "svmresourcemap": 1, "class": [1, 2, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17], "fix": [1, 17], "other": [1, 17], "like": [1, 17], "degre": [1, 12, 17], "constant": [1, 12, 13, 16], "caches": 1, "number": [1, 14, 17], "fold": 1, "epsilon": 1, "default": [1, 9, 10, 11, 12, 13, 14, 15, 16], "hi": 1, "want": [1, 17], "resourcemap": 1, "degreepolynomialkernel": 1, "now": [1, 17], "0043475": 1, "00793795": 1, "0515409": 1, "04162": 1, "total": [1, 2, 3, 8], "time": [1, 2, 17], "script": [1, 2], "minut": [1, 2], "398": [1, 3, 8], "plot_example1": [1, 3, 8], "ipynb": [1, 2], "py": [1, 2, 3, 8], "case": [2, 5, 17], "build": [2, 4, 17], "separ": [2, 17], "data": [2, 17], "o": 2, "csv": 2, "file": [2, 3, 8], "retriev": 2, "from": [2, 3, 8, 17], "try": 2, "path": 2, "abspath": 2, "dirnam": 2, "__file__": 2, "except": [2, 17], "nameerror": 2, "getcwd": 2, "datainout": 2, "importfromcsvfil": 2, "join": 2, "size": 2, "getsiz": 2, "getmargin": 2, "indic": [2, 14, 17], "int": [2, 9, 10, 11, 12, 13, 14, 15, 16], "c": [2, 6, 17], "cp": 2, "000001": 2, "00001": 2, "0001": 2, "gamma": [2, 17], "svmclassif": 2, "setkerneltyp": [2, 14], "accuraci": [2, 17], "p": [2, 4, 17], "getaccuraci": [2, 14], "980": [2, 3, 8], "plot_example2": [2, 3, 8], "00": [3, 8], "06": [3, 8], "378": [3, 8], "execut": [3, 8], "auto_exampl": 3, "mem": [3, 8], "mb": [3, 8], "04": [3, 8], "sever": 4, "ar": [4, 14, 17], "need": 4, "modul": 4, "sphinx": 4, "doc": 4, "option": 4, "cd": 4, "mkdir": 4, "cmake": 4, "dcmake_install_prefix": 4, "pwd": 4, "instal": 4, "dopenturns_dir": 4, "lib": 4, "global": 4, "diagram": 4, "each": [4, 14, 17], "layer": 4, "goal": 5, "part": 5, "expos": 5, "design": [5, 17], "principl": 5, "govern": 5, "platform": 5, "architectur": 5, "consider": 5, "depend": [5, 17], "compil": 5, "structur": 5, "valid": [5, 17], "xxxxxx": 5, "purpos": 6, "estim": 6, "risk": 6, "stochast": 6, "variabl": [6, 9, 10, 11, 12, 13, 16, 17], "name": [6, 9, 10, 11, 12, 13, 14, 15, 16], "q": [6, 17], "a1": 6, "normal": [6, 11, 17], "10200": 6, "e": [6, 17], "a2": 6, "3000": 6, "c1": 6, "4000": 6, "60": 6, "independ": 6, "loss": [6, 17], "rate": 6, "05": 6, "nelec": 6, "refer": 6, "effici": [6, 17], "54": 6, "nth": 6, "8": 6, "energi": 6, "save": 6, "e_p": 6, "frac": [6, 17], "u": 6, "l": [6, 17], "m": 6, "min": [6, 17], "max": [6, 17], "step": 6, "10033": 6, "10364": 6, "6": 6, "2975": 6, "3024": 6, "99": 6, "3901": 6, "33": 6, "4097": 6, "74": 6, "ep": 6, "10030": 6, "3900": 6, "06035": 6, "10365": 6, "2995": 6, "4100": 6, "05456": 6, "manual": 7, "introduct": 7, "support": 7, "vector": [7, 14], "machin": 7, "primal": 7, "form": 7, "dual": 7, "soft": 7, "nonlinear": 7, "choos": 7, "index": [7, 14], "search": [7, 17], "page": 7, "galleri": 8, "arg": [9, 10, 11, 12, 13, 14, 15, 16], "exponenti": [9, 17], "getsigma": [9, 11], "setsigma": [9, 11], "__init__": [9, 10, 11, 12, 13, 14, 15, 16], "getclassnam": [9, 10, 11, 12, 13, 14, 15, 16], "accessor": [9, 10, 11, 12, 13, 14, 15, 16], "": [9, 10, 11, 12, 13, 14, 15, 16, 17], "return": [9, 10, 11, 12, 13, 14, 15, 16], "class_nam": [9, 10, 11, 12, 13, 14, 15, 16], "__class__": [9, 10, 11, 12, 13, 14, 15, 16], "__name__": [9, 10, 11, 12, 13, 14, 15, 16], "getid": [9, 10, 11, 12, 13, 14, 15, 16], "id": [9, 10, 11, 12, 13, 14, 15, 16], "intern": [9, 10, 11, 12, 13, 14, 15, 16], "uniqu": [9, 10, 11, 12, 13, 14, 15, 16], "identifi": [9, 10, 11, 12, 13, 14, 15, 16], "getnam": [9, 10, 11, 12, 13, 14, 15, 16], "getparamet": [9, 10, 11, 12, 13, 16], "current": [9, 10, 11, 12, 13, 16], "getparameterdescript": [9, 10, 11, 12, 13, 16], "getshadowedid": [9, 10, 11, 12, 13, 14, 15, 16], "shadow": [9, 10, 11, 12, 13, 14, 15, 16], "getvis": [9, 10, 11, 12, 13, 14, 15, 16], "visibl": [9, 10, 11, 12, 13, 14, 15, 16], "state": [9, 10, 11, 12, 13, 14, 15, 16, 17], "bool": [9, 10, 11, 12, 13, 14, 15, 16], "flag": [9, 10, 11, 12, 13, 14, 15, 16], "hasnam": [9, 10, 11, 12, 13, 14, 15, 16], "true": [9, 10, 11, 12, 13, 14, 15, 16], "empti": [9, 10, 11, 12, 13, 14, 15, 16], "hasvisiblenam": [9, 10, 11, 12, 13, 14, 15, 16], "ha": [9, 10, 11, 12, 13, 14, 15, 16, 17], "distinguish": [9, 10, 11, 12, 13, 14, 15, 16], "one": [9, 10, 11, 12, 13, 14, 15, 16, 17], "partialgradi": [9, 10, 11, 12, 13, 16], "x1": [9, 10, 11, 12, 13, 16], "x2": [9, 10, 11, 12, 13, 16], "gradient": [9, 10, 11, 12, 13, 16], "wrt": [9, 10, 11, 12, 13, 16], "partialhessian": [9, 10, 11, 12, 13, 16], "hessian": [9, 10, 11, 12, 13, 16], "symmetricmatrix": [9, 10, 11, 12, 13, 16], "setnam": [9, 10, 11, 12, 13, 14, 15, 16], "setparamet": [9, 10, 11, 12, 13, 16], "setshadowedid": [9, 10, 11, 12, 13, 14, 15, 16], "setvis": [9, 10, 11, 12, 13, 14, 15, 16], "sigma": 11, "float": [11, 12, 13, 14, 16], "getconst": [12, 13, 16], "term": [12, 13, 16, 17], "getdegre": 12, "getlinear": [12, 16], "setconst": [12, 13, 16], "setdegre": 12, "setlinear": [12, 16], "predict": [14, 17], "runkmean": 14, "setweight": 14, "classifi": [14, 17], "accord": 14, "sequenc": [14, 17], "d": [14, 17], "A": [14, 17], "cl": 14, "getdimens": 14, "dim": 14, "getnumberofclass": 14, "n_class": 14, "getverbos": 14, "verbos": 14, "verb": 14, "logic": 14, "tell": 14, "mode": 14, "been": 14, "activ": 14, "grade": 14, "inp": 14, "outc": 14, "inputpoint": 14, "k": [14, 17], "respect": 14, "isparallel": 14, "parallel": [14, 17], "setparallel": 14, "done": [14, 17], "setverbos": 14, "getinputsampl": 15, "getkernelparamet": 15, "getoutputsampl": 15, "gettradeofffactor": 15, "librari": 17, "provid": 17, "produc": 17, "concept": 17, "statist": 17, "scienc": 17, "relat": 17, "supervis": 17, "learn": 17, "analyz": 17, "recogn": 17, "pattern": 17, "analysi": 17, "standard": 17, "given": 17, "which": 17, "two": 17, "possibl": 17, "train": 17, "mark": 17, "belong": 17, "categori": 17, "assign": 17, "new": 17, "more": 17, "formal": 17, "construct": 17, "hyperplan": 17, "high": 17, "infinit": 17, "dimension": 17, "space": 17, "good": 17, "achiev": 17, "largest": 17, "distanc": 17, "nearest": 17, "ani": 17, "wherea": 17, "origin": 17, "mai": 17, "finit": 17, "often": 17, "happen": 17, "discrimin": 17, "linearli": 17, "For": 17, "reason": 17, "wa": 17, "propos": 17, "map": 17, "much": 17, "higher": 17, "presum": 17, "make": 17, "easier": 17, "To": 17, "keep": 17, "load": 17, "scheme": 17, "ensur": 17, "dot": 17, "product": 17, "easili": 17, "defin": 17, "them": 17, "x": 17, "y": 17, "suit": 17, "some": 17, "n": 17, "x_": 17, "y_": 17, "mathbb": 17, "r": 17, "_": 17, "where": 17, "y_i": 17, "either": 17, "x_i": 17, "real": 17, "find": 17, "maximum": 17, "divid": 17, "those": 17, "written": 17, "satisfi": 17, "w": 17, "cdot": 17, "b": 17, "denot": 17, "maxim": 17, "between": 17, "far": 17, "apart": 17, "still": 17, "These": 17, "describ": 17, "equat": 17, "so": 17, "minim": 17, "As": 17, "also": 17, "prevent": 17, "fall": 17, "add": 17, "follow": 17, "constraint": 17, "geq": 17, "quad": 17, "leq": 17, "optim": 17, "subject": 17, "preced": 17, "section": 17, "difficult": 17, "solv": 17, "becaus": 17, "involv": 17, "squar": 17, "root": 17, "It": 17, "alter": 17, "substitu": 17, "without": 17, "chang": 17, "solut": 17, "quadrat": 17, "program": 17, "By": 17, "introduc": 17, "lagrang": 17, "multipli": 17, "alpha": 17, "previou": 17, "constrain": 17, "express": 17, "underset": 17, "text": 17, "sum_": 17, "alpha_": 17, "techniqu": 17, "stationari": 17, "karush": 17, "kuhn": 17, "tucker": 17, "condit": 17, "impli": 17, "combin": 17, "alpha_i": 17, "onli": 17, "few": 17, "greater": 17, "than": 17, "zero": 17, "correspond": 17, "exactli": 17, "lie": 17, "fact": 17, "show": 17, "reduc": 17, "j": 17, "alpha_j": 17, "y_j": 17, "x_j": 17, "thank": 17, "sum_i": 17, "exist": 17, "split": 17, "ye": 17, "cleanli": 17, "slack": 17, "xi_i": 17, "measur": 17, "misclassif": 17, "increas": 17, "penal": 17, "non": 17, "becom": 17, "trade": 17, "off": 17, "larg": 17, "small": 17, "penalti": 17, "constaint": 17, "abov": 17, "One": 17, "beta": 17, "beta_i": 17, "similar": 17, "everi": 17, "replac": 17, "allow": 17, "fit": 17, "transform": 17, "featur": 17, "thu": 17, "though": 17, "common": 17, "includ": 17, "radial": 17, "basi": 17, "exp": 17, "hyperbol": 17, "tangent": 17, "tanh": 17, "varphi": 17, "effect": 17, "choic": 17, "singl": 17, "best": 17, "grid": 17, "grow": 17, "check": 17, "cross": 17, "pick": 17, "final": 17, "whole": 17, "svc": 17, "min_": 17, "tq": 17, "ones": 17, "upper": 17, "bound": 17, "posit": 17, "semidefinit": 17, "matrix": 17, "q_": 17, "ij": 17, "y_iy_jk": 17, "decis": 17, "sign": 17, "alpha_ik": 17, "differ": 17, "unbalanc": 17, "formul": 17, "c_": 17, "weight": 17, "up": 17, "too": 17, "varepsilon": 17, "insensit": 17, "precis": 17, "min_w": 17, "l_i": 17, "wx_i": 17, "control": 17}, "objects": {"otsvm": [[9, 0, 1, "", "ExponentialRBF"], [10, 0, 1, "", "LinearKernel"], [11, 0, 1, "", "NormalRBF"], [12, 0, 1, "", "PolynomialKernel"], [13, 0, 1, "", "RationalKernel"], [14, 0, 1, "", "SVMClassification"], [15, 0, 1, "", "SVMRegression"], [16, 0, 1, "", "SigmoidKernel"]], "otsvm.ExponentialRBF": [[9, 1, 1, "", "__init__"], [9, 1, 1, "", "getClassName"], [9, 1, 1, "", "getId"], [9, 1, 1, "", "getName"], [9, 1, 1, "", "getParameter"], [9, 1, 1, "", "getParameterDescription"], [9, 1, 1, "", "getShadowedId"], [9, 1, 1, "", "getVisibility"], [9, 1, 1, "", "hasName"], [9, 1, 1, "", "hasVisibleName"], [9, 1, 1, "", "partialGradient"], [9, 1, 1, "", "partialHessian"], [9, 1, 1, "", "setName"], [9, 1, 1, "", "setParameter"], [9, 1, 1, "", "setShadowedId"], [9, 1, 1, "", "setVisibility"]], "otsvm.LinearKernel": [[10, 1, 1, "", "__init__"], [10, 1, 1, "", "getClassName"], [10, 1, 1, "", "getId"], [10, 1, 1, "", "getName"], [10, 1, 1, "", "getParameter"], [10, 1, 1, "", "getParameterDescription"], [10, 1, 1, "", "getShadowedId"], [10, 1, 1, "", "getVisibility"], [10, 1, 1, "", "hasName"], [10, 1, 1, "", "hasVisibleName"], [10, 1, 1, "", "partialGradient"], [10, 1, 1, "", "partialHessian"], [10, 1, 1, "", "setName"], [10, 1, 1, "", "setParameter"], [10, 1, 1, "", "setShadowedId"], [10, 1, 1, "", "setVisibility"]], "otsvm.NormalRBF": [[11, 1, 1, "", "__init__"], [11, 1, 1, "", "getClassName"], [11, 1, 1, "", "getId"], [11, 1, 1, "", "getName"], [11, 1, 1, "", "getParameter"], [11, 1, 1, "", "getParameterDescription"], [11, 1, 1, "", "getShadowedId"], [11, 1, 1, "", "getSigma"], [11, 1, 1, "", "getVisibility"], [11, 1, 1, "", "hasName"], [11, 1, 1, "", "hasVisibleName"], [11, 1, 1, "", "partialGradient"], [11, 1, 1, "", "partialHessian"], [11, 1, 1, "", "setName"], [11, 1, 1, "", "setParameter"], [11, 1, 1, "", "setShadowedId"], [11, 1, 1, "", "setSigma"], [11, 1, 1, "", "setVisibility"]], "otsvm.PolynomialKernel": [[12, 1, 1, "", "__init__"], [12, 1, 1, "", "getClassName"], [12, 1, 1, "", "getConstant"], [12, 1, 1, "", "getDegree"], [12, 1, 1, "", "getId"], [12, 1, 1, "", "getLinear"], [12, 1, 1, "", "getName"], [12, 1, 1, "", "getParameter"], [12, 1, 1, "", "getParameterDescription"], [12, 1, 1, "", "getShadowedId"], [12, 1, 1, "", "getVisibility"], [12, 1, 1, "", "hasName"], [12, 1, 1, "", "hasVisibleName"], [12, 1, 1, "", "partialGradient"], [12, 1, 1, "", "partialHessian"], [12, 1, 1, "", "setConstant"], [12, 1, 1, "", "setDegree"], [12, 1, 1, "", "setLinear"], [12, 1, 1, "", "setName"], [12, 1, 1, "", "setParameter"], [12, 1, 1, "", "setShadowedId"], [12, 1, 1, "", "setVisibility"]], "otsvm.RationalKernel": [[13, 1, 1, "", "__init__"], [13, 1, 1, "", "getClassName"], [13, 1, 1, "", "getConstant"], [13, 1, 1, "", "getId"], [13, 1, 1, "", "getName"], [13, 1, 1, "", "getParameter"], [13, 1, 1, "", "getParameterDescription"], [13, 1, 1, "", "getShadowedId"], [13, 1, 1, "", "getVisibility"], [13, 1, 1, "", "hasName"], [13, 1, 1, "", "hasVisibleName"], [13, 1, 1, "", "partialGradient"], [13, 1, 1, "", "partialHessian"], [13, 1, 1, "", "setConstant"], [13, 1, 1, "", "setName"], [13, 1, 1, "", "setParameter"], [13, 1, 1, "", "setShadowedId"], [13, 1, 1, "", "setVisibility"]], "otsvm.SVMClassification": [[14, 1, 1, "", "__init__"], [14, 1, 1, "", "classify"], [14, 1, 1, "", "getClassName"], [14, 1, 1, "", "getDimension"], [14, 1, 1, "", "getId"], [14, 1, 1, "", "getName"], [14, 1, 1, "", "getNumberOfClasses"], [14, 1, 1, "", "getShadowedId"], [14, 1, 1, "", "getVerbose"], [14, 1, 1, "", "getVisibility"], [14, 1, 1, "", "grade"], [14, 1, 1, "", "hasName"], [14, 1, 1, "", "hasVisibleName"], [14, 1, 1, "", "isParallel"], [14, 1, 1, "", "setName"], [14, 1, 1, "", "setParallel"], [14, 1, 1, "", "setShadowedId"], [14, 1, 1, "", "setVerbose"], [14, 1, 1, "", "setVisibility"]], "otsvm.SVMRegression": [[15, 1, 1, "", "__init__"], [15, 1, 1, "", "getClassName"], [15, 1, 1, "", "getId"], [15, 1, 1, "", "getName"], [15, 1, 1, "", "getShadowedId"], [15, 1, 1, "", "getVisibility"], [15, 1, 1, "", "hasName"], [15, 1, 1, "", "hasVisibleName"], [15, 1, 1, "", "setName"], [15, 1, 1, "", "setShadowedId"], [15, 1, 1, "", "setVisibility"]], "otsvm.SigmoidKernel": [[16, 1, 1, "", "__init__"], [16, 1, 1, "", "getClassName"], [16, 1, 1, "", "getConstant"], [16, 1, 1, "", "getId"], [16, 1, 1, "", "getLinear"], [16, 1, 1, "", "getName"], [16, 1, 1, "", "getParameter"], [16, 1, 1, "", "getParameterDescription"], [16, 1, 1, "", "getShadowedId"], [16, 1, 1, "", "getVisibility"], [16, 1, 1, "", "hasName"], [16, 1, 1, "", "hasVisibleName"], [16, 1, 1, "", "partialGradient"], [16, 1, 1, "", "partialHessian"], [16, 1, 1, "", "setConstant"], [16, 1, 1, "", "setLinear"], [16, 1, 1, "", "setName"], [16, 1, 1, "", "setParameter"], [16, 1, 1, "", "setShadowedId"], [16, 1, 1, "", "setVisibility"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"exampl": 0, "regress": [1, 17], "classif": [2, 17], "comput": [3, 8], "time": [3, 8], "architectur": 4, "consider": 4, "depend": 4, "compil": 4, "sourc": 4, "code": 4, "structur": 4, "develop": [5, 7], "guid": [5, 7], "valid": 6, "test": 6, "case": 6, "1": 6, "xxxxxx": 6, "problem": 6, "statement": 6, "input": 6, "b": 6, "output": 6, "2": 6, "determinist": 6, "parametr": 6, "analysi": 6, "result": 6, "otsvm": 7, "document": 7, "user": [7, 17], "indic": 7, "tabl": 7, "exponentialrbf": 9, "linearkernel": 10, "normalrbf": 11, "polynomialkernel": 12, "rationalkernel": 13, "svmclassif": 14, "svmregress": 15, "sigmoidkernel": 16, "manual": 17, "introduct": 17, "support": 17, "vector": 17, "machin": 17, "linear": 17, "svm": 17, "primal": 17, "form": 17, "dual": 17, "soft": 17, "margin": 17, "nonlinear": 17, "choos": 17, "kernel": 17}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Validation": [[6, "validation"]], "Test case 1: XXXXXX": [[6, "test-case-1-xxxxxx"]], "1- Problem statement": [[6, "problem-statement"]], "a- Inputs": [[6, "a-inputs"], [6, "id1"]], "b- Output": [[6, "b-output"]], "2- Deterministic parametric analysis": [[6, "deterministic-parametric-analysis"]], "b- Results": [[6, "b-results"]], "OTSVM documentation": [[7, "otsvm-documentation"]], "User documentation": [[7, "user-documentation"]], "Developer guide": [[7, "developer-guide"], [5, "developer-guide"]], "Indices and tables": [[7, "indices-and-tables"]], "Architecture considerations": [[4, "architecture-considerations"]], "Dependencies": [[4, "dependencies"]], "Compilation": [[4, "compilation"]], "Source code structure": [[4, "source-code-structure"]], "Regression": [[1, "regression"], [17, "regression"], [17, "id2"]], "Classification": [[2, "classification"], [17, "classification"], [17, "id1"]], "Computation times": [[3, "computation-times"], [8, "computation-times"]], "Examples": [[0, "examples"]], "SigmoidKernel": [[16, "sigmoidkernel"]], "User manual": [[17, "user-manual"]], "Introduction to support vector machine": [[17, "introduction-to-support-vector-machine"]], "Linear SVM": [[17, "linear-svm"]], "Primal form": [[17, "primal-form"]], "Dual form": [[17, "dual-form"]], "Soft margin": [[17, "soft-margin"]], "Nonlinear SVM": [[17, "nonlinear-svm"]], "Choose a kernel": [[17, "choose-a-kernel"]], "LinearKernel": [[10, "linearkernel"]], "ExponentialRBF": [[9, "exponentialrbf"]], "NormalRBF": [[11, "normalrbf"]], "SVMClassification": [[14, "svmclassification"]], "RationalKernel": [[13, "rationalkernel"]], "SVMRegression": [[15, "svmregression"]], "PolynomialKernel": [[12, "polynomialkernel"]]}, "indexentries": {"exponentialrbf (class in otsvm)": [[9, "otsvm.ExponentialRBF"]], "__init__() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.__init__"]], "getclassname() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.getClassName"]], "getid() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.getId"]], "getname() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.getName"]], "getparameter() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.getParameter"]], "getparameterdescription() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.getParameterDescription"]], "getshadowedid() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.getShadowedId"]], "getvisibility() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.getVisibility"]], "hasname() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.hasName"]], "hasvisiblename() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.hasVisibleName"]], "partialgradient() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.partialGradient"]], "partialhessian() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.partialHessian"]], "setname() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.setName"]], "setparameter() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.setParameter"]], "setshadowedid() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.setShadowedId"]], "setvisibility() (otsvm.exponentialrbf method)": [[9, "otsvm.ExponentialRBF.setVisibility"]], "linearkernel (class in otsvm)": [[10, "otsvm.LinearKernel"]], "__init__() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.__init__"]], "getclassname() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.getClassName"]], "getid() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.getId"]], "getname() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.getName"]], "getparameter() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.getParameter"]], "getparameterdescription() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.getParameterDescription"]], "getshadowedid() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.getShadowedId"]], "getvisibility() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.getVisibility"]], "hasname() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.hasName"]], "hasvisiblename() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.hasVisibleName"]], "partialgradient() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.partialGradient"]], "partialhessian() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.partialHessian"]], "setname() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.setName"]], "setparameter() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.setParameter"]], "setshadowedid() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.setShadowedId"]], "setvisibility() (otsvm.linearkernel method)": [[10, "otsvm.LinearKernel.setVisibility"]], "normalrbf (class in otsvm)": [[11, "otsvm.NormalRBF"]], "__init__() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.__init__"]], "getclassname() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.getClassName"]], "getid() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.getId"]], "getname() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.getName"]], "getparameter() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.getParameter"]], "getparameterdescription() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.getParameterDescription"]], "getshadowedid() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.getShadowedId"]], "getsigma() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.getSigma"]], "getvisibility() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.getVisibility"]], "hasname() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.hasName"]], "hasvisiblename() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.hasVisibleName"]], "partialgradient() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.partialGradient"]], "partialhessian() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.partialHessian"]], "setname() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.setName"]], "setparameter() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.setParameter"]], "setshadowedid() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.setShadowedId"]], "setsigma() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.setSigma"]], "setvisibility() (otsvm.normalrbf method)": [[11, "otsvm.NormalRBF.setVisibility"]], "polynomialkernel (class in otsvm)": [[12, "otsvm.PolynomialKernel"]], "__init__() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.__init__"]], "getclassname() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.getClassName"]], "getconstant() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.getConstant"]], "getdegree() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.getDegree"]], "getid() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.getId"]], "getlinear() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.getLinear"]], "getname() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.getName"]], "getparameter() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.getParameter"]], "getparameterdescription() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.getParameterDescription"]], "getshadowedid() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.getShadowedId"]], "getvisibility() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.getVisibility"]], "hasname() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.hasName"]], "hasvisiblename() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.hasVisibleName"]], "partialgradient() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.partialGradient"]], "partialhessian() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.partialHessian"]], "setconstant() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.setConstant"]], "setdegree() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.setDegree"]], "setlinear() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.setLinear"]], "setname() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.setName"]], "setparameter() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.setParameter"]], "setshadowedid() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.setShadowedId"]], "setvisibility() (otsvm.polynomialkernel method)": [[12, "otsvm.PolynomialKernel.setVisibility"]], "rationalkernel (class in otsvm)": [[13, "otsvm.RationalKernel"]], "__init__() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.__init__"]], "getclassname() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.getClassName"]], "getconstant() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.getConstant"]], "getid() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.getId"]], "getname() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.getName"]], "getparameter() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.getParameter"]], "getparameterdescription() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.getParameterDescription"]], "getshadowedid() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.getShadowedId"]], "getvisibility() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.getVisibility"]], "hasname() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.hasName"]], "hasvisiblename() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.hasVisibleName"]], "partialgradient() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.partialGradient"]], "partialhessian() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.partialHessian"]], "setconstant() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.setConstant"]], "setname() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.setName"]], "setparameter() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.setParameter"]], "setshadowedid() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.setShadowedId"]], "setvisibility() (otsvm.rationalkernel method)": [[13, "otsvm.RationalKernel.setVisibility"]], "svmclassification (class in otsvm)": [[14, "otsvm.SVMClassification"]], "__init__() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.__init__"]], "classify() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.classify"]], "getclassname() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.getClassName"]], "getdimension() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.getDimension"]], "getid() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.getId"]], "getname() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.getName"]], "getnumberofclasses() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.getNumberOfClasses"]], "getshadowedid() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.getShadowedId"]], "getverbose() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.getVerbose"]], "getvisibility() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.getVisibility"]], "grade() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.grade"]], "hasname() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.hasName"]], "hasvisiblename() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.hasVisibleName"]], "isparallel() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.isParallel"]], "setname() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.setName"]], "setparallel() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.setParallel"]], "setshadowedid() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.setShadowedId"]], "setverbose() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.setVerbose"]], "setvisibility() (otsvm.svmclassification method)": [[14, "otsvm.SVMClassification.setVisibility"]], "svmregression (class in otsvm)": [[15, "otsvm.SVMRegression"]], "__init__() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.__init__"]], "getclassname() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.getClassName"]], "getid() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.getId"]], "getname() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.getName"]], "getshadowedid() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.getShadowedId"]], "getvisibility() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.getVisibility"]], "hasname() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.hasName"]], "hasvisiblename() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.hasVisibleName"]], "setname() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.setName"]], "setshadowedid() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.setShadowedId"]], "setvisibility() (otsvm.svmregression method)": [[15, "otsvm.SVMRegression.setVisibility"]], "sigmoidkernel (class in otsvm)": [[16, "otsvm.SigmoidKernel"]], "__init__() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.__init__"]], "getclassname() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.getClassName"]], "getconstant() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.getConstant"]], "getid() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.getId"]], "getlinear() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.getLinear"]], "getname() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.getName"]], "getparameter() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.getParameter"]], "getparameterdescription() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.getParameterDescription"]], "getshadowedid() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.getShadowedId"]], "getvisibility() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.getVisibility"]], "hasname() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.hasName"]], "hasvisiblename() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.hasVisibleName"]], "partialgradient() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.partialGradient"]], "partialhessian() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.partialHessian"]], "setconstant() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.setConstant"]], "setlinear() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.setLinear"]], "setname() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.setName"]], "setparameter() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.setParameter"]], "setshadowedid() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.setShadowedId"]], "setvisibility() (otsvm.sigmoidkernel method)": [[16, "otsvm.SigmoidKernel.setVisibility"]]}})