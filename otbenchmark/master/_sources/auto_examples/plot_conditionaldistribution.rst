
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_conditionaldistribution.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_conditionaldistribution.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_conditionaldistribution.py:


Conditional distributions
=========================

.. GENERATED FROM PYTHON SOURCE LINES 7-8

Conditioning is a way to reduce the dimensionnality of a multivariate distribution.

.. GENERATED FROM PYTHON SOURCE LINES 10-14

.. code-block:: Python

    import openturns as ot
    import otbenchmark as otb
    import openturns.viewer as otv








.. GENERATED FROM PYTHON SOURCE LINES 15-17

Conditional distribution of a three dimensional gaussian distribution
---------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 19-20

The random variable is (X0, X1, X2).

.. GENERATED FROM PYTHON SOURCE LINES 20-22

.. code-block:: Python

    distribution = ot.Normal(3)








.. GENERATED FROM PYTHON SOURCE LINES 23-24

We condition with respect to X1=mu1, i.e. we consider (X0, X1, X2) | X1=2.

.. GENERATED FROM PYTHON SOURCE LINES 24-33

.. code-block:: Python

    conditionalIndices = [1]
    conditionalReferencePoint = [2.0]
    conditionalDistribution = ot.Distribution(
        otb.ConditionalDistribution(
            distribution, conditionalIndices, conditionalReferencePoint
        )
    )









.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: Python

    _ = otv.View(conditionalDistribution.drawPDF())




.. image-sg:: /auto_examples/images/sphx_glr_plot_conditionaldistribution_001.png
   :alt: [X0,X1] iso-PDF
   :srcset: /auto_examples/images/sphx_glr_plot_conditionaldistribution_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 37-39

Conditional distribution of a three dimensional mixture
-------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 41-42

Create a Funky distribution

.. GENERATED FROM PYTHON SOURCE LINES 42-51

.. code-block:: Python

    corr = ot.CorrelationMatrix(3)
    corr[0, 1] = 0.2
    copula = ot.NormalCopula(corr)
    x1 = ot.Normal(-1.0, 1.0)
    x2 = ot.Normal(2.0, 1.0)
    x3 = ot.Normal(1.0, 1.0)
    x_funk = ot.ComposedDistribution([x1, x2, x3], copula)









.. GENERATED FROM PYTHON SOURCE LINES 52-53

Create a Punk distribution

.. GENERATED FROM PYTHON SOURCE LINES 53-59

.. code-block:: Python

    x1 = ot.Normal(1.0, 1.0)
    x2 = ot.Normal(-2, 1.0)
    x3 = ot.Normal(2.0, 1.0)
    x_punk = ot.ComposedDistribution([x1, x2, x3], copula)









.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: Python

    distribution = ot.Mixture([x_funk, x_punk], [0.5, 1.0])









.. GENERATED FROM PYTHON SOURCE LINES 64-68

.. code-block:: Python

    referencePoint = distribution.getMean()
    referencePoint







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0.333333,-0.666667,1.66667]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-78

.. code-block:: Python

    conditionalIndices = [1]
    conditionalReferencePoint = [-0.5]
    conditionalDistribution = ot.Distribution(
        otb.ConditionalDistribution(
            distribution, conditionalIndices, conditionalReferencePoint
        )
    )









.. GENERATED FROM PYTHON SOURCE LINES 79-81

.. code-block:: Python

    _ = otv.View(conditionalDistribution.drawPDF())




.. image-sg:: /auto_examples/images/sphx_glr_plot_conditionaldistribution_002.png
   :alt: [X0,X1] iso-PDF
   :srcset: /auto_examples/images/sphx_glr_plot_conditionaldistribution_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 82-83

.. code-block:: Python

    otv.View.ShowAll()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.504 seconds)


.. _sphx_glr_download_auto_examples_plot_conditionaldistribution.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_conditionaldistribution.ipynb <plot_conditionaldistribution.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_conditionaldistribution.py <plot_conditionaldistribution.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_conditionaldistribution.zip <plot_conditionaldistribution.zip>`
