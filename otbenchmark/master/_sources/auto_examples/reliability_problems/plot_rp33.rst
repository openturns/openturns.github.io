
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/reliability_problems/plot_rp33.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_reliability_problems_plot_rp33.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_reliability_problems_plot_rp33.py:


RP33 analysis and 2D graphics
=============================

.. GENERATED FROM PYTHON SOURCE LINES 7-8

The objective of this example is to present problem 33 of the BBRC.

.. GENERATED FROM PYTHON SOURCE LINES 10-12

.. code-block:: Python

    import otbenchmark as otb








.. GENERATED FROM PYTHON SOURCE LINES 13-17

.. code-block:: Python

    problem = otb.ReliabilityProblem33()
    print(problem)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    name = RP33
    event = class=ThresholdEventImplementation antecedent=class=CompositeRandomVector function=class=Function name=Unnamed implementation=class=FunctionImplementation name=Unnamed description=[x1,x2,x3,y0] evaluationImplementation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y0] formulas=[min(-x1 - x2 - x3 + 3 * sqrt(3), -x3 + 3)] gradientImplementation=class=SymbolicGradient name=Unnamed evaluation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y0] formulas=[min(-x1 - x2 - x3 + 3 * sqrt(3), -x3 + 3)] hessianImplementation=class=SymbolicHessian name=Unnamed evaluation=class=SymbolicEvaluation name=Unnamed inputVariablesNames=[x1,x2,x3] outputVariablesNames=[y0] formulas=[min(-x1 - x2 - x3 + 3 * sqrt(3), -x3 + 3)] antecedent=class=UsualRandomVector distribution=class=JointDistribution name=JointDistribution dimension=3 copula=class=IndependentCopula name=IndependentCopula dimension=3 marginal[0]=class=Normal name=Normal dimension=1 mean=class=Point name=Unnamed dimension=1 values=[0] sigma=class=Point name=Unnamed dimension=1 values=[1] correlationMatrix=class=CorrelationMatrix dimension=1 implementation=class=MatrixImplementation name=Unnamed rows=1 columns=1 values=[1] marginal[1]=class=Normal name=Normal dimension=1 mean=class=Point name=Unnamed dimension=1 values=[0] sigma=class=Point name=Unnamed dimension=1 values=[1] correlationMatrix=class=CorrelationMatrix dimension=1 implementation=class=MatrixImplementation name=Unnamed rows=1 columns=1 values=[1] marginal[2]=class=Normal name=Normal dimension=1 mean=class=Point name=Unnamed dimension=1 values=[0] sigma=class=Point name=Unnamed dimension=1 values=[1] correlationMatrix=class=CorrelationMatrix dimension=1 implementation=class=MatrixImplementation name=Unnamed rows=1 columns=1 values=[1] operator=class=Less name=Unnamed threshold=0
    probability = 0.00257





.. GENERATED FROM PYTHON SOURCE LINES 18-22

.. code-block:: Python

    event = problem.getEvent()
    g = event.getFunction()









.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: Python

    problem.getProbability()






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    0.00257



.. GENERATED FROM PYTHON SOURCE LINES 27-31

.. code-block:: Python

    inputVector = event.getAntecedent()
    distribution = inputVector.getDistribution()









.. GENERATED FROM PYTHON SOURCE LINES 32-36

.. code-block:: Python

    inputDimension = distribution.getDimension()
    inputDimension






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    3



.. GENERATED FROM PYTHON SOURCE LINES 37-42

.. code-block:: Python

    alpha = 1 - 0.00001
    bounds, marginalProb = distribution.computeMinimumVolumeIntervalWithMarginalProbability(
        alpha
    )








.. GENERATED FROM PYTHON SOURCE LINES 43-46

.. code-block:: Python

    referencePoint = distribution.getMean()
    referencePoint






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0,0,0]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 47-50

.. code-block:: Python

    crossCut = otb.CrossCutFunction(g, referencePoint)
    _ = crossCut.draw(bounds)




.. image-sg:: /auto_examples/reliability_problems/images/sphx_glr_plot_rp33_001.png
   :alt: Cross-cuts of function
   :srcset: /auto_examples/reliability_problems/images/sphx_glr_plot_rp33_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 51-53

Plot cross-cuts of the distribution
-----------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 55-57

.. code-block:: Python

    crossCut = otb.CrossCutDistribution(distribution)








.. GENERATED FROM PYTHON SOURCE LINES 58-60

.. code-block:: Python

    _ = crossCut.drawMarginalPDF()




.. image-sg:: /auto_examples/reliability_problems/images/sphx_glr_plot_rp33_002.png
   :alt: Iso-values of marginal PDF
   :srcset: /auto_examples/reliability_problems/images/sphx_glr_plot_rp33_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 61-65

.. code-block:: Python

    inputVector = event.getAntecedent()
    event = problem.getEvent()
    g = event.getFunction()








.. GENERATED FROM PYTHON SOURCE LINES 66-71

.. code-block:: Python

    sampleSize = 5000
    sampleInput = inputVector.getSample(sampleSize)
    sampleOutput = g(sampleInput)
    drawEvent = otb.DrawEvent(event)








.. GENERATED FROM PYTHON SOURCE LINES 72-74

.. code-block:: Python

    _ = drawEvent.drawLimitState(bounds)




.. image-sg:: /auto_examples/reliability_problems/images/sphx_glr_plot_rp33_003.png
   :alt: Limit state surface
   :srcset: /auto_examples/reliability_problems/images/sphx_glr_plot_rp33_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 75-78

.. code-block:: Python

    sampleSize = 500
    _ = drawEvent.drawSample(sampleSize)




.. image-sg:: /auto_examples/reliability_problems/images/sphx_glr_plot_rp33_004.png
   :alt: Points X s.t. g(X) < 0.0
   :srcset: /auto_examples/reliability_problems/images/sphx_glr_plot_rp33_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 79-80

.. code-block:: Python

    _ = drawEvent.fillEvent(bounds)



.. image-sg:: /auto_examples/reliability_problems/images/sphx_glr_plot_rp33_005.png
   :alt: Domain where g(x) < 0.0
   :srcset: /auto_examples/reliability_problems/images/sphx_glr_plot_rp33_005.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 4.756 seconds)


.. _sphx_glr_download_auto_examples_reliability_problems_plot_rp33.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_rp33.ipynb <plot_rp33.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_rp33.py <plot_rp33.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_rp33.zip <plot_rp33.zip>`
