
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/reliability_problems/plot_four_branch_serial_system_waarts.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_reliability_problems_plot_four_branch_serial_system_waarts.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_reliability_problems_plot_four_branch_serial_system_waarts.py:


Using the Waarts four-branch serial system
==========================================

.. GENERATED FROM PYTHON SOURCE LINES 7-19

References
----------

* Waarts, P.-H. (2000). Structural reliability using finite element
  methods: an appraisal of DARS: Directional Adaptive Response Surface
  Sampling. Ph. D. thesis, Technical University of Delft, The Netherlands.
  Pages 58, 69, 160.

* Thèse Vincent Dubourg 2011, Méta-modèles adaptatifs pour l’analyse
  de fiabilité et l’optimisation sous contrainte fiabiliste,
  section "A two-dimensional four-branch serial system", page 182


.. GENERATED FROM PYTHON SOURCE LINES 21-25

.. code-block:: Python

    import openturns as ot
    import openturns.viewer as otv
    import otbenchmark as otb








.. GENERATED FROM PYTHON SOURCE LINES 26-28

.. code-block:: Python

    problem = otb.FourBranchSerialSystemReliability()








.. GENERATED FROM PYTHON SOURCE LINES 29-32

.. code-block:: Python

    event = problem.getEvent()
    g = event.getFunction()








.. GENERATED FROM PYTHON SOURCE LINES 33-36

.. code-block:: Python

    inputVector = event.getAntecedent()
    distribution = inputVector.getDistribution()








.. GENERATED FROM PYTHON SOURCE LINES 37-38

Draw isolines

.. GENERATED FROM PYTHON SOURCE LINES 38-44

.. code-block:: Python

    lowerBound = ot.Point([-5.0, -5.0])
    upperBound = ot.Point([5.0, 5.0])
    nbPoints = [100, 100]
    _ = otv.View(g.draw(lowerBound, upperBound, nbPoints))





.. image-sg:: /auto_examples/reliability_problems/images/sphx_glr_plot_four_branch_serial_system_waarts_001.png
   :alt: y as a function of (x0,x1)
   :srcset: /auto_examples/reliability_problems/images/sphx_glr_plot_four_branch_serial_system_waarts_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: Python

    sampleSize = 500








.. GENERATED FROM PYTHON SOURCE LINES 48-50

.. code-block:: Python

    drawEvent = otb.DrawEvent(event)








.. GENERATED FROM PYTHON SOURCE LINES 51-54

.. code-block:: Python

    cloud = drawEvent.drawSampleCrossCut(sampleSize)
    _ = otv.View(cloud)




.. image-sg:: /auto_examples/reliability_problems/images/sphx_glr_plot_four_branch_serial_system_waarts_002.png
   :alt: Points X s.t. g(X) < 0.0
   :srcset: /auto_examples/reliability_problems/images/sphx_glr_plot_four_branch_serial_system_waarts_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 55-57

Draw the limit state surface
----------------------------

.. GENERATED FROM PYTHON SOURCE LINES 59-61

.. code-block:: Python

    bounds = ot.Interval(lowerBound, upperBound)








.. GENERATED FROM PYTHON SOURCE LINES 62-66

.. code-block:: Python

    graph = drawEvent.drawLimitStateCrossCut(bounds)
    graph.add(cloud)
    _ = otv.View(graph)




.. image-sg:: /auto_examples/reliability_problems/images/sphx_glr_plot_four_branch_serial_system_waarts_003.png
   :alt: Limit state surface
   :srcset: /auto_examples/reliability_problems/images/sphx_glr_plot_four_branch_serial_system_waarts_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 67-68

Fill the event domain with a color

.. GENERATED FROM PYTHON SOURCE LINES 68-70

.. code-block:: Python

    _ = otv.View(drawEvent.fillEventCrossCut(bounds))




.. image-sg:: /auto_examples/reliability_problems/images/sphx_glr_plot_four_branch_serial_system_waarts_004.png
   :alt: Domain where g(x) < 0.0
   :srcset: /auto_examples/reliability_problems/images/sphx_glr_plot_four_branch_serial_system_waarts_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 71-72

.. code-block:: Python

    otv.View.ShowAll()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.355 seconds)


.. _sphx_glr_download_auto_examples_reliability_problems_plot_four_branch_serial_system_waarts.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_four_branch_serial_system_waarts.ipynb <plot_four_branch_serial_system_waarts.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_four_branch_serial_system_waarts.py <plot_four_branch_serial_system_waarts.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_four_branch_serial_system_waarts.zip <plot_four_branch_serial_system_waarts.zip>`
