
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_CrossCutFunction_Demo.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_CrossCutFunction_Demo.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_CrossCutFunction_Demo.py:


Draw cross-cuts of multidimensional functions
=============================================

.. GENERATED FROM PYTHON SOURCE LINES 7-12

This example shows how to represent multidimensional functions.
When 2D plots are to draw, contours are used.
We use 2D cross-sections to represent multidimensional objects when required,
which leads to cross-cuts representations.


.. GENERATED FROM PYTHON SOURCE LINES 14-18

.. code-block:: Python

    import otbenchmark as otb
    import openturns.viewer as otv









.. GENERATED FROM PYTHON SOURCE LINES 19-21

.. code-block:: Python

    problem = otb.ReliabilityProblem33()








.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: Python

    event = problem.getEvent()
    g = event.getFunction()








.. GENERATED FROM PYTHON SOURCE LINES 26-28

Compute the bounds of the domain
--------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 30-34

.. code-block:: Python

    inputVector = event.getAntecedent()
    distribution = inputVector.getDistribution()









.. GENERATED FROM PYTHON SOURCE LINES 35-39

.. code-block:: Python

    inputDimension = distribution.getDimension()
    inputDimension






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    3



.. GENERATED FROM PYTHON SOURCE LINES 40-46

.. code-block:: Python

    alpha = 1 - 1.0e-5
    bounds, marginalProb = distribution.computeMinimumVolumeIntervalWithMarginalProbability(
        alpha
    )









.. GENERATED FROM PYTHON SOURCE LINES 47-51

.. code-block:: Python

    referencePoint = distribution.getMean()
    referencePoint







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    class=Point name=Unnamed dimension=3 values=[0,0,0]
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 52-56

.. code-block:: Python

    crossCut = otb.CrossCutFunction(g, referencePoint)
    _ = crossCut.draw(bounds)





.. image-sg:: /auto_examples/images/sphx_glr_plot_CrossCutFunction_Demo_001.png
   :alt: Cross-cuts of function
   :srcset: /auto_examples/images/sphx_glr_plot_CrossCutFunction_Demo_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 57-82

Let us explain this figure in detail, by describing each sub-plot from top to bottom,
and from left to right:

* Fig. A,
* Fig. B, C,
* Fig. D, E, F.

Let :math:`\bar{x}\in\mathbb{R}^3` be the reference point.

* Fig. A : represents :math:`y=f(x_1, \bar{x}_2, \bar{x}_3)`,
  which is a function depending on :math:`x_1` only.
* Fig. B : represents the contours of the bi-dimensional function
  :math:`y=f(x_1, x_2, \bar{x}_3)`
  which depends on :math:`x_1` and :math:`x_2`.
* Fig. C : represents :math:`y=f(\bar{x}_1, x_2, \bar{x}_3)`,
  which is a function depending on :math:`x_2` only.
* Fig. D : represents the contours of the bi-dimensional function
  :math:`y=f(x_1, \bar{x}_2, x_3)`
  which depends on :math:`x_1` and :math:`x_3`.
* Fig. E : represents the contours of the bi-dimensional function
  :math:`y=f(\bar{x}_1, x_2, x_3)`
  which depends on :math:`x_2` and :math:`x_3`.
* Fig. F : represents :math:`y=f(\bar{x}_1, \bar{x}_2, x_3)`,
  which is a function depending on :math:`x_3` only.


.. GENERATED FROM PYTHON SOURCE LINES 84-85

.. code-block:: Python

    otv.View.ShowAll()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.229 seconds)


.. _sphx_glr_download_auto_examples_plot_CrossCutFunction_Demo.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_CrossCutFunction_Demo.ipynb <plot_CrossCutFunction_Demo.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_CrossCutFunction_Demo.py <plot_CrossCutFunction_Demo.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_CrossCutFunction_Demo.zip <plot_CrossCutFunction_Demo.zip>`
